(eval-when (compile) (set-current-module (resolve-module (quote (guile)))))
(if #f #f)

(letrec ((#{and-map*\ 44}#
           (lambda (#{f\ 106}# #{first\ 107}# . #{rest\ 108}#)
             (let ((#{t\ 114}# (null? #{first\ 107}#)))
               (if #{t\ 114}#
                 #{t\ 114}#
                 (if (null? #{rest\ 108}#)
                   (letrec ((#{andmap\ 118}#
                              (lambda (#{first\ 119}#)
                                (let ((#{x\ 122}# (car #{first\ 119}#))
                                      (#{first\ 123}# (cdr #{first\ 119}#)))
                                  (if (null? #{first\ 123}#)
                                    (#{f\ 106}# #{x\ 122}#)
                                    (if (#{f\ 106}# #{x\ 122}#)
                                      (#{andmap\ 118}# #{first\ 123}#)
                                      #f))))))
                     (#{andmap\ 118}# #{first\ 107}#))
                   (letrec ((#{andmap\ 129}#
                              (lambda (#{first\ 130}# #{rest\ 131}#)
                                (let ((#{x\ 136}# (car #{first\ 130}#))
                                      (#{xr\ 137}# (map car #{rest\ 131}#))
                                      (#{first\ 138}# (cdr #{first\ 130}#))
                                      (#{rest\ 139}# (map cdr #{rest\ 131}#)))
                                  (if (null? #{first\ 138}#)
                                    (apply #{f\ 106}#
                                           (cons #{x\ 136}# #{xr\ 137}#))
                                    (if (apply #{f\ 106}#
                                               (cons #{x\ 136}# #{xr\ 137}#))
                                      (#{andmap\ 129}#
                                        #{first\ 138}#
                                        #{rest\ 139}#)
                                      #f))))))
                     (#{andmap\ 129}# #{first\ 107}# #{rest\ 108}#))))))))
  (letrec ((#{lambda-var-list\ 361}#
             (lambda (#{vars\ 576}#)
               (letrec ((#{lvl\ 582}#
                          (lambda (#{vars\ 583}# #{ls\ 584}# #{w\ 585}#)
                            (if (pair? #{vars\ 583}#)
                              (#{lvl\ 582}#
                                (cdr #{vars\ 583}#)
                                (cons (#{wrap\ 315}#
                                        (car #{vars\ 583}#)
                                        #{w\ 585}#
                                        #f)
                                      #{ls\ 584}#)
                                #{w\ 585}#)
                              (if (#{id?\ 246}# #{vars\ 583}#)
                                (cons (#{wrap\ 315}#
                                        #{vars\ 583}#
                                        #{w\ 585}#
                                        #f)
                                      #{ls\ 584}#)
                                (if (null? #{vars\ 583}#)
                                  #{ls\ 584}#
                                  (if (#{syntax-object?\ 210}# #{vars\ 583}#)
                                    (#{lvl\ 582}#
                                      (#{syntax-object-expression\ 212}#
                                        #{vars\ 583}#)
                                      #{ls\ 584}#
                                      (#{join-wraps\ 297}#
                                        #{w\ 585}#
                                        (#{syntax-object-wrap\ 214}#
                                          #{vars\ 583}#)))
                                    (cons #{vars\ 583}# #{ls\ 584}#))))))))
                 (#{lvl\ 582}#
                   #{vars\ 576}#
                   '()
                   '(())))))
           (#{gen-var\ 359}#
             (lambda (#{id\ 596}#)
               (let ((#{id\ 599}#
                       (if (#{syntax-object?\ 210}# #{id\ 596}#)
                         (#{syntax-object-expression\ 212}# #{id\ 596}#)
                         #{id\ 596}#)))
                 (gensym
                   (string-append (symbol->string #{id\ 599}#) " ")))))
           (#{strip\ 357}#
             (lambda (#{x\ 601}# #{w\ 602}#)
               (if (memq 'top
                         (#{wrap-marks\ 253}# #{w\ 602}#))
                 #{x\ 601}#
                 (letrec ((#{f\ 608}# (lambda (#{x\ 609}#)
                                        (if (#{syntax-object?\ 210}#
                                              #{x\ 609}#)
                                          (#{strip\ 357}#
                                            (#{syntax-object-expression\ 212}#
                                              #{x\ 609}#)
                                            (#{syntax-object-wrap\ 214}#
                                              #{x\ 609}#))
                                          (if (pair? #{x\ 609}#)
                                            (let ((#{a\ 616}# (#{f\ 608}# (car #{x\ 609}#)))
                                                  (#{d\ 617}# (#{f\ 608}# (cdr #{x\ 609}#))))
                                              (if (if (eq? #{a\ 616}#
                                                           (car #{x\ 609}#))
                                                    (eq? #{d\ 617}#
                                                         (cdr #{x\ 609}#))
                                                    #f)
                                                #{x\ 609}#
                                                (cons #{a\ 616}# #{d\ 617}#)))
                                            (if (vector? #{x\ 609}#)
                                              (let ((#{old\ 623}#
                                                      (vector->list
                                                        #{x\ 609}#)))
                                                (let ((#{new\ 625}#
                                                        (map #{f\ 608}#
                                                             #{old\ 623}#)))
                                                  (if (#{and-map*\ 44}#
                                                        eq?
                                                        #{old\ 623}#
                                                        #{new\ 625}#)
                                                    #{x\ 609}#
                                                    (list->vector
                                                      #{new\ 625}#))))
                                              #{x\ 609}#))))))
                   (#{f\ 608}# #{x\ 601}#)))))
           (#{chi-lambda-case\ 355}#
             (lambda (#{e\ 627}#
                      #{r\ 628}#
                      #{w\ 629}#
                      #{s\ 630}#
                      #{mod\ 631}#
                      #{get-formals\ 632}#
                      #{clauses\ 633}#)
               (letrec ((#{expand-body\ 648}#
                          (lambda (#{req\ 649}#
                                   #{opt\ 650}#
                                   #{rest\ 651}#
                                   #{kw\ 652}#
                                   #{body\ 653}#
                                   #{vars\ 654}#
                                   #{r*\ 655}#
                                   #{w*\ 656}#
                                   #{inits\ 657}#
                                   #{meta\ 658}#)
                            ((lambda (#{tmp\ 669}#)
                               ((lambda (#{tmp\ 670}#)
                                  (if (if #{tmp\ 670}#
                                        (apply (lambda (#{docstring\ 674}#
                                                        #{e1\ 675}#
                                                        #{e2\ 676}#)
                                                 (string?
                                                   (syntax->datum
                                                     #{docstring\ 674}#)))
                                               #{tmp\ 670}#)
                                        #f)
                                    (apply (lambda (#{docstring\ 680}#
                                                    #{e1\ 681}#
                                                    #{e2\ 682}#)
                                             (#{expand-body\ 648}#
                                               #{req\ 649}#
                                               #{opt\ 650}#
                                               #{rest\ 651}#
                                               #{kw\ 652}#
                                               (cons #{e1\ 681}# #{e2\ 682}#)
                                               #{vars\ 654}#
                                               #{r*\ 655}#
                                               #{w*\ 656}#
                                               #{inits\ 657}#
                                               (append
                                                 #{meta\ 658}#
                                                 (list (cons 'documentation
                                                             (syntax->datum
                                                               #{docstring\ 680}#))))))
                                           #{tmp\ 670}#)
                                    ((lambda (#{tmp\ 685}#)
                                       (if #{tmp\ 685}#
                                         (apply (lambda (#{e1\ 688}#
                                                         #{e2\ 689}#)
                                                  (values
                                                    #{meta\ 658}#
                                                    #{req\ 649}#
                                                    #{opt\ 650}#
                                                    #{rest\ 651}#
                                                    #{kw\ 652}#
                                                    #{inits\ 657}#
                                                    #{vars\ 654}#
                                                    (#{chi-body\ 339}#
                                                      (cons #{e1\ 688}#
                                                            #{e2\ 689}#)
                                                      (#{source-wrap\ 317}#
                                                        #{e\ 627}#
                                                        #{w\ 629}#
                                                        #{s\ 630}#
                                                        #{mod\ 631}#)
                                                      #{r*\ 655}#
                                                      #{w*\ 656}#
                                                      #{mod\ 631}#)))
                                                #{tmp\ 685}#)
                                         (syntax-violation
                                           #f
                                           "source expression failed to match any pattern"
                                           #{tmp\ 669}#)))
                                     ($sc-dispatch
                                       #{tmp\ 669}#
                                       '(any . each-any)))))
                                ($sc-dispatch
                                  #{tmp\ 669}#
                                  '(any any . each-any))))
                             #{body\ 653}#)))
                        (#{expand-kw\ 646}#
                          (lambda (#{req\ 691}#
                                   #{opt\ 692}#
                                   #{rest\ 693}#
                                   #{kw\ 694}#
                                   #{body\ 695}#
                                   #{vars\ 696}#
                                   #{r*\ 697}#
                                   #{w*\ 698}#
                                   #{aok\ 699}#
                                   #{out\ 700}#
                                   #{inits\ 701}#)
                            (if (pair? #{kw\ 694}#)
                              ((lambda (#{tmp\ 715}#)
                                 ((lambda (#{tmp\ 716}#)
                                    (if #{tmp\ 716}#
                                      (apply (lambda (#{k\ 720}#
                                                      #{id\ 721}#
                                                      #{i\ 722}#)
                                               (let ((#{v\ 725}# (#{gen-var\ 359}#
                                                                   #{id\ 721}#)))
                                                 (let ((#{l\ 727}# (#{gen-labels\ 264}#
                                                                     (list #{v\ 725}#))))
                                                   (let ((#{r**\ 729}#
                                                           (#{extend-var-env\ 236}#
                                                             #{l\ 727}#
                                                             (list #{v\ 725}#)
                                                             #{r*\ 697}#)))
                                                     (let ((#{w**\ 731}#
                                                             (#{make-binding-wrap\ 293}#
                                                               (list #{id\ 721}#)
                                                               #{l\ 727}#
                                                               #{w*\ 698}#)))
                                                       (#{expand-kw\ 646}#
                                                         #{req\ 691}#
                                                         #{opt\ 692}#
                                                         #{rest\ 693}#
                                                         (cdr #{kw\ 694}#)
                                                         #{body\ 695}#
                                                         (cons #{v\ 725}#
                                                               #{vars\ 696}#)
                                                         #{r**\ 729}#
                                                         #{w**\ 731}#
                                                         #{aok\ 699}#
                                                         (cons (list (syntax->datum
                                                                       #{k\ 720}#)
                                                                     (syntax->datum
                                                                       #{id\ 721}#)
                                                                     #{v\ 725}#)
                                                               #{out\ 700}#)
                                                         (cons (#{chi\ 331}#
                                                                 #{i\ 722}#
                                                                 #{r*\ 697}#
                                                                 #{w*\ 698}#
                                                                 #{mod\ 631}#)
                                                               #{inits\ 701}#)))))))
                                             #{tmp\ 716}#)
                                      (syntax-violation
                                        #f
                                        "source expression failed to match any pattern"
                                        #{tmp\ 715}#)))
                                  ($sc-dispatch
                                    #{tmp\ 715}#
                                    '(any any any))))
                               (car #{kw\ 694}#))
                              (#{expand-body\ 648}#
                                #{req\ 691}#
                                #{opt\ 692}#
                                #{rest\ 693}#
                                (if (let ((#{t\ 735}# #{aok\ 699}#))
                                      (if #{t\ 735}#
                                        #{t\ 735}#
                                        (pair? #{out\ 700}#)))
                                  (cons #{aok\ 699}# (reverse #{out\ 700}#))
                                  #f)
                                #{body\ 695}#
                                (reverse #{vars\ 696}#)
                                #{r*\ 697}#
                                #{w*\ 698}#
                                (reverse #{inits\ 701}#)
                                '()))))
                        (#{expand-opt\ 644}#
                          (lambda (#{req\ 737}#
                                   #{opt\ 738}#
                                   #{rest\ 739}#
                                   #{kw\ 740}#
                                   #{body\ 741}#
                                   #{vars\ 742}#
                                   #{r*\ 743}#
                                   #{w*\ 744}#
                                   #{out\ 745}#
                                   #{inits\ 746}#)
                            (if (pair? #{opt\ 738}#)
                              ((lambda (#{tmp\ 759}#)
                                 ((lambda (#{tmp\ 760}#)
                                    (if #{tmp\ 760}#
                                      (apply (lambda (#{id\ 763}# #{i\ 764}#)
                                               (let ((#{v\ 767}# (#{gen-var\ 359}#
                                                                   #{id\ 763}#)))
                                                 (let ((#{l\ 769}# (#{gen-labels\ 264}#
                                                                     (list #{v\ 767}#))))
                                                   (let ((#{r**\ 771}#
                                                           (#{extend-var-env\ 236}#
                                                             #{l\ 769}#
                                                             (list #{v\ 767}#)
                                                             #{r*\ 743}#)))
                                                     (let ((#{w**\ 773}#
                                                             (#{make-binding-wrap\ 293}#
                                                               (list #{id\ 763}#)
                                                               #{l\ 769}#
                                                               #{w*\ 744}#)))
                                                       (#{expand-opt\ 644}#
                                                         #{req\ 737}#
                                                         (cdr #{opt\ 738}#)
                                                         #{rest\ 739}#
                                                         #{kw\ 740}#
                                                         #{body\ 741}#
                                                         (cons #{v\ 767}#
                                                               #{vars\ 742}#)
                                                         #{r**\ 771}#
                                                         #{w**\ 773}#
                                                         (cons (syntax->datum
                                                                 #{id\ 763}#)
                                                               #{out\ 745}#)
                                                         (cons (#{chi\ 331}#
                                                                 #{i\ 764}#
                                                                 #{r*\ 743}#
                                                                 #{w*\ 744}#
                                                                 #{mod\ 631}#)
                                                               #{inits\ 746}#)))))))
                                             #{tmp\ 760}#)
                                      (syntax-violation
                                        #f
                                        "source expression failed to match any pattern"
                                        #{tmp\ 759}#)))
                                  ($sc-dispatch
                                    #{tmp\ 759}#
                                    '(any any))))
                               (car #{opt\ 738}#))
                              (if #{rest\ 739}#
                                (let ((#{v\ 778}# (#{gen-var\ 359}#
                                                    #{rest\ 739}#)))
                                  (let ((#{l\ 780}# (#{gen-labels\ 264}#
                                                      (list #{v\ 778}#))))
                                    (let ((#{r*\ 782}#
                                            (#{extend-var-env\ 236}#
                                              #{l\ 780}#
                                              (list #{v\ 778}#)
                                              #{r*\ 743}#)))
                                      (let ((#{w*\ 784}#
                                              (#{make-binding-wrap\ 293}#
                                                (list #{rest\ 739}#)
                                                #{l\ 780}#
                                                #{w*\ 744}#)))
                                        (#{expand-kw\ 646}#
                                          #{req\ 737}#
                                          (if (pair? #{out\ 745}#)
                                            (reverse #{out\ 745}#)
                                            #f)
                                          (syntax->datum #{rest\ 739}#)
                                          (if (pair? #{kw\ 740}#)
                                            (cdr #{kw\ 740}#)
                                            #{kw\ 740}#)
                                          #{body\ 741}#
                                          (cons #{v\ 778}# #{vars\ 742}#)
                                          #{r*\ 782}#
                                          #{w*\ 784}#
                                          (if (pair? #{kw\ 740}#)
                                            (car #{kw\ 740}#)
                                            #f)
                                          '()
                                          #{inits\ 746}#)))))
                                (#{expand-kw\ 646}#
                                  #{req\ 737}#
                                  (if (pair? #{out\ 745}#)
                                    (reverse #{out\ 745}#)
                                    #f)
                                  #f
                                  (if (pair? #{kw\ 740}#)
                                    (cdr #{kw\ 740}#)
                                    #{kw\ 740}#)
                                  #{body\ 741}#
                                  #{vars\ 742}#
                                  #{r*\ 743}#
                                  #{w*\ 744}#
                                  (if (pair? #{kw\ 740}#) (car #{kw\ 740}#) #f)
                                  '()
                                  #{inits\ 746}#)))))
                        (#{expand-req\ 642}#
                          (lambda (#{req\ 786}#
                                   #{opt\ 787}#
                                   #{rest\ 788}#
                                   #{kw\ 789}#
                                   #{body\ 790}#)
                            (let ((#{vars\ 798}#
                                    (map #{gen-var\ 359}# #{req\ 786}#))
                                  (#{labels\ 799}#
                                    (#{gen-labels\ 264}# #{req\ 786}#)))
                              (let ((#{r*\ 802}#
                                      (#{extend-var-env\ 236}#
                                        #{labels\ 799}#
                                        #{vars\ 798}#
                                        #{r\ 628}#))
                                    (#{w*\ 803}#
                                      (#{make-binding-wrap\ 293}#
                                        #{req\ 786}#
                                        #{labels\ 799}#
                                        #{w\ 629}#)))
                                (#{expand-opt\ 644}#
                                  (map syntax->datum #{req\ 786}#)
                                  #{opt\ 787}#
                                  #{rest\ 788}#
                                  #{kw\ 789}#
                                  #{body\ 790}#
                                  (reverse #{vars\ 798}#)
                                  #{r*\ 802}#
                                  #{w*\ 803}#
                                  '()
                                  '()))))))
                 ((lambda (#{tmp\ 804}#)
                    ((lambda (#{tmp\ 805}#)
                       (if #{tmp\ 805}#
                         (apply (lambda () (values (quote ()) #f))
                                #{tmp\ 805}#)
                         ((lambda (#{tmp\ 806}#)
                            (if #{tmp\ 806}#
                              (apply (lambda (#{args\ 813}#
                                              #{e1\ 814}#
                                              #{e2\ 815}#
                                              #{args*\ 816}#
                                              #{e1*\ 817}#
                                              #{e2*\ 818}#)
                                       (call-with-values
                                         (lambda ()
                                           (#{get-formals\ 632}#
                                             #{args\ 813}#))
                                         (lambda (#{req\ 819}#
                                                  #{opt\ 820}#
                                                  #{rest\ 821}#
                                                  #{kw\ 822}#)
                                           (call-with-values
                                             (lambda ()
                                               (#{expand-req\ 642}#
                                                 #{req\ 819}#
                                                 #{opt\ 820}#
                                                 #{rest\ 821}#
                                                 #{kw\ 822}#
                                                 (cons #{e1\ 814}#
                                                       #{e2\ 815}#)))
                                             (lambda (#{meta\ 828}#
                                                      #{req\ 829}#
                                                      #{opt\ 830}#
                                                      #{rest\ 831}#
                                                      #{kw\ 832}#
                                                      #{inits\ 833}#
                                                      #{vars\ 834}#
                                                      #{body\ 835}#)
                                               (call-with-values
                                                 (lambda ()
                                                   (#{chi-lambda-case\ 355}#
                                                     #{e\ 627}#
                                                     #{r\ 628}#
                                                     #{w\ 629}#
                                                     #{s\ 630}#
                                                     #{mod\ 631}#
                                                     #{get-formals\ 632}#
                                                     (map (lambda (#{tmp\ 846}#
                                                                   #{tmp\ 845}#
                                                                   #{tmp\ 844}#)
                                                            (cons #{tmp\ 844}#
                                                                  (cons #{tmp\ 845}#
                                                                        #{tmp\ 846}#)))
                                                          #{e2*\ 818}#
                                                          #{e1*\ 817}#
                                                          #{args*\ 816}#)))
                                                 (lambda (#{meta*\ 848}#
                                                          #{else*\ 849}#)
                                                   (values
                                                     (append
                                                       #{meta\ 828}#
                                                       #{meta*\ 848}#)
                                                     (#{build-lambda-case\ 192}#
                                                       #{s\ 630}#
                                                       #{req\ 829}#
                                                       #{opt\ 830}#
                                                       #{rest\ 831}#
                                                       #{kw\ 832}#
                                                       #{inits\ 833}#
                                                       #{vars\ 834}#
                                                       #{body\ 835}#
                                                       #{else*\ 849}#)))))))))
                                     #{tmp\ 806}#)
                              (syntax-violation
                                #f
                                "source expression failed to match any pattern"
                                #{tmp\ 804}#)))
                          ($sc-dispatch
                            #{tmp\ 804}#
                            '((any any . each-any)
                              .
                              #(each (any any . each-any)))))))
                     ($sc-dispatch #{tmp\ 804}# (quote ()))))
                  #{clauses\ 633}#))))
           (#{lambda*-formals\ 353}#
             (lambda (#{orig-args\ 852}#)
               (letrec ((#{check\ 863}#
                          (lambda (#{req\ 864}#
                                   #{opt\ 865}#
                                   #{rest\ 866}#
                                   #{kw\ 867}#)
                            (if (#{distinct-bound-ids?\ 311}#
                                  (append
                                    #{req\ 864}#
                                    (map car #{opt\ 865}#)
                                    (if #{rest\ 866}#
                                      (list #{rest\ 866}#)
                                      '())
                                    (if (pair? #{kw\ 867}#)
                                      (map cadr (cdr #{kw\ 867}#))
                                      '())))
                              (values
                                #{req\ 864}#
                                #{opt\ 865}#
                                #{rest\ 866}#
                                #{kw\ 867}#)
                              (syntax-violation
                                'lambda*
                                "duplicate identifier in argument list"
                                #{orig-args\ 852}#))))
                        (#{rest\ 861}#
                          (lambda (#{args\ 875}#
                                   #{req\ 876}#
                                   #{opt\ 877}#
                                   #{kw\ 878}#)
                            ((lambda (#{tmp\ 883}#)
                               ((lambda (#{tmp\ 884}#)
                                  (if (if #{tmp\ 884}#
                                        (apply (lambda (#{r\ 886}#)
                                                 (#{id?\ 246}# #{r\ 886}#))
                                               #{tmp\ 884}#)
                                        #f)
                                    (apply (lambda (#{r\ 888}#)
                                             (#{check\ 863}#
                                               #{req\ 876}#
                                               #{opt\ 877}#
                                               #{r\ 888}#
                                               #{kw\ 878}#))
                                           #{tmp\ 884}#)
                                    ((lambda (#{else\ 890}#)
                                       (syntax-violation
                                         'lambda*
                                         "invalid rest argument"
                                         #{orig-args\ 852}#
                                         #{args\ 875}#))
                                     #{tmp\ 883}#)))
                                (list #{tmp\ 883}#)))
                             #{args\ 875}#)))
                        (#{key\ 859}#
                          (lambda (#{args\ 891}#
                                   #{req\ 892}#
                                   #{opt\ 893}#
                                   #{rkey\ 894}#)
                            ((lambda (#{tmp\ 899}#)
                               ((lambda (#{tmp\ 900}#)
                                  (if #{tmp\ 900}#
                                    (apply (lambda ()
                                             (#{check\ 863}#
                                               #{req\ 892}#
                                               #{opt\ 893}#
                                               #f
                                               (cons #f
                                                     (reverse #{rkey\ 894}#))))
                                           #{tmp\ 900}#)
                                    ((lambda (#{tmp\ 901}#)
                                       (if (if #{tmp\ 901}#
                                             (apply (lambda (#{a\ 904}#
                                                             #{b\ 905}#)
                                                      (#{id?\ 246}#
                                                        #{a\ 904}#))
                                                    #{tmp\ 901}#)
                                             #f)
                                         (apply (lambda (#{a\ 908}# #{b\ 909}#)
                                                  ((lambda (#{tmp\ 911}#)
                                                     ((lambda (#{k\ 913}#)
                                                        (#{key\ 859}#
                                                          #{b\ 909}#
                                                          #{req\ 892}#
                                                          #{opt\ 893}#
                                                          (cons (cons #{k\ 913}#
                                                                      (cons #{a\ 908}#
                                                                            '(#(syntax-object
                                                                                #f
                                                                                ((top)
                                                                                 #(ribcage
                                                                                   #(k)
                                                                                   #((top))
                                                                                   #("i912"))
                                                                                 #(ribcage
                                                                                   #(a
                                                                                     b)
                                                                                   #((top)
                                                                                     (top))
                                                                                   #("i906"
                                                                                     "i907"))
                                                                                 #(ribcage
                                                                                   ()
                                                                                   ()
                                                                                   ())
                                                                                 #(ribcage
                                                                                   #(args
                                                                                     req
                                                                                     opt
                                                                                     rkey)
                                                                                   #((top)
                                                                                     (top)
                                                                                     (top)
                                                                                     (top))
                                                                                   #("i895"
                                                                                     "i896"
                                                                                     "i897"
                                                                                     "i898"))
                                                                                 #(ribcage
                                                                                   (check rest
                                                                                          key
                                                                                          opt
                                                                                          req)
                                                                                   ((top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top))
                                                                                   ("i862"
                                                                                    "i860"
                                                                                    "i858"
                                                                                    "i856"
                                                                                    "i854"))
                                                                                 #(ribcage
                                                                                   #(orig-args)
                                                                                   #((top))
                                                                                   #("i853"))
                                                                                 #(ribcage
                                                                                   (lambda-var-list
                                                                                     gen-var
                                                                                     strip
                                                                                     chi-lambda-case
                                                                                     lambda*-formals
                                                                                     chi-simple-lambda
                                                                                     lambda-formals
                                                                                     ellipsis?
                                                                                     chi-void
                                                                                     eval-local-transformer
                                                                                     chi-local-syntax
                                                                                     chi-body
                                                                                     chi-macro
                                                                                     chi-application
                                                                                     chi-expr
                                                                                     chi
                                                                                     chi-top
                                                                                     syntax-type
                                                                                     chi-when-list
                                                                                     chi-install-global
                                                                                     chi-top-sequence
                                                                                     chi-sequence
                                                                                     source-wrap
                                                                                     wrap
                                                                                     bound-id-member?
                                                                                     distinct-bound-ids?
                                                                                     valid-bound-ids?
                                                                                     bound-id=?
                                                                                     free-id=?
                                                                                     id-var-name
                                                                                     same-marks?
                                                                                     join-marks
                                                                                     join-wraps
                                                                                     smart-append
                                                                                     make-binding-wrap
                                                                                     extend-ribcage!
                                                                                     make-empty-ribcage
                                                                                     new-mark
                                                                                     anti-mark
                                                                                     the-anti-mark
                                                                                     top-marked?
                                                                                     top-wrap
                                                                                     empty-wrap
                                                                                     set-ribcage-labels!
                                                                                     set-ribcage-marks!
                                                                                     set-ribcage-symnames!
                                                                                     ribcage-labels
                                                                                     ribcage-marks
                                                                                     ribcage-symnames
                                                                                     ribcage?
                                                                                     make-ribcage
                                                                                     gen-labels
                                                                                     gen-label
                                                                                     make-rename
                                                                                     rename-marks
                                                                                     rename-new
                                                                                     rename-old
                                                                                     subst-rename?
                                                                                     wrap-subst
                                                                                     wrap-marks
                                                                                     make-wrap
                                                                                     id-sym-name&marks
                                                                                     id-sym-name
                                                                                     id?
                                                                                     nonsymbol-id?
                                                                                     global-extend
                                                                                     lookup
                                                                                     macros-only-env
                                                                                     extend-var-env
                                                                                     extend-env
                                                                                     null-env
                                                                                     binding-value
                                                                                     binding-type
                                                                                     make-binding
                                                                                     arg-check
                                                                                     source-annotation
                                                                                     no-source
                                                                                     set-syntax-object-module!
                                                                                     set-syntax-object-wrap!
                                                                                     set-syntax-object-expression!
                                                                                     syntax-object-module
                                                                                     syntax-object-wrap
                                                                                     syntax-object-expression
                                                                                     syntax-object?
                                                                                     make-syntax-object
                                                                                     build-lexical-var
                                                                                     build-letrec
                                                                                     build-named-let
                                                                                     build-let
                                                                                     build-sequence
                                                                                     build-data
                                                                                     build-primref
                                                                                     build-lambda-case
                                                                                     build-case-lambda
                                                                                     build-simple-lambda
                                                                                     build-global-definition
                                                                                     maybe-name-value!
                                                                                     build-global-assignment
                                                                                     build-global-reference
                                                                                     analyze-variable
                                                                                     build-lexical-assignment
                                                                                     build-lexical-reference
                                                                                     build-dynlet
                                                                                     build-conditional
                                                                                     build-application
                                                                                     build-void
                                                                                     decorate-source
                                                                                     get-global-definition-hook
                                                                                     put-global-definition-hook
                                                                                     gensym-hook
                                                                                     local-eval-hook
                                                                                     top-level-eval-hook
                                                                                     fx<
                                                                                     fx=
                                                                                     fx-
                                                                                     fx+
                                                                                     *mode*
                                                                                     noexpand)
                                                                                   ((top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top))
                                                                                   ("i360"
                                                                                    "i358"
                                                                                    "i356"
                                                                                    "i354"
                                                                                    "i352"
                                                                                    "i350"
                                                                                    "i348"
                                                                                    "i346"
                                                                                    "i344"
                                                                                    "i342"
                                                                                    "i340"
                                                                                    "i338"
                                                                                    "i336"
                                                                                    "i334"
                                                                                    "i332"
                                                                                    "i330"
                                                                                    "i328"
                                                                                    "i326"
                                                                                    "i324"
                                                                                    "i322"
                                                                                    "i320"
                                                                                    "i318"
                                                                                    "i316"
                                                                                    "i314"
                                                                                    "i312"
                                                                                    "i310"
                                                                                    "i308"
                                                                                    "i306"
                                                                                    "i304"
                                                                                    "i302"
                                                                                    "i300"
                                                                                    "i298"
                                                                                    "i296"
                                                                                    "i294"
                                                                                    "i292"
                                                                                    "i290"
                                                                                    "i289"
                                                                                    "i288"
                                                                                    "i286"
                                                                                    "i285"
                                                                                    "i284"
                                                                                    "i283"
                                                                                    "i282"
                                                                                    "i280"
                                                                                    "i278"
                                                                                    "i276"
                                                                                    "i274"
                                                                                    "i272"
                                                                                    "i270"
                                                                                    "i268"
                                                                                    "i266"
                                                                                    "i263"
                                                                                    "i261"
                                                                                    "i260"
                                                                                    "i259"
                                                                                    "i258"
                                                                                    "i257"
                                                                                    "i256"
                                                                                    "i254"
                                                                                    "i252"
                                                                                    "i250"
                                                                                    "i248"
                                                                                    "i247"
                                                                                    "i245"
                                                                                    "i243"
                                                                                    "i241"
                                                                                    "i239"
                                                                                    "i237"
                                                                                    "i235"
                                                                                    "i233"
                                                                                    "i232"
                                                                                    "i230"
                                                                                    "i228"
                                                                                    "i227"
                                                                                    "i226"
                                                                                    "i224"
                                                                                    "i223"
                                                                                    "i221"
                                                                                    "i219"
                                                                                    "i217"
                                                                                    "i215"
                                                                                    "i213"
                                                                                    "i211"
                                                                                    "i209"
                                                                                    "i207"
                                                                                    "i205"
                                                                                    "i203"
                                                                                    "i201"
                                                                                    "i199"
                                                                                    "i197"
                                                                                    "i195"
                                                                                    "i193"
                                                                                    "i191"
                                                                                    "i189"
                                                                                    "i187"
                                                                                    "i185"
                                                                                    "i183"
                                                                                    "i181"
                                                                                    "i179"
                                                                                    "i177"
                                                                                    "i175"
                                                                                    "i173"
                                                                                    "i171"
                                                                                    "i169"
                                                                                    "i167"
                                                                                    "i165"
                                                                                    "i163"
                                                                                    "i161"
                                                                                    "i159"
                                                                                    "i158"
                                                                                    "i156"
                                                                                    "i154"
                                                                                    "i152"
                                                                                    "i150"
                                                                                    "i148"
                                                                                    "i146"
                                                                                    "i144"
                                                                                    "i142"))
                                                                                 #(ribcage
                                                                                   (define-structure
                                                                                     and-map*)
                                                                                   ((top)
                                                                                    (top))
                                                                                   ("i45"
                                                                                    "i43")))
                                                                                (hygiene
                                                                                  guile)))))
                                                                #{rkey\ 894}#)))
                                                      #{tmp\ 911}#))
                                                   (symbol->keyword
                                                     (syntax->datum
                                                       #{a\ 908}#))))
                                                #{tmp\ 901}#)
                                         ((lambda (#{tmp\ 914}#)
                                            (if (if #{tmp\ 914}#
                                                  (apply (lambda (#{a\ 918}#
                                                                  #{init\ 919}#
                                                                  #{b\ 920}#)
                                                           (#{id?\ 246}#
                                                             #{a\ 918}#))
                                                         #{tmp\ 914}#)
                                                  #f)
                                              (apply (lambda (#{a\ 924}#
                                                              #{init\ 925}#
                                                              #{b\ 926}#)
                                                       ((lambda (#{tmp\ 928}#)
                                                          ((lambda (#{k\ 930}#)
                                                             (#{key\ 859}#
                                                               #{b\ 926}#
                                                               #{req\ 892}#
                                                               #{opt\ 893}#
                                                               (cons (list #{k\ 930}#
                                                                           #{a\ 924}#
                                                                           #{init\ 925}#)
                                                                     #{rkey\ 894}#)))
                                                           #{tmp\ 928}#))
                                                        (symbol->keyword
                                                          (syntax->datum
                                                            #{a\ 924}#))))
                                                     #{tmp\ 914}#)
                                              ((lambda (#{tmp\ 931}#)
                                                 (if (if #{tmp\ 931}#
                                                       (apply (lambda (#{a\ 936}#
                                                                       #{init\ 937}#
                                                                       #{k\ 938}#
                                                                       #{b\ 939}#)
                                                                (if (#{id?\ 246}#
                                                                      #{a\ 936}#)
                                                                  (keyword?
                                                                    (syntax->datum
                                                                      #{k\ 938}#))
                                                                  #f))
                                                              #{tmp\ 931}#)
                                                       #f)
                                                   (apply (lambda (#{a\ 946}#
                                                                   #{init\ 947}#
                                                                   #{k\ 948}#
                                                                   #{b\ 949}#)
                                                            (#{key\ 859}#
                                                              #{b\ 949}#
                                                              #{req\ 892}#
                                                              #{opt\ 893}#
                                                              (cons (list #{k\ 948}#
                                                                          #{a\ 946}#
                                                                          #{init\ 947}#)
                                                                    #{rkey\ 894}#)))
                                                          #{tmp\ 931}#)
                                                   ((lambda (#{tmp\ 950}#)
                                                      (if (if #{tmp\ 950}#
                                                            (apply (lambda (#{aok\ 952}#)
                                                                     (eq? (syntax->datum
                                                                            #{aok\ 952}#)
                                                                          #:allow-other-keys))
                                                                   #{tmp\ 950}#)
                                                            #f)
                                                        (apply (lambda (#{aok\ 954}#)
                                                                 (#{check\ 863}#
                                                                   #{req\ 892}#
                                                                   #{opt\ 893}#
                                                                   #f
                                                                   (cons #t
                                                                         (reverse
                                                                           #{rkey\ 894}#))))
                                                               #{tmp\ 950}#)
                                                        ((lambda (#{tmp\ 955}#)
                                                           (if (if #{tmp\ 955}#
                                                                 (apply (lambda (#{aok\ 959}#
                                                                                 #{a\ 960}#
                                                                                 #{b\ 961}#)
                                                                          (if (eq? (syntax->datum
                                                                                     #{aok\ 959}#)
                                                                                   #:allow-other-keys)
                                                                            (eq? (syntax->datum
                                                                                   #{a\ 960}#)
                                                                                 #:rest)
                                                                            #f))
                                                                        #{tmp\ 955}#)
                                                                 #f)
                                                             (apply (lambda (#{aok\ 967}#
                                                                             #{a\ 968}#
                                                                             #{b\ 969}#)
                                                                      (#{rest\ 861}#
                                                                        #{b\ 969}#
                                                                        #{req\ 892}#
                                                                        #{opt\ 893}#
                                                                        (cons #t
                                                                              (reverse
                                                                                #{rkey\ 894}#))))
                                                                    #{tmp\ 955}#)
                                                             ((lambda (#{tmp\ 970}#)
                                                                (if (if #{tmp\ 970}#
                                                                      (apply (lambda (#{aok\ 973}#
                                                                                      #{r\ 974}#)
                                                                               (if (eq? (syntax->datum
                                                                                          #{aok\ 973}#)
                                                                                        #:allow-other-keys)
                                                                                 (#{id?\ 246}#
                                                                                   #{r\ 974}#)
                                                                                 #f))
                                                                             #{tmp\ 970}#)
                                                                      #f)
                                                                  (apply (lambda (#{aok\ 979}#
                                                                                  #{r\ 980}#)
                                                                           (#{rest\ 861}#
                                                                             #{r\ 980}#
                                                                             #{req\ 892}#
                                                                             #{opt\ 893}#
                                                                             (cons #t
                                                                                   (reverse
                                                                                     #{rkey\ 894}#))))
                                                                         #{tmp\ 970}#)
                                                                  ((lambda (#{tmp\ 981}#)
                                                                     (if (if #{tmp\ 981}#
                                                                           (apply (lambda (#{a\ 984}#
                                                                                           #{b\ 985}#)
                                                                                    (eq? (syntax->datum
                                                                                           #{a\ 984}#)
                                                                                         #:rest))
                                                                                  #{tmp\ 981}#)
                                                                           #f)
                                                                       (apply (lambda (#{a\ 988}#
                                                                                       #{b\ 989}#)
                                                                                (#{rest\ 861}#
                                                                                  #{b\ 989}#
                                                                                  #{req\ 892}#
                                                                                  #{opt\ 893}#
                                                                                  (cons #f
                                                                                        (reverse
                                                                                          #{rkey\ 894}#))))
                                                                              #{tmp\ 981}#)
                                                                       ((lambda (#{tmp\ 990}#)
                                                                          (if (if #{tmp\ 990}#
                                                                                (apply (lambda (#{r\ 992}#)
                                                                                         (#{id?\ 246}#
                                                                                           #{r\ 992}#))
                                                                                       #{tmp\ 990}#)
                                                                                #f)
                                                                            (apply (lambda (#{r\ 994}#)
                                                                                     (#{rest\ 861}#
                                                                                       #{r\ 994}#
                                                                                       #{req\ 892}#
                                                                                       #{opt\ 893}#
                                                                                       (cons #f
                                                                                             (reverse
                                                                                               #{rkey\ 894}#))))
                                                                                   #{tmp\ 990}#)
                                                                            ((lambda (#{else\ 996}#)
                                                                               (syntax-violation
                                                                                 'lambda*
                                                                                 "invalid keyword argument list"
                                                                                 #{orig-args\ 852}#
                                                                                 #{args\ 891}#))
                                                                             #{tmp\ 899}#)))
                                                                        (list #{tmp\ 899}#))))
                                                                   ($sc-dispatch
                                                                     #{tmp\ 899}#
                                                                     '(any any)))))
                                                              ($sc-dispatch
                                                                #{tmp\ 899}#
                                                                '(any .
                                                                      any)))))
                                                         ($sc-dispatch
                                                           #{tmp\ 899}#
                                                           '(any any any)))))
                                                    ($sc-dispatch
                                                      #{tmp\ 899}#
                                                      '(any)))))
                                               ($sc-dispatch
                                                 #{tmp\ 899}#
                                                 '((any any any) . any)))))
                                          ($sc-dispatch
                                            #{tmp\ 899}#
                                            '((any any) . any)))))
                                     ($sc-dispatch
                                       #{tmp\ 899}#
                                       '(any . any)))))
                                ($sc-dispatch #{tmp\ 899}# (quote ()))))
                             #{args\ 891}#)))
                        (#{opt\ 857}#
                          (lambda (#{args\ 997}# #{req\ 998}# #{ropt\ 999}#)
                            ((lambda (#{tmp\ 1003}#)
                               ((lambda (#{tmp\ 1004}#)
                                  (if #{tmp\ 1004}#
                                    (apply (lambda ()
                                             (#{check\ 863}#
                                               #{req\ 998}#
                                               (reverse #{ropt\ 999}#)
                                               #f
                                               '()))
                                           #{tmp\ 1004}#)
                                    ((lambda (#{tmp\ 1005}#)
                                       (if (if #{tmp\ 1005}#
                                             (apply (lambda (#{a\ 1008}#
                                                             #{b\ 1009}#)
                                                      (#{id?\ 246}#
                                                        #{a\ 1008}#))
                                                    #{tmp\ 1005}#)
                                             #f)
                                         (apply (lambda (#{a\ 1012}#
                                                         #{b\ 1013}#)
                                                  (#{opt\ 857}#
                                                    #{b\ 1013}#
                                                    #{req\ 998}#
                                                    (cons (cons #{a\ 1012}#
                                                                '(#(syntax-object
                                                                    #f
                                                                    ((top)
                                                                     #(ribcage
                                                                       #(a b)
                                                                       #((top)
                                                                         (top))
                                                                       #("i1010"
                                                                         "i1011"))
                                                                     #(ribcage
                                                                       ()
                                                                       ()
                                                                       ())
                                                                     #(ribcage
                                                                       #(args
                                                                         req
                                                                         ropt)
                                                                       #((top)
                                                                         (top)
                                                                         (top))
                                                                       #("i1000"
                                                                         "i1001"
                                                                         "i1002"))
                                                                     #(ribcage
                                                                       (check rest
                                                                              key
                                                                              opt
                                                                              req)
                                                                       ((top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top))
                                                                       ("i862"
                                                                        "i860"
                                                                        "i858"
                                                                        "i856"
                                                                        "i854"))
                                                                     #(ribcage
                                                                       #(orig-args)
                                                                       #((top))
                                                                       #("i853"))
                                                                     #(ribcage
                                                                       (lambda-var-list
                                                                         gen-var
                                                                         strip
                                                                         chi-lambda-case
                                                                         lambda*-formals
                                                                         chi-simple-lambda
                                                                         lambda-formals
                                                                         ellipsis?
                                                                         chi-void
                                                                         eval-local-transformer
                                                                         chi-local-syntax
                                                                         chi-body
                                                                         chi-macro
                                                                         chi-application
                                                                         chi-expr
                                                                         chi
                                                                         chi-top
                                                                         syntax-type
                                                                         chi-when-list
                                                                         chi-install-global
                                                                         chi-top-sequence
                                                                         chi-sequence
                                                                         source-wrap
                                                                         wrap
                                                                         bound-id-member?
                                                                         distinct-bound-ids?
                                                                         valid-bound-ids?
                                                                         bound-id=?
                                                                         free-id=?
                                                                         id-var-name
                                                                         same-marks?
                                                                         join-marks
                                                                         join-wraps
                                                                         smart-append
                                                                         make-binding-wrap
                                                                         extend-ribcage!
                                                                         make-empty-ribcage
                                                                         new-mark
                                                                         anti-mark
                                                                         the-anti-mark
                                                                         top-marked?
                                                                         top-wrap
                                                                         empty-wrap
                                                                         set-ribcage-labels!
                                                                         set-ribcage-marks!
                                                                         set-ribcage-symnames!
                                                                         ribcage-labels
                                                                         ribcage-marks
                                                                         ribcage-symnames
                                                                         ribcage?
                                                                         make-ribcage
                                                                         gen-labels
                                                                         gen-label
                                                                         make-rename
                                                                         rename-marks
                                                                         rename-new
                                                                         rename-old
                                                                         subst-rename?
                                                                         wrap-subst
                                                                         wrap-marks
                                                                         make-wrap
                                                                         id-sym-name&marks
                                                                         id-sym-name
                                                                         id?
                                                                         nonsymbol-id?
                                                                         global-extend
                                                                         lookup
                                                                         macros-only-env
                                                                         extend-var-env
                                                                         extend-env
                                                                         null-env
                                                                         binding-value
                                                                         binding-type
                                                                         make-binding
                                                                         arg-check
                                                                         source-annotation
                                                                         no-source
                                                                         set-syntax-object-module!
                                                                         set-syntax-object-wrap!
                                                                         set-syntax-object-expression!
                                                                         syntax-object-module
                                                                         syntax-object-wrap
                                                                         syntax-object-expression
                                                                         syntax-object?
                                                                         make-syntax-object
                                                                         build-lexical-var
                                                                         build-letrec
                                                                         build-named-let
                                                                         build-let
                                                                         build-sequence
                                                                         build-data
                                                                         build-primref
                                                                         build-lambda-case
                                                                         build-case-lambda
                                                                         build-simple-lambda
                                                                         build-global-definition
                                                                         maybe-name-value!
                                                                         build-global-assignment
                                                                         build-global-reference
                                                                         analyze-variable
                                                                         build-lexical-assignment
                                                                         build-lexical-reference
                                                                         build-dynlet
                                                                         build-conditional
                                                                         build-application
                                                                         build-void
                                                                         decorate-source
                                                                         get-global-definition-hook
                                                                         put-global-definition-hook
                                                                         gensym-hook
                                                                         local-eval-hook
                                                                         top-level-eval-hook
                                                                         fx<
                                                                         fx=
                                                                         fx-
                                                                         fx+
                                                                         *mode*
                                                                         noexpand)
                                                                       ((top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top))
                                                                       ("i360"
                                                                        "i358"
                                                                        "i356"
                                                                        "i354"
                                                                        "i352"
                                                                        "i350"
                                                                        "i348"
                                                                        "i346"
                                                                        "i344"
                                                                        "i342"
                                                                        "i340"
                                                                        "i338"
                                                                        "i336"
                                                                        "i334"
                                                                        "i332"
                                                                        "i330"
                                                                        "i328"
                                                                        "i326"
                                                                        "i324"
                                                                        "i322"
                                                                        "i320"
                                                                        "i318"
                                                                        "i316"
                                                                        "i314"
                                                                        "i312"
                                                                        "i310"
                                                                        "i308"
                                                                        "i306"
                                                                        "i304"
                                                                        "i302"
                                                                        "i300"
                                                                        "i298"
                                                                        "i296"
                                                                        "i294"
                                                                        "i292"
                                                                        "i290"
                                                                        "i289"
                                                                        "i288"
                                                                        "i286"
                                                                        "i285"
                                                                        "i284"
                                                                        "i283"
                                                                        "i282"
                                                                        "i280"
                                                                        "i278"
                                                                        "i276"
                                                                        "i274"
                                                                        "i272"
                                                                        "i270"
                                                                        "i268"
                                                                        "i266"
                                                                        "i263"
                                                                        "i261"
                                                                        "i260"
                                                                        "i259"
                                                                        "i258"
                                                                        "i257"
                                                                        "i256"
                                                                        "i254"
                                                                        "i252"
                                                                        "i250"
                                                                        "i248"
                                                                        "i247"
                                                                        "i245"
                                                                        "i243"
                                                                        "i241"
                                                                        "i239"
                                                                        "i237"
                                                                        "i235"
                                                                        "i233"
                                                                        "i232"
                                                                        "i230"
                                                                        "i228"
                                                                        "i227"
                                                                        "i226"
                                                                        "i224"
                                                                        "i223"
                                                                        "i221"
                                                                        "i219"
                                                                        "i217"
                                                                        "i215"
                                                                        "i213"
                                                                        "i211"
                                                                        "i209"
                                                                        "i207"
                                                                        "i205"
                                                                        "i203"
                                                                        "i201"
                                                                        "i199"
                                                                        "i197"
                                                                        "i195"
                                                                        "i193"
                                                                        "i191"
                                                                        "i189"
                                                                        "i187"
                                                                        "i185"
                                                                        "i183"
                                                                        "i181"
                                                                        "i179"
                                                                        "i177"
                                                                        "i175"
                                                                        "i173"
                                                                        "i171"
                                                                        "i169"
                                                                        "i167"
                                                                        "i165"
                                                                        "i163"
                                                                        "i161"
                                                                        "i159"
                                                                        "i158"
                                                                        "i156"
                                                                        "i154"
                                                                        "i152"
                                                                        "i150"
                                                                        "i148"
                                                                        "i146"
                                                                        "i144"
                                                                        "i142"))
                                                                     #(ribcage
                                                                       (define-structure
                                                                         and-map*)
                                                                       ((top)
                                                                        (top))
                                                                       ("i45"
                                                                        "i43")))
                                                                    (hygiene
                                                                      guile))))
                                                          #{ropt\ 999}#)))
                                                #{tmp\ 1005}#)
                                         ((lambda (#{tmp\ 1014}#)
                                            (if (if #{tmp\ 1014}#
                                                  (apply (lambda (#{a\ 1018}#
                                                                  #{init\ 1019}#
                                                                  #{b\ 1020}#)
                                                           (#{id?\ 246}#
                                                             #{a\ 1018}#))
                                                         #{tmp\ 1014}#)
                                                  #f)
                                              (apply (lambda (#{a\ 1024}#
                                                              #{init\ 1025}#
                                                              #{b\ 1026}#)
                                                       (#{opt\ 857}#
                                                         #{b\ 1026}#
                                                         #{req\ 998}#
                                                         (cons (list #{a\ 1024}#
                                                                     #{init\ 1025}#)
                                                               #{ropt\ 999}#)))
                                                     #{tmp\ 1014}#)
                                              ((lambda (#{tmp\ 1027}#)
                                                 (if (if #{tmp\ 1027}#
                                                       (apply (lambda (#{a\ 1030}#
                                                                       #{b\ 1031}#)
                                                                (eq? (syntax->datum
                                                                       #{a\ 1030}#)
                                                                     #:key))
                                                              #{tmp\ 1027}#)
                                                       #f)
                                                   (apply (lambda (#{a\ 1034}#
                                                                   #{b\ 1035}#)
                                                            (#{key\ 859}#
                                                              #{b\ 1035}#
                                                              #{req\ 998}#
                                                              (reverse
                                                                #{ropt\ 999}#)
                                                              '()))
                                                          #{tmp\ 1027}#)
                                                   ((lambda (#{tmp\ 1036}#)
                                                      (if (if #{tmp\ 1036}#
                                                            (apply (lambda (#{a\ 1039}#
                                                                            #{b\ 1040}#)
                                                                     (eq? (syntax->datum
                                                                            #{a\ 1039}#)
                                                                          #:rest))
                                                                   #{tmp\ 1036}#)
                                                            #f)
                                                        (apply (lambda (#{a\ 1043}#
                                                                        #{b\ 1044}#)
                                                                 (#{rest\ 861}#
                                                                   #{b\ 1044}#
                                                                   #{req\ 998}#
                                                                   (reverse
                                                                     #{ropt\ 999}#)
                                                                   '()))
                                                               #{tmp\ 1036}#)
                                                        ((lambda (#{tmp\ 1045}#)
                                                           (if (if #{tmp\ 1045}#
                                                                 (apply (lambda (#{r\ 1047}#)
                                                                          (#{id?\ 246}#
                                                                            #{r\ 1047}#))
                                                                        #{tmp\ 1045}#)
                                                                 #f)
                                                             (apply (lambda (#{r\ 1049}#)
                                                                      (#{rest\ 861}#
                                                                        #{r\ 1049}#
                                                                        #{req\ 998}#
                                                                        (reverse
                                                                          #{ropt\ 999}#)
                                                                        '()))
                                                                    #{tmp\ 1045}#)
                                                             ((lambda (#{else\ 1051}#)
                                                                (syntax-violation
                                                                  'lambda*
                                                                  "invalid optional argument list"
                                                                  #{orig-args\ 852}#
                                                                  #{args\ 997}#))
                                                              #{tmp\ 1003}#)))
                                                         (list #{tmp\ 1003}#))))
                                                    ($sc-dispatch
                                                      #{tmp\ 1003}#
                                                      '(any any)))))
                                               ($sc-dispatch
                                                 #{tmp\ 1003}#
                                                 '(any . any)))))
                                          ($sc-dispatch
                                            #{tmp\ 1003}#
                                            '((any any) . any)))))
                                     ($sc-dispatch
                                       #{tmp\ 1003}#
                                       '(any . any)))))
                                ($sc-dispatch #{tmp\ 1003}# (quote ()))))
                             #{args\ 997}#)))
                        (#{req\ 855}#
                          (lambda (#{args\ 1052}# #{rreq\ 1053}#)
                            ((lambda (#{tmp\ 1056}#)
                               ((lambda (#{tmp\ 1057}#)
                                  (if #{tmp\ 1057}#
                                    (apply (lambda ()
                                             (#{check\ 863}#
                                               (reverse #{rreq\ 1053}#)
                                               '()
                                               #f
                                               '()))
                                           #{tmp\ 1057}#)
                                    ((lambda (#{tmp\ 1058}#)
                                       (if (if #{tmp\ 1058}#
                                             (apply (lambda (#{a\ 1061}#
                                                             #{b\ 1062}#)
                                                      (#{id?\ 246}#
                                                        #{a\ 1061}#))
                                                    #{tmp\ 1058}#)
                                             #f)
                                         (apply (lambda (#{a\ 1065}#
                                                         #{b\ 1066}#)
                                                  (#{req\ 855}#
                                                    #{b\ 1066}#
                                                    (cons #{a\ 1065}#
                                                          #{rreq\ 1053}#)))
                                                #{tmp\ 1058}#)
                                         ((lambda (#{tmp\ 1067}#)
                                            (if (if #{tmp\ 1067}#
                                                  (apply (lambda (#{a\ 1070}#
                                                                  #{b\ 1071}#)
                                                           (eq? (syntax->datum
                                                                  #{a\ 1070}#)
                                                                #:optional))
                                                         #{tmp\ 1067}#)
                                                  #f)
                                              (apply (lambda (#{a\ 1074}#
                                                              #{b\ 1075}#)
                                                       (#{opt\ 857}#
                                                         #{b\ 1075}#
                                                         (reverse
                                                           #{rreq\ 1053}#)
                                                         '()))
                                                     #{tmp\ 1067}#)
                                              ((lambda (#{tmp\ 1076}#)
                                                 (if (if #{tmp\ 1076}#
                                                       (apply (lambda (#{a\ 1079}#
                                                                       #{b\ 1080}#)
                                                                (eq? (syntax->datum
                                                                       #{a\ 1079}#)
                                                                     #:key))
                                                              #{tmp\ 1076}#)
                                                       #f)
                                                   (apply (lambda (#{a\ 1083}#
                                                                   #{b\ 1084}#)
                                                            (#{key\ 859}#
                                                              #{b\ 1084}#
                                                              (reverse
                                                                #{rreq\ 1053}#)
                                                              '()
                                                              '()))
                                                          #{tmp\ 1076}#)
                                                   ((lambda (#{tmp\ 1085}#)
                                                      (if (if #{tmp\ 1085}#
                                                            (apply (lambda (#{a\ 1088}#
                                                                            #{b\ 1089}#)
                                                                     (eq? (syntax->datum
                                                                            #{a\ 1088}#)
                                                                          #:rest))
                                                                   #{tmp\ 1085}#)
                                                            #f)
                                                        (apply (lambda (#{a\ 1092}#
                                                                        #{b\ 1093}#)
                                                                 (#{rest\ 861}#
                                                                   #{b\ 1093}#
                                                                   (reverse
                                                                     #{rreq\ 1053}#)
                                                                   '()
                                                                   '()))
                                                               #{tmp\ 1085}#)
                                                        ((lambda (#{tmp\ 1094}#)
                                                           (if (if #{tmp\ 1094}#
                                                                 (apply (lambda (#{r\ 1096}#)
                                                                          (#{id?\ 246}#
                                                                            #{r\ 1096}#))
                                                                        #{tmp\ 1094}#)
                                                                 #f)
                                                             (apply (lambda (#{r\ 1098}#)
                                                                      (#{rest\ 861}#
                                                                        #{r\ 1098}#
                                                                        (reverse
                                                                          #{rreq\ 1053}#)
                                                                        '()
                                                                        '()))
                                                                    #{tmp\ 1094}#)
                                                             ((lambda (#{else\ 1100}#)
                                                                (syntax-violation
                                                                  'lambda*
                                                                  "invalid argument list"
                                                                  #{orig-args\ 852}#
                                                                  #{args\ 1052}#))
                                                              #{tmp\ 1056}#)))
                                                         (list #{tmp\ 1056}#))))
                                                    ($sc-dispatch
                                                      #{tmp\ 1056}#
                                                      '(any any)))))
                                               ($sc-dispatch
                                                 #{tmp\ 1056}#
                                                 '(any . any)))))
                                          ($sc-dispatch
                                            #{tmp\ 1056}#
                                            '(any . any)))))
                                     ($sc-dispatch
                                       #{tmp\ 1056}#
                                       '(any . any)))))
                                ($sc-dispatch #{tmp\ 1056}# (quote ()))))
                             #{args\ 1052}#))))
                 (#{req\ 855}# #{orig-args\ 852}# (quote ())))))
           (#{chi-simple-lambda\ 351}#
             (lambda (#{e\ 1101}#
                      #{r\ 1102}#
                      #{w\ 1103}#
                      #{s\ 1104}#
                      #{mod\ 1105}#
                      #{req\ 1106}#
                      #{rest\ 1107}#
                      #{meta\ 1108}#
                      #{body\ 1109}#)
               (let ((#{ids\ 1121}#
                       (if #{rest\ 1107}#
                         (append #{req\ 1106}# (list #{rest\ 1107}#))
                         #{req\ 1106}#)))
                 (let ((#{vars\ 1123}#
                         (map #{gen-var\ 359}# #{ids\ 1121}#)))
                   (let ((#{labels\ 1125}#
                           (#{gen-labels\ 264}# #{ids\ 1121}#)))
                     (#{build-simple-lambda\ 188}#
                       #{s\ 1104}#
                       (map syntax->datum #{req\ 1106}#)
                       (if #{rest\ 1107}#
                         (syntax->datum #{rest\ 1107}#)
                         #f)
                       #{vars\ 1123}#
                       #{meta\ 1108}#
                       (#{chi-body\ 339}#
                         #{body\ 1109}#
                         (#{source-wrap\ 317}#
                           #{e\ 1101}#
                           #{w\ 1103}#
                           #{s\ 1104}#
                           #{mod\ 1105}#)
                         (#{extend-var-env\ 236}#
                           #{labels\ 1125}#
                           #{vars\ 1123}#
                           #{r\ 1102}#)
                         (#{make-binding-wrap\ 293}#
                           #{ids\ 1121}#
                           #{labels\ 1125}#
                           #{w\ 1103}#)
                         #{mod\ 1105}#)))))))
           (#{lambda-formals\ 349}#
             (lambda (#{orig-args\ 1128}#)
               (letrec ((#{check\ 1133}#
                          (lambda (#{req\ 1134}# #{rest\ 1135}#)
                            (if (#{distinct-bound-ids?\ 311}#
                                  (if #{rest\ 1135}#
                                    (cons #{rest\ 1135}# #{req\ 1134}#)
                                    #{req\ 1134}#))
                              (values #{req\ 1134}# #f #{rest\ 1135}# #f)
                              (syntax-violation
                                'lambda
                                "duplicate identifier in argument list"
                                #{orig-args\ 1128}#))))
                        (#{req\ 1131}#
                          (lambda (#{args\ 1141}# #{rreq\ 1142}#)
                            ((lambda (#{tmp\ 1145}#)
                               ((lambda (#{tmp\ 1146}#)
                                  (if #{tmp\ 1146}#
                                    (apply (lambda ()
                                             (#{check\ 1133}#
                                               (reverse #{rreq\ 1142}#)
                                               #f))
                                           #{tmp\ 1146}#)
                                    ((lambda (#{tmp\ 1147}#)
                                       (if (if #{tmp\ 1147}#
                                             (apply (lambda (#{a\ 1150}#
                                                             #{b\ 1151}#)
                                                      (#{id?\ 246}#
                                                        #{a\ 1150}#))
                                                    #{tmp\ 1147}#)
                                             #f)
                                         (apply (lambda (#{a\ 1154}#
                                                         #{b\ 1155}#)
                                                  (#{req\ 1131}#
                                                    #{b\ 1155}#
                                                    (cons #{a\ 1154}#
                                                          #{rreq\ 1142}#)))
                                                #{tmp\ 1147}#)
                                         ((lambda (#{tmp\ 1156}#)
                                            (if (if #{tmp\ 1156}#
                                                  (apply (lambda (#{r\ 1158}#)
                                                           (#{id?\ 246}#
                                                             #{r\ 1158}#))
                                                         #{tmp\ 1156}#)
                                                  #f)
                                              (apply (lambda (#{r\ 1160}#)
                                                       (#{check\ 1133}#
                                                         (reverse
                                                           #{rreq\ 1142}#)
                                                         #{r\ 1160}#))
                                                     #{tmp\ 1156}#)
                                              ((lambda (#{else\ 1162}#)
                                                 (syntax-violation
                                                   'lambda
                                                   "invalid argument list"
                                                   #{orig-args\ 1128}#
                                                   #{args\ 1141}#))
                                               #{tmp\ 1145}#)))
                                          (list #{tmp\ 1145}#))))
                                     ($sc-dispatch
                                       #{tmp\ 1145}#
                                       '(any . any)))))
                                ($sc-dispatch #{tmp\ 1145}# (quote ()))))
                             #{args\ 1141}#))))
                 (#{req\ 1131}# #{orig-args\ 1128}# (quote ())))))
           (#{ellipsis?\ 347}#
             (lambda (#{x\ 1163}#)
               (if (#{nonsymbol-id?\ 244}# #{x\ 1163}#)
                 (#{free-id=?\ 305}#
                   #{x\ 1163}#
                   '#(syntax-object
                      ...
                      ((top)
                       #(ribcage () () ())
                       #(ribcage () () ())
                       #(ribcage #(x) #((top)) #("i1164"))
                       #(ribcage
                         (lambda-var-list
                           gen-var
                           strip
                           chi-lambda-case
                           lambda*-formals
                           chi-simple-lambda
                           lambda-formals
                           ellipsis?
                           chi-void
                           eval-local-transformer
                           chi-local-syntax
                           chi-body
                           chi-macro
                           chi-application
                           chi-expr
                           chi
                           chi-top
                           syntax-type
                           chi-when-list
                           chi-install-global
                           chi-top-sequence
                           chi-sequence
                           source-wrap
                           wrap
                           bound-id-member?
                           distinct-bound-ids?
                           valid-bound-ids?
                           bound-id=?
                           free-id=?
                           id-var-name
                           same-marks?
                           join-marks
                           join-wraps
                           smart-append
                           make-binding-wrap
                           extend-ribcage!
                           make-empty-ribcage
                           new-mark
                           anti-mark
                           the-anti-mark
                           top-marked?
                           top-wrap
                           empty-wrap
                           set-ribcage-labels!
                           set-ribcage-marks!
                           set-ribcage-symnames!
                           ribcage-labels
                           ribcage-marks
                           ribcage-symnames
                           ribcage?
                           make-ribcage
                           gen-labels
                           gen-label
                           make-rename
                           rename-marks
                           rename-new
                           rename-old
                           subst-rename?
                           wrap-subst
                           wrap-marks
                           make-wrap
                           id-sym-name&marks
                           id-sym-name
                           id?
                           nonsymbol-id?
                           global-extend
                           lookup
                           macros-only-env
                           extend-var-env
                           extend-env
                           null-env
                           binding-value
                           binding-type
                           make-binding
                           arg-check
                           source-annotation
                           no-source
                           set-syntax-object-module!
                           set-syntax-object-wrap!
                           set-syntax-object-expression!
                           syntax-object-module
                           syntax-object-wrap
                           syntax-object-expression
                           syntax-object?
                           make-syntax-object
                           build-lexical-var
                           build-letrec
                           build-named-let
                           build-let
                           build-sequence
                           build-data
                           build-primref
                           build-lambda-case
                           build-case-lambda
                           build-simple-lambda
                           build-global-definition
                           maybe-name-value!
                           build-global-assignment
                           build-global-reference
                           analyze-variable
                           build-lexical-assignment
                           build-lexical-reference
                           build-dynlet
                           build-conditional
                           build-application
                           build-void
                           decorate-source
                           get-global-definition-hook
                           put-global-definition-hook
                           gensym-hook
                           local-eval-hook
                           top-level-eval-hook
                           fx<
                           fx=
                           fx-
                           fx+
                           *mode*
                           noexpand)
                         ((top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top))
                         ("i360"
                          "i358"
                          "i356"
                          "i354"
                          "i352"
                          "i350"
                          "i348"
                          "i346"
                          "i344"
                          "i342"
                          "i340"
                          "i338"
                          "i336"
                          "i334"
                          "i332"
                          "i330"
                          "i328"
                          "i326"
                          "i324"
                          "i322"
                          "i320"
                          "i318"
                          "i316"
                          "i314"
                          "i312"
                          "i310"
                          "i308"
                          "i306"
                          "i304"
                          "i302"
                          "i300"
                          "i298"
                          "i296"
                          "i294"
                          "i292"
                          "i290"
                          "i289"
                          "i288"
                          "i286"
                          "i285"
                          "i284"
                          "i283"
                          "i282"
                          "i280"
                          "i278"
                          "i276"
                          "i274"
                          "i272"
                          "i270"
                          "i268"
                          "i266"
                          "i263"
                          "i261"
                          "i260"
                          "i259"
                          "i258"
                          "i257"
                          "i256"
                          "i254"
                          "i252"
                          "i250"
                          "i248"
                          "i247"
                          "i245"
                          "i243"
                          "i241"
                          "i239"
                          "i237"
                          "i235"
                          "i233"
                          "i232"
                          "i230"
                          "i228"
                          "i227"
                          "i226"
                          "i224"
                          "i223"
                          "i221"
                          "i219"
                          "i217"
                          "i215"
                          "i213"
                          "i211"
                          "i209"
                          "i207"
                          "i205"
                          "i203"
                          "i201"
                          "i199"
                          "i197"
                          "i195"
                          "i193"
                          "i191"
                          "i189"
                          "i187"
                          "i185"
                          "i183"
                          "i181"
                          "i179"
                          "i177"
                          "i175"
                          "i173"
                          "i171"
                          "i169"
                          "i167"
                          "i165"
                          "i163"
                          "i161"
                          "i159"
                          "i158"
                          "i156"
                          "i154"
                          "i152"
                          "i150"
                          "i148"
                          "i146"
                          "i144"
                          "i142"))
                       #(ribcage
                         (define-structure and-map*)
                         ((top) (top))
                         ("i45" "i43")))
                      (hygiene guile)))
                 #f)))
           (#{chi-void\ 345}#
             (lambda () (#{build-void\ 166}# #f)))
           (#{eval-local-transformer\ 343}#
             (lambda (#{expanded\ 1168}# #{mod\ 1169}#)
               (let ((#{p\ 1173}#
                       (#{local-eval-hook\ 157}#
                         #{expanded\ 1168}#
                         #{mod\ 1169}#)))
                 (if (procedure? #{p\ 1173}#)
                   (cons #{p\ 1173}# (module-name (current-module)))
                   (syntax-violation
                     #f
                     "nonprocedure transformer"
                     #{p\ 1173}#)))))
           (#{chi-local-syntax\ 341}#
             (lambda (#{rec?\ 1174}#
                      #{e\ 1175}#
                      #{r\ 1176}#
                      #{w\ 1177}#
                      #{s\ 1178}#
                      #{mod\ 1179}#
                      #{k\ 1180}#)
               ((lambda (#{tmp\ 1188}#)
                  ((lambda (#{tmp\ 1189}#)
                     (if #{tmp\ 1189}#
                       (apply (lambda (#{_\ 1195}#
                                       #{id\ 1196}#
                                       #{val\ 1197}#
                                       #{e1\ 1198}#
                                       #{e2\ 1199}#)
                                (let ((#{ids\ 1201}# #{id\ 1196}#))
                                  (if (not (#{valid-bound-ids?\ 309}#
                                             #{ids\ 1201}#))
                                    (syntax-violation
                                      #f
                                      "duplicate bound keyword"
                                      #{e\ 1175}#)
                                    (let ((#{labels\ 1204}#
                                            (#{gen-labels\ 264}#
                                              #{ids\ 1201}#)))
                                      (let ((#{new-w\ 1206}#
                                              (#{make-binding-wrap\ 293}#
                                                #{ids\ 1201}#
                                                #{labels\ 1204}#
                                                #{w\ 1177}#)))
                                        (#{k\ 1180}#
                                          (cons #{e1\ 1198}# #{e2\ 1199}#)
                                          (#{extend-env\ 234}#
                                            #{labels\ 1204}#
                                            (let ((#{w\ 1210}#
                                                    (if #{rec?\ 1174}#
                                                      #{new-w\ 1206}#
                                                      #{w\ 1177}#))
                                                  (#{trans-r\ 1211}#
                                                    (#{macros-only-env\ 238}#
                                                      #{r\ 1176}#)))
                                              (map (lambda (#{x\ 1212}#)
                                                     (cons 'macro
                                                           (#{eval-local-transformer\ 343}#
                                                             (#{chi\ 331}#
                                                               #{x\ 1212}#
                                                               #{trans-r\ 1211}#
                                                               #{w\ 1210}#
                                                               #{mod\ 1179}#)
                                                             #{mod\ 1179}#)))
                                                   #{val\ 1197}#))
                                            #{r\ 1176}#)
                                          #{new-w\ 1206}#
                                          #{s\ 1178}#
                                          #{mod\ 1179}#))))))
                              #{tmp\ 1189}#)
                       ((lambda (#{_\ 1217}#)
                          (syntax-violation
                            #f
                            "bad local syntax definition"
                            (#{source-wrap\ 317}#
                              #{e\ 1175}#
                              #{w\ 1177}#
                              #{s\ 1178}#
                              #{mod\ 1179}#)))
                        #{tmp\ 1188}#)))
                   ($sc-dispatch
                     #{tmp\ 1188}#
                     '(any #(each (any any)) any . each-any))))
                #{e\ 1175}#)))
           (#{chi-body\ 339}#
             (lambda (#{body\ 1218}#
                      #{outer-form\ 1219}#
                      #{r\ 1220}#
                      #{w\ 1221}#
                      #{mod\ 1222}#)
               (let ((#{r\ 1230}#
                       (cons '("placeholder" placeholder)
                             #{r\ 1220}#)))
                 (let ((#{ribcage\ 1232}#
                         (#{make-ribcage\ 267}#
                           '()
                           '()
                           '())))
                   (let ((#{w\ 1235}#
                           (#{make-wrap\ 251}#
                             (#{wrap-marks\ 253}# #{w\ 1221}#)
                             (cons #{ribcage\ 1232}#
                                   (#{wrap-subst\ 255}# #{w\ 1221}#)))))
                     (letrec ((#{parse\ 1244}#
                                (lambda (#{body\ 1245}#
                                         #{ids\ 1246}#
                                         #{labels\ 1247}#
                                         #{var-ids\ 1248}#
                                         #{vars\ 1249}#
                                         #{vals\ 1250}#
                                         #{bindings\ 1251}#)
                                  (if (null? #{body\ 1245}#)
                                    (syntax-violation
                                      #f
                                      "no expressions in body"
                                      #{outer-form\ 1219}#)
                                    (let ((#{e\ 1256}# (cdar #{body\ 1245}#))
                                          (#{er\ 1257}# (caar #{body\ 1245}#)))
                                      (call-with-values
                                        (lambda ()
                                          (#{syntax-type\ 327}#
                                            #{e\ 1256}#
                                            #{er\ 1257}#
                                            '(())
                                            (#{source-annotation\ 225}#
                                              #{er\ 1257}#)
                                            #{ribcage\ 1232}#
                                            #{mod\ 1222}#
                                            #f))
                                        (lambda (#{type\ 1259}#
                                                 #{value\ 1260}#
                                                 #{e\ 1261}#
                                                 #{w\ 1262}#
                                                 #{s\ 1263}#
                                                 #{mod\ 1264}#)
                                          (if (memv #{type\ 1259}#
                                                    '(define-form))
                                            (let ((#{id\ 1274}#
                                                    (#{wrap\ 315}#
                                                      #{value\ 1260}#
                                                      #{w\ 1262}#
                                                      #{mod\ 1264}#))
                                                  (#{label\ 1275}#
                                                    (#{gen-label\ 262}#)))
                                              (let ((#{var\ 1277}#
                                                      (#{gen-var\ 359}#
                                                        #{id\ 1274}#)))
                                                (begin
                                                  (#{extend-ribcage!\ 291}#
                                                    #{ribcage\ 1232}#
                                                    #{id\ 1274}#
                                                    #{label\ 1275}#)
                                                  (#{parse\ 1244}#
                                                    (cdr #{body\ 1245}#)
                                                    (cons #{id\ 1274}#
                                                          #{ids\ 1246}#)
                                                    (cons #{label\ 1275}#
                                                          #{labels\ 1247}#)
                                                    (cons #{id\ 1274}#
                                                          #{var-ids\ 1248}#)
                                                    (cons #{var\ 1277}#
                                                          #{vars\ 1249}#)
                                                    (cons (cons #{er\ 1257}#
                                                                (#{wrap\ 315}#
                                                                  #{e\ 1261}#
                                                                  #{w\ 1262}#
                                                                  #{mod\ 1264}#))
                                                          #{vals\ 1250}#)
                                                    (cons (cons 'lexical
                                                                #{var\ 1277}#)
                                                          #{bindings\ 1251}#)))))
                                            (if (memv #{type\ 1259}#
                                                      '(define-syntax-form))
                                              (let ((#{id\ 1282}#
                                                      (#{wrap\ 315}#
                                                        #{value\ 1260}#
                                                        #{w\ 1262}#
                                                        #{mod\ 1264}#))
                                                    (#{label\ 1283}#
                                                      (#{gen-label\ 262}#)))
                                                (begin
                                                  (#{extend-ribcage!\ 291}#
                                                    #{ribcage\ 1232}#
                                                    #{id\ 1282}#
                                                    #{label\ 1283}#)
                                                  (#{parse\ 1244}#
                                                    (cdr #{body\ 1245}#)
                                                    (cons #{id\ 1282}#
                                                          #{ids\ 1246}#)
                                                    (cons #{label\ 1283}#
                                                          #{labels\ 1247}#)
                                                    #{var-ids\ 1248}#
                                                    #{vars\ 1249}#
                                                    #{vals\ 1250}#
                                                    (cons (cons 'macro
                                                                (cons #{er\ 1257}#
                                                                      (#{wrap\ 315}#
                                                                        #{e\ 1261}#
                                                                        #{w\ 1262}#
                                                                        #{mod\ 1264}#)))
                                                          #{bindings\ 1251}#))))
                                              (if (memv #{type\ 1259}#
                                                        '(begin-form))
                                                ((lambda (#{tmp\ 1286}#)
                                                   ((lambda (#{tmp\ 1287}#)
                                                      (if #{tmp\ 1287}#
                                                        (apply (lambda (#{_\ 1290}#
                                                                        #{e1\ 1291}#)
                                                                 (#{parse\ 1244}#
                                                                   (letrec ((#{f\ 1294}#
                                                                              (lambda (#{forms\ 1295}#)
                                                                                (if (null? #{forms\ 1295}#)
                                                                                  (cdr #{body\ 1245}#)
                                                                                  (cons (cons #{er\ 1257}#
                                                                                              (#{wrap\ 315}#
                                                                                                (car #{forms\ 1295}#)
                                                                                                #{w\ 1262}#
                                                                                                #{mod\ 1264}#))
                                                                                        (#{f\ 1294}#
                                                                                          (cdr #{forms\ 1295}#)))))))
                                                                     (#{f\ 1294}#
                                                                       #{e1\ 1291}#))
                                                                   #{ids\ 1246}#
                                                                   #{labels\ 1247}#
                                                                   #{var-ids\ 1248}#
                                                                   #{vars\ 1249}#
                                                                   #{vals\ 1250}#
                                                                   #{bindings\ 1251}#))
                                                               #{tmp\ 1287}#)
                                                        (syntax-violation
                                                          #f
                                                          "source expression failed to match any pattern"
                                                          #{tmp\ 1286}#)))
                                                    ($sc-dispatch
                                                      #{tmp\ 1286}#
                                                      '(any . each-any))))
                                                 #{e\ 1261}#)
                                                (if (memv #{type\ 1259}#
                                                          '(local-syntax-form))
                                                  (#{chi-local-syntax\ 341}#
                                                    #{value\ 1260}#
                                                    #{e\ 1261}#
                                                    #{er\ 1257}#
                                                    #{w\ 1262}#
                                                    #{s\ 1263}#
                                                    #{mod\ 1264}#
                                                    (lambda (#{forms\ 1298}#
                                                             #{er\ 1299}#
                                                             #{w\ 1300}#
                                                             #{s\ 1301}#
                                                             #{mod\ 1302}#)
                                                      (#{parse\ 1244}#
                                                        (letrec ((#{f\ 1310}#
                                                                   (lambda (#{forms\ 1311}#)
                                                                     (if (null? #{forms\ 1311}#)
                                                                       (cdr #{body\ 1245}#)
                                                                       (cons (cons #{er\ 1299}#
                                                                                   (#{wrap\ 315}#
                                                                                     (car #{forms\ 1311}#)
                                                                                     #{w\ 1300}#
                                                                                     #{mod\ 1302}#))
                                                                             (#{f\ 1310}#
                                                                               (cdr #{forms\ 1311}#)))))))
                                                          (#{f\ 1310}#
                                                            #{forms\ 1298}#))
                                                        #{ids\ 1246}#
                                                        #{labels\ 1247}#
                                                        #{var-ids\ 1248}#
                                                        #{vars\ 1249}#
                                                        #{vals\ 1250}#
                                                        #{bindings\ 1251}#)))
                                                  (if (null? #{ids\ 1246}#)
                                                    (#{build-sequence\ 198}#
                                                      #f
                                                      (map (lambda (#{x\ 1314}#)
                                                             (#{chi\ 331}#
                                                               (cdr #{x\ 1314}#)
                                                               (car #{x\ 1314}#)
                                                               '(())
                                                               #{mod\ 1264}#))
                                                           (cons (cons #{er\ 1257}#
                                                                       (#{source-wrap\ 317}#
                                                                         #{e\ 1261}#
                                                                         #{w\ 1262}#
                                                                         #{s\ 1263}#
                                                                         #{mod\ 1264}#))
                                                                 (cdr #{body\ 1245}#))))
                                                    (begin
                                                      (if (not (#{valid-bound-ids?\ 309}#
                                                                 #{ids\ 1246}#))
                                                        (syntax-violation
                                                          #f
                                                          "invalid or duplicate identifier in definition"
                                                          #{outer-form\ 1219}#))
                                                      (letrec ((#{loop\ 1321}#
                                                                 (lambda (#{bs\ 1322}#
                                                                          #{er-cache\ 1323}#
                                                                          #{r-cache\ 1324}#)
                                                                   (if (not (null? #{bs\ 1322}#))
                                                                     (let ((#{b\ 1327}#
                                                                             (car #{bs\ 1322}#)))
                                                                       (if (eq? (car #{b\ 1327}#)
                                                                                'macro)
                                                                         (let ((#{er\ 1330}#
                                                                                 (cadr #{b\ 1327}#)))
                                                                           (let ((#{r-cache\ 1332}#
                                                                                   (if (eq? #{er\ 1330}#
                                                                                            #{er-cache\ 1323}#)
                                                                                     #{r-cache\ 1324}#
                                                                                     (#{macros-only-env\ 238}#
                                                                                       #{er\ 1330}#))))
                                                                             (begin
                                                                               (set-cdr!
                                                                                 #{b\ 1327}#
                                                                                 (#{eval-local-transformer\ 343}#
                                                                                   (#{chi\ 331}#
                                                                                     (cddr #{b\ 1327}#)
                                                                                     #{r-cache\ 1332}#
                                                                                     '(())
                                                                                     #{mod\ 1264}#)
                                                                                   #{mod\ 1264}#))
                                                                               (#{loop\ 1321}#
                                                                                 (cdr #{bs\ 1322}#)
                                                                                 #{er\ 1330}#
                                                                                 #{r-cache\ 1332}#))))
                                                                         (#{loop\ 1321}#
                                                                           (cdr #{bs\ 1322}#)
                                                                           #{er-cache\ 1323}#
                                                                           #{r-cache\ 1324}#)))))))
                                                        (#{loop\ 1321}#
                                                          #{bindings\ 1251}#
                                                          #f
                                                          #f))
                                                      (set-cdr!
                                                        #{r\ 1230}#
                                                        (#{extend-env\ 234}#
                                                          #{labels\ 1247}#
                                                          #{bindings\ 1251}#
                                                          (cdr #{r\ 1230}#)))
                                                      (#{build-letrec\ 204}#
                                                        #f
                                                        (map syntax->datum
                                                             #{var-ids\ 1248}#)
                                                        #{vars\ 1249}#
                                                        (map (lambda (#{x\ 1335}#)
                                                               (#{chi\ 331}#
                                                                 (cdr #{x\ 1335}#)
                                                                 (car #{x\ 1335}#)
                                                                 '(())
                                                                 #{mod\ 1264}#))
                                                             #{vals\ 1250}#)
                                                        (#{build-sequence\ 198}#
                                                          #f
                                                          (map (lambda (#{x\ 1339}#)
                                                                 (#{chi\ 331}#
                                                                   (cdr #{x\ 1339}#)
                                                                   (car #{x\ 1339}#)
                                                                   '(())
                                                                   #{mod\ 1264}#))
                                                               (cons (cons #{er\ 1257}#
                                                                           (#{source-wrap\ 317}#
                                                                             #{e\ 1261}#
                                                                             #{w\ 1262}#
                                                                             #{s\ 1263}#
                                                                             #{mod\ 1264}#))
                                                                     (cdr #{body\ 1245}#))))))))))))))))))
                       (#{parse\ 1244}#
                         (map (lambda (#{x\ 1252}#)
                                (cons #{r\ 1230}#
                                      (#{wrap\ 315}#
                                        #{x\ 1252}#
                                        #{w\ 1235}#
                                        #{mod\ 1222}#)))
                              #{body\ 1218}#)
                         '()
                         '()
                         '()
                         '()
                         '()
                         '())))))))
           (#{chi-macro\ 337}#
             (lambda (#{p\ 1342}#
                      #{e\ 1343}#
                      #{r\ 1344}#
                      #{w\ 1345}#
                      #{rib\ 1346}#
                      #{mod\ 1347}#)
               (letrec ((#{rebuild-macro-output\ 1355}#
                          (lambda (#{x\ 1356}# #{m\ 1357}#)
                            (if (pair? #{x\ 1356}#)
                              (cons (#{rebuild-macro-output\ 1355}#
                                      (car #{x\ 1356}#)
                                      #{m\ 1357}#)
                                    (#{rebuild-macro-output\ 1355}#
                                      (cdr #{x\ 1356}#)
                                      #{m\ 1357}#))
                              (if (#{syntax-object?\ 210}# #{x\ 1356}#)
                                (let ((#{w\ 1365}#
                                        (#{syntax-object-wrap\ 214}#
                                          #{x\ 1356}#)))
                                  (let ((#{ms\ 1368}#
                                          (#{wrap-marks\ 253}# #{w\ 1365}#))
                                        (#{s\ 1369}#
                                          (#{wrap-subst\ 255}# #{w\ 1365}#)))
                                    (if (if (pair? #{ms\ 1368}#)
                                          (eq? (car #{ms\ 1368}#) #f)
                                          #f)
                                      (#{make-syntax-object\ 208}#
                                        (#{syntax-object-expression\ 212}#
                                          #{x\ 1356}#)
                                        (#{make-wrap\ 251}#
                                          (cdr #{ms\ 1368}#)
                                          (if #{rib\ 1346}#
                                            (cons #{rib\ 1346}#
                                                  (cdr #{s\ 1369}#))
                                            (cdr #{s\ 1369}#)))
                                        (#{syntax-object-module\ 216}#
                                          #{x\ 1356}#))
                                      (#{make-syntax-object\ 208}#
                                        (#{syntax-object-expression\ 212}#
                                          #{x\ 1356}#)
                                        (#{make-wrap\ 251}#
                                          (cons #{m\ 1357}# #{ms\ 1368}#)
                                          (if #{rib\ 1346}#
                                            (cons #{rib\ 1346}#
                                                  (cons 'shift
                                                        #{s\ 1369}#))
                                            (cons (quote shift) #{s\ 1369}#)))
                                        (cons 'hygiene
                                              (cdr #{p\ 1342}#))))))
                                (if (vector? #{x\ 1356}#)
                                  (let ((#{n\ 1377}#
                                          (vector-length #{x\ 1356}#)))
                                    (let ((#{v\ 1379}#
                                            (make-vector #{n\ 1377}#)))
                                      (letrec ((#{loop\ 1382}#
                                                 (lambda (#{i\ 1383}#)
                                                   (if (#{fx=\ 151}#
                                                         #{i\ 1383}#
                                                         #{n\ 1377}#)
                                                     (begin
                                                       (if #f #f)
                                                       #{v\ 1379}#)
                                                     (begin
                                                       (vector-set!
                                                         #{v\ 1379}#
                                                         #{i\ 1383}#
                                                         (#{rebuild-macro-output\ 1355}#
                                                           (vector-ref
                                                             #{x\ 1356}#
                                                             #{i\ 1383}#)
                                                           #{m\ 1357}#))
                                                       (#{loop\ 1382}#
                                                         (#{fx+\ 147}#
                                                           #{i\ 1383}#
                                                           1)))))))
                                        (#{loop\ 1382}# 0))))
                                  (if (symbol? #{x\ 1356}#)
                                    (syntax-violation
                                      #f
                                      "encountered raw symbol in macro output"
                                      (#{source-wrap\ 317}#
                                        #{e\ 1343}#
                                        #{w\ 1345}#
                                        (#{wrap-subst\ 255}# #{w\ 1345}#)
                                        #{mod\ 1347}#)
                                      #{x\ 1356}#)
                                    #{x\ 1356}#)))))))
                 (#{rebuild-macro-output\ 1355}#
                   ((car #{p\ 1342}#)
                    (#{wrap\ 315}#
                      #{e\ 1343}#
                      (#{anti-mark\ 287}# #{w\ 1345}#)
                      #{mod\ 1347}#))
                   (gensym "m")))))
           (#{chi-application\ 335}#
             (lambda (#{x\ 1390}#
                      #{e\ 1391}#
                      #{r\ 1392}#
                      #{w\ 1393}#
                      #{s\ 1394}#
                      #{mod\ 1395}#)
               ((lambda (#{tmp\ 1402}#)
                  ((lambda (#{tmp\ 1403}#)
                     (if #{tmp\ 1403}#
                       (apply (lambda (#{e0\ 1406}# #{e1\ 1407}#)
                                (#{build-application\ 168}#
                                  #{s\ 1394}#
                                  #{x\ 1390}#
                                  (map (lambda (#{e\ 1408}#)
                                         (#{chi\ 331}#
                                           #{e\ 1408}#
                                           #{r\ 1392}#
                                           #{w\ 1393}#
                                           #{mod\ 1395}#))
                                       #{e1\ 1407}#)))
                              #{tmp\ 1403}#)
                       (syntax-violation
                         #f
                         "source expression failed to match any pattern"
                         #{tmp\ 1402}#)))
                   ($sc-dispatch
                     #{tmp\ 1402}#
                     '(any . each-any))))
                #{e\ 1391}#)))
           (#{chi-expr\ 333}#
             (lambda (#{type\ 1411}#
                      #{value\ 1412}#
                      #{e\ 1413}#
                      #{r\ 1414}#
                      #{w\ 1415}#
                      #{s\ 1416}#
                      #{mod\ 1417}#)
               (if (memv #{type\ 1411}# (quote (lexical)))
                 (#{build-lexical-reference\ 174}#
                   'value
                   #{s\ 1416}#
                   #{e\ 1413}#
                   #{value\ 1412}#)
                 (if (memv #{type\ 1411}# (quote (core core-form)))
                   (#{value\ 1412}#
                     #{e\ 1413}#
                     #{r\ 1414}#
                     #{w\ 1415}#
                     #{s\ 1416}#
                     #{mod\ 1417}#)
                   (if (memv #{type\ 1411}# (quote (module-ref)))
                     (call-with-values
                       (lambda () (#{value\ 1412}# #{e\ 1413}#))
                       (lambda (#{id\ 1428}# #{mod\ 1429}#)
                         (#{build-global-reference\ 180}#
                           #{s\ 1416}#
                           #{id\ 1428}#
                           #{mod\ 1429}#)))
                     (if (memv #{type\ 1411}# (quote (lexical-call)))
                       (#{chi-application\ 335}#
                         (#{build-lexical-reference\ 174}#
                           'fun
                           (#{source-annotation\ 225}# (car #{e\ 1413}#))
                           (car #{e\ 1413}#)
                           #{value\ 1412}#)
                         #{e\ 1413}#
                         #{r\ 1414}#
                         #{w\ 1415}#
                         #{s\ 1416}#
                         #{mod\ 1417}#)
                       (if (memv #{type\ 1411}# (quote (global-call)))
                         (#{chi-application\ 335}#
                           (#{build-global-reference\ 180}#
                             (#{source-annotation\ 225}# (car #{e\ 1413}#))
                             (if (#{syntax-object?\ 210}# #{value\ 1412}#)
                               (#{syntax-object-expression\ 212}#
                                 #{value\ 1412}#)
                               #{value\ 1412}#)
                             (if (#{syntax-object?\ 210}# #{value\ 1412}#)
                               (#{syntax-object-module\ 216}# #{value\ 1412}#)
                               #{mod\ 1417}#))
                           #{e\ 1413}#
                           #{r\ 1414}#
                           #{w\ 1415}#
                           #{s\ 1416}#
                           #{mod\ 1417}#)
                         (if (memv #{type\ 1411}# (quote (constant)))
                           (#{build-data\ 196}#
                             #{s\ 1416}#
                             (#{strip\ 357}#
                               (#{source-wrap\ 317}#
                                 #{e\ 1413}#
                                 #{w\ 1415}#
                                 #{s\ 1416}#
                                 #{mod\ 1417}#)
                               '(())))
                           (if (memv #{type\ 1411}# (quote (global)))
                             (#{build-global-reference\ 180}#
                               #{s\ 1416}#
                               #{value\ 1412}#
                               #{mod\ 1417}#)
                             (if (memv #{type\ 1411}# (quote (call)))
                               (#{chi-application\ 335}#
                                 (#{chi\ 331}#
                                   (car #{e\ 1413}#)
                                   #{r\ 1414}#
                                   #{w\ 1415}#
                                   #{mod\ 1417}#)
                                 #{e\ 1413}#
                                 #{r\ 1414}#
                                 #{w\ 1415}#
                                 #{s\ 1416}#
                                 #{mod\ 1417}#)
                               (if (memv #{type\ 1411}# (quote (begin-form)))
                                 ((lambda (#{tmp\ 1439}#)
                                    ((lambda (#{tmp\ 1440}#)
                                       (if #{tmp\ 1440}#
                                         (apply (lambda (#{_\ 1444}#
                                                         #{e1\ 1445}#
                                                         #{e2\ 1446}#)
                                                  (#{chi-sequence\ 319}#
                                                    (cons #{e1\ 1445}#
                                                          #{e2\ 1446}#)
                                                    #{r\ 1414}#
                                                    #{w\ 1415}#
                                                    #{s\ 1416}#
                                                    #{mod\ 1417}#))
                                                #{tmp\ 1440}#)
                                         (syntax-violation
                                           #f
                                           "source expression failed to match any pattern"
                                           #{tmp\ 1439}#)))
                                     ($sc-dispatch
                                       #{tmp\ 1439}#
                                       '(any any . each-any))))
                                  #{e\ 1413}#)
                                 (if (memv #{type\ 1411}#
                                           '(local-syntax-form))
                                   (#{chi-local-syntax\ 341}#
                                     #{value\ 1412}#
                                     #{e\ 1413}#
                                     #{r\ 1414}#
                                     #{w\ 1415}#
                                     #{s\ 1416}#
                                     #{mod\ 1417}#
                                     #{chi-sequence\ 319}#)
                                   (if (memv #{type\ 1411}#
                                             '(eval-when-form))
                                     ((lambda (#{tmp\ 1450}#)
                                        ((lambda (#{tmp\ 1451}#)
                                           (if #{tmp\ 1451}#
                                             (apply (lambda (#{_\ 1456}#
                                                             #{x\ 1457}#
                                                             #{e1\ 1458}#
                                                             #{e2\ 1459}#)
                                                      (let ((#{when-list\ 1461}#
                                                              (#{chi-when-list\ 325}#
                                                                #{e\ 1413}#
                                                                #{x\ 1457}#
                                                                #{w\ 1415}#)))
                                                        (if (memq 'eval
                                                                  #{when-list\ 1461}#)
                                                          (#{chi-sequence\ 319}#
                                                            (cons #{e1\ 1458}#
                                                                  #{e2\ 1459}#)
                                                            #{r\ 1414}#
                                                            #{w\ 1415}#
                                                            #{s\ 1416}#
                                                            #{mod\ 1417}#)
                                                          (#{chi-void\ 345}#))))
                                                    #{tmp\ 1451}#)
                                             (syntax-violation
                                               #f
                                               "source expression failed to match any pattern"
                                               #{tmp\ 1450}#)))
                                         ($sc-dispatch
                                           #{tmp\ 1450}#
                                           '(any each-any any . each-any))))
                                      #{e\ 1413}#)
                                     (if (memv #{type\ 1411}#
                                               '(define-form
                                                  define-syntax-form))
                                       (syntax-violation
                                         #f
                                         "definition in expression context"
                                         #{e\ 1413}#
                                         (#{wrap\ 315}#
                                           #{value\ 1412}#
                                           #{w\ 1415}#
                                           #{mod\ 1417}#))
                                       (if (memv #{type\ 1411}#
                                                 '(syntax))
                                         (syntax-violation
                                           #f
                                           "reference to pattern variable outside syntax form"
                                           (#{source-wrap\ 317}#
                                             #{e\ 1413}#
                                             #{w\ 1415}#
                                             #{s\ 1416}#
                                             #{mod\ 1417}#))
                                         (if (memv #{type\ 1411}#
                                                   '(displaced-lexical))
                                           (syntax-violation
                                             #f
                                             "reference to identifier outside its scope"
                                             (#{source-wrap\ 317}#
                                               #{e\ 1413}#
                                               #{w\ 1415}#
                                               #{s\ 1416}#
                                               #{mod\ 1417}#))
                                           (syntax-violation
                                             #f
                                             "unexpected syntax"
                                             (#{source-wrap\ 317}#
                                               #{e\ 1413}#
                                               #{w\ 1415}#
                                               #{s\ 1416}#
                                               #{mod\ 1417}#))))))))))))))))))
           (#{chi\ 331}#
             (lambda (#{e\ 1468}#
                      #{r\ 1469}#
                      #{w\ 1470}#
                      #{mod\ 1471}#)
               (call-with-values
                 (lambda ()
                   (#{syntax-type\ 327}#
                     #{e\ 1468}#
                     #{r\ 1469}#
                     #{w\ 1470}#
                     (#{source-annotation\ 225}# #{e\ 1468}#)
                     #f
                     #{mod\ 1471}#
                     #f))
                 (lambda (#{type\ 1476}#
                          #{value\ 1477}#
                          #{e\ 1478}#
                          #{w\ 1479}#
                          #{s\ 1480}#
                          #{mod\ 1481}#)
                   (#{chi-expr\ 333}#
                     #{type\ 1476}#
                     #{value\ 1477}#
                     #{e\ 1478}#
                     #{r\ 1469}#
                     #{w\ 1479}#
                     #{s\ 1480}#
                     #{mod\ 1481}#)))))
           (#{chi-top\ 329}#
             (lambda (#{e\ 1488}#
                      #{r\ 1489}#
                      #{w\ 1490}#
                      #{m\ 1491}#
                      #{esew\ 1492}#
                      #{mod\ 1493}#)
               (call-with-values
                 (lambda ()
                   (#{syntax-type\ 327}#
                     #{e\ 1488}#
                     #{r\ 1489}#
                     #{w\ 1490}#
                     (#{source-annotation\ 225}# #{e\ 1488}#)
                     #f
                     #{mod\ 1493}#
                     #f))
                 (lambda (#{type\ 1514}#
                          #{value\ 1515}#
                          #{e\ 1516}#
                          #{w\ 1517}#
                          #{s\ 1518}#
                          #{mod\ 1519}#)
                   (if (memv #{type\ 1514}# (quote (begin-form)))
                     ((lambda (#{tmp\ 1527}#)
                        ((lambda (#{tmp\ 1528}#)
                           (if #{tmp\ 1528}#
                             (apply (lambda (#{_\ 1530}#) (#{chi-void\ 345}#))
                                    #{tmp\ 1528}#)
                             ((lambda (#{tmp\ 1531}#)
                                (if #{tmp\ 1531}#
                                  (apply (lambda (#{_\ 1535}#
                                                  #{e1\ 1536}#
                                                  #{e2\ 1537}#)
                                           (#{chi-top-sequence\ 321}#
                                             (cons #{e1\ 1536}# #{e2\ 1537}#)
                                             #{r\ 1489}#
                                             #{w\ 1517}#
                                             #{s\ 1518}#
                                             #{m\ 1491}#
                                             #{esew\ 1492}#
                                             #{mod\ 1519}#))
                                         #{tmp\ 1531}#)
                                  (syntax-violation
                                    #f
                                    "source expression failed to match any pattern"
                                    #{tmp\ 1527}#)))
                              ($sc-dispatch
                                #{tmp\ 1527}#
                                '(any any . each-any)))))
                         ($sc-dispatch #{tmp\ 1527}# (quote (any)))))
                      #{e\ 1516}#)
                     (if (memv #{type\ 1514}# (quote (local-syntax-form)))
                       (#{chi-local-syntax\ 341}#
                         #{value\ 1515}#
                         #{e\ 1516}#
                         #{r\ 1489}#
                         #{w\ 1517}#
                         #{s\ 1518}#
                         #{mod\ 1519}#
                         (lambda (#{body\ 1540}#
                                  #{r\ 1541}#
                                  #{w\ 1542}#
                                  #{s\ 1543}#
                                  #{mod\ 1544}#)
                           (#{chi-top-sequence\ 321}#
                             #{body\ 1540}#
                             #{r\ 1541}#
                             #{w\ 1542}#
                             #{s\ 1543}#
                             #{m\ 1491}#
                             #{esew\ 1492}#
                             #{mod\ 1544}#)))
                       (if (memv #{type\ 1514}# (quote (eval-when-form)))
                         ((lambda (#{tmp\ 1551}#)
                            ((lambda (#{tmp\ 1552}#)
                               (if #{tmp\ 1552}#
                                 (apply (lambda (#{_\ 1557}#
                                                 #{x\ 1558}#
                                                 #{e1\ 1559}#
                                                 #{e2\ 1560}#)
                                          (let ((#{when-list\ 1563}#
                                                  (#{chi-when-list\ 325}#
                                                    #{e\ 1516}#
                                                    #{x\ 1558}#
                                                    #{w\ 1517}#))
                                                (#{body\ 1564}#
                                                  (cons #{e1\ 1559}#
                                                        #{e2\ 1560}#)))
                                            (if (eq? #{m\ 1491}# (quote e))
                                              (if (memq 'eval
                                                        #{when-list\ 1563}#)
                                                (#{chi-top-sequence\ 321}#
                                                  #{body\ 1564}#
                                                  #{r\ 1489}#
                                                  #{w\ 1517}#
                                                  #{s\ 1518}#
                                                  'e
                                                  '(eval)
                                                  #{mod\ 1519}#)
                                                (#{chi-void\ 345}#))
                                              (if (memq 'load
                                                        #{when-list\ 1563}#)
                                                (if (let ((#{t\ 1573}#
                                                            (memq 'compile
                                                                  #{when-list\ 1563}#)))
                                                      (if #{t\ 1573}#
                                                        #{t\ 1573}#
                                                        (if (eq? #{m\ 1491}#
                                                                 'c&e)
                                                          (memq 'eval
                                                                #{when-list\ 1563}#)
                                                          #f)))
                                                  (#{chi-top-sequence\ 321}#
                                                    #{body\ 1564}#
                                                    #{r\ 1489}#
                                                    #{w\ 1517}#
                                                    #{s\ 1518}#
                                                    'c&e
                                                    '(compile load)
                                                    #{mod\ 1519}#)
                                                  (if (memq #{m\ 1491}#
                                                            '(c c&e))
                                                    (#{chi-top-sequence\ 321}#
                                                      #{body\ 1564}#
                                                      #{r\ 1489}#
                                                      #{w\ 1517}#
                                                      #{s\ 1518}#
                                                      'c
                                                      '(load)
                                                      #{mod\ 1519}#)
                                                    (#{chi-void\ 345}#)))
                                                (if (let ((#{t\ 1581}#
                                                            (memq 'compile
                                                                  #{when-list\ 1563}#)))
                                                      (if #{t\ 1581}#
                                                        #{t\ 1581}#
                                                        (if (eq? #{m\ 1491}#
                                                                 'c&e)
                                                          (memq 'eval
                                                                #{when-list\ 1563}#)
                                                          #f)))
                                                  (begin
                                                    (#{top-level-eval-hook\ 155}#
                                                      (#{chi-top-sequence\ 321}#
                                                        #{body\ 1564}#
                                                        #{r\ 1489}#
                                                        #{w\ 1517}#
                                                        #{s\ 1518}#
                                                        'e
                                                        '(eval)
                                                        #{mod\ 1519}#)
                                                      #{mod\ 1519}#)
                                                    (#{chi-void\ 345}#))
                                                  (#{chi-void\ 345}#))))))
                                        #{tmp\ 1552}#)
                                 (syntax-violation
                                   #f
                                   "source expression failed to match any pattern"
                                   #{tmp\ 1551}#)))
                             ($sc-dispatch
                               #{tmp\ 1551}#
                               '(any each-any any . each-any))))
                          #{e\ 1516}#)
                         (if (memv #{type\ 1514}#
                                   '(define-syntax-form))
                           (let ((#{n\ 1589}#
                                   (#{id-var-name\ 303}#
                                     #{value\ 1515}#
                                     #{w\ 1517}#))
                                 (#{r\ 1590}#
                                   (#{macros-only-env\ 238}# #{r\ 1489}#)))
                             (if (memv #{m\ 1491}# (quote (c)))
                               (if (memq (quote compile) #{esew\ 1492}#)
                                 (let ((#{e\ 1593}#
                                         (#{chi-install-global\ 323}#
                                           #{n\ 1589}#
                                           (#{chi\ 331}#
                                             #{e\ 1516}#
                                             #{r\ 1590}#
                                             #{w\ 1517}#
                                             #{mod\ 1519}#))))
                                   (begin
                                     (#{top-level-eval-hook\ 155}#
                                       #{e\ 1593}#
                                       #{mod\ 1519}#)
                                     (if (memq (quote load) #{esew\ 1492}#)
                                       #{e\ 1593}#
                                       (#{chi-void\ 345}#))))
                                 (if (memq (quote load) #{esew\ 1492}#)
                                   (#{chi-install-global\ 323}#
                                     #{n\ 1589}#
                                     (#{chi\ 331}#
                                       #{e\ 1516}#
                                       #{r\ 1590}#
                                       #{w\ 1517}#
                                       #{mod\ 1519}#))
                                   (#{chi-void\ 345}#)))
                               (if (memv #{m\ 1491}# (quote (c&e)))
                                 (let ((#{e\ 1596}#
                                         (#{chi-install-global\ 323}#
                                           #{n\ 1589}#
                                           (#{chi\ 331}#
                                             #{e\ 1516}#
                                             #{r\ 1590}#
                                             #{w\ 1517}#
                                             #{mod\ 1519}#))))
                                   (begin
                                     (#{top-level-eval-hook\ 155}#
                                       #{e\ 1596}#
                                       #{mod\ 1519}#)
                                     #{e\ 1596}#))
                                 (begin
                                   (if (memq (quote eval) #{esew\ 1492}#)
                                     (#{top-level-eval-hook\ 155}#
                                       (#{chi-install-global\ 323}#
                                         #{n\ 1589}#
                                         (#{chi\ 331}#
                                           #{e\ 1516}#
                                           #{r\ 1590}#
                                           #{w\ 1517}#
                                           #{mod\ 1519}#))
                                       #{mod\ 1519}#))
                                   (#{chi-void\ 345}#)))))
                           (if (memv #{type\ 1514}# (quote (define-form)))
                             (let ((#{n\ 1601}#
                                     (#{id-var-name\ 303}#
                                       #{value\ 1515}#
                                       #{w\ 1517}#)))
                               (let ((#{type\ 1603}#
                                       (#{binding-type\ 229}#
                                         (#{lookup\ 240}#
                                           #{n\ 1601}#
                                           #{r\ 1489}#
                                           #{mod\ 1519}#))))
                                 (if (memv #{type\ 1603}#
                                           '(global core macro module-ref))
                                   (begin
                                     (if (if (not (module-local-variable
                                                    (current-module)
                                                    #{n\ 1601}#))
                                           (current-module)
                                           #f)
                                       (let ((#{old\ 1608}#
                                               (module-variable
                                                 (current-module)
                                                 #{n\ 1601}#)))
                                         (module-define!
                                           (current-module)
                                           #{n\ 1601}#
                                           (if (variable? #{old\ 1608}#)
                                             (variable-ref #{old\ 1608}#)
                                             #f))))
                                     (let ((#{x\ 1611}#
                                             (#{build-global-definition\ 186}#
                                               #{s\ 1518}#
                                               #{n\ 1601}#
                                               (#{chi\ 331}#
                                                 #{e\ 1516}#
                                                 #{r\ 1489}#
                                                 #{w\ 1517}#
                                                 #{mod\ 1519}#))))
                                       (begin
                                         (if (eq? #{m\ 1491}# (quote c&e))
                                           (#{top-level-eval-hook\ 155}#
                                             #{x\ 1611}#
                                             #{mod\ 1519}#))
                                         #{x\ 1611}#)))
                                   (if (memv #{type\ 1603}#
                                             '(displaced-lexical))
                                     (syntax-violation
                                       #f
                                       "identifier out of context"
                                       #{e\ 1516}#
                                       (#{wrap\ 315}#
                                         #{value\ 1515}#
                                         #{w\ 1517}#
                                         #{mod\ 1519}#))
                                     (syntax-violation
                                       #f
                                       "cannot define keyword at top level"
                                       #{e\ 1516}#
                                       (#{wrap\ 315}#
                                         #{value\ 1515}#
                                         #{w\ 1517}#
                                         #{mod\ 1519}#))))))
                             (let ((#{x\ 1617}#
                                     (#{chi-expr\ 333}#
                                       #{type\ 1514}#
                                       #{value\ 1515}#
                                       #{e\ 1516}#
                                       #{r\ 1489}#
                                       #{w\ 1517}#
                                       #{s\ 1518}#
                                       #{mod\ 1519}#)))
                               (begin
                                 (if (eq? #{m\ 1491}# (quote c&e))
                                   (#{top-level-eval-hook\ 155}#
                                     #{x\ 1617}#
                                     #{mod\ 1519}#))
                                 #{x\ 1617}#)))))))))))
           (#{syntax-type\ 327}#
             (lambda (#{e\ 1618}#
                      #{r\ 1619}#
                      #{w\ 1620}#
                      #{s\ 1621}#
                      #{rib\ 1622}#
                      #{mod\ 1623}#
                      #{for-car?\ 1624}#)
               (if (symbol? #{e\ 1618}#)
                 (let ((#{n\ 1636}#
                         (#{id-var-name\ 303}# #{e\ 1618}# #{w\ 1620}#)))
                   (let ((#{b\ 1638}#
                           (#{lookup\ 240}#
                             #{n\ 1636}#
                             #{r\ 1619}#
                             #{mod\ 1623}#)))
                     (let ((#{type\ 1640}#
                             (#{binding-type\ 229}# #{b\ 1638}#)))
                       (if (memv #{type\ 1640}# (quote (lexical)))
                         (values
                           #{type\ 1640}#
                           (#{binding-value\ 231}# #{b\ 1638}#)
                           #{e\ 1618}#
                           #{w\ 1620}#
                           #{s\ 1621}#
                           #{mod\ 1623}#)
                         (if (memv #{type\ 1640}# (quote (global)))
                           (values
                             #{type\ 1640}#
                             #{n\ 1636}#
                             #{e\ 1618}#
                             #{w\ 1620}#
                             #{s\ 1621}#
                             #{mod\ 1623}#)
                           (if (memv #{type\ 1640}# (quote (macro)))
                             (if #{for-car?\ 1624}#
                               (values
                                 #{type\ 1640}#
                                 (#{binding-value\ 231}# #{b\ 1638}#)
                                 #{e\ 1618}#
                                 #{w\ 1620}#
                                 #{s\ 1621}#
                                 #{mod\ 1623}#)
                               (#{syntax-type\ 327}#
                                 (#{chi-macro\ 337}#
                                   (#{binding-value\ 231}# #{b\ 1638}#)
                                   #{e\ 1618}#
                                   #{r\ 1619}#
                                   #{w\ 1620}#
                                   #{rib\ 1622}#
                                   #{mod\ 1623}#)
                                 #{r\ 1619}#
                                 '(())
                                 #{s\ 1621}#
                                 #{rib\ 1622}#
                                 #{mod\ 1623}#
                                 #f))
                             (values
                               #{type\ 1640}#
                               (#{binding-value\ 231}# #{b\ 1638}#)
                               #{e\ 1618}#
                               #{w\ 1620}#
                               #{s\ 1621}#
                               #{mod\ 1623}#)))))))
                 (if (pair? #{e\ 1618}#)
                   (let ((#{first\ 1649}# (car #{e\ 1618}#)))
                     (call-with-values
                       (lambda ()
                         (#{syntax-type\ 327}#
                           #{first\ 1649}#
                           #{r\ 1619}#
                           #{w\ 1620}#
                           #{s\ 1621}#
                           #{rib\ 1622}#
                           #{mod\ 1623}#
                           #t))
                       (lambda (#{ftype\ 1650}#
                                #{fval\ 1651}#
                                #{fe\ 1652}#
                                #{fw\ 1653}#
                                #{fs\ 1654}#
                                #{fmod\ 1655}#)
                         (if (memv #{ftype\ 1650}# (quote (lexical)))
                           (values
                             'lexical-call
                             #{fval\ 1651}#
                             #{e\ 1618}#
                             #{w\ 1620}#
                             #{s\ 1621}#
                             #{mod\ 1623}#)
                           (if (memv #{ftype\ 1650}# (quote (global)))
                             (values
                               'global-call
                               (#{make-syntax-object\ 208}#
                                 #{fval\ 1651}#
                                 #{w\ 1620}#
                                 #{fmod\ 1655}#)
                               #{e\ 1618}#
                               #{w\ 1620}#
                               #{s\ 1621}#
                               #{mod\ 1623}#)
                             (if (memv #{ftype\ 1650}# (quote (macro)))
                               (#{syntax-type\ 327}#
                                 (#{chi-macro\ 337}#
                                   #{fval\ 1651}#
                                   #{e\ 1618}#
                                   #{r\ 1619}#
                                   #{w\ 1620}#
                                   #{rib\ 1622}#
                                   #{mod\ 1623}#)
                                 #{r\ 1619}#
                                 '(())
                                 #{s\ 1621}#
                                 #{rib\ 1622}#
                                 #{mod\ 1623}#
                                 #{for-car?\ 1624}#)
                               (if (memv #{ftype\ 1650}# (quote (module-ref)))
                                 (call-with-values
                                   (lambda () (#{fval\ 1651}# #{e\ 1618}#))
                                   (lambda (#{sym\ 1667}# #{mod\ 1668}#)
                                     (#{syntax-type\ 327}#
                                       #{sym\ 1667}#
                                       #{r\ 1619}#
                                       #{w\ 1620}#
                                       #{s\ 1621}#
                                       #{rib\ 1622}#
                                       #{mod\ 1668}#
                                       #{for-car?\ 1624}#)))
                                 (if (memv #{ftype\ 1650}# (quote (core)))
                                   (values
                                     'core-form
                                     #{fval\ 1651}#
                                     #{e\ 1618}#
                                     #{w\ 1620}#
                                     #{s\ 1621}#
                                     #{mod\ 1623}#)
                                   (if (memv #{ftype\ 1650}#
                                             '(local-syntax))
                                     (values
                                       'local-syntax-form
                                       #{fval\ 1651}#
                                       #{e\ 1618}#
                                       #{w\ 1620}#
                                       #{s\ 1621}#
                                       #{mod\ 1623}#)
                                     (if (memv #{ftype\ 1650}# (quote (begin)))
                                       (values
                                         'begin-form
                                         #f
                                         #{e\ 1618}#
                                         #{w\ 1620}#
                                         #{s\ 1621}#
                                         #{mod\ 1623}#)
                                       (if (memv #{ftype\ 1650}#
                                                 '(eval-when))
                                         (values
                                           'eval-when-form
                                           #f
                                           #{e\ 1618}#
                                           #{w\ 1620}#
                                           #{s\ 1621}#
                                           #{mod\ 1623}#)
                                         (if (memv #{ftype\ 1650}#
                                                   '(define))
                                           ((lambda (#{tmp\ 1676}#)
                                              ((lambda (#{tmp\ 1677}#)
                                                 (if (if #{tmp\ 1677}#
                                                       (apply (lambda (#{_\ 1681}#
                                                                       #{name\ 1682}#
                                                                       #{val\ 1683}#)
                                                                (#{id?\ 246}#
                                                                  #{name\ 1682}#))
                                                              #{tmp\ 1677}#)
                                                       #f)
                                                   (apply (lambda (#{_\ 1687}#
                                                                   #{name\ 1688}#
                                                                   #{val\ 1689}#)
                                                            (values
                                                              'define-form
                                                              #{name\ 1688}#
                                                              #{val\ 1689}#
                                                              #{w\ 1620}#
                                                              #{s\ 1621}#
                                                              #{mod\ 1623}#))
                                                          #{tmp\ 1677}#)
                                                   ((lambda (#{tmp\ 1690}#)
                                                      (if (if #{tmp\ 1690}#
                                                            (apply (lambda (#{_\ 1696}#
                                                                            #{name\ 1697}#
                                                                            #{args\ 1698}#
                                                                            #{e1\ 1699}#
                                                                            #{e2\ 1700}#)
                                                                     (if (#{id?\ 246}#
                                                                           #{name\ 1697}#)
                                                                       (#{valid-bound-ids?\ 309}#
                                                                         (#{lambda-var-list\ 361}#
                                                                           #{args\ 1698}#))
                                                                       #f))
                                                                   #{tmp\ 1690}#)
                                                            #f)
                                                        (apply (lambda (#{_\ 1708}#
                                                                        #{name\ 1709}#
                                                                        #{args\ 1710}#
                                                                        #{e1\ 1711}#
                                                                        #{e2\ 1712}#)
                                                                 (values
                                                                   'define-form
                                                                   (#{wrap\ 315}#
                                                                     #{name\ 1709}#
                                                                     #{w\ 1620}#
                                                                     #{mod\ 1623}#)
                                                                   (#{decorate-source\ 164}#
                                                                     (cons '#(syntax-object
                                                                              lambda
                                                                              ((top)
                                                                               #(ribcage
                                                                                 #(_
                                                                                   name
                                                                                   args
                                                                                   e1
                                                                                   e2)
                                                                                 #((top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top))
                                                                                 #("i1703"
                                                                                   "i1704"
                                                                                   "i1705"
                                                                                   "i1706"
                                                                                   "i1707"))
                                                                               #(ribcage
                                                                                 ()
                                                                                 ()
                                                                                 ())
                                                                               #(ribcage
                                                                                 ()
                                                                                 ()
                                                                                 ())
                                                                               #(ribcage
                                                                                 #(ftype
                                                                                   fval
                                                                                   fe
                                                                                   fw
                                                                                   fs
                                                                                   fmod)
                                                                                 #((top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top))
                                                                                 #("i1656"
                                                                                   "i1657"
                                                                                   "i1658"
                                                                                   "i1659"
                                                                                   "i1660"
                                                                                   "i1661"))
                                                                               #(ribcage
                                                                                 ()
                                                                                 ()
                                                                                 ())
                                                                               #(ribcage
                                                                                 #(first)
                                                                                 #((top))
                                                                                 #("i1648"))
                                                                               #(ribcage
                                                                                 ()
                                                                                 ()
                                                                                 ())
                                                                               #(ribcage
                                                                                 ()
                                                                                 ()
                                                                                 ())
                                                                               #(ribcage
                                                                                 ()
                                                                                 ()
                                                                                 ())
                                                                               #(ribcage
                                                                                 #(e
                                                                                   r
                                                                                   w
                                                                                   s
                                                                                   rib
                                                                                   mod
                                                                                   for-car?)
                                                                                 #((top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top))
                                                                                 #("i1625"
                                                                                   "i1626"
                                                                                   "i1627"
                                                                                   "i1628"
                                                                                   "i1629"
                                                                                   "i1630"
                                                                                   "i1631"))
                                                                               #(ribcage
                                                                                 (lambda-var-list
                                                                                   gen-var
                                                                                   strip
                                                                                   chi-lambda-case
                                                                                   lambda*-formals
                                                                                   chi-simple-lambda
                                                                                   lambda-formals
                                                                                   ellipsis?
                                                                                   chi-void
                                                                                   eval-local-transformer
                                                                                   chi-local-syntax
                                                                                   chi-body
                                                                                   chi-macro
                                                                                   chi-application
                                                                                   chi-expr
                                                                                   chi
                                                                                   chi-top
                                                                                   syntax-type
                                                                                   chi-when-list
                                                                                   chi-install-global
                                                                                   chi-top-sequence
                                                                                   chi-sequence
                                                                                   source-wrap
                                                                                   wrap
                                                                                   bound-id-member?
                                                                                   distinct-bound-ids?
                                                                                   valid-bound-ids?
                                                                                   bound-id=?
                                                                                   free-id=?
                                                                                   id-var-name
                                                                                   same-marks?
                                                                                   join-marks
                                                                                   join-wraps
                                                                                   smart-append
                                                                                   make-binding-wrap
                                                                                   extend-ribcage!
                                                                                   make-empty-ribcage
                                                                                   new-mark
                                                                                   anti-mark
                                                                                   the-anti-mark
                                                                                   top-marked?
                                                                                   top-wrap
                                                                                   empty-wrap
                                                                                   set-ribcage-labels!
                                                                                   set-ribcage-marks!
                                                                                   set-ribcage-symnames!
                                                                                   ribcage-labels
                                                                                   ribcage-marks
                                                                                   ribcage-symnames
                                                                                   ribcage?
                                                                                   make-ribcage
                                                                                   gen-labels
                                                                                   gen-label
                                                                                   make-rename
                                                                                   rename-marks
                                                                                   rename-new
                                                                                   rename-old
                                                                                   subst-rename?
                                                                                   wrap-subst
                                                                                   wrap-marks
                                                                                   make-wrap
                                                                                   id-sym-name&marks
                                                                                   id-sym-name
                                                                                   id?
                                                                                   nonsymbol-id?
                                                                                   global-extend
                                                                                   lookup
                                                                                   macros-only-env
                                                                                   extend-var-env
                                                                                   extend-env
                                                                                   null-env
                                                                                   binding-value
                                                                                   binding-type
                                                                                   make-binding
                                                                                   arg-check
                                                                                   source-annotation
                                                                                   no-source
                                                                                   set-syntax-object-module!
                                                                                   set-syntax-object-wrap!
                                                                                   set-syntax-object-expression!
                                                                                   syntax-object-module
                                                                                   syntax-object-wrap
                                                                                   syntax-object-expression
                                                                                   syntax-object?
                                                                                   make-syntax-object
                                                                                   build-lexical-var
                                                                                   build-letrec
                                                                                   build-named-let
                                                                                   build-let
                                                                                   build-sequence
                                                                                   build-data
                                                                                   build-primref
                                                                                   build-lambda-case
                                                                                   build-case-lambda
                                                                                   build-simple-lambda
                                                                                   build-global-definition
                                                                                   maybe-name-value!
                                                                                   build-global-assignment
                                                                                   build-global-reference
                                                                                   analyze-variable
                                                                                   build-lexical-assignment
                                                                                   build-lexical-reference
                                                                                   build-dynlet
                                                                                   build-conditional
                                                                                   build-application
                                                                                   build-void
                                                                                   decorate-source
                                                                                   get-global-definition-hook
                                                                                   put-global-definition-hook
                                                                                   gensym-hook
                                                                                   local-eval-hook
                                                                                   top-level-eval-hook
                                                                                   fx<
                                                                                   fx=
                                                                                   fx-
                                                                                   fx+
                                                                                   *mode*
                                                                                   noexpand)
                                                                                 ((top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top))
                                                                                 ("i360"
                                                                                  "i358"
                                                                                  "i356"
                                                                                  "i354"
                                                                                  "i352"
                                                                                  "i350"
                                                                                  "i348"
                                                                                  "i346"
                                                                                  "i344"
                                                                                  "i342"
                                                                                  "i340"
                                                                                  "i338"
                                                                                  "i336"
                                                                                  "i334"
                                                                                  "i332"
                                                                                  "i330"
                                                                                  "i328"
                                                                                  "i326"
                                                                                  "i324"
                                                                                  "i322"
                                                                                  "i320"
                                                                                  "i318"
                                                                                  "i316"
                                                                                  "i314"
                                                                                  "i312"
                                                                                  "i310"
                                                                                  "i308"
                                                                                  "i306"
                                                                                  "i304"
                                                                                  "i302"
                                                                                  "i300"
                                                                                  "i298"
                                                                                  "i296"
                                                                                  "i294"
                                                                                  "i292"
                                                                                  "i290"
                                                                                  "i289"
                                                                                  "i288"
                                                                                  "i286"
                                                                                  "i285"
                                                                                  "i284"
                                                                                  "i283"
                                                                                  "i282"
                                                                                  "i280"
                                                                                  "i278"
                                                                                  "i276"
                                                                                  "i274"
                                                                                  "i272"
                                                                                  "i270"
                                                                                  "i268"
                                                                                  "i266"
                                                                                  "i263"
                                                                                  "i261"
                                                                                  "i260"
                                                                                  "i259"
                                                                                  "i258"
                                                                                  "i257"
                                                                                  "i256"
                                                                                  "i254"
                                                                                  "i252"
                                                                                  "i250"
                                                                                  "i248"
                                                                                  "i247"
                                                                                  "i245"
                                                                                  "i243"
                                                                                  "i241"
                                                                                  "i239"
                                                                                  "i237"
                                                                                  "i235"
                                                                                  "i233"
                                                                                  "i232"
                                                                                  "i230"
                                                                                  "i228"
                                                                                  "i227"
                                                                                  "i226"
                                                                                  "i224"
                                                                                  "i223"
                                                                                  "i221"
                                                                                  "i219"
                                                                                  "i217"
                                                                                  "i215"
                                                                                  "i213"
                                                                                  "i211"
                                                                                  "i209"
                                                                                  "i207"
                                                                                  "i205"
                                                                                  "i203"
                                                                                  "i201"
                                                                                  "i199"
                                                                                  "i197"
                                                                                  "i195"
                                                                                  "i193"
                                                                                  "i191"
                                                                                  "i189"
                                                                                  "i187"
                                                                                  "i185"
                                                                                  "i183"
                                                                                  "i181"
                                                                                  "i179"
                                                                                  "i177"
                                                                                  "i175"
                                                                                  "i173"
                                                                                  "i171"
                                                                                  "i169"
                                                                                  "i167"
                                                                                  "i165"
                                                                                  "i163"
                                                                                  "i161"
                                                                                  "i159"
                                                                                  "i158"
                                                                                  "i156"
                                                                                  "i154"
                                                                                  "i152"
                                                                                  "i150"
                                                                                  "i148"
                                                                                  "i146"
                                                                                  "i144"
                                                                                  "i142"))
                                                                               #(ribcage
                                                                                 (define-structure
                                                                                   and-map*)
                                                                                 ((top)
                                                                                  (top))
                                                                                 ("i45"
                                                                                  "i43")))
                                                                              (hygiene
                                                                                guile))
                                                                           (#{wrap\ 315}#
                                                                             (cons #{args\ 1710}#
                                                                                   (cons #{e1\ 1711}#
                                                                                         #{e2\ 1712}#))
                                                                             #{w\ 1620}#
                                                                             #{mod\ 1623}#))
                                                                     #{s\ 1621}#)
                                                                   '(())
                                                                   #{s\ 1621}#
                                                                   #{mod\ 1623}#))
                                                               #{tmp\ 1690}#)
                                                        ((lambda (#{tmp\ 1715}#)
                                                           (if (if #{tmp\ 1715}#
                                                                 (apply (lambda (#{_\ 1718}#
                                                                                 #{name\ 1719}#)
                                                                          (#{id?\ 246}#
                                                                            #{name\ 1719}#))
                                                                        #{tmp\ 1715}#)
                                                                 #f)
                                                             (apply (lambda (#{_\ 1722}#
                                                                             #{name\ 1723}#)
                                                                      (values
                                                                        'define-form
                                                                        (#{wrap\ 315}#
                                                                          #{name\ 1723}#
                                                                          #{w\ 1620}#
                                                                          #{mod\ 1623}#)
                                                                        '(#(syntax-object
                                                                            if
                                                                            ((top)
                                                                             #(ribcage
                                                                               #(_
                                                                                 name)
                                                                               #((top)
                                                                                 (top))
                                                                               #("i1720"
                                                                                 "i1721"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(ftype
                                                                                 fval
                                                                                 fe
                                                                                 fw
                                                                                 fs
                                                                                 fmod)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i1656"
                                                                                 "i1657"
                                                                                 "i1658"
                                                                                 "i1659"
                                                                                 "i1660"
                                                                                 "i1661"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(first)
                                                                               #((top))
                                                                               #("i1648"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(e
                                                                                 r
                                                                                 w
                                                                                 s
                                                                                 rib
                                                                                 mod
                                                                                 for-car?)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i1625"
                                                                                 "i1626"
                                                                                 "i1627"
                                                                                 "i1628"
                                                                                 "i1629"
                                                                                 "i1630"
                                                                                 "i1631"))
                                                                             #(ribcage
                                                                               (lambda-var-list
                                                                                 gen-var
                                                                                 strip
                                                                                 chi-lambda-case
                                                                                 lambda*-formals
                                                                                 chi-simple-lambda
                                                                                 lambda-formals
                                                                                 ellipsis?
                                                                                 chi-void
                                                                                 eval-local-transformer
                                                                                 chi-local-syntax
                                                                                 chi-body
                                                                                 chi-macro
                                                                                 chi-application
                                                                                 chi-expr
                                                                                 chi
                                                                                 chi-top
                                                                                 syntax-type
                                                                                 chi-when-list
                                                                                 chi-install-global
                                                                                 chi-top-sequence
                                                                                 chi-sequence
                                                                                 source-wrap
                                                                                 wrap
                                                                                 bound-id-member?
                                                                                 distinct-bound-ids?
                                                                                 valid-bound-ids?
                                                                                 bound-id=?
                                                                                 free-id=?
                                                                                 id-var-name
                                                                                 same-marks?
                                                                                 join-marks
                                                                                 join-wraps
                                                                                 smart-append
                                                                                 make-binding-wrap
                                                                                 extend-ribcage!
                                                                                 make-empty-ribcage
                                                                                 new-mark
                                                                                 anti-mark
                                                                                 the-anti-mark
                                                                                 top-marked?
                                                                                 top-wrap
                                                                                 empty-wrap
                                                                                 set-ribcage-labels!
                                                                                 set-ribcage-marks!
                                                                                 set-ribcage-symnames!
                                                                                 ribcage-labels
                                                                                 ribcage-marks
                                                                                 ribcage-symnames
                                                                                 ribcage?
                                                                                 make-ribcage
                                                                                 gen-labels
                                                                                 gen-label
                                                                                 make-rename
                                                                                 rename-marks
                                                                                 rename-new
                                                                                 rename-old
                                                                                 subst-rename?
                                                                                 wrap-subst
                                                                                 wrap-marks
                                                                                 make-wrap
                                                                                 id-sym-name&marks
                                                                                 id-sym-name
                                                                                 id?
                                                                                 nonsymbol-id?
                                                                                 global-extend
                                                                                 lookup
                                                                                 macros-only-env
                                                                                 extend-var-env
                                                                                 extend-env
                                                                                 null-env
                                                                                 binding-value
                                                                                 binding-type
                                                                                 make-binding
                                                                                 arg-check
                                                                                 source-annotation
                                                                                 no-source
                                                                                 set-syntax-object-module!
                                                                                 set-syntax-object-wrap!
                                                                                 set-syntax-object-expression!
                                                                                 syntax-object-module
                                                                                 syntax-object-wrap
                                                                                 syntax-object-expression
                                                                                 syntax-object?
                                                                                 make-syntax-object
                                                                                 build-lexical-var
                                                                                 build-letrec
                                                                                 build-named-let
                                                                                 build-let
                                                                                 build-sequence
                                                                                 build-data
                                                                                 build-primref
                                                                                 build-lambda-case
                                                                                 build-case-lambda
                                                                                 build-simple-lambda
                                                                                 build-global-definition
                                                                                 maybe-name-value!
                                                                                 build-global-assignment
                                                                                 build-global-reference
                                                                                 analyze-variable
                                                                                 build-lexical-assignment
                                                                                 build-lexical-reference
                                                                                 build-dynlet
                                                                                 build-conditional
                                                                                 build-application
                                                                                 build-void
                                                                                 decorate-source
                                                                                 get-global-definition-hook
                                                                                 put-global-definition-hook
                                                                                 gensym-hook
                                                                                 local-eval-hook
                                                                                 top-level-eval-hook
                                                                                 fx<
                                                                                 fx=
                                                                                 fx-
                                                                                 fx+
                                                                                 *mode*
                                                                                 noexpand)
                                                                               ((top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top))
                                                                               ("i360"
                                                                                "i358"
                                                                                "i356"
                                                                                "i354"
                                                                                "i352"
                                                                                "i350"
                                                                                "i348"
                                                                                "i346"
                                                                                "i344"
                                                                                "i342"
                                                                                "i340"
                                                                                "i338"
                                                                                "i336"
                                                                                "i334"
                                                                                "i332"
                                                                                "i330"
                                                                                "i328"
                                                                                "i326"
                                                                                "i324"
                                                                                "i322"
                                                                                "i320"
                                                                                "i318"
                                                                                "i316"
                                                                                "i314"
                                                                                "i312"
                                                                                "i310"
                                                                                "i308"
                                                                                "i306"
                                                                                "i304"
                                                                                "i302"
                                                                                "i300"
                                                                                "i298"
                                                                                "i296"
                                                                                "i294"
                                                                                "i292"
                                                                                "i290"
                                                                                "i289"
                                                                                "i288"
                                                                                "i286"
                                                                                "i285"
                                                                                "i284"
                                                                                "i283"
                                                                                "i282"
                                                                                "i280"
                                                                                "i278"
                                                                                "i276"
                                                                                "i274"
                                                                                "i272"
                                                                                "i270"
                                                                                "i268"
                                                                                "i266"
                                                                                "i263"
                                                                                "i261"
                                                                                "i260"
                                                                                "i259"
                                                                                "i258"
                                                                                "i257"
                                                                                "i256"
                                                                                "i254"
                                                                                "i252"
                                                                                "i250"
                                                                                "i248"
                                                                                "i247"
                                                                                "i245"
                                                                                "i243"
                                                                                "i241"
                                                                                "i239"
                                                                                "i237"
                                                                                "i235"
                                                                                "i233"
                                                                                "i232"
                                                                                "i230"
                                                                                "i228"
                                                                                "i227"
                                                                                "i226"
                                                                                "i224"
                                                                                "i223"
                                                                                "i221"
                                                                                "i219"
                                                                                "i217"
                                                                                "i215"
                                                                                "i213"
                                                                                "i211"
                                                                                "i209"
                                                                                "i207"
                                                                                "i205"
                                                                                "i203"
                                                                                "i201"
                                                                                "i199"
                                                                                "i197"
                                                                                "i195"
                                                                                "i193"
                                                                                "i191"
                                                                                "i189"
                                                                                "i187"
                                                                                "i185"
                                                                                "i183"
                                                                                "i181"
                                                                                "i179"
                                                                                "i177"
                                                                                "i175"
                                                                                "i173"
                                                                                "i171"
                                                                                "i169"
                                                                                "i167"
                                                                                "i165"
                                                                                "i163"
                                                                                "i161"
                                                                                "i159"
                                                                                "i158"
                                                                                "i156"
                                                                                "i154"
                                                                                "i152"
                                                                                "i150"
                                                                                "i148"
                                                                                "i146"
                                                                                "i144"
                                                                                "i142"))
                                                                             #(ribcage
                                                                               (define-structure
                                                                                 and-map*)
                                                                               ((top)
                                                                                (top))
                                                                               ("i45"
                                                                                "i43")))
                                                                            (hygiene
                                                                              guile))
                                                                          #(syntax-object
                                                                            #f
                                                                            ((top)
                                                                             #(ribcage
                                                                               #(_
                                                                                 name)
                                                                               #((top)
                                                                                 (top))
                                                                               #("i1720"
                                                                                 "i1721"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(ftype
                                                                                 fval
                                                                                 fe
                                                                                 fw
                                                                                 fs
                                                                                 fmod)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i1656"
                                                                                 "i1657"
                                                                                 "i1658"
                                                                                 "i1659"
                                                                                 "i1660"
                                                                                 "i1661"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(first)
                                                                               #((top))
                                                                               #("i1648"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(e
                                                                                 r
                                                                                 w
                                                                                 s
                                                                                 rib
                                                                                 mod
                                                                                 for-car?)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i1625"
                                                                                 "i1626"
                                                                                 "i1627"
                                                                                 "i1628"
                                                                                 "i1629"
                                                                                 "i1630"
                                                                                 "i1631"))
                                                                             #(ribcage
                                                                               (lambda-var-list
                                                                                 gen-var
                                                                                 strip
                                                                                 chi-lambda-case
                                                                                 lambda*-formals
                                                                                 chi-simple-lambda
                                                                                 lambda-formals
                                                                                 ellipsis?
                                                                                 chi-void
                                                                                 eval-local-transformer
                                                                                 chi-local-syntax
                                                                                 chi-body
                                                                                 chi-macro
                                                                                 chi-application
                                                                                 chi-expr
                                                                                 chi
                                                                                 chi-top
                                                                                 syntax-type
                                                                                 chi-when-list
                                                                                 chi-install-global
                                                                                 chi-top-sequence
                                                                                 chi-sequence
                                                                                 source-wrap
                                                                                 wrap
                                                                                 bound-id-member?
                                                                                 distinct-bound-ids?
                                                                                 valid-bound-ids?
                                                                                 bound-id=?
                                                                                 free-id=?
                                                                                 id-var-name
                                                                                 same-marks?
                                                                                 join-marks
                                                                                 join-wraps
                                                                                 smart-append
                                                                                 make-binding-wrap
                                                                                 extend-ribcage!
                                                                                 make-empty-ribcage
                                                                                 new-mark
                                                                                 anti-mark
                                                                                 the-anti-mark
                                                                                 top-marked?
                                                                                 top-wrap
                                                                                 empty-wrap
                                                                                 set-ribcage-labels!
                                                                                 set-ribcage-marks!
                                                                                 set-ribcage-symnames!
                                                                                 ribcage-labels
                                                                                 ribcage-marks
                                                                                 ribcage-symnames
                                                                                 ribcage?
                                                                                 make-ribcage
                                                                                 gen-labels
                                                                                 gen-label
                                                                                 make-rename
                                                                                 rename-marks
                                                                                 rename-new
                                                                                 rename-old
                                                                                 subst-rename?
                                                                                 wrap-subst
                                                                                 wrap-marks
                                                                                 make-wrap
                                                                                 id-sym-name&marks
                                                                                 id-sym-name
                                                                                 id?
                                                                                 nonsymbol-id?
                                                                                 global-extend
                                                                                 lookup
                                                                                 macros-only-env
                                                                                 extend-var-env
                                                                                 extend-env
                                                                                 null-env
                                                                                 binding-value
                                                                                 binding-type
                                                                                 make-binding
                                                                                 arg-check
                                                                                 source-annotation
                                                                                 no-source
                                                                                 set-syntax-object-module!
                                                                                 set-syntax-object-wrap!
                                                                                 set-syntax-object-expression!
                                                                                 syntax-object-module
                                                                                 syntax-object-wrap
                                                                                 syntax-object-expression
                                                                                 syntax-object?
                                                                                 make-syntax-object
                                                                                 build-lexical-var
                                                                                 build-letrec
                                                                                 build-named-let
                                                                                 build-let
                                                                                 build-sequence
                                                                                 build-data
                                                                                 build-primref
                                                                                 build-lambda-case
                                                                                 build-case-lambda
                                                                                 build-simple-lambda
                                                                                 build-global-definition
                                                                                 maybe-name-value!
                                                                                 build-global-assignment
                                                                                 build-global-reference
                                                                                 analyze-variable
                                                                                 build-lexical-assignment
                                                                                 build-lexical-reference
                                                                                 build-dynlet
                                                                                 build-conditional
                                                                                 build-application
                                                                                 build-void
                                                                                 decorate-source
                                                                                 get-global-definition-hook
                                                                                 put-global-definition-hook
                                                                                 gensym-hook
                                                                                 local-eval-hook
                                                                                 top-level-eval-hook
                                                                                 fx<
                                                                                 fx=
                                                                                 fx-
                                                                                 fx+
                                                                                 *mode*
                                                                                 noexpand)
                                                                               ((top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top))
                                                                               ("i360"
                                                                                "i358"
                                                                                "i356"
                                                                                "i354"
                                                                                "i352"
                                                                                "i350"
                                                                                "i348"
                                                                                "i346"
                                                                                "i344"
                                                                                "i342"
                                                                                "i340"
                                                                                "i338"
                                                                                "i336"
                                                                                "i334"
                                                                                "i332"
                                                                                "i330"
                                                                                "i328"
                                                                                "i326"
                                                                                "i324"
                                                                                "i322"
                                                                                "i320"
                                                                                "i318"
                                                                                "i316"
                                                                                "i314"
                                                                                "i312"
                                                                                "i310"
                                                                                "i308"
                                                                                "i306"
                                                                                "i304"
                                                                                "i302"
                                                                                "i300"
                                                                                "i298"
                                                                                "i296"
                                                                                "i294"
                                                                                "i292"
                                                                                "i290"
                                                                                "i289"
                                                                                "i288"
                                                                                "i286"
                                                                                "i285"
                                                                                "i284"
                                                                                "i283"
                                                                                "i282"
                                                                                "i280"
                                                                                "i278"
                                                                                "i276"
                                                                                "i274"
                                                                                "i272"
                                                                                "i270"
                                                                                "i268"
                                                                                "i266"
                                                                                "i263"
                                                                                "i261"
                                                                                "i260"
                                                                                "i259"
                                                                                "i258"
                                                                                "i257"
                                                                                "i256"
                                                                                "i254"
                                                                                "i252"
                                                                                "i250"
                                                                                "i248"
                                                                                "i247"
                                                                                "i245"
                                                                                "i243"
                                                                                "i241"
                                                                                "i239"
                                                                                "i237"
                                                                                "i235"
                                                                                "i233"
                                                                                "i232"
                                                                                "i230"
                                                                                "i228"
                                                                                "i227"
                                                                                "i226"
                                                                                "i224"
                                                                                "i223"
                                                                                "i221"
                                                                                "i219"
                                                                                "i217"
                                                                                "i215"
                                                                                "i213"
                                                                                "i211"
                                                                                "i209"
                                                                                "i207"
                                                                                "i205"
                                                                                "i203"
                                                                                "i201"
                                                                                "i199"
                                                                                "i197"
                                                                                "i195"
                                                                                "i193"
                                                                                "i191"
                                                                                "i189"
                                                                                "i187"
                                                                                "i185"
                                                                                "i183"
                                                                                "i181"
                                                                                "i179"
                                                                                "i177"
                                                                                "i175"
                                                                                "i173"
                                                                                "i171"
                                                                                "i169"
                                                                                "i167"
                                                                                "i165"
                                                                                "i163"
                                                                                "i161"
                                                                                "i159"
                                                                                "i158"
                                                                                "i156"
                                                                                "i154"
                                                                                "i152"
                                                                                "i150"
                                                                                "i148"
                                                                                "i146"
                                                                                "i144"
                                                                                "i142"))
                                                                             #(ribcage
                                                                               (define-structure
                                                                                 and-map*)
                                                                               ((top)
                                                                                (top))
                                                                               ("i45"
                                                                                "i43")))
                                                                            (hygiene
                                                                              guile))
                                                                          #(syntax-object
                                                                            #f
                                                                            ((top)
                                                                             #(ribcage
                                                                               #(_
                                                                                 name)
                                                                               #((top)
                                                                                 (top))
                                                                               #("i1720"
                                                                                 "i1721"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(ftype
                                                                                 fval
                                                                                 fe
                                                                                 fw
                                                                                 fs
                                                                                 fmod)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i1656"
                                                                                 "i1657"
                                                                                 "i1658"
                                                                                 "i1659"
                                                                                 "i1660"
                                                                                 "i1661"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(first)
                                                                               #((top))
                                                                               #("i1648"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(e
                                                                                 r
                                                                                 w
                                                                                 s
                                                                                 rib
                                                                                 mod
                                                                                 for-car?)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i1625"
                                                                                 "i1626"
                                                                                 "i1627"
                                                                                 "i1628"
                                                                                 "i1629"
                                                                                 "i1630"
                                                                                 "i1631"))
                                                                             #(ribcage
                                                                               (lambda-var-list
                                                                                 gen-var
                                                                                 strip
                                                                                 chi-lambda-case
                                                                                 lambda*-formals
                                                                                 chi-simple-lambda
                                                                                 lambda-formals
                                                                                 ellipsis?
                                                                                 chi-void
                                                                                 eval-local-transformer
                                                                                 chi-local-syntax
                                                                                 chi-body
                                                                                 chi-macro
                                                                                 chi-application
                                                                                 chi-expr
                                                                                 chi
                                                                                 chi-top
                                                                                 syntax-type
                                                                                 chi-when-list
                                                                                 chi-install-global
                                                                                 chi-top-sequence
                                                                                 chi-sequence
                                                                                 source-wrap
                                                                                 wrap
                                                                                 bound-id-member?
                                                                                 distinct-bound-ids?
                                                                                 valid-bound-ids?
                                                                                 bound-id=?
                                                                                 free-id=?
                                                                                 id-var-name
                                                                                 same-marks?
                                                                                 join-marks
                                                                                 join-wraps
                                                                                 smart-append
                                                                                 make-binding-wrap
                                                                                 extend-ribcage!
                                                                                 make-empty-ribcage
                                                                                 new-mark
                                                                                 anti-mark
                                                                                 the-anti-mark
                                                                                 top-marked?
                                                                                 top-wrap
                                                                                 empty-wrap
                                                                                 set-ribcage-labels!
                                                                                 set-ribcage-marks!
                                                                                 set-ribcage-symnames!
                                                                                 ribcage-labels
                                                                                 ribcage-marks
                                                                                 ribcage-symnames
                                                                                 ribcage?
                                                                                 make-ribcage
                                                                                 gen-labels
                                                                                 gen-label
                                                                                 make-rename
                                                                                 rename-marks
                                                                                 rename-new
                                                                                 rename-old
                                                                                 subst-rename?
                                                                                 wrap-subst
                                                                                 wrap-marks
                                                                                 make-wrap
                                                                                 id-sym-name&marks
                                                                                 id-sym-name
                                                                                 id?
                                                                                 nonsymbol-id?
                                                                                 global-extend
                                                                                 lookup
                                                                                 macros-only-env
                                                                                 extend-var-env
                                                                                 extend-env
                                                                                 null-env
                                                                                 binding-value
                                                                                 binding-type
                                                                                 make-binding
                                                                                 arg-check
                                                                                 source-annotation
                                                                                 no-source
                                                                                 set-syntax-object-module!
                                                                                 set-syntax-object-wrap!
                                                                                 set-syntax-object-expression!
                                                                                 syntax-object-module
                                                                                 syntax-object-wrap
                                                                                 syntax-object-expression
                                                                                 syntax-object?
                                                                                 make-syntax-object
                                                                                 build-lexical-var
                                                                                 build-letrec
                                                                                 build-named-let
                                                                                 build-let
                                                                                 build-sequence
                                                                                 build-data
                                                                                 build-primref
                                                                                 build-lambda-case
                                                                                 build-case-lambda
                                                                                 build-simple-lambda
                                                                                 build-global-definition
                                                                                 maybe-name-value!
                                                                                 build-global-assignment
                                                                                 build-global-reference
                                                                                 analyze-variable
                                                                                 build-lexical-assignment
                                                                                 build-lexical-reference
                                                                                 build-dynlet
                                                                                 build-conditional
                                                                                 build-application
                                                                                 build-void
                                                                                 decorate-source
                                                                                 get-global-definition-hook
                                                                                 put-global-definition-hook
                                                                                 gensym-hook
                                                                                 local-eval-hook
                                                                                 top-level-eval-hook
                                                                                 fx<
                                                                                 fx=
                                                                                 fx-
                                                                                 fx+
                                                                                 *mode*
                                                                                 noexpand)
                                                                               ((top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top))
                                                                               ("i360"
                                                                                "i358"
                                                                                "i356"
                                                                                "i354"
                                                                                "i352"
                                                                                "i350"
                                                                                "i348"
                                                                                "i346"
                                                                                "i344"
                                                                                "i342"
                                                                                "i340"
                                                                                "i338"
                                                                                "i336"
                                                                                "i334"
                                                                                "i332"
                                                                                "i330"
                                                                                "i328"
                                                                                "i326"
                                                                                "i324"
                                                                                "i322"
                                                                                "i320"
                                                                                "i318"
                                                                                "i316"
                                                                                "i314"
                                                                                "i312"
                                                                                "i310"
                                                                                "i308"
                                                                                "i306"
                                                                                "i304"
                                                                                "i302"
                                                                                "i300"
                                                                                "i298"
                                                                                "i296"
                                                                                "i294"
                                                                                "i292"
                                                                                "i290"
                                                                                "i289"
                                                                                "i288"
                                                                                "i286"
                                                                                "i285"
                                                                                "i284"
                                                                                "i283"
                                                                                "i282"
                                                                                "i280"
                                                                                "i278"
                                                                                "i276"
                                                                                "i274"
                                                                                "i272"
                                                                                "i270"
                                                                                "i268"
                                                                                "i266"
                                                                                "i263"
                                                                                "i261"
                                                                                "i260"
                                                                                "i259"
                                                                                "i258"
                                                                                "i257"
                                                                                "i256"
                                                                                "i254"
                                                                                "i252"
                                                                                "i250"
                                                                                "i248"
                                                                                "i247"
                                                                                "i245"
                                                                                "i243"
                                                                                "i241"
                                                                                "i239"
                                                                                "i237"
                                                                                "i235"
                                                                                "i233"
                                                                                "i232"
                                                                                "i230"
                                                                                "i228"
                                                                                "i227"
                                                                                "i226"
                                                                                "i224"
                                                                                "i223"
                                                                                "i221"
                                                                                "i219"
                                                                                "i217"
                                                                                "i215"
                                                                                "i213"
                                                                                "i211"
                                                                                "i209"
                                                                                "i207"
                                                                                "i205"
                                                                                "i203"
                                                                                "i201"
                                                                                "i199"
                                                                                "i197"
                                                                                "i195"
                                                                                "i193"
                                                                                "i191"
                                                                                "i189"
                                                                                "i187"
                                                                                "i185"
                                                                                "i183"
                                                                                "i181"
                                                                                "i179"
                                                                                "i177"
                                                                                "i175"
                                                                                "i173"
                                                                                "i171"
                                                                                "i169"
                                                                                "i167"
                                                                                "i165"
                                                                                "i163"
                                                                                "i161"
                                                                                "i159"
                                                                                "i158"
                                                                                "i156"
                                                                                "i154"
                                                                                "i152"
                                                                                "i150"
                                                                                "i148"
                                                                                "i146"
                                                                                "i144"
                                                                                "i142"))
                                                                             #(ribcage
                                                                               (define-structure
                                                                                 and-map*)
                                                                               ((top)
                                                                                (top))
                                                                               ("i45"
                                                                                "i43")))
                                                                            (hygiene
                                                                              guile)))
                                                                        '(())
                                                                        #{s\ 1621}#
                                                                        #{mod\ 1623}#))
                                                                    #{tmp\ 1715}#)
                                                             (syntax-violation
                                                               #f
                                                               "source expression failed to match any pattern"
                                                               #{tmp\ 1676}#)))
                                                         ($sc-dispatch
                                                           #{tmp\ 1676}#
                                                           '(any any)))))
                                                    ($sc-dispatch
                                                      #{tmp\ 1676}#
                                                      '(any (any . any)
                                                            any
                                                            .
                                                            each-any)))))
                                               ($sc-dispatch
                                                 #{tmp\ 1676}#
                                                 '(any any any))))
                                            #{e\ 1618}#)
                                           (if (memv #{ftype\ 1650}#
                                                     '(define-syntax))
                                             ((lambda (#{tmp\ 1726}#)
                                                ((lambda (#{tmp\ 1727}#)
                                                   (if (if #{tmp\ 1727}#
                                                         (apply (lambda (#{_\ 1731}#
                                                                         #{name\ 1732}#
                                                                         #{val\ 1733}#)
                                                                  (#{id?\ 246}#
                                                                    #{name\ 1732}#))
                                                                #{tmp\ 1727}#)
                                                         #f)
                                                     (apply (lambda (#{_\ 1737}#
                                                                     #{name\ 1738}#
                                                                     #{val\ 1739}#)
                                                              (values
                                                                'define-syntax-form
                                                                #{name\ 1738}#
                                                                #{val\ 1739}#
                                                                #{w\ 1620}#
                                                                #{s\ 1621}#
                                                                #{mod\ 1623}#))
                                                            #{tmp\ 1727}#)
                                                     (syntax-violation
                                                       #f
                                                       "source expression failed to match any pattern"
                                                       #{tmp\ 1726}#)))
                                                 ($sc-dispatch
                                                   #{tmp\ 1726}#
                                                   '(any any any))))
                                              #{e\ 1618}#)
                                             (values
                                               'call
                                               #f
                                               #{e\ 1618}#
                                               #{w\ 1620}#
                                               #{s\ 1621}#
                                               #{mod\ 1623}#))))))))))))))
                   (if (#{syntax-object?\ 210}# #{e\ 1618}#)
                     (#{syntax-type\ 327}#
                       (#{syntax-object-expression\ 212}# #{e\ 1618}#)
                       #{r\ 1619}#
                       (#{join-wraps\ 297}#
                         #{w\ 1620}#
                         (#{syntax-object-wrap\ 214}# #{e\ 1618}#))
                       #{s\ 1621}#
                       #{rib\ 1622}#
                       (let ((#{t\ 1745}#
                               (#{syntax-object-module\ 216}# #{e\ 1618}#)))
                         (if #{t\ 1745}# #{t\ 1745}# #{mod\ 1623}#))
                       #{for-car?\ 1624}#)
                     (if (self-evaluating? #{e\ 1618}#)
                       (values
                         'constant
                         #f
                         #{e\ 1618}#
                         #{w\ 1620}#
                         #{s\ 1621}#
                         #{mod\ 1623}#)
                       (values
                         'other
                         #f
                         #{e\ 1618}#
                         #{w\ 1620}#
                         #{s\ 1621}#
                         #{mod\ 1623}#)))))))
           (#{chi-when-list\ 325}#
             (lambda (#{e\ 1750}# #{when-list\ 1751}# #{w\ 1752}#)
               (letrec ((#{f\ 1759}#
                          (lambda (#{when-list\ 1760}# #{situations\ 1761}#)
                            (if (null? #{when-list\ 1760}#)
                              #{situations\ 1761}#
                              (#{f\ 1759}#
                                (cdr #{when-list\ 1760}#)
                                (cons (let ((#{x\ 1763}#
                                              (car #{when-list\ 1760}#)))
                                        (if (#{free-id=?\ 305}#
                                              #{x\ 1763}#
                                              '#(syntax-object
                                                 compile
                                                 ((top)
                                                  #(ribcage () () ())
                                                  #(ribcage () () ())
                                                  #(ribcage () () ())
                                                  #(ribcage
                                                    #(x)
                                                    #((top))
                                                    #("i1762"))
                                                  #(ribcage () () ())
                                                  #(ribcage
                                                    #(f when-list situations)
                                                    #((top) (top) (top))
                                                    #("i1756" "i1757" "i1758"))
                                                  #(ribcage () () ())
                                                  #(ribcage
                                                    #(e when-list w)
                                                    #((top) (top) (top))
                                                    #("i1753" "i1754" "i1755"))
                                                  #(ribcage
                                                    (lambda-var-list
                                                      gen-var
                                                      strip
                                                      chi-lambda-case
                                                      lambda*-formals
                                                      chi-simple-lambda
                                                      lambda-formals
                                                      ellipsis?
                                                      chi-void
                                                      eval-local-transformer
                                                      chi-local-syntax
                                                      chi-body
                                                      chi-macro
                                                      chi-application
                                                      chi-expr
                                                      chi
                                                      chi-top
                                                      syntax-type
                                                      chi-when-list
                                                      chi-install-global
                                                      chi-top-sequence
                                                      chi-sequence
                                                      source-wrap
                                                      wrap
                                                      bound-id-member?
                                                      distinct-bound-ids?
                                                      valid-bound-ids?
                                                      bound-id=?
                                                      free-id=?
                                                      id-var-name
                                                      same-marks?
                                                      join-marks
                                                      join-wraps
                                                      smart-append
                                                      make-binding-wrap
                                                      extend-ribcage!
                                                      make-empty-ribcage
                                                      new-mark
                                                      anti-mark
                                                      the-anti-mark
                                                      top-marked?
                                                      top-wrap
                                                      empty-wrap
                                                      set-ribcage-labels!
                                                      set-ribcage-marks!
                                                      set-ribcage-symnames!
                                                      ribcage-labels
                                                      ribcage-marks
                                                      ribcage-symnames
                                                      ribcage?
                                                      make-ribcage
                                                      gen-labels
                                                      gen-label
                                                      make-rename
                                                      rename-marks
                                                      rename-new
                                                      rename-old
                                                      subst-rename?
                                                      wrap-subst
                                                      wrap-marks
                                                      make-wrap
                                                      id-sym-name&marks
                                                      id-sym-name
                                                      id?
                                                      nonsymbol-id?
                                                      global-extend
                                                      lookup
                                                      macros-only-env
                                                      extend-var-env
                                                      extend-env
                                                      null-env
                                                      binding-value
                                                      binding-type
                                                      make-binding
                                                      arg-check
                                                      source-annotation
                                                      no-source
                                                      set-syntax-object-module!
                                                      set-syntax-object-wrap!
                                                      set-syntax-object-expression!
                                                      syntax-object-module
                                                      syntax-object-wrap
                                                      syntax-object-expression
                                                      syntax-object?
                                                      make-syntax-object
                                                      build-lexical-var
                                                      build-letrec
                                                      build-named-let
                                                      build-let
                                                      build-sequence
                                                      build-data
                                                      build-primref
                                                      build-lambda-case
                                                      build-case-lambda
                                                      build-simple-lambda
                                                      build-global-definition
                                                      maybe-name-value!
                                                      build-global-assignment
                                                      build-global-reference
                                                      analyze-variable
                                                      build-lexical-assignment
                                                      build-lexical-reference
                                                      build-dynlet
                                                      build-conditional
                                                      build-application
                                                      build-void
                                                      decorate-source
                                                      get-global-definition-hook
                                                      put-global-definition-hook
                                                      gensym-hook
                                                      local-eval-hook
                                                      top-level-eval-hook
                                                      fx<
                                                      fx=
                                                      fx-
                                                      fx+
                                                      *mode*
                                                      noexpand)
                                                    ((top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top))
                                                    ("i360"
                                                     "i358"
                                                     "i356"
                                                     "i354"
                                                     "i352"
                                                     "i350"
                                                     "i348"
                                                     "i346"
                                                     "i344"
                                                     "i342"
                                                     "i340"
                                                     "i338"
                                                     "i336"
                                                     "i334"
                                                     "i332"
                                                     "i330"
                                                     "i328"
                                                     "i326"
                                                     "i324"
                                                     "i322"
                                                     "i320"
                                                     "i318"
                                                     "i316"
                                                     "i314"
                                                     "i312"
                                                     "i310"
                                                     "i308"
                                                     "i306"
                                                     "i304"
                                                     "i302"
                                                     "i300"
                                                     "i298"
                                                     "i296"
                                                     "i294"
                                                     "i292"
                                                     "i290"
                                                     "i289"
                                                     "i288"
                                                     "i286"
                                                     "i285"
                                                     "i284"
                                                     "i283"
                                                     "i282"
                                                     "i280"
                                                     "i278"
                                                     "i276"
                                                     "i274"
                                                     "i272"
                                                     "i270"
                                                     "i268"
                                                     "i266"
                                                     "i263"
                                                     "i261"
                                                     "i260"
                                                     "i259"
                                                     "i258"
                                                     "i257"
                                                     "i256"
                                                     "i254"
                                                     "i252"
                                                     "i250"
                                                     "i248"
                                                     "i247"
                                                     "i245"
                                                     "i243"
                                                     "i241"
                                                     "i239"
                                                     "i237"
                                                     "i235"
                                                     "i233"
                                                     "i232"
                                                     "i230"
                                                     "i228"
                                                     "i227"
                                                     "i226"
                                                     "i224"
                                                     "i223"
                                                     "i221"
                                                     "i219"
                                                     "i217"
                                                     "i215"
                                                     "i213"
                                                     "i211"
                                                     "i209"
                                                     "i207"
                                                     "i205"
                                                     "i203"
                                                     "i201"
                                                     "i199"
                                                     "i197"
                                                     "i195"
                                                     "i193"
                                                     "i191"
                                                     "i189"
                                                     "i187"
                                                     "i185"
                                                     "i183"
                                                     "i181"
                                                     "i179"
                                                     "i177"
                                                     "i175"
                                                     "i173"
                                                     "i171"
                                                     "i169"
                                                     "i167"
                                                     "i165"
                                                     "i163"
                                                     "i161"
                                                     "i159"
                                                     "i158"
                                                     "i156"
                                                     "i154"
                                                     "i152"
                                                     "i150"
                                                     "i148"
                                                     "i146"
                                                     "i144"
                                                     "i142"))
                                                  #(ribcage
                                                    (define-structure and-map*)
                                                    ((top) (top))
                                                    ("i45" "i43")))
                                                 (hygiene guile)))
                                          'compile
                                          (if (#{free-id=?\ 305}#
                                                #{x\ 1763}#
                                                '#(syntax-object
                                                   load
                                                   ((top)
                                                    #(ribcage () () ())
                                                    #(ribcage () () ())
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(x)
                                                      #((top))
                                                      #("i1762"))
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(f when-list situations)
                                                      #((top) (top) (top))
                                                      #("i1756"
                                                        "i1757"
                                                        "i1758"))
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(e when-list w)
                                                      #((top) (top) (top))
                                                      #("i1753"
                                                        "i1754"
                                                        "i1755"))
                                                    #(ribcage
                                                      (lambda-var-list
                                                        gen-var
                                                        strip
                                                        chi-lambda-case
                                                        lambda*-formals
                                                        chi-simple-lambda
                                                        lambda-formals
                                                        ellipsis?
                                                        chi-void
                                                        eval-local-transformer
                                                        chi-local-syntax
                                                        chi-body
                                                        chi-macro
                                                        chi-application
                                                        chi-expr
                                                        chi
                                                        chi-top
                                                        syntax-type
                                                        chi-when-list
                                                        chi-install-global
                                                        chi-top-sequence
                                                        chi-sequence
                                                        source-wrap
                                                        wrap
                                                        bound-id-member?
                                                        distinct-bound-ids?
                                                        valid-bound-ids?
                                                        bound-id=?
                                                        free-id=?
                                                        id-var-name
                                                        same-marks?
                                                        join-marks
                                                        join-wraps
                                                        smart-append
                                                        make-binding-wrap
                                                        extend-ribcage!
                                                        make-empty-ribcage
                                                        new-mark
                                                        anti-mark
                                                        the-anti-mark
                                                        top-marked?
                                                        top-wrap
                                                        empty-wrap
                                                        set-ribcage-labels!
                                                        set-ribcage-marks!
                                                        set-ribcage-symnames!
                                                        ribcage-labels
                                                        ribcage-marks
                                                        ribcage-symnames
                                                        ribcage?
                                                        make-ribcage
                                                        gen-labels
                                                        gen-label
                                                        make-rename
                                                        rename-marks
                                                        rename-new
                                                        rename-old
                                                        subst-rename?
                                                        wrap-subst
                                                        wrap-marks
                                                        make-wrap
                                                        id-sym-name&marks
                                                        id-sym-name
                                                        id?
                                                        nonsymbol-id?
                                                        global-extend
                                                        lookup
                                                        macros-only-env
                                                        extend-var-env
                                                        extend-env
                                                        null-env
                                                        binding-value
                                                        binding-type
                                                        make-binding
                                                        arg-check
                                                        source-annotation
                                                        no-source
                                                        set-syntax-object-module!
                                                        set-syntax-object-wrap!
                                                        set-syntax-object-expression!
                                                        syntax-object-module
                                                        syntax-object-wrap
                                                        syntax-object-expression
                                                        syntax-object?
                                                        make-syntax-object
                                                        build-lexical-var
                                                        build-letrec
                                                        build-named-let
                                                        build-let
                                                        build-sequence
                                                        build-data
                                                        build-primref
                                                        build-lambda-case
                                                        build-case-lambda
                                                        build-simple-lambda
                                                        build-global-definition
                                                        maybe-name-value!
                                                        build-global-assignment
                                                        build-global-reference
                                                        analyze-variable
                                                        build-lexical-assignment
                                                        build-lexical-reference
                                                        build-dynlet
                                                        build-conditional
                                                        build-application
                                                        build-void
                                                        decorate-source
                                                        get-global-definition-hook
                                                        put-global-definition-hook
                                                        gensym-hook
                                                        local-eval-hook
                                                        top-level-eval-hook
                                                        fx<
                                                        fx=
                                                        fx-
                                                        fx+
                                                        *mode*
                                                        noexpand)
                                                      ((top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top))
                                                      ("i360"
                                                       "i358"
                                                       "i356"
                                                       "i354"
                                                       "i352"
                                                       "i350"
                                                       "i348"
                                                       "i346"
                                                       "i344"
                                                       "i342"
                                                       "i340"
                                                       "i338"
                                                       "i336"
                                                       "i334"
                                                       "i332"
                                                       "i330"
                                                       "i328"
                                                       "i326"
                                                       "i324"
                                                       "i322"
                                                       "i320"
                                                       "i318"
                                                       "i316"
                                                       "i314"
                                                       "i312"
                                                       "i310"
                                                       "i308"
                                                       "i306"
                                                       "i304"
                                                       "i302"
                                                       "i300"
                                                       "i298"
                                                       "i296"
                                                       "i294"
                                                       "i292"
                                                       "i290"
                                                       "i289"
                                                       "i288"
                                                       "i286"
                                                       "i285"
                                                       "i284"
                                                       "i283"
                                                       "i282"
                                                       "i280"
                                                       "i278"
                                                       "i276"
                                                       "i274"
                                                       "i272"
                                                       "i270"
                                                       "i268"
                                                       "i266"
                                                       "i263"
                                                       "i261"
                                                       "i260"
                                                       "i259"
                                                       "i258"
                                                       "i257"
                                                       "i256"
                                                       "i254"
                                                       "i252"
                                                       "i250"
                                                       "i248"
                                                       "i247"
                                                       "i245"
                                                       "i243"
                                                       "i241"
                                                       "i239"
                                                       "i237"
                                                       "i235"
                                                       "i233"
                                                       "i232"
                                                       "i230"
                                                       "i228"
                                                       "i227"
                                                       "i226"
                                                       "i224"
                                                       "i223"
                                                       "i221"
                                                       "i219"
                                                       "i217"
                                                       "i215"
                                                       "i213"
                                                       "i211"
                                                       "i209"
                                                       "i207"
                                                       "i205"
                                                       "i203"
                                                       "i201"
                                                       "i199"
                                                       "i197"
                                                       "i195"
                                                       "i193"
                                                       "i191"
                                                       "i189"
                                                       "i187"
                                                       "i185"
                                                       "i183"
                                                       "i181"
                                                       "i179"
                                                       "i177"
                                                       "i175"
                                                       "i173"
                                                       "i171"
                                                       "i169"
                                                       "i167"
                                                       "i165"
                                                       "i163"
                                                       "i161"
                                                       "i159"
                                                       "i158"
                                                       "i156"
                                                       "i154"
                                                       "i152"
                                                       "i150"
                                                       "i148"
                                                       "i146"
                                                       "i144"
                                                       "i142"))
                                                    #(ribcage
                                                      (define-structure
                                                        and-map*)
                                                      ((top) (top))
                                                      ("i45" "i43")))
                                                   (hygiene guile)))
                                            'load
                                            (if (#{free-id=?\ 305}#
                                                  #{x\ 1763}#
                                                  '#(syntax-object
                                                     eval
                                                     ((top)
                                                      #(ribcage () () ())
                                                      #(ribcage () () ())
                                                      #(ribcage () () ())
                                                      #(ribcage
                                                        #(x)
                                                        #((top))
                                                        #("i1762"))
                                                      #(ribcage () () ())
                                                      #(ribcage
                                                        #(f
                                                          when-list
                                                          situations)
                                                        #((top) (top) (top))
                                                        #("i1756"
                                                          "i1757"
                                                          "i1758"))
                                                      #(ribcage () () ())
                                                      #(ribcage
                                                        #(e when-list w)
                                                        #((top) (top) (top))
                                                        #("i1753"
                                                          "i1754"
                                                          "i1755"))
                                                      #(ribcage
                                                        (lambda-var-list
                                                          gen-var
                                                          strip
                                                          chi-lambda-case
                                                          lambda*-formals
                                                          chi-simple-lambda
                                                          lambda-formals
                                                          ellipsis?
                                                          chi-void
                                                          eval-local-transformer
                                                          chi-local-syntax
                                                          chi-body
                                                          chi-macro
                                                          chi-application
                                                          chi-expr
                                                          chi
                                                          chi-top
                                                          syntax-type
                                                          chi-when-list
                                                          chi-install-global
                                                          chi-top-sequence
                                                          chi-sequence
                                                          source-wrap
                                                          wrap
                                                          bound-id-member?
                                                          distinct-bound-ids?
                                                          valid-bound-ids?
                                                          bound-id=?
                                                          free-id=?
                                                          id-var-name
                                                          same-marks?
                                                          join-marks
                                                          join-wraps
                                                          smart-append
                                                          make-binding-wrap
                                                          extend-ribcage!
                                                          make-empty-ribcage
                                                          new-mark
                                                          anti-mark
                                                          the-anti-mark
                                                          top-marked?
                                                          top-wrap
                                                          empty-wrap
                                                          set-ribcage-labels!
                                                          set-ribcage-marks!
                                                          set-ribcage-symnames!
                                                          ribcage-labels
                                                          ribcage-marks
                                                          ribcage-symnames
                                                          ribcage?
                                                          make-ribcage
                                                          gen-labels
                                                          gen-label
                                                          make-rename
                                                          rename-marks
                                                          rename-new
                                                          rename-old
                                                          subst-rename?
                                                          wrap-subst
                                                          wrap-marks
                                                          make-wrap
                                                          id-sym-name&marks
                                                          id-sym-name
                                                          id?
                                                          nonsymbol-id?
                                                          global-extend
                                                          lookup
                                                          macros-only-env
                                                          extend-var-env
                                                          extend-env
                                                          null-env
                                                          binding-value
                                                          binding-type
                                                          make-binding
                                                          arg-check
                                                          source-annotation
                                                          no-source
                                                          set-syntax-object-module!
                                                          set-syntax-object-wrap!
                                                          set-syntax-object-expression!
                                                          syntax-object-module
                                                          syntax-object-wrap
                                                          syntax-object-expression
                                                          syntax-object?
                                                          make-syntax-object
                                                          build-lexical-var
                                                          build-letrec
                                                          build-named-let
                                                          build-let
                                                          build-sequence
                                                          build-data
                                                          build-primref
                                                          build-lambda-case
                                                          build-case-lambda
                                                          build-simple-lambda
                                                          build-global-definition
                                                          maybe-name-value!
                                                          build-global-assignment
                                                          build-global-reference
                                                          analyze-variable
                                                          build-lexical-assignment
                                                          build-lexical-reference
                                                          build-dynlet
                                                          build-conditional
                                                          build-application
                                                          build-void
                                                          decorate-source
                                                          get-global-definition-hook
                                                          put-global-definition-hook
                                                          gensym-hook
                                                          local-eval-hook
                                                          top-level-eval-hook
                                                          fx<
                                                          fx=
                                                          fx-
                                                          fx+
                                                          *mode*
                                                          noexpand)
                                                        ((top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top))
                                                        ("i360"
                                                         "i358"
                                                         "i356"
                                                         "i354"
                                                         "i352"
                                                         "i350"
                                                         "i348"
                                                         "i346"
                                                         "i344"
                                                         "i342"
                                                         "i340"
                                                         "i338"
                                                         "i336"
                                                         "i334"
                                                         "i332"
                                                         "i330"
                                                         "i328"
                                                         "i326"
                                                         "i324"
                                                         "i322"
                                                         "i320"
                                                         "i318"
                                                         "i316"
                                                         "i314"
                                                         "i312"
                                                         "i310"
                                                         "i308"
                                                         "i306"
                                                         "i304"
                                                         "i302"
                                                         "i300"
                                                         "i298"
                                                         "i296"
                                                         "i294"
                                                         "i292"
                                                         "i290"
                                                         "i289"
                                                         "i288"
                                                         "i286"
                                                         "i285"
                                                         "i284"
                                                         "i283"
                                                         "i282"
                                                         "i280"
                                                         "i278"
                                                         "i276"
                                                         "i274"
                                                         "i272"
                                                         "i270"
                                                         "i268"
                                                         "i266"
                                                         "i263"
                                                         "i261"
                                                         "i260"
                                                         "i259"
                                                         "i258"
                                                         "i257"
                                                         "i256"
                                                         "i254"
                                                         "i252"
                                                         "i250"
                                                         "i248"
                                                         "i247"
                                                         "i245"
                                                         "i243"
                                                         "i241"
                                                         "i239"
                                                         "i237"
                                                         "i235"
                                                         "i233"
                                                         "i232"
                                                         "i230"
                                                         "i228"
                                                         "i227"
                                                         "i226"
                                                         "i224"
                                                         "i223"
                                                         "i221"
                                                         "i219"
                                                         "i217"
                                                         "i215"
                                                         "i213"
                                                         "i211"
                                                         "i209"
                                                         "i207"
                                                         "i205"
                                                         "i203"
                                                         "i201"
                                                         "i199"
                                                         "i197"
                                                         "i195"
                                                         "i193"
                                                         "i191"
                                                         "i189"
                                                         "i187"
                                                         "i185"
                                                         "i183"
                                                         "i181"
                                                         "i179"
                                                         "i177"
                                                         "i175"
                                                         "i173"
                                                         "i171"
                                                         "i169"
                                                         "i167"
                                                         "i165"
                                                         "i163"
                                                         "i161"
                                                         "i159"
                                                         "i158"
                                                         "i156"
                                                         "i154"
                                                         "i152"
                                                         "i150"
                                                         "i148"
                                                         "i146"
                                                         "i144"
                                                         "i142"))
                                                      #(ribcage
                                                        (define-structure
                                                          and-map*)
                                                        ((top) (top))
                                                        ("i45" "i43")))
                                                     (hygiene guile)))
                                              'eval
                                              (syntax-violation
                                                'eval-when
                                                "invalid situation"
                                                #{e\ 1750}#
                                                (#{wrap\ 315}#
                                                  #{x\ 1763}#
                                                  #{w\ 1752}#
                                                  #f))))))
                                      #{situations\ 1761}#))))))
                 (#{f\ 1759}# #{when-list\ 1751}# (quote ())))))
           (#{chi-install-global\ 323}#
             (lambda (#{name\ 1771}# #{e\ 1772}#)
               (#{build-global-definition\ 186}#
                 #f
                 #{name\ 1771}#
                 (#{build-application\ 168}#
                   #f
                   (#{build-primref\ 194}#
                     #f
                     'make-syntax-transformer)
                   (list (#{build-data\ 196}# #f #{name\ 1771}#)
                         (#{build-data\ 196}# #f (quote macro))
                         (#{build-application\ 168}#
                           #f
                           (#{build-primref\ 194}# #f (quote cons))
                           (list #{e\ 1772}#
                                 (#{build-application\ 168}#
                                   #f
                                   (#{build-primref\ 194}#
                                     #f
                                     'module-name)
                                   (list (#{build-application\ 168}#
                                           #f
                                           (#{build-primref\ 194}#
                                             #f
                                             'current-module)
                                           '()))))))))))
           (#{chi-top-sequence\ 321}#
             (lambda (#{body\ 1786}#
                      #{r\ 1787}#
                      #{w\ 1788}#
                      #{s\ 1789}#
                      #{m\ 1790}#
                      #{esew\ 1791}#
                      #{mod\ 1792}#)
               (#{build-sequence\ 198}#
                 #{s\ 1789}#
                 (letrec ((#{dobody\ 1809}#
                            (lambda (#{body\ 1810}#
                                     #{r\ 1811}#
                                     #{w\ 1812}#
                                     #{m\ 1813}#
                                     #{esew\ 1814}#
                                     #{mod\ 1815}#
                                     #{module\ 1816}#
                                     #{out\ 1817}#)
                              (if (null? #{body\ 1810}#)
                                (reverse #{out\ 1817}#)
                                (let ((#{first\ 1820}#
                                        (#{chi-top\ 329}#
                                          (car #{body\ 1810}#)
                                          #{r\ 1811}#
                                          #{w\ 1812}#
                                          #{m\ 1813}#
                                          #{esew\ 1814}#
                                          #{mod\ 1815}#)))
                                  (let ((#{new-module\ 1822}#
                                          (current-module)))
                                    (#{dobody\ 1809}#
                                      (cdr #{body\ 1810}#)
                                      #{r\ 1811}#
                                      #{w\ 1812}#
                                      #{m\ 1813}#
                                      #{esew\ 1814}#
                                      (if (eq? #{module\ 1816}#
                                               #{new-module\ 1822}#)
                                        #{mod\ 1815}#
                                        (cons 'hygiene
                                              (module-name
                                                #{new-module\ 1822}#)))
                                      #{new-module\ 1822}#
                                      (cons #{first\ 1820}#
                                            #{out\ 1817}#))))))))
                   (#{dobody\ 1809}#
                     #{body\ 1786}#
                     #{r\ 1787}#
                     #{w\ 1788}#
                     #{m\ 1790}#
                     #{esew\ 1791}#
                     #{mod\ 1792}#
                     (current-module)
                     '())))))
           (#{chi-sequence\ 319}#
             (lambda (#{body\ 1823}#
                      #{r\ 1824}#
                      #{w\ 1825}#
                      #{s\ 1826}#
                      #{mod\ 1827}#)
               (#{build-sequence\ 198}#
                 #{s\ 1826}#
                 (letrec ((#{dobody\ 1838}#
                            (lambda (#{body\ 1839}#
                                     #{r\ 1840}#
                                     #{w\ 1841}#
                                     #{mod\ 1842}#)
                              (if (null? #{body\ 1839}#)
                                '()
                                (let ((#{first\ 1844}#
                                        (#{chi\ 331}#
                                          (car #{body\ 1839}#)
                                          #{r\ 1840}#
                                          #{w\ 1841}#
                                          #{mod\ 1842}#)))
                                  (cons #{first\ 1844}#
                                        (#{dobody\ 1838}#
                                          (cdr #{body\ 1839}#)
                                          #{r\ 1840}#
                                          #{w\ 1841}#
                                          #{mod\ 1842}#)))))))
                   (#{dobody\ 1838}#
                     #{body\ 1823}#
                     #{r\ 1824}#
                     #{w\ 1825}#
                     #{mod\ 1827}#)))))
           (#{source-wrap\ 317}#
             (lambda (#{x\ 1845}#
                      #{w\ 1846}#
                      #{s\ 1847}#
                      #{defmod\ 1848}#)
               (#{wrap\ 315}#
                 (#{decorate-source\ 164}#
                   #{x\ 1845}#
                   #{s\ 1847}#)
                 #{w\ 1846}#
                 #{defmod\ 1848}#)))
           (#{wrap\ 315}#
             (lambda (#{x\ 1853}# #{w\ 1854}# #{defmod\ 1855}#)
               (if (if (null? (#{wrap-marks\ 253}# #{w\ 1854}#))
                     (null? (#{wrap-subst\ 255}# #{w\ 1854}#))
                     #f)
                 #{x\ 1853}#
                 (if (#{syntax-object?\ 210}# #{x\ 1853}#)
                   (#{make-syntax-object\ 208}#
                     (#{syntax-object-expression\ 212}# #{x\ 1853}#)
                     (#{join-wraps\ 297}#
                       #{w\ 1854}#
                       (#{syntax-object-wrap\ 214}# #{x\ 1853}#))
                     (#{syntax-object-module\ 216}# #{x\ 1853}#))
                   (if (null? #{x\ 1853}#)
                     #{x\ 1853}#
                     (#{make-syntax-object\ 208}#
                       #{x\ 1853}#
                       #{w\ 1854}#
                       #{defmod\ 1855}#))))))
           (#{bound-id-member?\ 313}#
             (lambda (#{x\ 1868}# #{list\ 1869}#)
               (if (not (null? #{list\ 1869}#))
                 (let ((#{t\ 1876}#
                         (#{bound-id=?\ 307}#
                           #{x\ 1868}#
                           (car #{list\ 1869}#))))
                   (if #{t\ 1876}#
                     #{t\ 1876}#
                     (#{bound-id-member?\ 313}#
                       #{x\ 1868}#
                       (cdr #{list\ 1869}#))))
                 #f)))
           (#{distinct-bound-ids?\ 311}#
             (lambda (#{ids\ 1878}#)
               (letrec ((#{distinct?\ 1882}#
                          (lambda (#{ids\ 1883}#)
                            (let ((#{t\ 1886}# (null? #{ids\ 1883}#)))
                              (if #{t\ 1886}#
                                #{t\ 1886}#
                                (if (not (#{bound-id-member?\ 313}#
                                           (car #{ids\ 1883}#)
                                           (cdr #{ids\ 1883}#)))
                                  (#{distinct?\ 1882}# (cdr #{ids\ 1883}#))
                                  #f))))))
                 (#{distinct?\ 1882}# #{ids\ 1878}#))))
           (#{valid-bound-ids?\ 309}#
             (lambda (#{ids\ 1890}#)
               (if (letrec ((#{all-ids?\ 1895}#
                              (lambda (#{ids\ 1896}#)
                                (let ((#{t\ 1899}# (null? #{ids\ 1896}#)))
                                  (if #{t\ 1899}#
                                    #{t\ 1899}#
                                    (if (#{id?\ 246}# (car #{ids\ 1896}#))
                                      (#{all-ids?\ 1895}# (cdr #{ids\ 1896}#))
                                      #f))))))
                     (#{all-ids?\ 1895}# #{ids\ 1890}#))
                 (#{distinct-bound-ids?\ 311}# #{ids\ 1890}#)
                 #f)))
           (#{bound-id=?\ 307}#
             (lambda (#{i\ 1904}# #{j\ 1905}#)
               (if (if (#{syntax-object?\ 210}# #{i\ 1904}#)
                     (#{syntax-object?\ 210}# #{j\ 1905}#)
                     #f)
                 (if (eq? (#{syntax-object-expression\ 212}# #{i\ 1904}#)
                          (#{syntax-object-expression\ 212}# #{j\ 1905}#))
                   (#{same-marks?\ 301}#
                     (#{wrap-marks\ 253}#
                       (#{syntax-object-wrap\ 214}# #{i\ 1904}#))
                     (#{wrap-marks\ 253}#
                       (#{syntax-object-wrap\ 214}# #{j\ 1905}#)))
                   #f)
                 (eq? #{i\ 1904}# #{j\ 1905}#))))
           (#{free-id=?\ 305}#
             (lambda (#{i\ 1912}# #{j\ 1913}#)
               (if (eq? (let ((#{x\ 1919}# #{i\ 1912}#))
                          (if (#{syntax-object?\ 210}# #{x\ 1919}#)
                            (#{syntax-object-expression\ 212}# #{x\ 1919}#)
                            #{x\ 1919}#))
                        (let ((#{x\ 1922}# #{j\ 1913}#))
                          (if (#{syntax-object?\ 210}# #{x\ 1922}#)
                            (#{syntax-object-expression\ 212}# #{x\ 1922}#)
                            #{x\ 1922}#)))
                 (eq? (#{id-var-name\ 303}# #{i\ 1912}# (quote (())))
                      (#{id-var-name\ 303}# #{j\ 1913}# (quote (()))))
                 #f)))
           (#{id-var-name\ 303}#
             (lambda (#{id\ 1926}# #{w\ 1927}#)
               (letrec ((#{search-vector-rib\ 1936}#
                          (lambda (#{sym\ 1948}#
                                   #{subst\ 1949}#
                                   #{marks\ 1950}#
                                   #{symnames\ 1951}#
                                   #{ribcage\ 1952}#)
                            (let ((#{n\ 1959}#
                                    (vector-length #{symnames\ 1951}#)))
                              (letrec ((#{f\ 1962}#
                                         (lambda (#{i\ 1963}#)
                                           (if (#{fx=\ 151}#
                                                 #{i\ 1963}#
                                                 #{n\ 1959}#)
                                             (#{search\ 1932}#
                                               #{sym\ 1948}#
                                               (cdr #{subst\ 1949}#)
                                               #{marks\ 1950}#)
                                             (if (if (eq? (vector-ref
                                                            #{symnames\ 1951}#
                                                            #{i\ 1963}#)
                                                          #{sym\ 1948}#)
                                                   (#{same-marks?\ 301}#
                                                     #{marks\ 1950}#
                                                     (vector-ref
                                                       (#{ribcage-marks\ 273}#
                                                         #{ribcage\ 1952}#)
                                                       #{i\ 1963}#))
                                                   #f)
                                               (values
                                                 (vector-ref
                                                   (#{ribcage-labels\ 275}#
                                                     #{ribcage\ 1952}#)
                                                   #{i\ 1963}#)
                                                 #{marks\ 1950}#)
                                               (#{f\ 1962}#
                                                 (#{fx+\ 147}#
                                                   #{i\ 1963}#
                                                   1)))))))
                                (#{f\ 1962}# 0)))))
                        (#{search-list-rib\ 1934}#
                          (lambda (#{sym\ 1971}#
                                   #{subst\ 1972}#
                                   #{marks\ 1973}#
                                   #{symnames\ 1974}#
                                   #{ribcage\ 1975}#)
                            (letrec ((#{f\ 1984}#
                                       (lambda (#{symnames\ 1985}# #{i\ 1986}#)
                                         (if (null? #{symnames\ 1985}#)
                                           (#{search\ 1932}#
                                             #{sym\ 1971}#
                                             (cdr #{subst\ 1972}#)
                                             #{marks\ 1973}#)
                                           (if (if (eq? (car #{symnames\ 1985}#)
                                                        #{sym\ 1971}#)
                                                 (#{same-marks?\ 301}#
                                                   #{marks\ 1973}#
                                                   (list-ref
                                                     (#{ribcage-marks\ 273}#
                                                       #{ribcage\ 1975}#)
                                                     #{i\ 1986}#))
                                                 #f)
                                             (values
                                               (list-ref
                                                 (#{ribcage-labels\ 275}#
                                                   #{ribcage\ 1975}#)
                                                 #{i\ 1986}#)
                                               #{marks\ 1973}#)
                                             (#{f\ 1984}#
                                               (cdr #{symnames\ 1985}#)
                                               (#{fx+\ 147}#
                                                 #{i\ 1986}#
                                                 1)))))))
                              (#{f\ 1984}# #{symnames\ 1974}# 0))))
                        (#{search\ 1932}#
                          (lambda (#{sym\ 1994}#
                                   #{subst\ 1995}#
                                   #{marks\ 1996}#)
                            (if (null? #{subst\ 1995}#)
                              (values #f #{marks\ 1996}#)
                              (let ((#{fst\ 2001}# (car #{subst\ 1995}#)))
                                (if (eq? #{fst\ 2001}# (quote shift))
                                  (#{search\ 1932}#
                                    #{sym\ 1994}#
                                    (cdr #{subst\ 1995}#)
                                    (cdr #{marks\ 1996}#))
                                  (let ((#{symnames\ 2003}#
                                          (#{ribcage-symnames\ 271}#
                                            #{fst\ 2001}#)))
                                    (if (vector? #{symnames\ 2003}#)
                                      (#{search-vector-rib\ 1936}#
                                        #{sym\ 1994}#
                                        #{subst\ 1995}#
                                        #{marks\ 1996}#
                                        #{symnames\ 2003}#
                                        #{fst\ 2001}#)
                                      (#{search-list-rib\ 1934}#
                                        #{sym\ 1994}#
                                        #{subst\ 1995}#
                                        #{marks\ 1996}#
                                        #{symnames\ 2003}#
                                        #{fst\ 2001}#)))))))))
                 (if (symbol? #{id\ 1926}#)
                   (let ((#{t\ 2006}#
                           (call-with-values
                             (lambda ()
                               (#{search\ 1932}#
                                 #{id\ 1926}#
                                 (#{wrap-subst\ 255}# #{w\ 1927}#)
                                 (#{wrap-marks\ 253}# #{w\ 1927}#)))
                             (lambda (#{x\ 2008}# . #{ignore\ 2009}#)
                               #{x\ 2008}#))))
                     (if #{t\ 2006}# #{t\ 2006}# #{id\ 1926}#))
                   (if (#{syntax-object?\ 210}# #{id\ 1926}#)
                     (let ((#{id\ 2017}#
                             (#{syntax-object-expression\ 212}# #{id\ 1926}#))
                           (#{w1\ 2018}#
                             (#{syntax-object-wrap\ 214}# #{id\ 1926}#)))
                       (let ((#{marks\ 2020}#
                               (#{join-marks\ 299}#
                                 (#{wrap-marks\ 253}# #{w\ 1927}#)
                                 (#{wrap-marks\ 253}# #{w1\ 2018}#))))
                         (call-with-values
                           (lambda ()
                             (#{search\ 1932}#
                               #{id\ 2017}#
                               (#{wrap-subst\ 255}# #{w\ 1927}#)
                               #{marks\ 2020}#))
                           (lambda (#{new-id\ 2021}# #{marks\ 2022}#)
                             (let ((#{t\ 2027}# #{new-id\ 2021}#))
                               (if #{t\ 2027}#
                                 #{t\ 2027}#
                                 (let ((#{t\ 2030}#
                                         (call-with-values
                                           (lambda ()
                                             (#{search\ 1932}#
                                               #{id\ 2017}#
                                               (#{wrap-subst\ 255}#
                                                 #{w1\ 2018}#)
                                               #{marks\ 2022}#))
                                           (lambda (#{x\ 2032}#
                                                    .
                                                    #{ignore\ 2033}#)
                                             #{x\ 2032}#))))
                                   (if #{t\ 2030}#
                                     #{t\ 2030}#
                                     #{id\ 2017}#))))))))
                     (syntax-violation
                       'id-var-name
                       "invalid id"
                       #{id\ 1926}#))))))
           (#{same-marks?\ 301}#
             (lambda (#{x\ 2038}# #{y\ 2039}#)
               (let ((#{t\ 2044}# (eq? #{x\ 2038}# #{y\ 2039}#)))
                 (if #{t\ 2044}#
                   #{t\ 2044}#
                   (if (not (null? #{x\ 2038}#))
                     (if (not (null? #{y\ 2039}#))
                       (if (eq? (car #{x\ 2038}#) (car #{y\ 2039}#))
                         (#{same-marks?\ 301}#
                           (cdr #{x\ 2038}#)
                           (cdr #{y\ 2039}#))
                         #f)
                       #f)
                     #f)))))
           (#{join-marks\ 299}#
             (lambda (#{m1\ 2050}# #{m2\ 2051}#)
               (#{smart-append\ 295}# #{m1\ 2050}# #{m2\ 2051}#)))
           (#{join-wraps\ 297}#
             (lambda (#{w1\ 2054}# #{w2\ 2055}#)
               (let ((#{m1\ 2060}# (#{wrap-marks\ 253}# #{w1\ 2054}#))
                     (#{s1\ 2061}# (#{wrap-subst\ 255}# #{w1\ 2054}#)))
                 (if (null? #{m1\ 2060}#)
                   (if (null? #{s1\ 2061}#)
                     #{w2\ 2055}#
                     (#{make-wrap\ 251}#
                       (#{wrap-marks\ 253}# #{w2\ 2055}#)
                       (#{smart-append\ 295}#
                         #{s1\ 2061}#
                         (#{wrap-subst\ 255}# #{w2\ 2055}#))))
                   (#{make-wrap\ 251}#
                     (#{smart-append\ 295}#
                       #{m1\ 2060}#
                       (#{wrap-marks\ 253}# #{w2\ 2055}#))
                     (#{smart-append\ 295}#
                       #{s1\ 2061}#
                       (#{wrap-subst\ 255}# #{w2\ 2055}#)))))))
           (#{smart-append\ 295}#
             (lambda (#{m1\ 2062}# #{m2\ 2063}#)
               (if (null? #{m2\ 2063}#)
                 #{m1\ 2062}#
                 (append #{m1\ 2062}# #{m2\ 2063}#))))
           (#{make-binding-wrap\ 293}#
             (lambda (#{ids\ 2066}# #{labels\ 2067}# #{w\ 2068}#)
               (if (null? #{ids\ 2066}#)
                 #{w\ 2068}#
                 (#{make-wrap\ 251}#
                   (#{wrap-marks\ 253}# #{w\ 2068}#)
                   (cons (let ((#{labelvec\ 2073}#
                                 (list->vector #{labels\ 2067}#)))
                           (let ((#{n\ 2075}#
                                   (vector-length #{labelvec\ 2073}#)))
                             (let ((#{symnamevec\ 2078}#
                                     (make-vector #{n\ 2075}#))
                                   (#{marksvec\ 2079}#
                                     (make-vector #{n\ 2075}#)))
                               (begin
                                 (letrec ((#{f\ 2083}#
                                            (lambda (#{ids\ 2084}# #{i\ 2085}#)
                                              (if (not (null? #{ids\ 2084}#))
                                                (call-with-values
                                                  (lambda ()
                                                    (#{id-sym-name&marks\ 249}#
                                                      (car #{ids\ 2084}#)
                                                      #{w\ 2068}#))
                                                  (lambda (#{symname\ 2086}#
                                                           #{marks\ 2087}#)
                                                    (begin
                                                      (vector-set!
                                                        #{symnamevec\ 2078}#
                                                        #{i\ 2085}#
                                                        #{symname\ 2086}#)
                                                      (vector-set!
                                                        #{marksvec\ 2079}#
                                                        #{i\ 2085}#
                                                        #{marks\ 2087}#)
                                                      (#{f\ 2083}#
                                                        (cdr #{ids\ 2084}#)
                                                        (#{fx+\ 147}#
                                                          #{i\ 2085}#
                                                          1)))))))))
                                   (#{f\ 2083}# #{ids\ 2066}# 0))
                                 (#{make-ribcage\ 267}#
                                   #{symnamevec\ 2078}#
                                   #{marksvec\ 2079}#
                                   #{labelvec\ 2073}#)))))
                         (#{wrap-subst\ 255}# #{w\ 2068}#))))))
           (#{extend-ribcage!\ 291}#
             (lambda (#{ribcage\ 2090}# #{id\ 2091}# #{label\ 2092}#)
               (begin
                 (#{set-ribcage-symnames!\ 277}#
                   #{ribcage\ 2090}#
                   (cons (#{syntax-object-expression\ 212}# #{id\ 2091}#)
                         (#{ribcage-symnames\ 271}# #{ribcage\ 2090}#)))
                 (#{set-ribcage-marks!\ 279}#
                   #{ribcage\ 2090}#
                   (cons (#{wrap-marks\ 253}#
                           (#{syntax-object-wrap\ 214}# #{id\ 2091}#))
                         (#{ribcage-marks\ 273}# #{ribcage\ 2090}#)))
                 (#{set-ribcage-labels!\ 281}#
                   #{ribcage\ 2090}#
                   (cons #{label\ 2092}#
                         (#{ribcage-labels\ 275}# #{ribcage\ 2090}#))))))
           (#{anti-mark\ 287}#
             (lambda (#{w\ 2096}#)
               (#{make-wrap\ 251}#
                 (cons #f (#{wrap-marks\ 253}# #{w\ 2096}#))
                 (cons 'shift
                       (#{wrap-subst\ 255}# #{w\ 2096}#)))))
           (#{set-ribcage-labels!\ 281}#
             (lambda (#{x\ 2099}# #{update\ 2100}#)
               (vector-set! #{x\ 2099}# 3 #{update\ 2100}#)))
           (#{set-ribcage-marks!\ 279}#
             (lambda (#{x\ 2103}# #{update\ 2104}#)
               (vector-set! #{x\ 2103}# 2 #{update\ 2104}#)))
           (#{set-ribcage-symnames!\ 277}#
             (lambda (#{x\ 2107}# #{update\ 2108}#)
               (vector-set! #{x\ 2107}# 1 #{update\ 2108}#)))
           (#{ribcage-labels\ 275}#
             (lambda (#{x\ 2111}#) (vector-ref #{x\ 2111}# 3)))
           (#{ribcage-marks\ 273}#
             (lambda (#{x\ 2113}#) (vector-ref #{x\ 2113}# 2)))
           (#{ribcage-symnames\ 271}#
             (lambda (#{x\ 2115}#) (vector-ref #{x\ 2115}# 1)))
           (#{ribcage?\ 269}#
             (lambda (#{x\ 2117}#)
               (if (vector? #{x\ 2117}#)
                 (if (= (vector-length #{x\ 2117}#) 4)
                   (eq? (vector-ref #{x\ 2117}# 0) (quote ribcage))
                   #f)
                 #f)))
           (#{make-ribcage\ 267}#
             (lambda (#{symnames\ 2122}#
                      #{marks\ 2123}#
                      #{labels\ 2124}#)
               (vector
                 'ribcage
                 #{symnames\ 2122}#
                 #{marks\ 2123}#
                 #{labels\ 2124}#)))
           (#{gen-labels\ 264}#
             (lambda (#{ls\ 2128}#)
               (if (null? #{ls\ 2128}#)
                 '()
                 (cons (#{gen-label\ 262}#)
                       (#{gen-labels\ 264}# (cdr #{ls\ 2128}#))))))
           (#{gen-label\ 262}#
             (lambda () (symbol->string (gensym "i"))))
           (#{wrap-subst\ 255}# cdr)
           (#{wrap-marks\ 253}# car)
           (#{make-wrap\ 251}# cons)
           (#{id-sym-name&marks\ 249}#
             (lambda (#{x\ 2130}# #{w\ 2131}#)
               (if (#{syntax-object?\ 210}# #{x\ 2130}#)
                 (values
                   (#{syntax-object-expression\ 212}# #{x\ 2130}#)
                   (#{join-marks\ 299}#
                     (#{wrap-marks\ 253}# #{w\ 2131}#)
                     (#{wrap-marks\ 253}#
                       (#{syntax-object-wrap\ 214}# #{x\ 2130}#))))
                 (values
                   #{x\ 2130}#
                   (#{wrap-marks\ 253}# #{w\ 2131}#)))))
           (#{id?\ 246}#
             (lambda (#{x\ 2134}#)
               (if (symbol? #{x\ 2134}#)
                 #t
                 (if (#{syntax-object?\ 210}# #{x\ 2134}#)
                   (symbol?
                     (#{syntax-object-expression\ 212}# #{x\ 2134}#))
                   #f))))
           (#{nonsymbol-id?\ 244}#
             (lambda (#{x\ 2141}#)
               (if (#{syntax-object?\ 210}# #{x\ 2141}#)
                 (symbol?
                   (#{syntax-object-expression\ 212}# #{x\ 2141}#))
                 #f)))
           (#{global-extend\ 242}#
             (lambda (#{type\ 2145}# #{sym\ 2146}# #{val\ 2147}#)
               (#{put-global-definition-hook\ 160}#
                 #{sym\ 2146}#
                 #{type\ 2145}#
                 #{val\ 2147}#)))
           (#{lookup\ 240}#
             (lambda (#{x\ 2151}# #{r\ 2152}# #{mod\ 2153}#)
               (let ((#{t\ 2159}# (assq #{x\ 2151}# #{r\ 2152}#)))
                 (if #{t\ 2159}#
                   (cdr #{t\ 2159}#)
                   (if (symbol? #{x\ 2151}#)
                     (let ((#{t\ 2165}#
                             (#{get-global-definition-hook\ 162}#
                               #{x\ 2151}#
                               #{mod\ 2153}#)))
                       (if #{t\ 2165}# #{t\ 2165}# (quote (global))))
                     '(displaced-lexical))))))
           (#{macros-only-env\ 238}#
             (lambda (#{r\ 2170}#)
               (if (null? #{r\ 2170}#)
                 '()
                 (let ((#{a\ 2173}# (car #{r\ 2170}#)))
                   (if (eq? (cadr #{a\ 2173}#) (quote macro))
                     (cons #{a\ 2173}#
                           (#{macros-only-env\ 238}# (cdr #{r\ 2170}#)))
                     (#{macros-only-env\ 238}# (cdr #{r\ 2170}#)))))))
           (#{extend-var-env\ 236}#
             (lambda (#{labels\ 2174}# #{vars\ 2175}# #{r\ 2176}#)
               (if (null? #{labels\ 2174}#)
                 #{r\ 2176}#
                 (#{extend-var-env\ 236}#
                   (cdr #{labels\ 2174}#)
                   (cdr #{vars\ 2175}#)
                   (cons (cons (car #{labels\ 2174}#)
                               (cons (quote lexical) (car #{vars\ 2175}#)))
                         #{r\ 2176}#)))))
           (#{extend-env\ 234}#
             (lambda (#{labels\ 2181}# #{bindings\ 2182}# #{r\ 2183}#)
               (if (null? #{labels\ 2181}#)
                 #{r\ 2183}#
                 (#{extend-env\ 234}#
                   (cdr #{labels\ 2181}#)
                   (cdr #{bindings\ 2182}#)
                   (cons (cons (car #{labels\ 2181}#)
                               (car #{bindings\ 2182}#))
                         #{r\ 2183}#)))))
           (#{binding-value\ 231}# cdr)
           (#{binding-type\ 229}# car)
           (#{source-annotation\ 225}#
             (lambda (#{x\ 2187}#)
               (if (#{syntax-object?\ 210}# #{x\ 2187}#)
                 (#{source-annotation\ 225}#
                   (#{syntax-object-expression\ 212}# #{x\ 2187}#))
                 (if (pair? #{x\ 2187}#)
                   (let ((#{props\ 2194}# (source-properties #{x\ 2187}#)))
                     (if (pair? #{props\ 2194}#) #{props\ 2194}# #f))
                   #f))))
           (#{set-syntax-object-module!\ 222}#
             (lambda (#{x\ 2196}# #{update\ 2197}#)
               (vector-set! #{x\ 2196}# 3 #{update\ 2197}#)))
           (#{set-syntax-object-wrap!\ 220}#
             (lambda (#{x\ 2200}# #{update\ 2201}#)
               (vector-set! #{x\ 2200}# 2 #{update\ 2201}#)))
           (#{set-syntax-object-expression!\ 218}#
             (lambda (#{x\ 2204}# #{update\ 2205}#)
               (vector-set! #{x\ 2204}# 1 #{update\ 2205}#)))
           (#{syntax-object-module\ 216}#
             (lambda (#{x\ 2208}#) (vector-ref #{x\ 2208}# 3)))
           (#{syntax-object-wrap\ 214}#
             (lambda (#{x\ 2210}#) (vector-ref #{x\ 2210}# 2)))
           (#{syntax-object-expression\ 212}#
             (lambda (#{x\ 2212}#) (vector-ref #{x\ 2212}# 1)))
           (#{syntax-object?\ 210}#
             (lambda (#{x\ 2214}#)
               (if (vector? #{x\ 2214}#)
                 (if (= (vector-length #{x\ 2214}#) 4)
                   (eq? (vector-ref #{x\ 2214}# 0)
                        'syntax-object)
                   #f)
                 #f)))
           (#{make-syntax-object\ 208}#
             (lambda (#{expression\ 2219}#
                      #{wrap\ 2220}#
                      #{module\ 2221}#)
               (vector
                 'syntax-object
                 #{expression\ 2219}#
                 #{wrap\ 2220}#
                 #{module\ 2221}#)))
           (#{build-letrec\ 204}#
             (lambda (#{src\ 2225}#
                      #{ids\ 2226}#
                      #{vars\ 2227}#
                      #{val-exps\ 2228}#
                      #{body-exp\ 2229}#)
               (if (null? #{vars\ 2227}#)
                 #{body-exp\ 2229}#
                 (let ((#{atom-key\ 2237}# (fluid-ref #{*mode*\ 145}#)))
                   (if (memv #{atom-key\ 2237}# (quote (c)))
                     (begin
                       (for-each
                         #{maybe-name-value!\ 184}#
                         #{ids\ 2226}#
                         #{val-exps\ 2228}#)
                       ((@ (language tree-il) make-letrec)
                        #{src\ 2225}#
                        #{ids\ 2226}#
                        #{vars\ 2227}#
                        #{val-exps\ 2228}#
                        #{body-exp\ 2229}#))
                     (#{decorate-source\ 164}#
                       (list 'letrec
                             (map list #{vars\ 2227}# #{val-exps\ 2228}#)
                             #{body-exp\ 2229}#)
                       #{src\ 2225}#))))))
           (#{build-named-let\ 202}#
             (lambda (#{src\ 2241}#
                      #{ids\ 2242}#
                      #{vars\ 2243}#
                      #{val-exps\ 2244}#
                      #{body-exp\ 2245}#)
               (let ((#{f\ 2255}# (car #{vars\ 2243}#))
                     (#{f-name\ 2256}# (car #{ids\ 2242}#))
                     (#{vars\ 2257}# (cdr #{vars\ 2243}#))
                     (#{ids\ 2258}# (cdr #{ids\ 2242}#)))
                 (let ((#{atom-key\ 2261}# (fluid-ref #{*mode*\ 145}#)))
                   (if (memv #{atom-key\ 2261}# (quote (c)))
                     (let ((#{proc\ 2264}#
                             (#{build-simple-lambda\ 188}#
                               #{src\ 2241}#
                               #{ids\ 2258}#
                               #f
                               #{vars\ 2257}#
                               '()
                               #{body-exp\ 2245}#)))
                       (begin
                         (#{maybe-name-value!\ 184}#
                           #{f-name\ 2256}#
                           #{proc\ 2264}#)
                         (for-each
                           #{maybe-name-value!\ 184}#
                           #{ids\ 2258}#
                           #{val-exps\ 2244}#)
                         ((@ (language tree-il) make-letrec)
                          #{src\ 2241}#
                          (list #{f-name\ 2256}#)
                          (list #{f\ 2255}#)
                          (list #{proc\ 2264}#)
                          (#{build-application\ 168}#
                            #{src\ 2241}#
                            (#{build-lexical-reference\ 174}#
                              'fun
                              #{src\ 2241}#
                              #{f-name\ 2256}#
                              #{f\ 2255}#)
                            #{val-exps\ 2244}#))))
                     (#{decorate-source\ 164}#
                       (list 'letrec
                             (list (list #{f\ 2255}#
                                         (list 'lambda
                                               #{vars\ 2257}#
                                               #{body-exp\ 2245}#)))
                             (cons #{f\ 2255}# #{val-exps\ 2244}#))
                       #{src\ 2241}#))))))
           (#{build-let\ 200}#
             (lambda (#{src\ 2267}#
                      #{ids\ 2268}#
                      #{vars\ 2269}#
                      #{val-exps\ 2270}#
                      #{body-exp\ 2271}#)
               (if (null? #{vars\ 2269}#)
                 #{body-exp\ 2271}#
                 (let ((#{atom-key\ 2279}# (fluid-ref #{*mode*\ 145}#)))
                   (if (memv #{atom-key\ 2279}# (quote (c)))
                     (begin
                       (for-each
                         #{maybe-name-value!\ 184}#
                         #{ids\ 2268}#
                         #{val-exps\ 2270}#)
                       ((@ (language tree-il) make-let)
                        #{src\ 2267}#
                        #{ids\ 2268}#
                        #{vars\ 2269}#
                        #{val-exps\ 2270}#
                        #{body-exp\ 2271}#))
                     (#{decorate-source\ 164}#
                       (list 'let
                             (map list #{vars\ 2269}# #{val-exps\ 2270}#)
                             #{body-exp\ 2271}#)
                       #{src\ 2267}#))))))
           (#{build-sequence\ 198}#
             (lambda (#{src\ 2283}# #{exps\ 2284}#)
               (if (null? (cdr #{exps\ 2284}#))
                 (car #{exps\ 2284}#)
                 (let ((#{atom-key\ 2289}# (fluid-ref #{*mode*\ 145}#)))
                   (if (memv #{atom-key\ 2289}# (quote (c)))
                     ((@ (language tree-il) make-sequence)
                      #{src\ 2283}#
                      #{exps\ 2284}#)
                     (#{decorate-source\ 164}#
                       (cons (quote begin) #{exps\ 2284}#)
                       #{src\ 2283}#))))))
           (#{build-data\ 196}#
             (lambda (#{src\ 2293}# #{exp\ 2294}#)
               (let ((#{atom-key\ 2299}# (fluid-ref #{*mode*\ 145}#)))
                 (if (memv #{atom-key\ 2299}# (quote (c)))
                   ((@ (language tree-il) make-const)
                    #{src\ 2293}#
                    #{exp\ 2294}#)
                   (#{decorate-source\ 164}#
                     (if (if (self-evaluating? #{exp\ 2294}#)
                           (not (vector? #{exp\ 2294}#))
                           #f)
                       #{exp\ 2294}#
                       (list (quote quote) #{exp\ 2294}#))
                     #{src\ 2293}#)))))
           (#{build-primref\ 194}#
             (lambda (#{src\ 2304}# #{name\ 2305}#)
               (if (equal?
                     (module-name (current-module))
                     '(guile))
                 (let ((#{atom-key\ 2310}# (fluid-ref #{*mode*\ 145}#)))
                   (if (memv #{atom-key\ 2310}# (quote (c)))
                     ((@ (language tree-il) make-toplevel-ref)
                      #{src\ 2304}#
                      #{name\ 2305}#)
                     (#{decorate-source\ 164}#
                       #{name\ 2305}#
                       #{src\ 2304}#)))
                 (let ((#{atom-key\ 2315}# (fluid-ref #{*mode*\ 145}#)))
                   (if (memv #{atom-key\ 2315}# (quote (c)))
                     ((@ (language tree-il) make-module-ref)
                      #{src\ 2304}#
                      '(guile)
                      #{name\ 2305}#
                      #f)
                     (#{decorate-source\ 164}#
                       (list (quote @@) (quote (guile)) #{name\ 2305}#)
                       #{src\ 2304}#))))))
           (#{build-lambda-case\ 192}#
             (lambda (#{src\ 2319}#
                      #{req\ 2320}#
                      #{opt\ 2321}#
                      #{rest\ 2322}#
                      #{kw\ 2323}#
                      #{inits\ 2324}#
                      #{vars\ 2325}#
                      #{body\ 2326}#
                      #{else-case\ 2327}#)
               (let ((#{atom-key\ 2339}# (fluid-ref #{*mode*\ 145}#)))
                 (if (memv #{atom-key\ 2339}# (quote (c)))
                   ((@ (language tree-il) make-lambda-case)
                    #{src\ 2319}#
                    #{req\ 2320}#
                    #{opt\ 2321}#
                    #{rest\ 2322}#
                    #{kw\ 2323}#
                    #{inits\ 2324}#
                    #{vars\ 2325}#
                    #{body\ 2326}#
                    #{else-case\ 2327}#)
                   (let ((#{nreq\ 2344}# (length #{req\ 2320}#)))
                     (let ((#{nopt\ 2346}#
                             (if #{opt\ 2321}# (length #{opt\ 2321}#) 0)))
                       (let ((#{rest-idx\ 2348}#
                               (if #{rest\ 2322}#
                                 (+ #{nreq\ 2344}# #{nopt\ 2346}#)
                                 #f)))
                         (let ((#{allow-other-keys?\ 2352}#
                                 (if #{kw\ 2323}# (car #{kw\ 2323}#) #f)))
                           (let ((#{kw-indices\ 2354}#
                                   (map (lambda (#{x\ 2355}#)
                                          (cons (car #{x\ 2355}#)
                                                (list-index
                                                  #{vars\ 2325}#
                                                  (caddr #{x\ 2355}#))))
                                        (if #{kw\ 2323}#
                                          (cdr #{kw\ 2323}#)
                                          '()))))
                             (let ((#{nargs\ 2358}#
                                     (apply max
                                            (+ #{nreq\ 2344}#
                                               #{nopt\ 2346}#
                                               (if #{rest\ 2322}# 1 0))
                                            (map 1+
                                                 (map cdr
                                                      #{kw-indices\ 2354}#)))))
                               (begin
                                 (let ((#{t\ 2361}#
                                         (= #{nargs\ 2358}#
                                            (length #{vars\ 2325}#)
                                            (+ #{nreq\ 2344}#
                                               (length #{inits\ 2324}#)
                                               (if #{rest\ 2322}# 1 0)))))
                                   (if #{t\ 2361}#
                                     #{t\ 2361}#
                                     (error "something went wrong"
                                            #{req\ 2320}#
                                            #{opt\ 2321}#
                                            #{rest\ 2322}#
                                            #{kw\ 2323}#
                                            #{inits\ 2324}#
                                            #{vars\ 2325}#
                                            #{nreq\ 2344}#
                                            #{nopt\ 2346}#
                                            #{kw-indices\ 2354}#
                                            #{nargs\ 2358}#)))
                                 (#{decorate-source\ 164}#
                                   (cons (list (cons '(@@ (ice-9 optargs)
                                                          parse-lambda-case)
                                                     (cons (list 'quote
                                                                 (list #{nreq\ 2344}#
                                                                       #{nopt\ 2346}#
                                                                       #{rest-idx\ 2348}#
                                                                       #{nargs\ 2358}#
                                                                       #{allow-other-keys?\ 2352}#
                                                                       #{kw-indices\ 2354}#))
                                                           (cons (cons 'list
                                                                       (map (lambda (#{i\ 2364}#)
                                                                              (list 'lambda
                                                                                    #{vars\ 2325}#
                                                                                    #{i\ 2364}#))
                                                                            #{inits\ 2324}#))
                                                                 '(%%args))))
                                               '=>
                                               (list 'lambda
                                                     '(%%args)
                                                     (cons 'apply
                                                           (cons (list 'lambda
                                                                       #{vars\ 2325}#
                                                                       #{body\ 2326}#)
                                                                 '(%%args)))))
                                         (let ((#{t\ 2369}#
                                                 #{else-case\ 2327}#))
                                           (if #{t\ 2369}#
                                             #{t\ 2369}#
                                             '((%%args
                                                 (scm-error
                                                   'wrong-number-of-args
                                                   #f
                                                   "Wrong number of arguments"
                                                   '()
                                                   %%args))))))
                                   #{src\ 2319}#))))))))))))
           (#{build-case-lambda\ 190}#
             (lambda (#{src\ 2372}# #{meta\ 2373}# #{body\ 2374}#)
               (let ((#{atom-key\ 2380}# (fluid-ref #{*mode*\ 145}#)))
                 (if (memv #{atom-key\ 2380}# (quote (c)))
                   ((@ (language tree-il) make-lambda)
                    #{src\ 2372}#
                    #{meta\ 2373}#
                    #{body\ 2374}#)
                   (#{decorate-source\ 164}#
                     (list 'lambda
                           '%%args
                           (cons (quote cond) #{body\ 2374}#))
                     #{src\ 2372}#)))))
           (#{build-simple-lambda\ 188}#
             (lambda (#{src\ 2384}#
                      #{req\ 2385}#
                      #{rest\ 2386}#
                      #{vars\ 2387}#
                      #{meta\ 2388}#
                      #{exp\ 2389}#)
               (let ((#{atom-key\ 2398}# (fluid-ref #{*mode*\ 145}#)))
                 (if (memv #{atom-key\ 2398}# (quote (c)))
                   ((@ (language tree-il) make-lambda)
                    #{src\ 2384}#
                    #{meta\ 2388}#
                    ((@ (language tree-il) make-lambda-case)
                     #{src\ 2384}#
                     #{req\ 2385}#
                     #f
                     #{rest\ 2386}#
                     #f
                     '()
                     #{vars\ 2387}#
                     #{exp\ 2389}#
                     #f))
                   (#{decorate-source\ 164}#
                     (list 'lambda
                           (if #{rest\ 2386}#
                             (apply cons* #{vars\ 2387}#)
                             #{vars\ 2387}#)
                           #{exp\ 2389}#)
                     #{src\ 2384}#)))))
           (#{build-global-definition\ 186}#
             (lambda (#{source\ 2402}# #{var\ 2403}# #{exp\ 2404}#)
               (let ((#{atom-key\ 2410}# (fluid-ref #{*mode*\ 145}#)))
                 (if (memv #{atom-key\ 2410}# (quote (c)))
                   (begin
                     (#{maybe-name-value!\ 184}#
                       #{var\ 2403}#
                       #{exp\ 2404}#)
                     ((@ (language tree-il) make-toplevel-define)
                      #{source\ 2402}#
                      #{var\ 2403}#
                      #{exp\ 2404}#))
                   (#{decorate-source\ 164}#
                     (list (quote define) #{var\ 2403}# #{exp\ 2404}#)
                     #{source\ 2402}#)))))
           (#{maybe-name-value!\ 184}#
             (lambda (#{name\ 2414}# #{val\ 2415}#)
               (if ((@ (language tree-il) lambda?) #{val\ 2415}#)
                 (let ((#{meta\ 2421}#
                         ((@ (language tree-il) lambda-meta)
                          #{val\ 2415}#)))
                   (if (not (assq (quote name) #{meta\ 2421}#))
                     ((setter (@ (language tree-il) lambda-meta))
                      #{val\ 2415}#
                      (acons 'name
                             #{name\ 2414}#
                             #{meta\ 2421}#)))))))
           (#{build-global-assignment\ 182}#
             (lambda (#{source\ 2422}#
                      #{var\ 2423}#
                      #{exp\ 2424}#
                      #{mod\ 2425}#)
               (#{analyze-variable\ 178}#
                 #{mod\ 2425}#
                 #{var\ 2423}#
                 (lambda (#{mod\ 2430}# #{var\ 2431}# #{public?\ 2432}#)
                   (let ((#{atom-key\ 2438}# (fluid-ref #{*mode*\ 145}#)))
                     (if (memv #{atom-key\ 2438}# (quote (c)))
                       ((@ (language tree-il) make-module-set)
                        #{source\ 2422}#
                        #{mod\ 2430}#
                        #{var\ 2431}#
                        #{public?\ 2432}#
                        #{exp\ 2424}#)
                       (#{decorate-source\ 164}#
                         (list 'set!
                               (list (if #{public?\ 2432}#
                                       '@
                                       '@@)
                                     #{mod\ 2430}#
                                     #{var\ 2431}#)
                               #{exp\ 2424}#)
                         #{source\ 2422}#))))
                 (lambda (#{var\ 2442}#)
                   (let ((#{atom-key\ 2446}# (fluid-ref #{*mode*\ 145}#)))
                     (if (memv #{atom-key\ 2446}# (quote (c)))
                       ((@ (language tree-il) make-toplevel-set)
                        #{source\ 2422}#
                        #{var\ 2442}#
                        #{exp\ 2424}#)
                       (#{decorate-source\ 164}#
                         (list (quote set!) #{var\ 2442}# #{exp\ 2424}#)
                         #{source\ 2422}#)))))))
           (#{build-global-reference\ 180}#
             (lambda (#{source\ 2450}# #{var\ 2451}# #{mod\ 2452}#)
               (#{analyze-variable\ 178}#
                 #{mod\ 2452}#
                 #{var\ 2451}#
                 (lambda (#{mod\ 2456}# #{var\ 2457}# #{public?\ 2458}#)
                   (let ((#{atom-key\ 2464}# (fluid-ref #{*mode*\ 145}#)))
                     (if (memv #{atom-key\ 2464}# (quote (c)))
                       ((@ (language tree-il) make-module-ref)
                        #{source\ 2450}#
                        #{mod\ 2456}#
                        #{var\ 2457}#
                        #{public?\ 2458}#)
                       (#{decorate-source\ 164}#
                         (list (if #{public?\ 2458}# (quote @) (quote @@))
                               #{mod\ 2456}#
                               #{var\ 2457}#)
                         #{source\ 2450}#))))
                 (lambda (#{var\ 2467}#)
                   (let ((#{atom-key\ 2471}# (fluid-ref #{*mode*\ 145}#)))
                     (if (memv #{atom-key\ 2471}# (quote (c)))
                       ((@ (language tree-il) make-toplevel-ref)
                        #{source\ 2450}#
                        #{var\ 2467}#)
                       (#{decorate-source\ 164}#
                         #{var\ 2467}#
                         #{source\ 2450}#)))))))
           (#{analyze-variable\ 178}#
             (lambda (#{mod\ 2474}#
                      #{var\ 2475}#
                      #{modref-cont\ 2476}#
                      #{bare-cont\ 2477}#)
               (if (not #{mod\ 2474}#)
                 (#{bare-cont\ 2477}# #{var\ 2475}#)
                 (let ((#{kind\ 2484}# (car #{mod\ 2474}#))
                       (#{mod\ 2485}# (cdr #{mod\ 2474}#)))
                   (if (memv #{kind\ 2484}# (quote (public)))
                     (#{modref-cont\ 2476}#
                       #{mod\ 2485}#
                       #{var\ 2475}#
                       #t)
                     (if (memv #{kind\ 2484}# (quote (private)))
                       (if (not (equal?
                                  #{mod\ 2485}#
                                  (module-name (current-module))))
                         (#{modref-cont\ 2476}#
                           #{mod\ 2485}#
                           #{var\ 2475}#
                           #f)
                         (#{bare-cont\ 2477}# #{var\ 2475}#))
                       (if (memv #{kind\ 2484}# (quote (bare)))
                         (#{bare-cont\ 2477}# #{var\ 2475}#)
                         (if (memv #{kind\ 2484}# (quote (hygiene)))
                           (if (if (not (equal?
                                          #{mod\ 2485}#
                                          (module-name (current-module))))
                                 (module-variable
                                   (resolve-module #{mod\ 2485}#)
                                   #{var\ 2475}#)
                                 #f)
                             (#{modref-cont\ 2476}#
                               #{mod\ 2485}#
                               #{var\ 2475}#
                               #f)
                             (#{bare-cont\ 2477}# #{var\ 2475}#))
                           (syntax-violation
                             #f
                             "bad module kind"
                             #{var\ 2475}#
                             #{mod\ 2485}#)))))))))
           (#{build-lexical-assignment\ 176}#
             (lambda (#{source\ 2493}#
                      #{name\ 2494}#
                      #{var\ 2495}#
                      #{exp\ 2496}#)
               (let ((#{atom-key\ 2503}# (fluid-ref #{*mode*\ 145}#)))
                 (if (memv #{atom-key\ 2503}# (quote (c)))
                   ((@ (language tree-il) make-lexical-set)
                    #{source\ 2493}#
                    #{name\ 2494}#
                    #{var\ 2495}#
                    #{exp\ 2496}#)
                   (#{decorate-source\ 164}#
                     (list (quote set!) #{var\ 2495}# #{exp\ 2496}#)
                     #{source\ 2493}#)))))
           (#{build-lexical-reference\ 174}#
             (lambda (#{type\ 2507}#
                      #{source\ 2508}#
                      #{name\ 2509}#
                      #{var\ 2510}#)
               (let ((#{atom-key\ 2517}# (fluid-ref #{*mode*\ 145}#)))
                 (if (memv #{atom-key\ 2517}# (quote (c)))
                   ((@ (language tree-il) make-lexical-ref)
                    #{source\ 2508}#
                    #{name\ 2509}#
                    #{var\ 2510}#)
                   (#{decorate-source\ 164}#
                     #{var\ 2510}#
                     #{source\ 2508}#)))))
           (#{build-dynlet\ 172}#
             (lambda (#{source\ 2520}#
                      #{fluids\ 2521}#
                      #{vals\ 2522}#
                      #{body\ 2523}#)
               (let ((#{atom-key\ 2530}# (fluid-ref #{*mode*\ 145}#)))
                 (if (memv #{atom-key\ 2530}# (quote (c)))
                   ((@ (language tree-il) make-dynlet)
                    #{source\ 2520}#
                    #{fluids\ 2521}#
                    #{vals\ 2522}#
                    #{body\ 2523}#)
                   (#{decorate-source\ 164}#
                     (list 'with-fluids
                           (map list #{fluids\ 2521}# #{vals\ 2522}#)
                           #{body\ 2523}#)
                     #{source\ 2520}#)))))
           (#{build-conditional\ 170}#
             (lambda (#{source\ 2534}#
                      #{test-exp\ 2535}#
                      #{then-exp\ 2536}#
                      #{else-exp\ 2537}#)
               (let ((#{atom-key\ 2544}# (fluid-ref #{*mode*\ 145}#)))
                 (if (memv #{atom-key\ 2544}# (quote (c)))
                   ((@ (language tree-il) make-conditional)
                    #{source\ 2534}#
                    #{test-exp\ 2535}#
                    #{then-exp\ 2536}#
                    #{else-exp\ 2537}#)
                   (#{decorate-source\ 164}#
                     (if (equal? #{else-exp\ 2537}# (quote (if #f #f)))
                       (list 'if
                             #{test-exp\ 2535}#
                             #{then-exp\ 2536}#)
                       (list 'if
                             #{test-exp\ 2535}#
                             #{then-exp\ 2536}#
                             #{else-exp\ 2537}#))
                     #{source\ 2534}#)))))
           (#{build-application\ 168}#
             (lambda (#{source\ 2549}#
                      #{fun-exp\ 2550}#
                      #{arg-exps\ 2551}#)
               (let ((#{atom-key\ 2557}# (fluid-ref #{*mode*\ 145}#)))
                 (if (memv #{atom-key\ 2557}# (quote (c)))
                   ((@ (language tree-il) make-application)
                    #{source\ 2549}#
                    #{fun-exp\ 2550}#
                    #{arg-exps\ 2551}#)
                   (#{decorate-source\ 164}#
                     (cons #{fun-exp\ 2550}# #{arg-exps\ 2551}#)
                     #{source\ 2549}#)))))
           (#{build-void\ 166}#
             (lambda (#{source\ 2561}#)
               (let ((#{atom-key\ 2565}# (fluid-ref #{*mode*\ 145}#)))
                 (if (memv #{atom-key\ 2565}# (quote (c)))
                   ((@ (language tree-il) make-void)
                    #{source\ 2561}#)
                   (#{decorate-source\ 164}#
                     '(if #f #f)
                     #{source\ 2561}#)))))
           (#{decorate-source\ 164}#
             (lambda (#{e\ 2568}# #{s\ 2569}#)
               (begin
                 (if (if (pair? #{e\ 2568}#) #{s\ 2569}# #f)
                   (set-source-properties! #{e\ 2568}# #{s\ 2569}#))
                 #{e\ 2568}#)))
           (#{get-global-definition-hook\ 162}#
             (lambda (#{symbol\ 2574}# #{module\ 2575}#)
               (begin
                 (if (if (not #{module\ 2575}#) (current-module) #f)
                   (warn "module system is booted, we should have a module"
                         #{symbol\ 2574}#))
                 (let ((#{v\ 2581}#
                         (module-variable
                           (if #{module\ 2575}#
                             (resolve-module (cdr #{module\ 2575}#))
                             (current-module))
                           #{symbol\ 2574}#)))
                   (if #{v\ 2581}#
                     (if (variable-bound? #{v\ 2581}#)
                       (let ((#{val\ 2586}# (variable-ref #{v\ 2581}#)))
                         (if (macro? #{val\ 2586}#)
                           (if (macro-type #{val\ 2586}#)
                             (cons (macro-type #{val\ 2586}#)
                                   (macro-binding #{val\ 2586}#))
                             #f)
                           #f))
                       #f)
                     #f)))))
           (#{put-global-definition-hook\ 160}#
             (lambda (#{symbol\ 2590}# #{type\ 2591}# #{val\ 2592}#)
               (module-define!
                 (current-module)
                 #{symbol\ 2590}#
                 (make-syntax-transformer
                   #{symbol\ 2590}#
                   #{type\ 2591}#
                   #{val\ 2592}#))))
           (#{local-eval-hook\ 157}#
             (lambda (#{x\ 2596}# #{mod\ 2597}#)
               (primitive-eval
                 (list #{noexpand\ 143}#
                       (let ((#{atom-key\ 2603}# (fluid-ref #{*mode*\ 145}#)))
                         (if (memv #{atom-key\ 2603}# (quote (c)))
                           ((@ (language tree-il) tree-il->scheme)
                            #{x\ 2596}#)
                           #{x\ 2596}#))))))
           (#{top-level-eval-hook\ 155}#
             (lambda (#{x\ 2606}# #{mod\ 2607}#)
               (primitive-eval
                 (list #{noexpand\ 143}#
                       (let ((#{atom-key\ 2613}# (fluid-ref #{*mode*\ 145}#)))
                         (if (memv #{atom-key\ 2613}# (quote (c)))
                           ((@ (language tree-il) tree-il->scheme)
                            #{x\ 2606}#)
                           #{x\ 2606}#))))))
           (#{fx<\ 153}# <)
           (#{fx=\ 151}# =)
           (#{fx-\ 149}# -)
           (#{fx+\ 147}# +)
           (#{*mode*\ 145}# (make-fluid))
           (#{noexpand\ 143}# "noexpand"))
    (begin
      (#{global-extend\ 242}#
        'local-syntax
        'letrec-syntax
        #t)
      (#{global-extend\ 242}#
        'local-syntax
        'let-syntax
        #f)
      (#{global-extend\ 242}#
        'core
        'fluid-let-syntax
        (lambda (#{e\ 2616}#
                 #{r\ 2617}#
                 #{w\ 2618}#
                 #{s\ 2619}#
                 #{mod\ 2620}#)
          ((lambda (#{tmp\ 2626}#)
             ((lambda (#{tmp\ 2627}#)
                (if (if #{tmp\ 2627}#
                      (apply (lambda (#{_\ 2633}#
                                      #{var\ 2634}#
                                      #{val\ 2635}#
                                      #{e1\ 2636}#
                                      #{e2\ 2637}#)
                               (#{valid-bound-ids?\ 309}# #{var\ 2634}#))
                             #{tmp\ 2627}#)
                      #f)
                  (apply (lambda (#{_\ 2644}#
                                  #{var\ 2645}#
                                  #{val\ 2646}#
                                  #{e1\ 2647}#
                                  #{e2\ 2648}#)
                           (let ((#{names\ 2650}#
                                   (map (lambda (#{x\ 2651}#)
                                          (#{id-var-name\ 303}#
                                            #{x\ 2651}#
                                            #{w\ 2618}#))
                                        #{var\ 2645}#)))
                             (begin
                               (for-each
                                 (lambda (#{id\ 2654}# #{n\ 2655}#)
                                   (let ((#{atom-key\ 2660}#
                                           (#{binding-type\ 229}#
                                             (#{lookup\ 240}#
                                               #{n\ 2655}#
                                               #{r\ 2617}#
                                               #{mod\ 2620}#))))
                                     (if (memv #{atom-key\ 2660}#
                                               '(displaced-lexical))
                                       (syntax-violation
                                         'fluid-let-syntax
                                         "identifier out of context"
                                         #{e\ 2616}#
                                         (#{source-wrap\ 317}#
                                           #{id\ 2654}#
                                           #{w\ 2618}#
                                           #{s\ 2619}#
                                           #{mod\ 2620}#)))))
                                 #{var\ 2645}#
                                 #{names\ 2650}#)
                               (#{chi-body\ 339}#
                                 (cons #{e1\ 2647}# #{e2\ 2648}#)
                                 (#{source-wrap\ 317}#
                                   #{e\ 2616}#
                                   #{w\ 2618}#
                                   #{s\ 2619}#
                                   #{mod\ 2620}#)
                                 (#{extend-env\ 234}#
                                   #{names\ 2650}#
                                   (let ((#{trans-r\ 2665}#
                                           (#{macros-only-env\ 238}#
                                             #{r\ 2617}#)))
                                     (map (lambda (#{x\ 2666}#)
                                            (cons 'macro
                                                  (#{eval-local-transformer\ 343}#
                                                    (#{chi\ 331}#
                                                      #{x\ 2666}#
                                                      #{trans-r\ 2665}#
                                                      #{w\ 2618}#
                                                      #{mod\ 2620}#)
                                                    #{mod\ 2620}#)))
                                          #{val\ 2646}#))
                                   #{r\ 2617}#)
                                 #{w\ 2618}#
                                 #{mod\ 2620}#))))
                         #{tmp\ 2627}#)
                  ((lambda (#{_\ 2671}#)
                     (syntax-violation
                       'fluid-let-syntax
                       "bad syntax"
                       (#{source-wrap\ 317}#
                         #{e\ 2616}#
                         #{w\ 2618}#
                         #{s\ 2619}#
                         #{mod\ 2620}#)))
                   #{tmp\ 2626}#)))
              ($sc-dispatch
                #{tmp\ 2626}#
                '(any #(each (any any)) any . each-any))))
           #{e\ 2616}#)))
      (#{global-extend\ 242}#
        'core
        'quote
        (lambda (#{e\ 2672}#
                 #{r\ 2673}#
                 #{w\ 2674}#
                 #{s\ 2675}#
                 #{mod\ 2676}#)
          ((lambda (#{tmp\ 2682}#)
             ((lambda (#{tmp\ 2683}#)
                (if #{tmp\ 2683}#
                  (apply (lambda (#{_\ 2686}# #{e\ 2687}#)
                           (#{build-data\ 196}#
                             #{s\ 2675}#
                             (#{strip\ 357}# #{e\ 2687}# #{w\ 2674}#)))
                         #{tmp\ 2683}#)
                  ((lambda (#{_\ 2689}#)
                     (syntax-violation
                       'quote
                       "bad syntax"
                       (#{source-wrap\ 317}#
                         #{e\ 2672}#
                         #{w\ 2674}#
                         #{s\ 2675}#
                         #{mod\ 2676}#)))
                   #{tmp\ 2682}#)))
              ($sc-dispatch #{tmp\ 2682}# (quote (any any)))))
           #{e\ 2672}#)))
      (#{global-extend\ 242}#
        'core
        'syntax
        (letrec ((#{regen\ 2705}#
                   (lambda (#{x\ 2706}#)
                     (let ((#{atom-key\ 2710}# (car #{x\ 2706}#)))
                       (if (memv #{atom-key\ 2710}# (quote (ref)))
                         (#{build-lexical-reference\ 174}#
                           'value
                           #f
                           (cadr #{x\ 2706}#)
                           (cadr #{x\ 2706}#))
                         (if (memv #{atom-key\ 2710}# (quote (primitive)))
                           (#{build-primref\ 194}# #f (cadr #{x\ 2706}#))
                           (if (memv #{atom-key\ 2710}# (quote (quote)))
                             (#{build-data\ 196}# #f (cadr #{x\ 2706}#))
                             (if (memv #{atom-key\ 2710}# (quote (lambda)))
                               (if (list? (cadr #{x\ 2706}#))
                                 (#{build-simple-lambda\ 188}#
                                   #f
                                   (cadr #{x\ 2706}#)
                                   #f
                                   (cadr #{x\ 2706}#)
                                   '()
                                   (#{regen\ 2705}# (caddr #{x\ 2706}#)))
                                 (error "how did we get here" #{x\ 2706}#))
                               (#{build-application\ 168}#
                                 #f
                                 (#{build-primref\ 194}# #f (car #{x\ 2706}#))
                                 (map #{regen\ 2705}#
                                      (cdr #{x\ 2706}#))))))))))
                 (#{gen-vector\ 2703}#
                   (lambda (#{x\ 2722}#)
                     (if (eq? (car #{x\ 2722}#) (quote list))
                       (cons (quote vector) (cdr #{x\ 2722}#))
                       (if (eq? (car #{x\ 2722}#) (quote quote))
                         (list 'quote
                               (list->vector (cadr #{x\ 2722}#)))
                         (list (quote list->vector) #{x\ 2722}#)))))
                 (#{gen-append\ 2701}#
                   (lambda (#{x\ 2732}# #{y\ 2733}#)
                     (if (equal? #{y\ 2733}# (quote (quote ())))
                       #{x\ 2732}#
                       (list (quote append) #{x\ 2732}# #{y\ 2733}#))))
                 (#{gen-cons\ 2699}#
                   (lambda (#{x\ 2737}# #{y\ 2738}#)
                     (let ((#{atom-key\ 2743}# (car #{y\ 2738}#)))
                       (if (memv #{atom-key\ 2743}# (quote (quote)))
                         (if (eq? (car #{x\ 2737}#) (quote quote))
                           (list 'quote
                                 (cons (cadr #{x\ 2737}#) (cadr #{y\ 2738}#)))
                           (if (eq? (cadr #{y\ 2738}#) (quote ()))
                             (list (quote list) #{x\ 2737}#)
                             (list (quote cons) #{x\ 2737}# #{y\ 2738}#)))
                         (if (memv #{atom-key\ 2743}# (quote (list)))
                           (cons 'list
                                 (cons #{x\ 2737}# (cdr #{y\ 2738}#)))
                           (list (quote cons) #{x\ 2737}# #{y\ 2738}#))))))
                 (#{gen-map\ 2697}#
                   (lambda (#{e\ 2752}# #{map-env\ 2753}#)
                     (let ((#{formals\ 2758}# (map cdr #{map-env\ 2753}#))
                           (#{actuals\ 2759}#
                             (map (lambda (#{x\ 2760}#)
                                    (list (quote ref) (car #{x\ 2760}#)))
                                  #{map-env\ 2753}#)))
                       (if (eq? (car #{e\ 2752}#) (quote ref))
                         (car #{actuals\ 2759}#)
                         (if (and-map
                               (lambda (#{x\ 2767}#)
                                 (if (eq? (car #{x\ 2767}#) (quote ref))
                                   (memq (cadr #{x\ 2767}#) #{formals\ 2758}#)
                                   #f))
                               (cdr #{e\ 2752}#))
                           (cons 'map
                                 (cons (list 'primitive
                                             (car #{e\ 2752}#))
                                       (map (let ((#{r\ 2773}#
                                                    (map cons
                                                         #{formals\ 2758}#
                                                         #{actuals\ 2759}#)))
                                              (lambda (#{x\ 2774}#)
                                                (cdr (assq (cadr #{x\ 2774}#)
                                                           #{r\ 2773}#))))
                                            (cdr #{e\ 2752}#))))
                           (cons 'map
                                 (cons (list 'lambda
                                             #{formals\ 2758}#
                                             #{e\ 2752}#)
                                       #{actuals\ 2759}#)))))))
                 (#{gen-mappend\ 2695}#
                   (lambda (#{e\ 2778}# #{map-env\ 2779}#)
                     (list 'apply
                           '(primitive append)
                           (#{gen-map\ 2697}# #{e\ 2778}# #{map-env\ 2779}#))))
                 (#{gen-ref\ 2693}#
                   (lambda (#{src\ 2783}#
                            #{var\ 2784}#
                            #{level\ 2785}#
                            #{maps\ 2786}#)
                     (if (#{fx=\ 151}# #{level\ 2785}# 0)
                       (values #{var\ 2784}# #{maps\ 2786}#)
                       (if (null? #{maps\ 2786}#)
                         (syntax-violation
                           'syntax
                           "missing ellipsis"
                           #{src\ 2783}#)
                         (call-with-values
                           (lambda ()
                             (#{gen-ref\ 2693}#
                               #{src\ 2783}#
                               #{var\ 2784}#
                               (#{fx-\ 149}# #{level\ 2785}# 1)
                               (cdr #{maps\ 2786}#)))
                           (lambda (#{outer-var\ 2791}# #{outer-maps\ 2792}#)
                             (let ((#{b\ 2796}#
                                     (assq #{outer-var\ 2791}#
                                           (car #{maps\ 2786}#))))
                               (if #{b\ 2796}#
                                 (values (cdr #{b\ 2796}#) #{maps\ 2786}#)
                                 (let ((#{inner-var\ 2798}#
                                         (#{gen-var\ 359}# (quote tmp))))
                                   (values
                                     #{inner-var\ 2798}#
                                     (cons (cons (cons #{outer-var\ 2791}#
                                                       #{inner-var\ 2798}#)
                                                 (car #{maps\ 2786}#))
                                           #{outer-maps\ 2792}#)))))))))))
                 (#{gen-syntax\ 2691}#
                   (lambda (#{src\ 2799}#
                            #{e\ 2800}#
                            #{r\ 2801}#
                            #{maps\ 2802}#
                            #{ellipsis?\ 2803}#
                            #{mod\ 2804}#)
                     (if (#{id?\ 246}# #{e\ 2800}#)
                       (let ((#{label\ 2812}#
                               (#{id-var-name\ 303}#
                                 #{e\ 2800}#
                                 '(()))))
                         (let ((#{b\ 2815}#
                                 (#{lookup\ 240}#
                                   #{label\ 2812}#
                                   #{r\ 2801}#
                                   #{mod\ 2804}#)))
                           (if (eq? (#{binding-type\ 229}# #{b\ 2815}#)
                                    'syntax)
                             (call-with-values
                               (lambda ()
                                 (let ((#{var.lev\ 2817}#
                                         (#{binding-value\ 231}# #{b\ 2815}#)))
                                   (#{gen-ref\ 2693}#
                                     #{src\ 2799}#
                                     (car #{var.lev\ 2817}#)
                                     (cdr #{var.lev\ 2817}#)
                                     #{maps\ 2802}#)))
                               (lambda (#{var\ 2818}# #{maps\ 2819}#)
                                 (values
                                   (list (quote ref) #{var\ 2818}#)
                                   #{maps\ 2819}#)))
                             (if (#{ellipsis?\ 2803}# #{e\ 2800}#)
                               (syntax-violation
                                 'syntax
                                 "misplaced ellipsis"
                                 #{src\ 2799}#)
                               (values
                                 (list (quote quote) #{e\ 2800}#)
                                 #{maps\ 2802}#)))))
                       ((lambda (#{tmp\ 2824}#)
                          ((lambda (#{tmp\ 2825}#)
                             (if (if #{tmp\ 2825}#
                                   (apply (lambda (#{dots\ 2828}# #{e\ 2829}#)
                                            (#{ellipsis?\ 2803}#
                                              #{dots\ 2828}#))
                                          #{tmp\ 2825}#)
                                   #f)
                               (apply (lambda (#{dots\ 2832}# #{e\ 2833}#)
                                        (#{gen-syntax\ 2691}#
                                          #{src\ 2799}#
                                          #{e\ 2833}#
                                          #{r\ 2801}#
                                          #{maps\ 2802}#
                                          (lambda (#{x\ 2834}#) #f)
                                          #{mod\ 2804}#))
                                      #{tmp\ 2825}#)
                               ((lambda (#{tmp\ 2836}#)
                                  (if (if #{tmp\ 2836}#
                                        (apply (lambda (#{x\ 2840}#
                                                        #{dots\ 2841}#
                                                        #{y\ 2842}#)
                                                 (#{ellipsis?\ 2803}#
                                                   #{dots\ 2841}#))
                                               #{tmp\ 2836}#)
                                        #f)
                                    (apply (lambda (#{x\ 2846}#
                                                    #{dots\ 2847}#
                                                    #{y\ 2848}#)
                                             (letrec ((#{f\ 2852}#
                                                        (lambda (#{y\ 2853}#
                                                                 #{k\ 2854}#)
                                                          ((lambda (#{tmp\ 2861}#)
                                                             ((lambda (#{tmp\ 2862}#)
                                                                (if (if #{tmp\ 2862}#
                                                                      (apply (lambda (#{dots\ 2865}#
                                                                                      #{y\ 2866}#)
                                                                               (#{ellipsis?\ 2803}#
                                                                                 #{dots\ 2865}#))
                                                                             #{tmp\ 2862}#)
                                                                      #f)
                                                                  (apply (lambda (#{dots\ 2869}#
                                                                                  #{y\ 2870}#)
                                                                           (#{f\ 2852}#
                                                                             #{y\ 2870}#
                                                                             (lambda (#{maps\ 2871}#)
                                                                               (call-with-values
                                                                                 (lambda ()
                                                                                   (#{k\ 2854}#
                                                                                     (cons '()
                                                                                           #{maps\ 2871}#)))
                                                                                 (lambda (#{x\ 2873}#
                                                                                          #{maps\ 2874}#)
                                                                                   (if (null? (car #{maps\ 2874}#))
                                                                                     (syntax-violation
                                                                                       'syntax
                                                                                       "extra ellipsis"
                                                                                       #{src\ 2799}#)
                                                                                     (values
                                                                                       (#{gen-mappend\ 2695}#
                                                                                         #{x\ 2873}#
                                                                                         (car #{maps\ 2874}#))
                                                                                       (cdr #{maps\ 2874}#))))))))
                                                                         #{tmp\ 2862}#)
                                                                  ((lambda (#{_\ 2878}#)
                                                                     (call-with-values
                                                                       (lambda ()
                                                                         (#{gen-syntax\ 2691}#
                                                                           #{src\ 2799}#
                                                                           #{y\ 2853}#
                                                                           #{r\ 2801}#
                                                                           #{maps\ 2802}#
                                                                           #{ellipsis?\ 2803}#
                                                                           #{mod\ 2804}#))
                                                                       (lambda (#{y\ 2879}#
                                                                                #{maps\ 2880}#)
                                                                         (call-with-values
                                                                           (lambda ()
                                                                             (#{k\ 2854}#
                                                                               #{maps\ 2880}#))
                                                                           (lambda (#{x\ 2883}#
                                                                                    #{maps\ 2884}#)
                                                                             (values
                                                                               (#{gen-append\ 2701}#
                                                                                 #{x\ 2883}#
                                                                                 #{y\ 2879}#)
                                                                               #{maps\ 2884}#))))))
                                                                   #{tmp\ 2861}#)))
                                                              ($sc-dispatch
                                                                #{tmp\ 2861}#
                                                                '(any . any))))
                                                           #{y\ 2853}#))))
                                               (#{f\ 2852}#
                                                 #{y\ 2848}#
                                                 (lambda (#{maps\ 2855}#)
                                                   (call-with-values
                                                     (lambda ()
                                                       (#{gen-syntax\ 2691}#
                                                         #{src\ 2799}#
                                                         #{x\ 2846}#
                                                         #{r\ 2801}#
                                                         (cons '()
                                                               #{maps\ 2855}#)
                                                         #{ellipsis?\ 2803}#
                                                         #{mod\ 2804}#))
                                                     (lambda (#{x\ 2857}#
                                                              #{maps\ 2858}#)
                                                       (if (null? (car #{maps\ 2858}#))
                                                         (syntax-violation
                                                           'syntax
                                                           "extra ellipsis"
                                                           #{src\ 2799}#)
                                                         (values
                                                           (#{gen-map\ 2697}#
                                                             #{x\ 2857}#
                                                             (car #{maps\ 2858}#))
                                                           (cdr #{maps\ 2858}#)))))))))
                                           #{tmp\ 2836}#)
                                    ((lambda (#{tmp\ 2887}#)
                                       (if #{tmp\ 2887}#
                                         (apply (lambda (#{x\ 2890}#
                                                         #{y\ 2891}#)
                                                  (call-with-values
                                                    (lambda ()
                                                      (#{gen-syntax\ 2691}#
                                                        #{src\ 2799}#
                                                        #{x\ 2890}#
                                                        #{r\ 2801}#
                                                        #{maps\ 2802}#
                                                        #{ellipsis?\ 2803}#
                                                        #{mod\ 2804}#))
                                                    (lambda (#{x\ 2892}#
                                                             #{maps\ 2893}#)
                                                      (call-with-values
                                                        (lambda ()
                                                          (#{gen-syntax\ 2691}#
                                                            #{src\ 2799}#
                                                            #{y\ 2891}#
                                                            #{r\ 2801}#
                                                            #{maps\ 2893}#
                                                            #{ellipsis?\ 2803}#
                                                            #{mod\ 2804}#))
                                                        (lambda (#{y\ 2896}#
                                                                 #{maps\ 2897}#)
                                                          (values
                                                            (#{gen-cons\ 2699}#
                                                              #{x\ 2892}#
                                                              #{y\ 2896}#)
                                                            #{maps\ 2897}#))))))
                                                #{tmp\ 2887}#)
                                         ((lambda (#{tmp\ 2900}#)
                                            (if #{tmp\ 2900}#
                                              (apply (lambda (#{e1\ 2903}#
                                                              #{e2\ 2904}#)
                                                       (call-with-values
                                                         (lambda ()
                                                           (#{gen-syntax\ 2691}#
                                                             #{src\ 2799}#
                                                             (cons #{e1\ 2903}#
                                                                   #{e2\ 2904}#)
                                                             #{r\ 2801}#
                                                             #{maps\ 2802}#
                                                             #{ellipsis?\ 2803}#
                                                             #{mod\ 2804}#))
                                                         (lambda (#{e\ 2906}#
                                                                  #{maps\ 2907}#)
                                                           (values
                                                             (#{gen-vector\ 2703}#
                                                               #{e\ 2906}#)
                                                             #{maps\ 2907}#))))
                                                     #{tmp\ 2900}#)
                                              ((lambda (#{_\ 2911}#)
                                                 (values
                                                   (list 'quote
                                                         #{e\ 2800}#)
                                                   #{maps\ 2802}#))
                                               #{tmp\ 2824}#)))
                                          ($sc-dispatch
                                            #{tmp\ 2824}#
                                            '#(vector (any . each-any))))))
                                     ($sc-dispatch
                                       #{tmp\ 2824}#
                                       '(any . any)))))
                                ($sc-dispatch
                                  #{tmp\ 2824}#
                                  '(any any . any)))))
                           ($sc-dispatch #{tmp\ 2824}# (quote (any any)))))
                        #{e\ 2800}#)))))
          (lambda (#{e\ 2913}#
                   #{r\ 2914}#
                   #{w\ 2915}#
                   #{s\ 2916}#
                   #{mod\ 2917}#)
            (let ((#{e\ 2924}#
                    (#{source-wrap\ 317}#
                      #{e\ 2913}#
                      #{w\ 2915}#
                      #{s\ 2916}#
                      #{mod\ 2917}#)))
              ((lambda (#{tmp\ 2925}#)
                 ((lambda (#{tmp\ 2926}#)
                    (if #{tmp\ 2926}#
                      (apply (lambda (#{_\ 2929}# #{x\ 2930}#)
                               (call-with-values
                                 (lambda ()
                                   (#{gen-syntax\ 2691}#
                                     #{e\ 2924}#
                                     #{x\ 2930}#
                                     #{r\ 2914}#
                                     '()
                                     #{ellipsis?\ 347}#
                                     #{mod\ 2917}#))
                                 (lambda (#{e\ 2931}# #{maps\ 2932}#)
                                   (#{regen\ 2705}# #{e\ 2931}#))))
                             #{tmp\ 2926}#)
                      ((lambda (#{_\ 2936}#)
                         (syntax-violation
                           'syntax
                           "bad `syntax' form"
                           #{e\ 2924}#))
                       #{tmp\ 2925}#)))
                  ($sc-dispatch #{tmp\ 2925}# (quote (any any)))))
               #{e\ 2924}#)))))
      (#{global-extend\ 242}#
        'core
        'lambda
        (lambda (#{e\ 2937}#
                 #{r\ 2938}#
                 #{w\ 2939}#
                 #{s\ 2940}#
                 #{mod\ 2941}#)
          ((lambda (#{tmp\ 2947}#)
             ((lambda (#{tmp\ 2948}#)
                (if #{tmp\ 2948}#
                  (apply (lambda (#{_\ 2953}#
                                  #{args\ 2954}#
                                  #{e1\ 2955}#
                                  #{e2\ 2956}#)
                           (call-with-values
                             (lambda ()
                               (#{lambda-formals\ 349}# #{args\ 2954}#))
                             (lambda (#{req\ 2957}#
                                      #{opt\ 2958}#
                                      #{rest\ 2959}#
                                      #{kw\ 2960}#)
                               (letrec ((#{lp\ 2968}#
                                          (lambda (#{body\ 2969}#
                                                   #{meta\ 2970}#)
                                            ((lambda (#{tmp\ 2972}#)
                                               ((lambda (#{tmp\ 2973}#)
                                                  (if (if #{tmp\ 2973}#
                                                        (apply (lambda (#{docstring\ 2977}#
                                                                        #{e1\ 2978}#
                                                                        #{e2\ 2979}#)
                                                                 (string?
                                                                   (syntax->datum
                                                                     #{docstring\ 2977}#)))
                                                               #{tmp\ 2973}#)
                                                        #f)
                                                    (apply (lambda (#{docstring\ 2983}#
                                                                    #{e1\ 2984}#
                                                                    #{e2\ 2985}#)
                                                             (#{lp\ 2968}#
                                                               (cons #{e1\ 2984}#
                                                                     #{e2\ 2985}#)
                                                               (append
                                                                 #{meta\ 2970}#
                                                                 (list (cons 'documentation
                                                                             (syntax->datum
                                                                               #{docstring\ 2983}#))))))
                                                           #{tmp\ 2973}#)
                                                    ((lambda (#{_\ 2989}#)
                                                       (#{chi-simple-lambda\ 351}#
                                                         #{e\ 2937}#
                                                         #{r\ 2938}#
                                                         #{w\ 2939}#
                                                         #{s\ 2940}#
                                                         #{mod\ 2941}#
                                                         #{req\ 2957}#
                                                         #{rest\ 2959}#
                                                         #{meta\ 2970}#
                                                         #{body\ 2969}#))
                                                     #{tmp\ 2972}#)))
                                                ($sc-dispatch
                                                  #{tmp\ 2972}#
                                                  '(any any . each-any))))
                                             #{body\ 2969}#))))
                                 (#{lp\ 2968}#
                                   (cons #{e1\ 2955}# #{e2\ 2956}#)
                                   '())))))
                         #{tmp\ 2948}#)
                  ((lambda (#{_\ 2991}#)
                     (syntax-violation
                       'lambda
                       "bad lambda"
                       #{e\ 2937}#))
                   #{tmp\ 2947}#)))
              ($sc-dispatch
                #{tmp\ 2947}#
                '(any any any . each-any))))
           #{e\ 2937}#)))
      (#{global-extend\ 242}#
        'core
        'lambda*
        (lambda (#{e\ 2992}#
                 #{r\ 2993}#
                 #{w\ 2994}#
                 #{s\ 2995}#
                 #{mod\ 2996}#)
          ((lambda (#{tmp\ 3002}#)
             ((lambda (#{tmp\ 3003}#)
                (if #{tmp\ 3003}#
                  (apply (lambda (#{_\ 3008}#
                                  #{args\ 3009}#
                                  #{e1\ 3010}#
                                  #{e2\ 3011}#)
                           (call-with-values
                             (lambda ()
                               (#{chi-lambda-case\ 355}#
                                 #{e\ 2992}#
                                 #{r\ 2993}#
                                 #{w\ 2994}#
                                 #{s\ 2995}#
                                 #{mod\ 2996}#
                                 #{lambda*-formals\ 353}#
                                 (list (cons #{args\ 3009}#
                                             (cons #{e1\ 3010}#
                                                   #{e2\ 3011}#)))))
                             (lambda (#{meta\ 3013}# #{lcase\ 3014}#)
                               (#{build-case-lambda\ 190}#
                                 #{s\ 2995}#
                                 #{meta\ 3013}#
                                 #{lcase\ 3014}#))))
                         #{tmp\ 3003}#)
                  ((lambda (#{_\ 3018}#)
                     (syntax-violation
                       'lambda
                       "bad lambda*"
                       #{e\ 2992}#))
                   #{tmp\ 3002}#)))
              ($sc-dispatch
                #{tmp\ 3002}#
                '(any any any . each-any))))
           #{e\ 2992}#)))
      (#{global-extend\ 242}#
        'core
        'case-lambda
        (lambda (#{e\ 3019}#
                 #{r\ 3020}#
                 #{w\ 3021}#
                 #{s\ 3022}#
                 #{mod\ 3023}#)
          ((lambda (#{tmp\ 3029}#)
             ((lambda (#{tmp\ 3030}#)
                (if #{tmp\ 3030}#
                  (apply (lambda (#{_\ 3038}#
                                  #{args\ 3039}#
                                  #{e1\ 3040}#
                                  #{e2\ 3041}#
                                  #{args*\ 3042}#
                                  #{e1*\ 3043}#
                                  #{e2*\ 3044}#)
                           (call-with-values
                             (lambda ()
                               (#{chi-lambda-case\ 355}#
                                 #{e\ 3019}#
                                 #{r\ 3020}#
                                 #{w\ 3021}#
                                 #{s\ 3022}#
                                 #{mod\ 3023}#
                                 #{lambda-formals\ 349}#
                                 (cons (cons #{args\ 3039}#
                                             (cons #{e1\ 3040}# #{e2\ 3041}#))
                                       (map (lambda (#{tmp\ 3048}#
                                                     #{tmp\ 3047}#
                                                     #{tmp\ 3046}#)
                                              (cons #{tmp\ 3046}#
                                                    (cons #{tmp\ 3047}#
                                                          #{tmp\ 3048}#)))
                                            #{e2*\ 3044}#
                                            #{e1*\ 3043}#
                                            #{args*\ 3042}#))))
                             (lambda (#{meta\ 3050}# #{lcase\ 3051}#)
                               (#{build-case-lambda\ 190}#
                                 #{s\ 3022}#
                                 #{meta\ 3050}#
                                 #{lcase\ 3051}#))))
                         #{tmp\ 3030}#)
                  ((lambda (#{_\ 3055}#)
                     (syntax-violation
                       'case-lambda
                       "bad case-lambda"
                       #{e\ 3019}#))
                   #{tmp\ 3029}#)))
              ($sc-dispatch
                #{tmp\ 3029}#
                '(any (any any . each-any)
                      .
                      #(each (any any . each-any))))))
           #{e\ 3019}#)))
      (#{global-extend\ 242}#
        'core
        'case-lambda*
        (lambda (#{e\ 3056}#
                 #{r\ 3057}#
                 #{w\ 3058}#
                 #{s\ 3059}#
                 #{mod\ 3060}#)
          ((lambda (#{tmp\ 3066}#)
             ((lambda (#{tmp\ 3067}#)
                (if #{tmp\ 3067}#
                  (apply (lambda (#{_\ 3075}#
                                  #{args\ 3076}#
                                  #{e1\ 3077}#
                                  #{e2\ 3078}#
                                  #{args*\ 3079}#
                                  #{e1*\ 3080}#
                                  #{e2*\ 3081}#)
                           (call-with-values
                             (lambda ()
                               (#{chi-lambda-case\ 355}#
                                 #{e\ 3056}#
                                 #{r\ 3057}#
                                 #{w\ 3058}#
                                 #{s\ 3059}#
                                 #{mod\ 3060}#
                                 #{lambda*-formals\ 353}#
                                 (cons (cons #{args\ 3076}#
                                             (cons #{e1\ 3077}# #{e2\ 3078}#))
                                       (map (lambda (#{tmp\ 3085}#
                                                     #{tmp\ 3084}#
                                                     #{tmp\ 3083}#)
                                              (cons #{tmp\ 3083}#
                                                    (cons #{tmp\ 3084}#
                                                          #{tmp\ 3085}#)))
                                            #{e2*\ 3081}#
                                            #{e1*\ 3080}#
                                            #{args*\ 3079}#))))
                             (lambda (#{meta\ 3087}# #{lcase\ 3088}#)
                               (#{build-case-lambda\ 190}#
                                 #{s\ 3059}#
                                 #{meta\ 3087}#
                                 #{lcase\ 3088}#))))
                         #{tmp\ 3067}#)
                  ((lambda (#{_\ 3092}#)
                     (syntax-violation
                       'case-lambda
                       "bad case-lambda*"
                       #{e\ 3056}#))
                   #{tmp\ 3066}#)))
              ($sc-dispatch
                #{tmp\ 3066}#
                '(any (any any . each-any)
                      .
                      #(each (any any . each-any))))))
           #{e\ 3056}#)))
      (#{global-extend\ 242}#
        'core
        'let
        (letrec ((#{chi-let\ 3094}#
                   (lambda (#{e\ 3095}#
                            #{r\ 3096}#
                            #{w\ 3097}#
                            #{s\ 3098}#
                            #{mod\ 3099}#
                            #{constructor\ 3100}#
                            #{ids\ 3101}#
                            #{vals\ 3102}#
                            #{exps\ 3103}#)
                     (if (not (#{valid-bound-ids?\ 309}# #{ids\ 3101}#))
                       (syntax-violation
                         'let
                         "duplicate bound variable"
                         #{e\ 3095}#)
                       (let ((#{labels\ 3115}#
                               (#{gen-labels\ 264}# #{ids\ 3101}#))
                             (#{new-vars\ 3116}#
                               (map #{gen-var\ 359}# #{ids\ 3101}#)))
                         (let ((#{nw\ 3119}#
                                 (#{make-binding-wrap\ 293}#
                                   #{ids\ 3101}#
                                   #{labels\ 3115}#
                                   #{w\ 3097}#))
                               (#{nr\ 3120}#
                                 (#{extend-var-env\ 236}#
                                   #{labels\ 3115}#
                                   #{new-vars\ 3116}#
                                   #{r\ 3096}#)))
                           (#{constructor\ 3100}#
                             #{s\ 3098}#
                             (map syntax->datum #{ids\ 3101}#)
                             #{new-vars\ 3116}#
                             (map (lambda (#{x\ 3121}#)
                                    (#{chi\ 331}#
                                      #{x\ 3121}#
                                      #{r\ 3096}#
                                      #{w\ 3097}#
                                      #{mod\ 3099}#))
                                  #{vals\ 3102}#)
                             (#{chi-body\ 339}#
                               #{exps\ 3103}#
                               (#{source-wrap\ 317}#
                                 #{e\ 3095}#
                                 #{nw\ 3119}#
                                 #{s\ 3098}#
                                 #{mod\ 3099}#)
                               #{nr\ 3120}#
                               #{nw\ 3119}#
                               #{mod\ 3099}#))))))))
          (lambda (#{e\ 3123}#
                   #{r\ 3124}#
                   #{w\ 3125}#
                   #{s\ 3126}#
                   #{mod\ 3127}#)
            ((lambda (#{tmp\ 3133}#)
               ((lambda (#{tmp\ 3134}#)
                  (if (if #{tmp\ 3134}#
                        (apply (lambda (#{_\ 3140}#
                                        #{id\ 3141}#
                                        #{val\ 3142}#
                                        #{e1\ 3143}#
                                        #{e2\ 3144}#)
                                 (and-map #{id?\ 246}# #{id\ 3141}#))
                               #{tmp\ 3134}#)
                        #f)
                    (apply (lambda (#{_\ 3151}#
                                    #{id\ 3152}#
                                    #{val\ 3153}#
                                    #{e1\ 3154}#
                                    #{e2\ 3155}#)
                             (#{chi-let\ 3094}#
                               #{e\ 3123}#
                               #{r\ 3124}#
                               #{w\ 3125}#
                               #{s\ 3126}#
                               #{mod\ 3127}#
                               #{build-let\ 200}#
                               #{id\ 3152}#
                               #{val\ 3153}#
                               (cons #{e1\ 3154}# #{e2\ 3155}#)))
                           #{tmp\ 3134}#)
                    ((lambda (#{tmp\ 3159}#)
                       (if (if #{tmp\ 3159}#
                             (apply (lambda (#{_\ 3166}#
                                             #{f\ 3167}#
                                             #{id\ 3168}#
                                             #{val\ 3169}#
                                             #{e1\ 3170}#
                                             #{e2\ 3171}#)
                                      (if (#{id?\ 246}# #{f\ 3167}#)
                                        (and-map #{id?\ 246}# #{id\ 3168}#)
                                        #f))
                                    #{tmp\ 3159}#)
                             #f)
                         (apply (lambda (#{_\ 3181}#
                                         #{f\ 3182}#
                                         #{id\ 3183}#
                                         #{val\ 3184}#
                                         #{e1\ 3185}#
                                         #{e2\ 3186}#)
                                  (#{chi-let\ 3094}#
                                    #{e\ 3123}#
                                    #{r\ 3124}#
                                    #{w\ 3125}#
                                    #{s\ 3126}#
                                    #{mod\ 3127}#
                                    #{build-named-let\ 202}#
                                    (cons #{f\ 3182}# #{id\ 3183}#)
                                    #{val\ 3184}#
                                    (cons #{e1\ 3185}# #{e2\ 3186}#)))
                                #{tmp\ 3159}#)
                         ((lambda (#{_\ 3191}#)
                            (syntax-violation
                              'let
                              "bad let"
                              (#{source-wrap\ 317}#
                                #{e\ 3123}#
                                #{w\ 3125}#
                                #{s\ 3126}#
                                #{mod\ 3127}#)))
                          #{tmp\ 3133}#)))
                     ($sc-dispatch
                       #{tmp\ 3133}#
                       '(any any #(each (any any)) any . each-any)))))
                ($sc-dispatch
                  #{tmp\ 3133}#
                  '(any #(each (any any)) any . each-any))))
             #{e\ 3123}#))))
      (#{global-extend\ 242}#
        'core
        'letrec
        (lambda (#{e\ 3192}#
                 #{r\ 3193}#
                 #{w\ 3194}#
                 #{s\ 3195}#
                 #{mod\ 3196}#)
          ((lambda (#{tmp\ 3202}#)
             ((lambda (#{tmp\ 3203}#)
                (if (if #{tmp\ 3203}#
                      (apply (lambda (#{_\ 3209}#
                                      #{id\ 3210}#
                                      #{val\ 3211}#
                                      #{e1\ 3212}#
                                      #{e2\ 3213}#)
                               (and-map #{id?\ 246}# #{id\ 3210}#))
                             #{tmp\ 3203}#)
                      #f)
                  (apply (lambda (#{_\ 3220}#
                                  #{id\ 3221}#
                                  #{val\ 3222}#
                                  #{e1\ 3223}#
                                  #{e2\ 3224}#)
                           (let ((#{ids\ 3226}# #{id\ 3221}#))
                             (if (not (#{valid-bound-ids?\ 309}#
                                        #{ids\ 3226}#))
                               (syntax-violation
                                 'letrec
                                 "duplicate bound variable"
                                 #{e\ 3192}#)
                               (let ((#{labels\ 3230}#
                                       (#{gen-labels\ 264}# #{ids\ 3226}#))
                                     (#{new-vars\ 3231}#
                                       (map #{gen-var\ 359}# #{ids\ 3226}#)))
                                 (let ((#{w\ 3234}#
                                         (#{make-binding-wrap\ 293}#
                                           #{ids\ 3226}#
                                           #{labels\ 3230}#
                                           #{w\ 3194}#))
                                       (#{r\ 3235}#
                                         (#{extend-var-env\ 236}#
                                           #{labels\ 3230}#
                                           #{new-vars\ 3231}#
                                           #{r\ 3193}#)))
                                   (#{build-letrec\ 204}#
                                     #{s\ 3195}#
                                     (map syntax->datum #{ids\ 3226}#)
                                     #{new-vars\ 3231}#
                                     (map (lambda (#{x\ 3236}#)
                                            (#{chi\ 331}#
                                              #{x\ 3236}#
                                              #{r\ 3235}#
                                              #{w\ 3234}#
                                              #{mod\ 3196}#))
                                          #{val\ 3222}#)
                                     (#{chi-body\ 339}#
                                       (cons #{e1\ 3223}# #{e2\ 3224}#)
                                       (#{source-wrap\ 317}#
                                         #{e\ 3192}#
                                         #{w\ 3234}#
                                         #{s\ 3195}#
                                         #{mod\ 3196}#)
                                       #{r\ 3235}#
                                       #{w\ 3234}#
                                       #{mod\ 3196}#)))))))
                         #{tmp\ 3203}#)
                  ((lambda (#{_\ 3241}#)
                     (syntax-violation
                       'letrec
                       "bad letrec"
                       (#{source-wrap\ 317}#
                         #{e\ 3192}#
                         #{w\ 3194}#
                         #{s\ 3195}#
                         #{mod\ 3196}#)))
                   #{tmp\ 3202}#)))
              ($sc-dispatch
                #{tmp\ 3202}#
                '(any #(each (any any)) any . each-any))))
           #{e\ 3192}#)))
      (#{global-extend\ 242}#
        'core
        'set!
        (lambda (#{e\ 3242}#
                 #{r\ 3243}#
                 #{w\ 3244}#
                 #{s\ 3245}#
                 #{mod\ 3246}#)
          ((lambda (#{tmp\ 3252}#)
             ((lambda (#{tmp\ 3253}#)
                (if (if #{tmp\ 3253}#
                      (apply (lambda (#{_\ 3257}# #{id\ 3258}# #{val\ 3259}#)
                               (#{id?\ 246}# #{id\ 3258}#))
                             #{tmp\ 3253}#)
                      #f)
                  (apply (lambda (#{_\ 3263}# #{id\ 3264}# #{val\ 3265}#)
                           (let ((#{val\ 3268}#
                                   (#{chi\ 331}#
                                     #{val\ 3265}#
                                     #{r\ 3243}#
                                     #{w\ 3244}#
                                     #{mod\ 3246}#))
                                 (#{n\ 3269}#
                                   (#{id-var-name\ 303}#
                                     #{id\ 3264}#
                                     #{w\ 3244}#)))
                             (let ((#{b\ 3271}#
                                     (#{lookup\ 240}#
                                       #{n\ 3269}#
                                       #{r\ 3243}#
                                       #{mod\ 3246}#)))
                               (let ((#{atom-key\ 3274}#
                                       (#{binding-type\ 229}# #{b\ 3271}#)))
                                 (if (memv #{atom-key\ 3274}#
                                           '(lexical))
                                   (#{build-lexical-assignment\ 176}#
                                     #{s\ 3245}#
                                     (syntax->datum #{id\ 3264}#)
                                     (#{binding-value\ 231}# #{b\ 3271}#)
                                     #{val\ 3268}#)
                                   (if (memv #{atom-key\ 3274}#
                                             '(global))
                                     (#{build-global-assignment\ 182}#
                                       #{s\ 3245}#
                                       #{n\ 3269}#
                                       #{val\ 3268}#
                                       #{mod\ 3246}#)
                                     (if (memv #{atom-key\ 3274}#
                                               '(displaced-lexical))
                                       (syntax-violation
                                         'set!
                                         "identifier out of context"
                                         (#{wrap\ 315}#
                                           #{id\ 3264}#
                                           #{w\ 3244}#
                                           #{mod\ 3246}#))
                                       (syntax-violation
                                         'set!
                                         "bad set!"
                                         (#{source-wrap\ 317}#
                                           #{e\ 3242}#
                                           #{w\ 3244}#
                                           #{s\ 3245}#
                                           #{mod\ 3246}#)))))))))
                         #{tmp\ 3253}#)
                  ((lambda (#{tmp\ 3279}#)
                     (if #{tmp\ 3279}#
                       (apply (lambda (#{_\ 3284}#
                                       #{head\ 3285}#
                                       #{tail\ 3286}#
                                       #{val\ 3287}#)
                                (call-with-values
                                  (lambda ()
                                    (#{syntax-type\ 327}#
                                      #{head\ 3285}#
                                      #{r\ 3243}#
                                      '(())
                                      #f
                                      #f
                                      #{mod\ 3246}#
                                      #t))
                                  (lambda (#{type\ 3290}#
                                           #{value\ 3291}#
                                           #{ee\ 3292}#
                                           #{ww\ 3293}#
                                           #{ss\ 3294}#
                                           #{modmod\ 3295}#)
                                    (if (memv #{type\ 3290}#
                                              '(module-ref))
                                      (let ((#{val\ 3304}#
                                              (#{chi\ 331}#
                                                #{val\ 3287}#
                                                #{r\ 3243}#
                                                #{w\ 3244}#
                                                #{mod\ 3246}#)))
                                        (call-with-values
                                          (lambda ()
                                            (#{value\ 3291}#
                                              (cons #{head\ 3285}#
                                                    #{tail\ 3286}#)))
                                          (lambda (#{id\ 3306}# #{mod\ 3307}#)
                                            (#{build-global-assignment\ 182}#
                                              #{s\ 3245}#
                                              #{id\ 3306}#
                                              #{val\ 3304}#
                                              #{mod\ 3307}#))))
                                      (#{build-application\ 168}#
                                        #{s\ 3245}#
                                        (#{chi\ 331}#
                                          (list '#(syntax-object
                                                   setter
                                                   ((top)
                                                    #(ribcage () () ())
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(type
                                                        value
                                                        ee
                                                        ww
                                                        ss
                                                        modmod)
                                                      #((top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top))
                                                      #("i3296"
                                                        "i3297"
                                                        "i3298"
                                                        "i3299"
                                                        "i3300"
                                                        "i3301"))
                                                    #(ribcage
                                                      #(_ head tail val)
                                                      #((top)
                                                        (top)
                                                        (top)
                                                        (top))
                                                      #("i3280"
                                                        "i3281"
                                                        "i3282"
                                                        "i3283"))
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(e r w s mod)
                                                      #((top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top))
                                                      #("i3247"
                                                        "i3248"
                                                        "i3249"
                                                        "i3250"
                                                        "i3251"))
                                                    #(ribcage
                                                      (lambda-var-list
                                                        gen-var
                                                        strip
                                                        chi-lambda-case
                                                        lambda*-formals
                                                        chi-simple-lambda
                                                        lambda-formals
                                                        ellipsis?
                                                        chi-void
                                                        eval-local-transformer
                                                        chi-local-syntax
                                                        chi-body
                                                        chi-macro
                                                        chi-application
                                                        chi-expr
                                                        chi
                                                        chi-top
                                                        syntax-type
                                                        chi-when-list
                                                        chi-install-global
                                                        chi-top-sequence
                                                        chi-sequence
                                                        source-wrap
                                                        wrap
                                                        bound-id-member?
                                                        distinct-bound-ids?
                                                        valid-bound-ids?
                                                        bound-id=?
                                                        free-id=?
                                                        id-var-name
                                                        same-marks?
                                                        join-marks
                                                        join-wraps
                                                        smart-append
                                                        make-binding-wrap
                                                        extend-ribcage!
                                                        make-empty-ribcage
                                                        new-mark
                                                        anti-mark
                                                        the-anti-mark
                                                        top-marked?
                                                        top-wrap
                                                        empty-wrap
                                                        set-ribcage-labels!
                                                        set-ribcage-marks!
                                                        set-ribcage-symnames!
                                                        ribcage-labels
                                                        ribcage-marks
                                                        ribcage-symnames
                                                        ribcage?
                                                        make-ribcage
                                                        gen-labels
                                                        gen-label
                                                        make-rename
                                                        rename-marks
                                                        rename-new
                                                        rename-old
                                                        subst-rename?
                                                        wrap-subst
                                                        wrap-marks
                                                        make-wrap
                                                        id-sym-name&marks
                                                        id-sym-name
                                                        id?
                                                        nonsymbol-id?
                                                        global-extend
                                                        lookup
                                                        macros-only-env
                                                        extend-var-env
                                                        extend-env
                                                        null-env
                                                        binding-value
                                                        binding-type
                                                        make-binding
                                                        arg-check
                                                        source-annotation
                                                        no-source
                                                        set-syntax-object-module!
                                                        set-syntax-object-wrap!
                                                        set-syntax-object-expression!
                                                        syntax-object-module
                                                        syntax-object-wrap
                                                        syntax-object-expression
                                                        syntax-object?
                                                        make-syntax-object
                                                        build-lexical-var
                                                        build-letrec
                                                        build-named-let
                                                        build-let
                                                        build-sequence
                                                        build-data
                                                        build-primref
                                                        build-lambda-case
                                                        build-case-lambda
                                                        build-simple-lambda
                                                        build-global-definition
                                                        maybe-name-value!
                                                        build-global-assignment
                                                        build-global-reference
                                                        analyze-variable
                                                        build-lexical-assignment
                                                        build-lexical-reference
                                                        build-dynlet
                                                        build-conditional
                                                        build-application
                                                        build-void
                                                        decorate-source
                                                        get-global-definition-hook
                                                        put-global-definition-hook
                                                        gensym-hook
                                                        local-eval-hook
                                                        top-level-eval-hook
                                                        fx<
                                                        fx=
                                                        fx-
                                                        fx+
                                                        *mode*
                                                        noexpand)
                                                      ((top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top))
                                                      ("i360"
                                                       "i358"
                                                       "i356"
                                                       "i354"
                                                       "i352"
                                                       "i350"
                                                       "i348"
                                                       "i346"
                                                       "i344"
                                                       "i342"
                                                       "i340"
                                                       "i338"
                                                       "i336"
                                                       "i334"
                                                       "i332"
                                                       "i330"
                                                       "i328"
                                                       "i326"
                                                       "i324"
                                                       "i322"
                                                       "i320"
                                                       "i318"
                                                       "i316"
                                                       "i314"
                                                       "i312"
                                                       "i310"
                                                       "i308"
                                                       "i306"
                                                       "i304"
                                                       "i302"
                                                       "i300"
                                                       "i298"
                                                       "i296"
                                                       "i294"
                                                       "i292"
                                                       "i290"
                                                       "i289"
                                                       "i288"
                                                       "i286"
                                                       "i285"
                                                       "i284"
                                                       "i283"
                                                       "i282"
                                                       "i280"
                                                       "i278"
                                                       "i276"
                                                       "i274"
                                                       "i272"
                                                       "i270"
                                                       "i268"
                                                       "i266"
                                                       "i263"
                                                       "i261"
                                                       "i260"
                                                       "i259"
                                                       "i258"
                                                       "i257"
                                                       "i256"
                                                       "i254"
                                                       "i252"
                                                       "i250"
                                                       "i248"
                                                       "i247"
                                                       "i245"
                                                       "i243"
                                                       "i241"
                                                       "i239"
                                                       "i237"
                                                       "i235"
                                                       "i233"
                                                       "i232"
                                                       "i230"
                                                       "i228"
                                                       "i227"
                                                       "i226"
                                                       "i224"
                                                       "i223"
                                                       "i221"
                                                       "i219"
                                                       "i217"
                                                       "i215"
                                                       "i213"
                                                       "i211"
                                                       "i209"
                                                       "i207"
                                                       "i205"
                                                       "i203"
                                                       "i201"
                                                       "i199"
                                                       "i197"
                                                       "i195"
                                                       "i193"
                                                       "i191"
                                                       "i189"
                                                       "i187"
                                                       "i185"
                                                       "i183"
                                                       "i181"
                                                       "i179"
                                                       "i177"
                                                       "i175"
                                                       "i173"
                                                       "i171"
                                                       "i169"
                                                       "i167"
                                                       "i165"
                                                       "i163"
                                                       "i161"
                                                       "i159"
                                                       "i158"
                                                       "i156"
                                                       "i154"
                                                       "i152"
                                                       "i150"
                                                       "i148"
                                                       "i146"
                                                       "i144"
                                                       "i142"))
                                                    #(ribcage
                                                      (define-structure
                                                        and-map*)
                                                      ((top) (top))
                                                      ("i45" "i43")))
                                                   (hygiene guile))
                                                #{head\ 3285}#)
                                          #{r\ 3243}#
                                          #{w\ 3244}#
                                          #{mod\ 3246}#)
                                        (map (lambda (#{e\ 3311}#)
                                               (#{chi\ 331}#
                                                 #{e\ 3311}#
                                                 #{r\ 3243}#
                                                 #{w\ 3244}#
                                                 #{mod\ 3246}#))
                                             (append
                                               #{tail\ 3286}#
                                               (list #{val\ 3287}#))))))))
                              #{tmp\ 3279}#)
                       ((lambda (#{_\ 3315}#)
                          (syntax-violation
                            'set!
                            "bad set!"
                            (#{source-wrap\ 317}#
                              #{e\ 3242}#
                              #{w\ 3244}#
                              #{s\ 3245}#
                              #{mod\ 3246}#)))
                        #{tmp\ 3252}#)))
                   ($sc-dispatch
                     #{tmp\ 3252}#
                     '(any (any . each-any) any)))))
              ($sc-dispatch
                #{tmp\ 3252}#
                '(any any any))))
           #{e\ 3242}#)))
      (#{global-extend\ 242}#
        'module-ref
        '@
        (lambda (#{e\ 3316}#)
          ((lambda (#{tmp\ 3318}#)
             ((lambda (#{tmp\ 3319}#)
                (if (if #{tmp\ 3319}#
                      (apply (lambda (#{_\ 3323}# #{mod\ 3324}# #{id\ 3325}#)
                               (if (and-map #{id?\ 246}# #{mod\ 3324}#)
                                 (#{id?\ 246}# #{id\ 3325}#)
                                 #f))
                             #{tmp\ 3319}#)
                      #f)
                  (apply (lambda (#{_\ 3332}# #{mod\ 3333}# #{id\ 3334}#)
                           (values
                             (syntax->datum #{id\ 3334}#)
                             (syntax->datum
                               (cons '#(syntax-object
                                        public
                                        ((top)
                                         #(ribcage
                                           #(_ mod id)
                                           #((top) (top) (top))
                                           #("i3329" "i3330" "i3331"))
                                         #(ribcage () () ())
                                         #(ribcage #(e) #((top)) #("i3317"))
                                         #(ribcage
                                           (lambda-var-list
                                             gen-var
                                             strip
                                             chi-lambda-case
                                             lambda*-formals
                                             chi-simple-lambda
                                             lambda-formals
                                             ellipsis?
                                             chi-void
                                             eval-local-transformer
                                             chi-local-syntax
                                             chi-body
                                             chi-macro
                                             chi-application
                                             chi-expr
                                             chi
                                             chi-top
                                             syntax-type
                                             chi-when-list
                                             chi-install-global
                                             chi-top-sequence
                                             chi-sequence
                                             source-wrap
                                             wrap
                                             bound-id-member?
                                             distinct-bound-ids?
                                             valid-bound-ids?
                                             bound-id=?
                                             free-id=?
                                             id-var-name
                                             same-marks?
                                             join-marks
                                             join-wraps
                                             smart-append
                                             make-binding-wrap
                                             extend-ribcage!
                                             make-empty-ribcage
                                             new-mark
                                             anti-mark
                                             the-anti-mark
                                             top-marked?
                                             top-wrap
                                             empty-wrap
                                             set-ribcage-labels!
                                             set-ribcage-marks!
                                             set-ribcage-symnames!
                                             ribcage-labels
                                             ribcage-marks
                                             ribcage-symnames
                                             ribcage?
                                             make-ribcage
                                             gen-labels
                                             gen-label
                                             make-rename
                                             rename-marks
                                             rename-new
                                             rename-old
                                             subst-rename?
                                             wrap-subst
                                             wrap-marks
                                             make-wrap
                                             id-sym-name&marks
                                             id-sym-name
                                             id?
                                             nonsymbol-id?
                                             global-extend
                                             lookup
                                             macros-only-env
                                             extend-var-env
                                             extend-env
                                             null-env
                                             binding-value
                                             binding-type
                                             make-binding
                                             arg-check
                                             source-annotation
                                             no-source
                                             set-syntax-object-module!
                                             set-syntax-object-wrap!
                                             set-syntax-object-expression!
                                             syntax-object-module
                                             syntax-object-wrap
                                             syntax-object-expression
                                             syntax-object?
                                             make-syntax-object
                                             build-lexical-var
                                             build-letrec
                                             build-named-let
                                             build-let
                                             build-sequence
                                             build-data
                                             build-primref
                                             build-lambda-case
                                             build-case-lambda
                                             build-simple-lambda
                                             build-global-definition
                                             maybe-name-value!
                                             build-global-assignment
                                             build-global-reference
                                             analyze-variable
                                             build-lexical-assignment
                                             build-lexical-reference
                                             build-dynlet
                                             build-conditional
                                             build-application
                                             build-void
                                             decorate-source
                                             get-global-definition-hook
                                             put-global-definition-hook
                                             gensym-hook
                                             local-eval-hook
                                             top-level-eval-hook
                                             fx<
                                             fx=
                                             fx-
                                             fx+
                                             *mode*
                                             noexpand)
                                           ((top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top))
                                           ("i360"
                                            "i358"
                                            "i356"
                                            "i354"
                                            "i352"
                                            "i350"
                                            "i348"
                                            "i346"
                                            "i344"
                                            "i342"
                                            "i340"
                                            "i338"
                                            "i336"
                                            "i334"
                                            "i332"
                                            "i330"
                                            "i328"
                                            "i326"
                                            "i324"
                                            "i322"
                                            "i320"
                                            "i318"
                                            "i316"
                                            "i314"
                                            "i312"
                                            "i310"
                                            "i308"
                                            "i306"
                                            "i304"
                                            "i302"
                                            "i300"
                                            "i298"
                                            "i296"
                                            "i294"
                                            "i292"
                                            "i290"
                                            "i289"
                                            "i288"
                                            "i286"
                                            "i285"
                                            "i284"
                                            "i283"
                                            "i282"
                                            "i280"
                                            "i278"
                                            "i276"
                                            "i274"
                                            "i272"
                                            "i270"
                                            "i268"
                                            "i266"
                                            "i263"
                                            "i261"
                                            "i260"
                                            "i259"
                                            "i258"
                                            "i257"
                                            "i256"
                                            "i254"
                                            "i252"
                                            "i250"
                                            "i248"
                                            "i247"
                                            "i245"
                                            "i243"
                                            "i241"
                                            "i239"
                                            "i237"
                                            "i235"
                                            "i233"
                                            "i232"
                                            "i230"
                                            "i228"
                                            "i227"
                                            "i226"
                                            "i224"
                                            "i223"
                                            "i221"
                                            "i219"
                                            "i217"
                                            "i215"
                                            "i213"
                                            "i211"
                                            "i209"
                                            "i207"
                                            "i205"
                                            "i203"
                                            "i201"
                                            "i199"
                                            "i197"
                                            "i195"
                                            "i193"
                                            "i191"
                                            "i189"
                                            "i187"
                                            "i185"
                                            "i183"
                                            "i181"
                                            "i179"
                                            "i177"
                                            "i175"
                                            "i173"
                                            "i171"
                                            "i169"
                                            "i167"
                                            "i165"
                                            "i163"
                                            "i161"
                                            "i159"
                                            "i158"
                                            "i156"
                                            "i154"
                                            "i152"
                                            "i150"
                                            "i148"
                                            "i146"
                                            "i144"
                                            "i142"))
                                         #(ribcage
                                           (define-structure and-map*)
                                           ((top) (top))
                                           ("i45" "i43")))
                                        (hygiene guile))
                                     #{mod\ 3333}#))))
                         #{tmp\ 3319}#)
                  (syntax-violation
                    #f
                    "source expression failed to match any pattern"
                    #{tmp\ 3318}#)))
              ($sc-dispatch
                #{tmp\ 3318}#
                '(any each-any any))))
           #{e\ 3316}#)))
      (#{global-extend\ 242}#
        'module-ref
        '@@
        (lambda (#{e\ 3336}#)
          ((lambda (#{tmp\ 3338}#)
             ((lambda (#{tmp\ 3339}#)
                (if (if #{tmp\ 3339}#
                      (apply (lambda (#{_\ 3343}# #{mod\ 3344}# #{id\ 3345}#)
                               (if (and-map #{id?\ 246}# #{mod\ 3344}#)
                                 (#{id?\ 246}# #{id\ 3345}#)
                                 #f))
                             #{tmp\ 3339}#)
                      #f)
                  (apply (lambda (#{_\ 3352}# #{mod\ 3353}# #{id\ 3354}#)
                           (values
                             (syntax->datum #{id\ 3354}#)
                             (syntax->datum
                               (cons '#(syntax-object
                                        private
                                        ((top)
                                         #(ribcage
                                           #(_ mod id)
                                           #((top) (top) (top))
                                           #("i3349" "i3350" "i3351"))
                                         #(ribcage () () ())
                                         #(ribcage #(e) #((top)) #("i3337"))
                                         #(ribcage
                                           (lambda-var-list
                                             gen-var
                                             strip
                                             chi-lambda-case
                                             lambda*-formals
                                             chi-simple-lambda
                                             lambda-formals
                                             ellipsis?
                                             chi-void
                                             eval-local-transformer
                                             chi-local-syntax
                                             chi-body
                                             chi-macro
                                             chi-application
                                             chi-expr
                                             chi
                                             chi-top
                                             syntax-type
                                             chi-when-list
                                             chi-install-global
                                             chi-top-sequence
                                             chi-sequence
                                             source-wrap
                                             wrap
                                             bound-id-member?
                                             distinct-bound-ids?
                                             valid-bound-ids?
                                             bound-id=?
                                             free-id=?
                                             id-var-name
                                             same-marks?
                                             join-marks
                                             join-wraps
                                             smart-append
                                             make-binding-wrap
                                             extend-ribcage!
                                             make-empty-ribcage
                                             new-mark
                                             anti-mark
                                             the-anti-mark
                                             top-marked?
                                             top-wrap
                                             empty-wrap
                                             set-ribcage-labels!
                                             set-ribcage-marks!
                                             set-ribcage-symnames!
                                             ribcage-labels
                                             ribcage-marks
                                             ribcage-symnames
                                             ribcage?
                                             make-ribcage
                                             gen-labels
                                             gen-label
                                             make-rename
                                             rename-marks
                                             rename-new
                                             rename-old
                                             subst-rename?
                                             wrap-subst
                                             wrap-marks
                                             make-wrap
                                             id-sym-name&marks
                                             id-sym-name
                                             id?
                                             nonsymbol-id?
                                             global-extend
                                             lookup
                                             macros-only-env
                                             extend-var-env
                                             extend-env
                                             null-env
                                             binding-value
                                             binding-type
                                             make-binding
                                             arg-check
                                             source-annotation
                                             no-source
                                             set-syntax-object-module!
                                             set-syntax-object-wrap!
                                             set-syntax-object-expression!
                                             syntax-object-module
                                             syntax-object-wrap
                                             syntax-object-expression
                                             syntax-object?
                                             make-syntax-object
                                             build-lexical-var
                                             build-letrec
                                             build-named-let
                                             build-let
                                             build-sequence
                                             build-data
                                             build-primref
                                             build-lambda-case
                                             build-case-lambda
                                             build-simple-lambda
                                             build-global-definition
                                             maybe-name-value!
                                             build-global-assignment
                                             build-global-reference
                                             analyze-variable
                                             build-lexical-assignment
                                             build-lexical-reference
                                             build-dynlet
                                             build-conditional
                                             build-application
                                             build-void
                                             decorate-source
                                             get-global-definition-hook
                                             put-global-definition-hook
                                             gensym-hook
                                             local-eval-hook
                                             top-level-eval-hook
                                             fx<
                                             fx=
                                             fx-
                                             fx+
                                             *mode*
                                             noexpand)
                                           ((top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top))
                                           ("i360"
                                            "i358"
                                            "i356"
                                            "i354"
                                            "i352"
                                            "i350"
                                            "i348"
                                            "i346"
                                            "i344"
                                            "i342"
                                            "i340"
                                            "i338"
                                            "i336"
                                            "i334"
                                            "i332"
                                            "i330"
                                            "i328"
                                            "i326"
                                            "i324"
                                            "i322"
                                            "i320"
                                            "i318"
                                            "i316"
                                            "i314"
                                            "i312"
                                            "i310"
                                            "i308"
                                            "i306"
                                            "i304"
                                            "i302"
                                            "i300"
                                            "i298"
                                            "i296"
                                            "i294"
                                            "i292"
                                            "i290"
                                            "i289"
                                            "i288"
                                            "i286"
                                            "i285"
                                            "i284"
                                            "i283"
                                            "i282"
                                            "i280"
                                            "i278"
                                            "i276"
                                            "i274"
                                            "i272"
                                            "i270"
                                            "i268"
                                            "i266"
                                            "i263"
                                            "i261"
                                            "i260"
                                            "i259"
                                            "i258"
                                            "i257"
                                            "i256"
                                            "i254"
                                            "i252"
                                            "i250"
                                            "i248"
                                            "i247"
                                            "i245"
                                            "i243"
                                            "i241"
                                            "i239"
                                            "i237"
                                            "i235"
                                            "i233"
                                            "i232"
                                            "i230"
                                            "i228"
                                            "i227"
                                            "i226"
                                            "i224"
                                            "i223"
                                            "i221"
                                            "i219"
                                            "i217"
                                            "i215"
                                            "i213"
                                            "i211"
                                            "i209"
                                            "i207"
                                            "i205"
                                            "i203"
                                            "i201"
                                            "i199"
                                            "i197"
                                            "i195"
                                            "i193"
                                            "i191"
                                            "i189"
                                            "i187"
                                            "i185"
                                            "i183"
                                            "i181"
                                            "i179"
                                            "i177"
                                            "i175"
                                            "i173"
                                            "i171"
                                            "i169"
                                            "i167"
                                            "i165"
                                            "i163"
                                            "i161"
                                            "i159"
                                            "i158"
                                            "i156"
                                            "i154"
                                            "i152"
                                            "i150"
                                            "i148"
                                            "i146"
                                            "i144"
                                            "i142"))
                                         #(ribcage
                                           (define-structure and-map*)
                                           ((top) (top))
                                           ("i45" "i43")))
                                        (hygiene guile))
                                     #{mod\ 3353}#))))
                         #{tmp\ 3339}#)
                  (syntax-violation
                    #f
                    "source expression failed to match any pattern"
                    #{tmp\ 3338}#)))
              ($sc-dispatch
                #{tmp\ 3338}#
                '(any each-any any))))
           #{e\ 3336}#)))
      (#{global-extend\ 242}#
        'core
        'if
        (lambda (#{e\ 3356}#
                 #{r\ 3357}#
                 #{w\ 3358}#
                 #{s\ 3359}#
                 #{mod\ 3360}#)
          ((lambda (#{tmp\ 3366}#)
             ((lambda (#{tmp\ 3367}#)
                (if #{tmp\ 3367}#
                  (apply (lambda (#{_\ 3371}# #{test\ 3372}# #{then\ 3373}#)
                           (#{build-conditional\ 170}#
                             #{s\ 3359}#
                             (#{chi\ 331}#
                               #{test\ 3372}#
                               #{r\ 3357}#
                               #{w\ 3358}#
                               #{mod\ 3360}#)
                             (#{chi\ 331}#
                               #{then\ 3373}#
                               #{r\ 3357}#
                               #{w\ 3358}#
                               #{mod\ 3360}#)
                             (#{build-void\ 166}# #f)))
                         #{tmp\ 3367}#)
                  ((lambda (#{tmp\ 3375}#)
                     (if #{tmp\ 3375}#
                       (apply (lambda (#{_\ 3380}#
                                       #{test\ 3381}#
                                       #{then\ 3382}#
                                       #{else\ 3383}#)
                                (#{build-conditional\ 170}#
                                  #{s\ 3359}#
                                  (#{chi\ 331}#
                                    #{test\ 3381}#
                                    #{r\ 3357}#
                                    #{w\ 3358}#
                                    #{mod\ 3360}#)
                                  (#{chi\ 331}#
                                    #{then\ 3382}#
                                    #{r\ 3357}#
                                    #{w\ 3358}#
                                    #{mod\ 3360}#)
                                  (#{chi\ 331}#
                                    #{else\ 3383}#
                                    #{r\ 3357}#
                                    #{w\ 3358}#
                                    #{mod\ 3360}#)))
                              #{tmp\ 3375}#)
                       (syntax-violation
                         #f
                         "source expression failed to match any pattern"
                         #{tmp\ 3366}#)))
                   ($sc-dispatch
                     #{tmp\ 3366}#
                     '(any any any any)))))
              ($sc-dispatch
                #{tmp\ 3366}#
                '(any any any))))
           #{e\ 3356}#)))
      (#{global-extend\ 242}#
        'core
        'with-fluids
        (lambda (#{e\ 3384}#
                 #{r\ 3385}#
                 #{w\ 3386}#
                 #{s\ 3387}#
                 #{mod\ 3388}#)
          ((lambda (#{tmp\ 3394}#)
             ((lambda (#{tmp\ 3395}#)
                (if #{tmp\ 3395}#
                  (apply (lambda (#{_\ 3401}#
                                  #{fluid\ 3402}#
                                  #{val\ 3403}#
                                  #{b\ 3404}#
                                  #{b*\ 3405}#)
                           (#{build-dynlet\ 172}#
                             #{s\ 3387}#
                             (map (lambda (#{x\ 3406}#)
                                    (#{chi\ 331}#
                                      #{x\ 3406}#
                                      #{r\ 3385}#
                                      #{w\ 3386}#
                                      #{mod\ 3388}#))
                                  #{fluid\ 3402}#)
                             (map (lambda (#{x\ 3409}#)
                                    (#{chi\ 331}#
                                      #{x\ 3409}#
                                      #{r\ 3385}#
                                      #{w\ 3386}#
                                      #{mod\ 3388}#))
                                  #{val\ 3403}#)
                             (#{chi-body\ 339}#
                               (cons #{b\ 3404}# #{b*\ 3405}#)
                               (#{source-wrap\ 317}#
                                 #{e\ 3384}#
                                 #{w\ 3386}#
                                 #{s\ 3387}#
                                 #{mod\ 3388}#)
                               #{r\ 3385}#
                               #{w\ 3386}#
                               #{mod\ 3388}#)))
                         #{tmp\ 3395}#)
                  (syntax-violation
                    #f
                    "source expression failed to match any pattern"
                    #{tmp\ 3394}#)))
              ($sc-dispatch
                #{tmp\ 3394}#
                '(any #(each (any any)) any . each-any))))
           #{e\ 3384}#)))
      (#{global-extend\ 242}#
        'begin
        'begin
        '())
      (#{global-extend\ 242}#
        'define
        'define
        '())
      (#{global-extend\ 242}#
        'define-syntax
        'define-syntax
        '())
      (#{global-extend\ 242}#
        'eval-when
        'eval-when
        '())
      (#{global-extend\ 242}#
        'core
        'syntax-case
        (letrec ((#{gen-syntax-case\ 3420}#
                   (lambda (#{x\ 3421}#
                            #{keys\ 3422}#
                            #{clauses\ 3423}#
                            #{r\ 3424}#
                            #{mod\ 3425}#)
                     (if (null? #{clauses\ 3423}#)
                       (#{build-application\ 168}#
                         #f
                         (#{build-primref\ 194}#
                           #f
                           'syntax-violation)
                         (list (#{build-data\ 196}# #f #f)
                               (#{build-data\ 196}#
                                 #f
                                 "source expression failed to match any pattern")
                               #{x\ 3421}#))
                       ((lambda (#{tmp\ 3435}#)
                          ((lambda (#{tmp\ 3436}#)
                             (if #{tmp\ 3436}#
                               (apply (lambda (#{pat\ 3439}# #{exp\ 3440}#)
                                        (if (if (#{id?\ 246}# #{pat\ 3439}#)
                                              (and-map
                                                (lambda (#{x\ 3443}#)
                                                  (not (#{free-id=?\ 305}#
                                                         #{pat\ 3439}#
                                                         #{x\ 3443}#)))
                                                (cons '#(syntax-object
                                                         ...
                                                         ((top)
                                                          #(ribcage
                                                            #(pat exp)
                                                            #((top) (top))
                                                            #("i3437" "i3438"))
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(x
                                                              keys
                                                              clauses
                                                              r
                                                              mod)
                                                            #((top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top))
                                                            #("i3426"
                                                              "i3427"
                                                              "i3428"
                                                              "i3429"
                                                              "i3430"))
                                                          #(ribcage
                                                            (gen-syntax-case
                                                              gen-clause
                                                              build-dispatch-call
                                                              convert-pattern)
                                                            ((top)
                                                             (top)
                                                             (top)
                                                             (top))
                                                            ("i3419"
                                                             "i3417"
                                                             "i3415"
                                                             "i3413"))
                                                          #(ribcage
                                                            (lambda-var-list
                                                              gen-var
                                                              strip
                                                              chi-lambda-case
                                                              lambda*-formals
                                                              chi-simple-lambda
                                                              lambda-formals
                                                              ellipsis?
                                                              chi-void
                                                              eval-local-transformer
                                                              chi-local-syntax
                                                              chi-body
                                                              chi-macro
                                                              chi-application
                                                              chi-expr
                                                              chi
                                                              chi-top
                                                              syntax-type
                                                              chi-when-list
                                                              chi-install-global
                                                              chi-top-sequence
                                                              chi-sequence
                                                              source-wrap
                                                              wrap
                                                              bound-id-member?
                                                              distinct-bound-ids?
                                                              valid-bound-ids?
                                                              bound-id=?
                                                              free-id=?
                                                              id-var-name
                                                              same-marks?
                                                              join-marks
                                                              join-wraps
                                                              smart-append
                                                              make-binding-wrap
                                                              extend-ribcage!
                                                              make-empty-ribcage
                                                              new-mark
                                                              anti-mark
                                                              the-anti-mark
                                                              top-marked?
                                                              top-wrap
                                                              empty-wrap
                                                              set-ribcage-labels!
                                                              set-ribcage-marks!
                                                              set-ribcage-symnames!
                                                              ribcage-labels
                                                              ribcage-marks
                                                              ribcage-symnames
                                                              ribcage?
                                                              make-ribcage
                                                              gen-labels
                                                              gen-label
                                                              make-rename
                                                              rename-marks
                                                              rename-new
                                                              rename-old
                                                              subst-rename?
                                                              wrap-subst
                                                              wrap-marks
                                                              make-wrap
                                                              id-sym-name&marks
                                                              id-sym-name
                                                              id?
                                                              nonsymbol-id?
                                                              global-extend
                                                              lookup
                                                              macros-only-env
                                                              extend-var-env
                                                              extend-env
                                                              null-env
                                                              binding-value
                                                              binding-type
                                                              make-binding
                                                              arg-check
                                                              source-annotation
                                                              no-source
                                                              set-syntax-object-module!
                                                              set-syntax-object-wrap!
                                                              set-syntax-object-expression!
                                                              syntax-object-module
                                                              syntax-object-wrap
                                                              syntax-object-expression
                                                              syntax-object?
                                                              make-syntax-object
                                                              build-lexical-var
                                                              build-letrec
                                                              build-named-let
                                                              build-let
                                                              build-sequence
                                                              build-data
                                                              build-primref
                                                              build-lambda-case
                                                              build-case-lambda
                                                              build-simple-lambda
                                                              build-global-definition
                                                              maybe-name-value!
                                                              build-global-assignment
                                                              build-global-reference
                                                              analyze-variable
                                                              build-lexical-assignment
                                                              build-lexical-reference
                                                              build-dynlet
                                                              build-conditional
                                                              build-application
                                                              build-void
                                                              decorate-source
                                                              get-global-definition-hook
                                                              put-global-definition-hook
                                                              gensym-hook
                                                              local-eval-hook
                                                              top-level-eval-hook
                                                              fx<
                                                              fx=
                                                              fx-
                                                              fx+
                                                              *mode*
                                                              noexpand)
                                                            ((top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top))
                                                            ("i360"
                                                             "i358"
                                                             "i356"
                                                             "i354"
                                                             "i352"
                                                             "i350"
                                                             "i348"
                                                             "i346"
                                                             "i344"
                                                             "i342"
                                                             "i340"
                                                             "i338"
                                                             "i336"
                                                             "i334"
                                                             "i332"
                                                             "i330"
                                                             "i328"
                                                             "i326"
                                                             "i324"
                                                             "i322"
                                                             "i320"
                                                             "i318"
                                                             "i316"
                                                             "i314"
                                                             "i312"
                                                             "i310"
                                                             "i308"
                                                             "i306"
                                                             "i304"
                                                             "i302"
                                                             "i300"
                                                             "i298"
                                                             "i296"
                                                             "i294"
                                                             "i292"
                                                             "i290"
                                                             "i289"
                                                             "i288"
                                                             "i286"
                                                             "i285"
                                                             "i284"
                                                             "i283"
                                                             "i282"
                                                             "i280"
                                                             "i278"
                                                             "i276"
                                                             "i274"
                                                             "i272"
                                                             "i270"
                                                             "i268"
                                                             "i266"
                                                             "i263"
                                                             "i261"
                                                             "i260"
                                                             "i259"
                                                             "i258"
                                                             "i257"
                                                             "i256"
                                                             "i254"
                                                             "i252"
                                                             "i250"
                                                             "i248"
                                                             "i247"
                                                             "i245"
                                                             "i243"
                                                             "i241"
                                                             "i239"
                                                             "i237"
                                                             "i235"
                                                             "i233"
                                                             "i232"
                                                             "i230"
                                                             "i228"
                                                             "i227"
                                                             "i226"
                                                             "i224"
                                                             "i223"
                                                             "i221"
                                                             "i219"
                                                             "i217"
                                                             "i215"
                                                             "i213"
                                                             "i211"
                                                             "i209"
                                                             "i207"
                                                             "i205"
                                                             "i203"
                                                             "i201"
                                                             "i199"
                                                             "i197"
                                                             "i195"
                                                             "i193"
                                                             "i191"
                                                             "i189"
                                                             "i187"
                                                             "i185"
                                                             "i183"
                                                             "i181"
                                                             "i179"
                                                             "i177"
                                                             "i175"
                                                             "i173"
                                                             "i171"
                                                             "i169"
                                                             "i167"
                                                             "i165"
                                                             "i163"
                                                             "i161"
                                                             "i159"
                                                             "i158"
                                                             "i156"
                                                             "i154"
                                                             "i152"
                                                             "i150"
                                                             "i148"
                                                             "i146"
                                                             "i144"
                                                             "i142"))
                                                          #(ribcage
                                                            (define-structure
                                                              and-map*)
                                                            ((top) (top))
                                                            ("i45" "i43")))
                                                         (hygiene guile))
                                                      #{keys\ 3422}#))
                                              #f)
                                          (let ((#{labels\ 3447}#
                                                  (list (#{gen-label\ 262}#)))
                                                (#{var\ 3448}#
                                                  (#{gen-var\ 359}#
                                                    #{pat\ 3439}#)))
                                            (#{build-application\ 168}#
                                              #f
                                              (#{build-simple-lambda\ 188}#
                                                #f
                                                (list (syntax->datum
                                                        #{pat\ 3439}#))
                                                #f
                                                (list #{var\ 3448}#)
                                                '()
                                                (#{chi\ 331}#
                                                  #{exp\ 3440}#
                                                  (#{extend-env\ 234}#
                                                    #{labels\ 3447}#
                                                    (list (cons 'syntax
                                                                (cons #{var\ 3448}#
                                                                      0)))
                                                    #{r\ 3424}#)
                                                  (#{make-binding-wrap\ 293}#
                                                    (list #{pat\ 3439}#)
                                                    #{labels\ 3447}#
                                                    '(()))
                                                  #{mod\ 3425}#))
                                              (list #{x\ 3421}#)))
                                          (#{gen-clause\ 3418}#
                                            #{x\ 3421}#
                                            #{keys\ 3422}#
                                            (cdr #{clauses\ 3423}#)
                                            #{r\ 3424}#
                                            #{pat\ 3439}#
                                            #t
                                            #{exp\ 3440}#
                                            #{mod\ 3425}#)))
                                      #{tmp\ 3436}#)
                               ((lambda (#{tmp\ 3454}#)
                                  (if #{tmp\ 3454}#
                                    (apply (lambda (#{pat\ 3458}#
                                                    #{fender\ 3459}#
                                                    #{exp\ 3460}#)
                                             (#{gen-clause\ 3418}#
                                               #{x\ 3421}#
                                               #{keys\ 3422}#
                                               (cdr #{clauses\ 3423}#)
                                               #{r\ 3424}#
                                               #{pat\ 3458}#
                                               #{fender\ 3459}#
                                               #{exp\ 3460}#
                                               #{mod\ 3425}#))
                                           #{tmp\ 3454}#)
                                    ((lambda (#{_\ 3462}#)
                                       (syntax-violation
                                         'syntax-case
                                         "invalid clause"
                                         (car #{clauses\ 3423}#)))
                                     #{tmp\ 3435}#)))
                                ($sc-dispatch
                                  #{tmp\ 3435}#
                                  '(any any any)))))
                           ($sc-dispatch #{tmp\ 3435}# (quote (any any)))))
                        (car #{clauses\ 3423}#)))))
                 (#{gen-clause\ 3418}#
                   (lambda (#{x\ 3463}#
                            #{keys\ 3464}#
                            #{clauses\ 3465}#
                            #{r\ 3466}#
                            #{pat\ 3467}#
                            #{fender\ 3468}#
                            #{exp\ 3469}#
                            #{mod\ 3470}#)
                     (call-with-values
                       (lambda ()
                         (#{convert-pattern\ 3414}#
                           #{pat\ 3467}#
                           #{keys\ 3464}#))
                       (lambda (#{p\ 3479}# #{pvars\ 3480}#)
                         (if (not (#{distinct-bound-ids?\ 311}#
                                    (map car #{pvars\ 3480}#)))
                           (syntax-violation
                             'syntax-case
                             "duplicate pattern variable"
                             #{pat\ 3467}#)
                           (if (not (and-map
                                      (lambda (#{x\ 3487}#)
                                        (not (#{ellipsis?\ 347}#
                                               (car #{x\ 3487}#))))
                                      #{pvars\ 3480}#))
                             (syntax-violation
                               'syntax-case
                               "misplaced ellipsis"
                               #{pat\ 3467}#)
                             (let ((#{y\ 3491}#
                                     (#{gen-var\ 359}# (quote tmp))))
                               (#{build-application\ 168}#
                                 #f
                                 (#{build-simple-lambda\ 188}#
                                   #f
                                   (list (quote tmp))
                                   #f
                                   (list #{y\ 3491}#)
                                   '()
                                   (let ((#{y\ 3495}#
                                           (#{build-lexical-reference\ 174}#
                                             'value
                                             #f
                                             'tmp
                                             #{y\ 3491}#)))
                                     (#{build-conditional\ 170}#
                                       #f
                                       ((lambda (#{tmp\ 3498}#)
                                          ((lambda (#{tmp\ 3499}#)
                                             (if #{tmp\ 3499}#
                                               (apply (lambda () #{y\ 3495}#)
                                                      #{tmp\ 3499}#)
                                               ((lambda (#{_\ 3501}#)
                                                  (#{build-conditional\ 170}#
                                                    #f
                                                    #{y\ 3495}#
                                                    (#{build-dispatch-call\ 3416}#
                                                      #{pvars\ 3480}#
                                                      #{fender\ 3468}#
                                                      #{y\ 3495}#
                                                      #{r\ 3466}#
                                                      #{mod\ 3470}#)
                                                    (#{build-data\ 196}#
                                                      #f
                                                      #f)))
                                                #{tmp\ 3498}#)))
                                           ($sc-dispatch
                                             #{tmp\ 3498}#
                                             '#(atom #t))))
                                        #{fender\ 3468}#)
                                       (#{build-dispatch-call\ 3416}#
                                         #{pvars\ 3480}#
                                         #{exp\ 3469}#
                                         #{y\ 3495}#
                                         #{r\ 3466}#
                                         #{mod\ 3470}#)
                                       (#{gen-syntax-case\ 3420}#
                                         #{x\ 3463}#
                                         #{keys\ 3464}#
                                         #{clauses\ 3465}#
                                         #{r\ 3466}#
                                         #{mod\ 3470}#))))
                                 (list (if (eq? #{p\ 3479}# (quote any))
                                         (#{build-application\ 168}#
                                           #f
                                           (#{build-primref\ 194}#
                                             #f
                                             'list)
                                           (list #{x\ 3463}#))
                                         (#{build-application\ 168}#
                                           #f
                                           (#{build-primref\ 194}#
                                             #f
                                             '$sc-dispatch)
                                           (list #{x\ 3463}#
                                                 (#{build-data\ 196}#
                                                   #f
                                                   #{p\ 3479}#)))))))))))))
                 (#{build-dispatch-call\ 3416}#
                   (lambda (#{pvars\ 3509}#
                            #{exp\ 3510}#
                            #{y\ 3511}#
                            #{r\ 3512}#
                            #{mod\ 3513}#)
                     (let ((#{ids\ 3521}# (map car #{pvars\ 3509}#))
                           (#{levels\ 3522}# (map cdr #{pvars\ 3509}#)))
                       (let ((#{labels\ 3525}#
                               (#{gen-labels\ 264}# #{ids\ 3521}#))
                             (#{new-vars\ 3526}#
                               (map #{gen-var\ 359}# #{ids\ 3521}#)))
                         (#{build-application\ 168}#
                           #f
                           (#{build-primref\ 194}# #f (quote apply))
                           (list (#{build-simple-lambda\ 188}#
                                   #f
                                   (map syntax->datum #{ids\ 3521}#)
                                   #f
                                   #{new-vars\ 3526}#
                                   '()
                                   (#{chi\ 331}#
                                     #{exp\ 3510}#
                                     (#{extend-env\ 234}#
                                       #{labels\ 3525}#
                                       (map (lambda (#{var\ 3530}#
                                                     #{level\ 3531}#)
                                              (cons 'syntax
                                                    (cons #{var\ 3530}#
                                                          #{level\ 3531}#)))
                                            #{new-vars\ 3526}#
                                            (map cdr #{pvars\ 3509}#))
                                       #{r\ 3512}#)
                                     (#{make-binding-wrap\ 293}#
                                       #{ids\ 3521}#
                                       #{labels\ 3525}#
                                       '(()))
                                     #{mod\ 3513}#))
                                 #{y\ 3511}#))))))
                 (#{convert-pattern\ 3414}#
                   (lambda (#{pattern\ 3537}# #{keys\ 3538}#)
                     (letrec ((#{cvt\ 3544}#
                                (lambda (#{p\ 3545}# #{n\ 3546}# #{ids\ 3547}#)
                                  (if (#{id?\ 246}# #{p\ 3545}#)
                                    (if (#{bound-id-member?\ 313}#
                                          #{p\ 3545}#
                                          #{keys\ 3538}#)
                                      (values
                                        (vector (quote free-id) #{p\ 3545}#)
                                        #{ids\ 3547}#)
                                      (values
                                        'any
                                        (cons (cons #{p\ 3545}# #{n\ 3546}#)
                                              #{ids\ 3547}#)))
                                    ((lambda (#{tmp\ 3551}#)
                                       ((lambda (#{tmp\ 3552}#)
                                          (if (if #{tmp\ 3552}#
                                                (apply (lambda (#{x\ 3555}#
                                                                #{dots\ 3556}#)
                                                         (#{ellipsis?\ 347}#
                                                           #{dots\ 3556}#))
                                                       #{tmp\ 3552}#)
                                                #f)
                                            (apply (lambda (#{x\ 3559}#
                                                            #{dots\ 3560}#)
                                                     (call-with-values
                                                       (lambda ()
                                                         (#{cvt\ 3544}#
                                                           #{x\ 3559}#
                                                           (#{fx+\ 147}#
                                                             #{n\ 3546}#
                                                             1)
                                                           #{ids\ 3547}#))
                                                       (lambda (#{p\ 3561}#
                                                                #{ids\ 3562}#)
                                                         (values
                                                           (if (eq? #{p\ 3561}#
                                                                    'any)
                                                             'each-any
                                                             (vector
                                                               'each
                                                               #{p\ 3561}#))
                                                           #{ids\ 3562}#))))
                                                   #{tmp\ 3552}#)
                                            ((lambda (#{tmp\ 3565}#)
                                               (if (if #{tmp\ 3565}#
                                                     (apply (lambda (#{x\ 3569}#
                                                                     #{dots\ 3570}#
                                                                     #{ys\ 3571}#)
                                                              (#{ellipsis?\ 347}#
                                                                #{dots\ 3570}#))
                                                            #{tmp\ 3565}#)
                                                     #f)
                                                 (apply (lambda (#{x\ 3575}#
                                                                 #{dots\ 3576}#
                                                                 #{ys\ 3577}#)
                                                          (call-with-values
                                                            (lambda ()
                                                              (#{cvt*\ 3542}#
                                                                #{ys\ 3577}#
                                                                #{n\ 3546}#
                                                                #{ids\ 3547}#))
                                                            (lambda (#{ys\ 3579}#
                                                                     #{ids\ 3580}#)
                                                              (call-with-values
                                                                (lambda ()
                                                                  (#{cvt\ 3544}#
                                                                    #{x\ 3575}#
                                                                    (+ #{n\ 3546}#
                                                                       1)
                                                                    #{ids\ 3580}#))
                                                                (lambda (#{x\ 3583}#
                                                                         #{ids\ 3584}#)
                                                                  (values
                                                                    (list->vector
                                                                      (cons 'each+
                                                                            (cons #{x\ 3583}#
                                                                                  (cons (reverse
                                                                                          #{ys\ 3579}#)
                                                                                        '(())))))
                                                                    #{ids\ 3584}#))))))
                                                        #{tmp\ 3565}#)
                                                 ((lambda (#{tmp\ 3588}#)
                                                    (if #{tmp\ 3588}#
                                                      (apply (lambda (#{x\ 3591}#
                                                                      #{y\ 3592}#)
                                                               (call-with-values
                                                                 (lambda ()
                                                                   (#{cvt\ 3544}#
                                                                     #{y\ 3592}#
                                                                     #{n\ 3546}#
                                                                     #{ids\ 3547}#))
                                                                 (lambda (#{y\ 3593}#
                                                                          #{ids\ 3594}#)
                                                                   (call-with-values
                                                                     (lambda ()
                                                                       (#{cvt\ 3544}#
                                                                         #{x\ 3591}#
                                                                         #{n\ 3546}#
                                                                         #{ids\ 3594}#))
                                                                     (lambda (#{x\ 3597}#
                                                                              #{ids\ 3598}#)
                                                                       (values
                                                                         (cons #{x\ 3597}#
                                                                               #{y\ 3593}#)
                                                                         #{ids\ 3598}#))))))
                                                             #{tmp\ 3588}#)
                                                      ((lambda (#{tmp\ 3601}#)
                                                         (if #{tmp\ 3601}#
                                                           (apply (lambda ()
                                                                    (values
                                                                      '()
                                                                      #{ids\ 3547}#))
                                                                  #{tmp\ 3601}#)
                                                           ((lambda (#{tmp\ 3602}#)
                                                              (if #{tmp\ 3602}#
                                                                (apply (lambda (#{x\ 3604}#)
                                                                         (call-with-values
                                                                           (lambda ()
                                                                             (#{cvt\ 3544}#
                                                                               #{x\ 3604}#
                                                                               #{n\ 3546}#
                                                                               #{ids\ 3547}#))
                                                                           (lambda (#{p\ 3606}#
                                                                                    #{ids\ 3607}#)
                                                                             (values
                                                                               (vector
                                                                                 'vector
                                                                                 #{p\ 3606}#)
                                                                               #{ids\ 3607}#))))
                                                                       #{tmp\ 3602}#)
                                                                ((lambda (#{x\ 3611}#)
                                                                   (values
                                                                     (vector
                                                                       'atom
                                                                       (#{strip\ 357}#
                                                                         #{p\ 3545}#
                                                                         '(())))
                                                                     #{ids\ 3547}#))
                                                                 #{tmp\ 3551}#)))
                                                            ($sc-dispatch
                                                              #{tmp\ 3551}#
                                                              '#(vector
                                                                 each-any)))))
                                                       ($sc-dispatch
                                                         #{tmp\ 3551}#
                                                         '()))))
                                                  ($sc-dispatch
                                                    #{tmp\ 3551}#
                                                    '(any . any)))))
                                             ($sc-dispatch
                                               #{tmp\ 3551}#
                                               '(any any . each-any)))))
                                        ($sc-dispatch
                                          #{tmp\ 3551}#
                                          '(any any))))
                                     #{p\ 3545}#))))
                              (#{cvt*\ 3542}#
                                (lambda (#{p*\ 3613}#
                                         #{n\ 3614}#
                                         #{ids\ 3615}#)
                                  (if (null? #{p*\ 3613}#)
                                    (values (quote ()) #{ids\ 3615}#)
                                    (call-with-values
                                      (lambda ()
                                        (#{cvt*\ 3542}#
                                          (cdr #{p*\ 3613}#)
                                          #{n\ 3614}#
                                          #{ids\ 3615}#))
                                      (lambda (#{y\ 3619}# #{ids\ 3620}#)
                                        (call-with-values
                                          (lambda ()
                                            (#{cvt\ 3544}#
                                              (car #{p*\ 3613}#)
                                              #{n\ 3614}#
                                              #{ids\ 3620}#))
                                          (lambda (#{x\ 3623}# #{ids\ 3624}#)
                                            (values
                                              (cons #{x\ 3623}# #{y\ 3619}#)
                                              #{ids\ 3624}#)))))))))
                       (#{cvt\ 3544}# #{pattern\ 3537}# 0 (quote ()))))))
          (lambda (#{e\ 3627}#
                   #{r\ 3628}#
                   #{w\ 3629}#
                   #{s\ 3630}#
                   #{mod\ 3631}#)
            (let ((#{e\ 3638}#
                    (#{source-wrap\ 317}#
                      #{e\ 3627}#
                      #{w\ 3629}#
                      #{s\ 3630}#
                      #{mod\ 3631}#)))
              ((lambda (#{tmp\ 3639}#)
                 ((lambda (#{tmp\ 3640}#)
                    (if #{tmp\ 3640}#
                      (apply (lambda (#{_\ 3645}#
                                      #{val\ 3646}#
                                      #{key\ 3647}#
                                      #{m\ 3648}#)
                               (if (and-map
                                     (lambda (#{x\ 3649}#)
                                       (if (#{id?\ 246}# #{x\ 3649}#)
                                         (not (#{ellipsis?\ 347}# #{x\ 3649}#))
                                         #f))
                                     #{key\ 3647}#)
                                 (let ((#{x\ 3655}#
                                         (#{gen-var\ 359}# (quote tmp))))
                                   (#{build-application\ 168}#
                                     #{s\ 3630}#
                                     (#{build-simple-lambda\ 188}#
                                       #f
                                       (list (quote tmp))
                                       #f
                                       (list #{x\ 3655}#)
                                       '()
                                       (#{gen-syntax-case\ 3420}#
                                         (#{build-lexical-reference\ 174}#
                                           'value
                                           #f
                                           'tmp
                                           #{x\ 3655}#)
                                         #{key\ 3647}#
                                         #{m\ 3648}#
                                         #{r\ 3628}#
                                         #{mod\ 3631}#))
                                     (list (#{chi\ 331}#
                                             #{val\ 3646}#
                                             #{r\ 3628}#
                                             '(())
                                             #{mod\ 3631}#))))
                                 (syntax-violation
                                   'syntax-case
                                   "invalid literals list"
                                   #{e\ 3638}#)))
                             #{tmp\ 3640}#)
                      (syntax-violation
                        #f
                        "source expression failed to match any pattern"
                        #{tmp\ 3639}#)))
                  ($sc-dispatch
                    #{tmp\ 3639}#
                    '(any any each-any . each-any))))
               #{e\ 3638}#)))))
      (set! macroexpand
        (lambda (#{x\ 3661}# . #{rest\ 3662}#)
          (if (if (pair? #{x\ 3661}#)
                (equal? (car #{x\ 3661}#) #{noexpand\ 143}#)
                #f)
            (cadr #{x\ 3661}#)
            (let ((#{m\ 3669}#
                    (if (null? #{rest\ 3662}#)
                      'e
                      (car #{rest\ 3662}#)))
                  (#{esew\ 3670}#
                    (if (let ((#{t\ 3673}# (null? #{rest\ 3662}#)))
                          (if #{t\ 3673}#
                            #{t\ 3673}#
                            (null? (cdr #{rest\ 3662}#))))
                      '(eval)
                      (cadr #{rest\ 3662}#))))
              (with-fluids
                ((#{*mode*\ 145}# #{m\ 3669}#))
                (#{chi-top\ 329}#
                  #{x\ 3661}#
                  '()
                  '((top))
                  #{m\ 3669}#
                  #{esew\ 3670}#
                  (cons 'hygiene
                        (module-name (current-module)))))))))
      (set! identifier?
        (lambda (#{x\ 3677}#)
          (#{nonsymbol-id?\ 244}# #{x\ 3677}#)))
      (set! datum->syntax
        (lambda (#{id\ 3679}# #{datum\ 3680}#)
          (#{make-syntax-object\ 208}#
            #{datum\ 3680}#
            (#{syntax-object-wrap\ 214}# #{id\ 3679}#)
            #f)))
      (set! syntax->datum
        (lambda (#{x\ 3683}#)
          (#{strip\ 357}# #{x\ 3683}# (quote (())))))
      (set! generate-temporaries
        (lambda (#{ls\ 3686}#)
          (begin
            (let ((#{x\ 3690}# #{ls\ 3686}#))
              (if (not (list? #{x\ 3690}#))
                (syntax-violation
                  'generate-temporaries
                  "invalid argument"
                  #{x\ 3690}#)))
            (map (lambda (#{x\ 3691}#)
                   (#{wrap\ 315}# (gensym) (quote ((top))) #f))
                 #{ls\ 3686}#))))
      (set! free-identifier=?
        (lambda (#{x\ 3695}# #{y\ 3696}#)
          (begin
            (let ((#{x\ 3701}# #{x\ 3695}#))
              (if (not (#{nonsymbol-id?\ 244}# #{x\ 3701}#))
                (syntax-violation
                  'free-identifier=?
                  "invalid argument"
                  #{x\ 3701}#)))
            (let ((#{x\ 3704}# #{y\ 3696}#))
              (if (not (#{nonsymbol-id?\ 244}# #{x\ 3704}#))
                (syntax-violation
                  'free-identifier=?
                  "invalid argument"
                  #{x\ 3704}#)))
            (#{free-id=?\ 305}# #{x\ 3695}# #{y\ 3696}#))))
      (set! bound-identifier=?
        (lambda (#{x\ 3705}# #{y\ 3706}#)
          (begin
            (let ((#{x\ 3711}# #{x\ 3705}#))
              (if (not (#{nonsymbol-id?\ 244}# #{x\ 3711}#))
                (syntax-violation
                  'bound-identifier=?
                  "invalid argument"
                  #{x\ 3711}#)))
            (let ((#{x\ 3714}# #{y\ 3706}#))
              (if (not (#{nonsymbol-id?\ 244}# #{x\ 3714}#))
                (syntax-violation
                  'bound-identifier=?
                  "invalid argument"
                  #{x\ 3714}#)))
            (#{bound-id=?\ 307}# #{x\ 3705}# #{y\ 3706}#))))
      (set! syntax-violation
        (lambda (#{who\ 3715}#
                 #{message\ 3716}#
                 #{form\ 3717}#
                 .
                 #{subform\ 3718}#)
          (begin
            (let ((#{x\ 3725}# #{who\ 3715}#))
              (if (not ((lambda (#{x\ 3726}#)
                          (let ((#{t\ 3730}# (not #{x\ 3726}#)))
                            (if #{t\ 3730}#
                              #{t\ 3730}#
                              (let ((#{t\ 3733}# (string? #{x\ 3726}#)))
                                (if #{t\ 3733}#
                                  #{t\ 3733}#
                                  (symbol? #{x\ 3726}#))))))
                        #{x\ 3725}#))
                (syntax-violation
                  'syntax-violation
                  "invalid argument"
                  #{x\ 3725}#)))
            (let ((#{x\ 3737}# #{message\ 3716}#))
              (if (not (string? #{x\ 3737}#))
                (syntax-violation
                  'syntax-violation
                  "invalid argument"
                  #{x\ 3737}#)))
            (scm-error
              'syntax-error
              'macroexpand
              (string-append
                (if #{who\ 3715}# "~a: " "")
                "~a "
                (if (null? #{subform\ 3718}#)
                  "in ~a"
                  "in subform `~s' of `~s'"))
              (let ((#{tail\ 3739}#
                      (cons #{message\ 3716}#
                            (map (lambda (#{x\ 3740}#)
                                   (#{strip\ 357}# #{x\ 3740}# (quote (()))))
                                 (append
                                   #{subform\ 3718}#
                                   (list #{form\ 3717}#))))))
                (if #{who\ 3715}#
                  (cons #{who\ 3715}# #{tail\ 3739}#)
                  #{tail\ 3739}#))
              #f))))
      (letrec ((#{match\ 3756}#
                 (lambda (#{e\ 3757}#
                          #{p\ 3758}#
                          #{w\ 3759}#
                          #{r\ 3760}#
                          #{mod\ 3761}#)
                   (if (not #{r\ 3760}#)
                     #f
                     (if (eq? #{p\ 3758}# (quote any))
                       (cons (#{wrap\ 315}#
                               #{e\ 3757}#
                               #{w\ 3759}#
                               #{mod\ 3761}#)
                             #{r\ 3760}#)
                       (if (#{syntax-object?\ 210}# #{e\ 3757}#)
                         (#{match*\ 3754}#
                           (#{syntax-object-expression\ 212}# #{e\ 3757}#)
                           #{p\ 3758}#
                           (#{join-wraps\ 297}#
                             #{w\ 3759}#
                             (#{syntax-object-wrap\ 214}# #{e\ 3757}#))
                           #{r\ 3760}#
                           (#{syntax-object-module\ 216}# #{e\ 3757}#))
                         (#{match*\ 3754}#
                           #{e\ 3757}#
                           #{p\ 3758}#
                           #{w\ 3759}#
                           #{r\ 3760}#
                           #{mod\ 3761}#))))))
               (#{match*\ 3754}#
                 (lambda (#{e\ 3774}#
                          #{p\ 3775}#
                          #{w\ 3776}#
                          #{r\ 3777}#
                          #{mod\ 3778}#)
                   (if (null? #{p\ 3775}#)
                     (if (null? #{e\ 3774}#) #{r\ 3777}# #f)
                     (if (pair? #{p\ 3775}#)
                       (if (pair? #{e\ 3774}#)
                         (#{match\ 3756}#
                           (car #{e\ 3774}#)
                           (car #{p\ 3775}#)
                           #{w\ 3776}#
                           (#{match\ 3756}#
                             (cdr #{e\ 3774}#)
                             (cdr #{p\ 3775}#)
                             #{w\ 3776}#
                             #{r\ 3777}#
                             #{mod\ 3778}#)
                           #{mod\ 3778}#)
                         #f)
                       (if (eq? #{p\ 3775}# (quote each-any))
                         (let ((#{l\ 3795}#
                                 (#{match-each-any\ 3748}#
                                   #{e\ 3774}#
                                   #{w\ 3776}#
                                   #{mod\ 3778}#)))
                           (if #{l\ 3795}#
                             (cons #{l\ 3795}# #{r\ 3777}#)
                             #f))
                         (let ((#{atom-key\ 3801}# (vector-ref #{p\ 3775}# 0)))
                           (if (memv #{atom-key\ 3801}# (quote (each)))
                             (if (null? #{e\ 3774}#)
                               (#{match-empty\ 3750}#
                                 (vector-ref #{p\ 3775}# 1)
                                 #{r\ 3777}#)
                               (let ((#{l\ 3804}#
                                       (#{match-each\ 3744}#
                                         #{e\ 3774}#
                                         (vector-ref #{p\ 3775}# 1)
                                         #{w\ 3776}#
                                         #{mod\ 3778}#)))
                                 (if #{l\ 3804}#
                                   (letrec ((#{collect\ 3809}#
                                              (lambda (#{l\ 3810}#)
                                                (if (null? (car #{l\ 3810}#))
                                                  #{r\ 3777}#
                                                  (cons (map car #{l\ 3810}#)
                                                        (#{collect\ 3809}#
                                                          (map cdr
                                                               #{l\ 3810}#)))))))
                                     (#{collect\ 3809}# #{l\ 3804}#))
                                   #f)))
                             (if (memv #{atom-key\ 3801}# (quote (each+)))
                               (call-with-values
                                 (lambda ()
                                   (#{match-each+\ 3746}#
                                     #{e\ 3774}#
                                     (vector-ref #{p\ 3775}# 1)
                                     (vector-ref #{p\ 3775}# 2)
                                     (vector-ref #{p\ 3775}# 3)
                                     #{w\ 3776}#
                                     #{r\ 3777}#
                                     #{mod\ 3778}#))
                                 (lambda (#{xr*\ 3812}#
                                          #{y-pat\ 3813}#
                                          #{r\ 3814}#)
                                   (if #{r\ 3814}#
                                     (if (null? #{y-pat\ 3813}#)
                                       (if (null? #{xr*\ 3812}#)
                                         (#{match-empty\ 3750}#
                                           (vector-ref #{p\ 3775}# 1)
                                           #{r\ 3814}#)
                                         (#{combine\ 3752}#
                                           #{xr*\ 3812}#
                                           #{r\ 3814}#))
                                       #f)
                                     #f)))
                               (if (memv #{atom-key\ 3801}# (quote (free-id)))
                                 (if (#{id?\ 246}# #{e\ 3774}#)
                                   (if (#{free-id=?\ 305}#
                                         (#{wrap\ 315}#
                                           #{e\ 3774}#
                                           #{w\ 3776}#
                                           #{mod\ 3778}#)
                                         (vector-ref #{p\ 3775}# 1))
                                     #{r\ 3777}#
                                     #f)
                                   #f)
                                 (if (memv #{atom-key\ 3801}# (quote (atom)))
                                   (if (equal?
                                         (vector-ref #{p\ 3775}# 1)
                                         (#{strip\ 357}#
                                           #{e\ 3774}#
                                           #{w\ 3776}#))
                                     #{r\ 3777}#
                                     #f)
                                   (if (memv #{atom-key\ 3801}#
                                             '(vector))
                                     (if (vector? #{e\ 3774}#)
                                       (#{match\ 3756}#
                                         (vector->list #{e\ 3774}#)
                                         (vector-ref #{p\ 3775}# 1)
                                         #{w\ 3776}#
                                         #{r\ 3777}#
                                         #{mod\ 3778}#)
                                       #f))))))))))))
               (#{combine\ 3752}#
                 (lambda (#{r*\ 3831}# #{r\ 3832}#)
                   (if (null? (car #{r*\ 3831}#))
                     #{r\ 3832}#
                     (cons (map car #{r*\ 3831}#)
                           (#{combine\ 3752}#
                             (map cdr #{r*\ 3831}#)
                             #{r\ 3832}#)))))
               (#{match-empty\ 3750}#
                 (lambda (#{p\ 3835}# #{r\ 3836}#)
                   (if (null? #{p\ 3835}#)
                     #{r\ 3836}#
                     (if (eq? #{p\ 3835}# (quote any))
                       (cons (quote ()) #{r\ 3836}#)
                       (if (pair? #{p\ 3835}#)
                         (#{match-empty\ 3750}#
                           (car #{p\ 3835}#)
                           (#{match-empty\ 3750}#
                             (cdr #{p\ 3835}#)
                             #{r\ 3836}#))
                         (if (eq? #{p\ 3835}# (quote each-any))
                           (cons (quote ()) #{r\ 3836}#)
                           (let ((#{atom-key\ 3850}#
                                   (vector-ref #{p\ 3835}# 0)))
                             (if (memv #{atom-key\ 3850}# (quote (each)))
                               (#{match-empty\ 3750}#
                                 (vector-ref #{p\ 3835}# 1)
                                 #{r\ 3836}#)
                               (if (memv #{atom-key\ 3850}# (quote (each+)))
                                 (#{match-empty\ 3750}#
                                   (vector-ref #{p\ 3835}# 1)
                                   (#{match-empty\ 3750}#
                                     (reverse (vector-ref #{p\ 3835}# 2))
                                     (#{match-empty\ 3750}#
                                       (vector-ref #{p\ 3835}# 3)
                                       #{r\ 3836}#)))
                                 (if (memv #{atom-key\ 3850}#
                                           '(free-id atom))
                                   #{r\ 3836}#
                                   (if (memv #{atom-key\ 3850}#
                                             '(vector))
                                     (#{match-empty\ 3750}#
                                       (vector-ref #{p\ 3835}# 1)
                                       #{r\ 3836}#))))))))))))
               (#{match-each-any\ 3748}#
                 (lambda (#{e\ 3855}# #{w\ 3856}# #{mod\ 3857}#)
                   (if (pair? #{e\ 3855}#)
                     (let ((#{l\ 3864}#
                             (#{match-each-any\ 3748}#
                               (cdr #{e\ 3855}#)
                               #{w\ 3856}#
                               #{mod\ 3857}#)))
                       (if #{l\ 3864}#
                         (cons (#{wrap\ 315}#
                                 (car #{e\ 3855}#)
                                 #{w\ 3856}#
                                 #{mod\ 3857}#)
                               #{l\ 3864}#)
                         #f))
                     (if (null? #{e\ 3855}#)
                       '()
                       (if (#{syntax-object?\ 210}# #{e\ 3855}#)
                         (#{match-each-any\ 3748}#
                           (#{syntax-object-expression\ 212}# #{e\ 3855}#)
                           (#{join-wraps\ 297}#
                             #{w\ 3856}#
                             (#{syntax-object-wrap\ 214}# #{e\ 3855}#))
                           #{mod\ 3857}#)
                         #f)))))
               (#{match-each+\ 3746}#
                 (lambda (#{e\ 3872}#
                          #{x-pat\ 3873}#
                          #{y-pat\ 3874}#
                          #{z-pat\ 3875}#
                          #{w\ 3876}#
                          #{r\ 3877}#
                          #{mod\ 3878}#)
                   (letrec ((#{f\ 3889}#
                              (lambda (#{e\ 3890}# #{w\ 3891}#)
                                (if (pair? #{e\ 3890}#)
                                  (call-with-values
                                    (lambda ()
                                      (#{f\ 3889}#
                                        (cdr #{e\ 3890}#)
                                        #{w\ 3891}#))
                                    (lambda (#{xr*\ 3894}#
                                             #{y-pat\ 3895}#
                                             #{r\ 3896}#)
                                      (if #{r\ 3896}#
                                        (if (null? #{y-pat\ 3895}#)
                                          (let ((#{xr\ 3901}#
                                                  (#{match\ 3756}#
                                                    (car #{e\ 3890}#)
                                                    #{x-pat\ 3873}#
                                                    #{w\ 3891}#
                                                    '()
                                                    #{mod\ 3878}#)))
                                            (if #{xr\ 3901}#
                                              (values
                                                (cons #{xr\ 3901}#
                                                      #{xr*\ 3894}#)
                                                #{y-pat\ 3895}#
                                                #{r\ 3896}#)
                                              (values #f #f #f)))
                                          (values
                                            '()
                                            (cdr #{y-pat\ 3895}#)
                                            (#{match\ 3756}#
                                              (car #{e\ 3890}#)
                                              (car #{y-pat\ 3895}#)
                                              #{w\ 3891}#
                                              #{r\ 3896}#
                                              #{mod\ 3878}#)))
                                        (values #f #f #f))))
                                  (if (#{syntax-object?\ 210}# #{e\ 3890}#)
                                    (#{f\ 3889}#
                                      (#{syntax-object-expression\ 212}#
                                        #{e\ 3890}#)
                                      (#{join-wraps\ 297}#
                                        #{w\ 3891}#
                                        #{e\ 3890}#))
                                    (values
                                      '()
                                      #{y-pat\ 3874}#
                                      (#{match\ 3756}#
                                        #{e\ 3890}#
                                        #{z-pat\ 3875}#
                                        #{w\ 3891}#
                                        #{r\ 3877}#
                                        #{mod\ 3878}#)))))))
                     (#{f\ 3889}# #{e\ 3872}# #{w\ 3876}#))))
               (#{match-each\ 3744}#
                 (lambda (#{e\ 3905}#
                          #{p\ 3906}#
                          #{w\ 3907}#
                          #{mod\ 3908}#)
                   (if (pair? #{e\ 3905}#)
                     (let ((#{first\ 3916}#
                             (#{match\ 3756}#
                               (car #{e\ 3905}#)
                               #{p\ 3906}#
                               #{w\ 3907}#
                               '()
                               #{mod\ 3908}#)))
                       (if #{first\ 3916}#
                         (let ((#{rest\ 3920}#
                                 (#{match-each\ 3744}#
                                   (cdr #{e\ 3905}#)
                                   #{p\ 3906}#
                                   #{w\ 3907}#
                                   #{mod\ 3908}#)))
                           (if #{rest\ 3920}#
                             (cons #{first\ 3916}# #{rest\ 3920}#)
                             #f))
                         #f))
                     (if (null? #{e\ 3905}#)
                       '()
                       (if (#{syntax-object?\ 210}# #{e\ 3905}#)
                         (#{match-each\ 3744}#
                           (#{syntax-object-expression\ 212}# #{e\ 3905}#)
                           #{p\ 3906}#
                           (#{join-wraps\ 297}#
                             #{w\ 3907}#
                             (#{syntax-object-wrap\ 214}# #{e\ 3905}#))
                           (#{syntax-object-module\ 216}# #{e\ 3905}#))
                         #f))))))
        (set! $sc-dispatch
          (lambda (#{e\ 3928}# #{p\ 3929}#)
            (if (eq? #{p\ 3929}# (quote any))
              (list #{e\ 3928}#)
              (if (#{syntax-object?\ 210}# #{e\ 3928}#)
                (#{match*\ 3754}#
                  (#{syntax-object-expression\ 212}# #{e\ 3928}#)
                  #{p\ 3929}#
                  (#{syntax-object-wrap\ 214}# #{e\ 3928}#)
                  '()
                  (#{syntax-object-module\ 216}# #{e\ 3928}#))
                (#{match*\ 3754}#
                  #{e\ 3928}#
                  #{p\ 3929}#
                  '(())
                  '()
                  #f)))))))))

(define with-syntax
  (make-syntax-transformer
    'with-syntax
    'macro
    (cons (lambda (#{x\ 3938}#)
            ((lambda (#{tmp\ 3940}#)
               ((lambda (#{tmp\ 3941}#)
                  (if #{tmp\ 3941}#
                    (apply (lambda (#{_\ 3945}# #{e1\ 3946}# #{e2\ 3947}#)
                             (cons '#(syntax-object
                                      begin
                                      ((top)
                                       #(ribcage
                                         #(_ e1 e2)
                                         #((top) (top) (top))
                                         #("i3942" "i3943" "i3944"))
                                       #(ribcage () () ())
                                       #(ribcage #(x) #((top)) #("i3939")))
                                      (hygiene guile))
                                   (cons #{e1\ 3946}# #{e2\ 3947}#)))
                           #{tmp\ 3941}#)
                    ((lambda (#{tmp\ 3949}#)
                       (if #{tmp\ 3949}#
                         (apply (lambda (#{_\ 3955}#
                                         #{out\ 3956}#
                                         #{in\ 3957}#
                                         #{e1\ 3958}#
                                         #{e2\ 3959}#)
                                  (list '#(syntax-object
                                           syntax-case
                                           ((top)
                                            #(ribcage
                                              #(_ out in e1 e2)
                                              #((top) (top) (top) (top) (top))
                                              #("i3950"
                                                "i3951"
                                                "i3952"
                                                "i3953"
                                                "i3954"))
                                            #(ribcage () () ())
                                            #(ribcage
                                              #(x)
                                              #((top))
                                              #("i3939")))
                                           (hygiene guile))
                                        #{in\ 3957}#
                                        '()
                                        (list #{out\ 3956}#
                                              (cons '#(syntax-object
                                                       begin
                                                       ((top)
                                                        #(ribcage
                                                          #(_ out in e1 e2)
                                                          #((top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top))
                                                          #("i3950"
                                                            "i3951"
                                                            "i3952"
                                                            "i3953"
                                                            "i3954"))
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(x)
                                                          #((top))
                                                          #("i3939")))
                                                       (hygiene guile))
                                                    (cons #{e1\ 3958}#
                                                          #{e2\ 3959}#)))))
                                #{tmp\ 3949}#)
                         ((lambda (#{tmp\ 3961}#)
                            (if #{tmp\ 3961}#
                              (apply (lambda (#{_\ 3967}#
                                              #{out\ 3968}#
                                              #{in\ 3969}#
                                              #{e1\ 3970}#
                                              #{e2\ 3971}#)
                                       (list '#(syntax-object
                                                syntax-case
                                                ((top)
                                                 #(ribcage
                                                   #(_ out in e1 e2)
                                                   #((top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top))
                                                   #("i3962"
                                                     "i3963"
                                                     "i3964"
                                                     "i3965"
                                                     "i3966"))
                                                 #(ribcage () () ())
                                                 #(ribcage
                                                   #(x)
                                                   #((top))
                                                   #("i3939")))
                                                (hygiene guile))
                                             (cons '#(syntax-object
                                                      list
                                                      ((top)
                                                       #(ribcage
                                                         #(_ out in e1 e2)
                                                         #((top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top))
                                                         #("i3962"
                                                           "i3963"
                                                           "i3964"
                                                           "i3965"
                                                           "i3966"))
                                                       #(ribcage () () ())
                                                       #(ribcage
                                                         #(x)
                                                         #((top))
                                                         #("i3939")))
                                                      (hygiene guile))
                                                   #{in\ 3969}#)
                                             '()
                                             (list #{out\ 3968}#
                                                   (cons '#(syntax-object
                                                            begin
                                                            ((top)
                                                             #(ribcage
                                                               #(_
                                                                 out
                                                                 in
                                                                 e1
                                                                 e2)
                                                               #((top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top))
                                                               #("i3962"
                                                                 "i3963"
                                                                 "i3964"
                                                                 "i3965"
                                                                 "i3966"))
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               #(x)
                                                               #((top))
                                                               #("i3939")))
                                                            (hygiene guile))
                                                         (cons #{e1\ 3970}#
                                                               #{e2\ 3971}#)))))
                                     #{tmp\ 3961}#)
                              (syntax-violation
                                #f
                                "source expression failed to match any pattern"
                                #{tmp\ 3940}#)))
                          ($sc-dispatch
                            #{tmp\ 3940}#
                            '(any #(each (any any)) any . each-any)))))
                     ($sc-dispatch
                       #{tmp\ 3940}#
                       '(any ((any any)) any . each-any)))))
                ($sc-dispatch
                  #{tmp\ 3940}#
                  '(any () any . each-any))))
             #{x\ 3938}#))
          (module-name (current-module)))))

(define syntax-rules
  (make-syntax-transformer
    'syntax-rules
    'macro
    (cons (lambda (#{x\ 3975}#)
            ((lambda (#{tmp\ 3977}#)
               ((lambda (#{tmp\ 3978}#)
                  (if #{tmp\ 3978}#
                    (apply (lambda (#{_\ 3984}#
                                    #{k\ 3985}#
                                    #{keyword\ 3986}#
                                    #{pattern\ 3987}#
                                    #{template\ 3988}#)
                             (list '#(syntax-object
                                      lambda
                                      ((top)
                                       #(ribcage
                                         #(_ k keyword pattern template)
                                         #((top) (top) (top) (top) (top))
                                         #("i3979"
                                           "i3980"
                                           "i3981"
                                           "i3982"
                                           "i3983"))
                                       #(ribcage () () ())
                                       #(ribcage #(x) #((top)) #("i3976")))
                                      (hygiene guile))
                                   '(#(syntax-object
                                       x
                                       ((top)
                                        #(ribcage
                                          #(_ k keyword pattern template)
                                          #((top) (top) (top) (top) (top))
                                          #("i3979"
                                            "i3980"
                                            "i3981"
                                            "i3982"
                                            "i3983"))
                                        #(ribcage () () ())
                                        #(ribcage #(x) #((top)) #("i3976")))
                                       (hygiene guile)))
                                   (cons '#(syntax-object
                                            syntax-case
                                            ((top)
                                             #(ribcage
                                               #(_ k keyword pattern template)
                                               #((top) (top) (top) (top) (top))
                                               #("i3979"
                                                 "i3980"
                                                 "i3981"
                                                 "i3982"
                                                 "i3983"))
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(x)
                                               #((top))
                                               #("i3976")))
                                            (hygiene guile))
                                         (cons '#(syntax-object
                                                  x
                                                  ((top)
                                                   #(ribcage
                                                     #(_
                                                       k
                                                       keyword
                                                       pattern
                                                       template)
                                                     #((top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top))
                                                     #("i3979"
                                                       "i3980"
                                                       "i3981"
                                                       "i3982"
                                                       "i3983"))
                                                   #(ribcage () () ())
                                                   #(ribcage
                                                     #(x)
                                                     #((top))
                                                     #("i3976")))
                                                  (hygiene guile))
                                               (cons #{k\ 3985}#
                                                     (map (lambda (#{tmp\ 3991}#
                                                                   #{tmp\ 3990}#)
                                                            (list (cons '#(syntax-object
                                                                           dummy
                                                                           ((top)
                                                                            #(ribcage
                                                                              #(_
                                                                                k
                                                                                keyword
                                                                                pattern
                                                                                template)
                                                                              #((top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top))
                                                                              #("i3979"
                                                                                "i3980"
                                                                                "i3981"
                                                                                "i3982"
                                                                                "i3983"))
                                                                            #(ribcage
                                                                              ()
                                                                              ()
                                                                              ())
                                                                            #(ribcage
                                                                              #(x)
                                                                              #((top))
                                                                              #("i3976")))
                                                                           (hygiene
                                                                             guile))
                                                                        #{tmp\ 3990}#)
                                                                  (list '#(syntax-object
                                                                           syntax
                                                                           ((top)
                                                                            #(ribcage
                                                                              #(_
                                                                                k
                                                                                keyword
                                                                                pattern
                                                                                template)
                                                                              #((top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top))
                                                                              #("i3979"
                                                                                "i3980"
                                                                                "i3981"
                                                                                "i3982"
                                                                                "i3983"))
                                                                            #(ribcage
                                                                              ()
                                                                              ()
                                                                              ())
                                                                            #(ribcage
                                                                              #(x)
                                                                              #((top))
                                                                              #("i3976")))
                                                                           (hygiene
                                                                             guile))
                                                                        #{tmp\ 3991}#)))
                                                          #{template\ 3988}#
                                                          #{pattern\ 3987}#))))))
                           #{tmp\ 3978}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 3977}#)))
                ($sc-dispatch
                  #{tmp\ 3977}#
                  '(any each-any . #(each ((any . any) any))))))
             #{x\ 3975}#))
          (module-name (current-module)))))

(define let*
  (make-syntax-transformer
    'let*
    'macro
    (cons (lambda (#{x\ 3992}#)
            ((lambda (#{tmp\ 3994}#)
               ((lambda (#{tmp\ 3995}#)
                  (if (if #{tmp\ 3995}#
                        (apply (lambda (#{let*\ 4001}#
                                        #{x\ 4002}#
                                        #{v\ 4003}#
                                        #{e1\ 4004}#
                                        #{e2\ 4005}#)
                                 (and-map identifier? #{x\ 4002}#))
                               #{tmp\ 3995}#)
                        #f)
                    (apply (lambda (#{let*\ 4012}#
                                    #{x\ 4013}#
                                    #{v\ 4014}#
                                    #{e1\ 4015}#
                                    #{e2\ 4016}#)
                             (letrec ((#{f\ 4019}#
                                        (lambda (#{bindings\ 4020}#)
                                          (if (null? #{bindings\ 4020}#)
                                            (cons '#(syntax-object
                                                     let
                                                     ((top)
                                                      #(ribcage () () ())
                                                      #(ribcage
                                                        #(f bindings)
                                                        #((top) (top))
                                                        #("i4017" "i4018"))
                                                      #(ribcage
                                                        #(let* x v e1 e2)
                                                        #((top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top))
                                                        #("i4007"
                                                          "i4008"
                                                          "i4009"
                                                          "i4010"
                                                          "i4011"))
                                                      #(ribcage () () ())
                                                      #(ribcage
                                                        #(x)
                                                        #((top))
                                                        #("i3993")))
                                                     (hygiene guile))
                                                  (cons '()
                                                        (cons #{e1\ 4015}#
                                                              #{e2\ 4016}#)))
                                            ((lambda (#{tmp\ 4025}#)
                                               ((lambda (#{tmp\ 4026}#)
                                                  (if #{tmp\ 4026}#
                                                    (apply (lambda (#{body\ 4029}#
                                                                    #{binding\ 4030}#)
                                                             (list '#(syntax-object
                                                                      let
                                                                      ((top)
                                                                       #(ribcage
                                                                         #(body
                                                                           binding)
                                                                         #((top)
                                                                           (top))
                                                                         #("i4027"
                                                                           "i4028"))
                                                                       #(ribcage
                                                                         ()
                                                                         ()
                                                                         ())
                                                                       #(ribcage
                                                                         #(f
                                                                           bindings)
                                                                         #((top)
                                                                           (top))
                                                                         #("i4017"
                                                                           "i4018"))
                                                                       #(ribcage
                                                                         #(let*
                                                                           x
                                                                           v
                                                                           e1
                                                                           e2)
                                                                         #((top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top))
                                                                         #("i4007"
                                                                           "i4008"
                                                                           "i4009"
                                                                           "i4010"
                                                                           "i4011"))
                                                                       #(ribcage
                                                                         ()
                                                                         ()
                                                                         ())
                                                                       #(ribcage
                                                                         #(x)
                                                                         #((top))
                                                                         #("i3993")))
                                                                      (hygiene
                                                                        guile))
                                                                   (list #{binding\ 4030}#)
                                                                   #{body\ 4029}#))
                                                           #{tmp\ 4026}#)
                                                    (syntax-violation
                                                      #f
                                                      "source expression failed to match any pattern"
                                                      #{tmp\ 4025}#)))
                                                ($sc-dispatch
                                                  #{tmp\ 4025}#
                                                  '(any any))))
                                             (list (#{f\ 4019}#
                                                     (cdr #{bindings\ 4020}#))
                                                   (car #{bindings\ 4020}#)))))))
                               (#{f\ 4019}#
                                 (map list #{x\ 4013}# #{v\ 4014}#))))
                           #{tmp\ 3995}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 3994}#)))
                ($sc-dispatch
                  #{tmp\ 3994}#
                  '(any #(each (any any)) any . each-any))))
             #{x\ 3992}#))
          (module-name (current-module)))))

(define do
  (make-syntax-transformer
    'do
    'macro
    (cons (lambda (#{orig-x\ 4031}#)
            ((lambda (#{tmp\ 4033}#)
               ((lambda (#{tmp\ 4034}#)
                  (if #{tmp\ 4034}#
                    (apply (lambda (#{_\ 4042}#
                                    #{var\ 4043}#
                                    #{init\ 4044}#
                                    #{step\ 4045}#
                                    #{e0\ 4046}#
                                    #{e1\ 4047}#
                                    #{c\ 4048}#)
                             ((lambda (#{tmp\ 4050}#)
                                ((lambda (#{tmp\ 4051}#)
                                   (if #{tmp\ 4051}#
                                     (apply (lambda (#{step\ 4053}#)
                                              ((lambda (#{tmp\ 4054}#)
                                                 ((lambda (#{tmp\ 4055}#)
                                                    (if #{tmp\ 4055}#
                                                      (apply (lambda ()
                                                               (list '#(syntax-object
                                                                        let
                                                                        ((top)
                                                                         #(ribcage
                                                                           #(step)
                                                                           #((top))
                                                                           #("i4052"))
                                                                         #(ribcage
                                                                           #(_
                                                                             var
                                                                             init
                                                                             step
                                                                             e0
                                                                             e1
                                                                             c)
                                                                           #((top)
                                                                             (top)
                                                                             (top)
                                                                             (top)
                                                                             (top)
                                                                             (top)
                                                                             (top))
                                                                           #("i4035"
                                                                             "i4036"
                                                                             "i4037"
                                                                             "i4038"
                                                                             "i4039"
                                                                             "i4040"
                                                                             "i4041"))
                                                                         #(ribcage
                                                                           ()
                                                                           ()
                                                                           ())
                                                                         #(ribcage
                                                                           #(orig-x)
                                                                           #((top))
                                                                           #("i4032")))
                                                                        (hygiene
                                                                          guile))
                                                                     '#(syntax-object
                                                                        doloop
                                                                        ((top)
                                                                         #(ribcage
                                                                           #(step)
                                                                           #((top))
                                                                           #("i4052"))
                                                                         #(ribcage
                                                                           #(_
                                                                             var
                                                                             init
                                                                             step
                                                                             e0
                                                                             e1
                                                                             c)
                                                                           #((top)
                                                                             (top)
                                                                             (top)
                                                                             (top)
                                                                             (top)
                                                                             (top)
                                                                             (top))
                                                                           #("i4035"
                                                                             "i4036"
                                                                             "i4037"
                                                                             "i4038"
                                                                             "i4039"
                                                                             "i4040"
                                                                             "i4041"))
                                                                         #(ribcage
                                                                           ()
                                                                           ()
                                                                           ())
                                                                         #(ribcage
                                                                           #(orig-x)
                                                                           #((top))
                                                                           #("i4032")))
                                                                        (hygiene
                                                                          guile))
                                                                     (map list
                                                                          #{var\ 4043}#
                                                                          #{init\ 4044}#)
                                                                     (list '#(syntax-object
                                                                              if
                                                                              ((top)
                                                                               #(ribcage
                                                                                 #(step)
                                                                                 #((top))
                                                                                 #("i4052"))
                                                                               #(ribcage
                                                                                 #(_
                                                                                   var
                                                                                   init
                                                                                   step
                                                                                   e0
                                                                                   e1
                                                                                   c)
                                                                                 #((top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top))
                                                                                 #("i4035"
                                                                                   "i4036"
                                                                                   "i4037"
                                                                                   "i4038"
                                                                                   "i4039"
                                                                                   "i4040"
                                                                                   "i4041"))
                                                                               #(ribcage
                                                                                 ()
                                                                                 ()
                                                                                 ())
                                                                               #(ribcage
                                                                                 #(orig-x)
                                                                                 #((top))
                                                                                 #("i4032")))
                                                                              (hygiene
                                                                                guile))
                                                                           (list '#(syntax-object
                                                                                    not
                                                                                    ((top)
                                                                                     #(ribcage
                                                                                       #(step)
                                                                                       #((top))
                                                                                       #("i4052"))
                                                                                     #(ribcage
                                                                                       #(_
                                                                                         var
                                                                                         init
                                                                                         step
                                                                                         e0
                                                                                         e1
                                                                                         c)
                                                                                       #((top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top))
                                                                                       #("i4035"
                                                                                         "i4036"
                                                                                         "i4037"
                                                                                         "i4038"
                                                                                         "i4039"
                                                                                         "i4040"
                                                                                         "i4041"))
                                                                                     #(ribcage
                                                                                       ()
                                                                                       ()
                                                                                       ())
                                                                                     #(ribcage
                                                                                       #(orig-x)
                                                                                       #((top))
                                                                                       #("i4032")))
                                                                                    (hygiene
                                                                                      guile))
                                                                                 #{e0\ 4046}#)
                                                                           (cons '#(syntax-object
                                                                                    begin
                                                                                    ((top)
                                                                                     #(ribcage
                                                                                       #(step)
                                                                                       #((top))
                                                                                       #("i4052"))
                                                                                     #(ribcage
                                                                                       #(_
                                                                                         var
                                                                                         init
                                                                                         step
                                                                                         e0
                                                                                         e1
                                                                                         c)
                                                                                       #((top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top))
                                                                                       #("i4035"
                                                                                         "i4036"
                                                                                         "i4037"
                                                                                         "i4038"
                                                                                         "i4039"
                                                                                         "i4040"
                                                                                         "i4041"))
                                                                                     #(ribcage
                                                                                       ()
                                                                                       ()
                                                                                       ())
                                                                                     #(ribcage
                                                                                       #(orig-x)
                                                                                       #((top))
                                                                                       #("i4032")))
                                                                                    (hygiene
                                                                                      guile))
                                                                                 (append
                                                                                   #{c\ 4048}#
                                                                                   (list (cons '#(syntax-object
                                                                                                  doloop
                                                                                                  ((top)
                                                                                                   #(ribcage
                                                                                                     #(step)
                                                                                                     #((top))
                                                                                                     #("i4052"))
                                                                                                   #(ribcage
                                                                                                     #(_
                                                                                                       var
                                                                                                       init
                                                                                                       step
                                                                                                       e0
                                                                                                       e1
                                                                                                       c)
                                                                                                     #((top)
                                                                                                       (top)
                                                                                                       (top)
                                                                                                       (top)
                                                                                                       (top)
                                                                                                       (top)
                                                                                                       (top))
                                                                                                     #("i4035"
                                                                                                       "i4036"
                                                                                                       "i4037"
                                                                                                       "i4038"
                                                                                                       "i4039"
                                                                                                       "i4040"
                                                                                                       "i4041"))
                                                                                                   #(ribcage
                                                                                                     ()
                                                                                                     ()
                                                                                                     ())
                                                                                                   #(ribcage
                                                                                                     #(orig-x)
                                                                                                     #((top))
                                                                                                     #("i4032")))
                                                                                                  (hygiene
                                                                                                    guile))
                                                                                               #{step\ 4053}#)))))))
                                                             #{tmp\ 4055}#)
                                                      ((lambda (#{tmp\ 4060}#)
                                                         (if #{tmp\ 4060}#
                                                           (apply (lambda (#{e1\ 4063}#
                                                                           #{e2\ 4064}#)
                                                                    (list '#(syntax-object
                                                                             let
                                                                             ((top)
                                                                              #(ribcage
                                                                                #(e1
                                                                                  e2)
                                                                                #((top)
                                                                                  (top))
                                                                                #("i4061"
                                                                                  "i4062"))
                                                                              #(ribcage
                                                                                #(step)
                                                                                #((top))
                                                                                #("i4052"))
                                                                              #(ribcage
                                                                                #(_
                                                                                  var
                                                                                  init
                                                                                  step
                                                                                  e0
                                                                                  e1
                                                                                  c)
                                                                                #((top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top))
                                                                                #("i4035"
                                                                                  "i4036"
                                                                                  "i4037"
                                                                                  "i4038"
                                                                                  "i4039"
                                                                                  "i4040"
                                                                                  "i4041"))
                                                                              #(ribcage
                                                                                ()
                                                                                ()
                                                                                ())
                                                                              #(ribcage
                                                                                #(orig-x)
                                                                                #((top))
                                                                                #("i4032")))
                                                                             (hygiene
                                                                               guile))
                                                                          '#(syntax-object
                                                                             doloop
                                                                             ((top)
                                                                              #(ribcage
                                                                                #(e1
                                                                                  e2)
                                                                                #((top)
                                                                                  (top))
                                                                                #("i4061"
                                                                                  "i4062"))
                                                                              #(ribcage
                                                                                #(step)
                                                                                #((top))
                                                                                #("i4052"))
                                                                              #(ribcage
                                                                                #(_
                                                                                  var
                                                                                  init
                                                                                  step
                                                                                  e0
                                                                                  e1
                                                                                  c)
                                                                                #((top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top))
                                                                                #("i4035"
                                                                                  "i4036"
                                                                                  "i4037"
                                                                                  "i4038"
                                                                                  "i4039"
                                                                                  "i4040"
                                                                                  "i4041"))
                                                                              #(ribcage
                                                                                ()
                                                                                ()
                                                                                ())
                                                                              #(ribcage
                                                                                #(orig-x)
                                                                                #((top))
                                                                                #("i4032")))
                                                                             (hygiene
                                                                               guile))
                                                                          (map list
                                                                               #{var\ 4043}#
                                                                               #{init\ 4044}#)
                                                                          (list '#(syntax-object
                                                                                   if
                                                                                   ((top)
                                                                                    #(ribcage
                                                                                      #(e1
                                                                                        e2)
                                                                                      #((top)
                                                                                        (top))
                                                                                      #("i4061"
                                                                                        "i4062"))
                                                                                    #(ribcage
                                                                                      #(step)
                                                                                      #((top))
                                                                                      #("i4052"))
                                                                                    #(ribcage
                                                                                      #(_
                                                                                        var
                                                                                        init
                                                                                        step
                                                                                        e0
                                                                                        e1
                                                                                        c)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i4035"
                                                                                        "i4036"
                                                                                        "i4037"
                                                                                        "i4038"
                                                                                        "i4039"
                                                                                        "i4040"
                                                                                        "i4041"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(orig-x)
                                                                                      #((top))
                                                                                      #("i4032")))
                                                                                   (hygiene
                                                                                     guile))
                                                                                #{e0\ 4046}#
                                                                                (cons '#(syntax-object
                                                                                         begin
                                                                                         ((top)
                                                                                          #(ribcage
                                                                                            #(e1
                                                                                              e2)
                                                                                            #((top)
                                                                                              (top))
                                                                                            #("i4061"
                                                                                              "i4062"))
                                                                                          #(ribcage
                                                                                            #(step)
                                                                                            #((top))
                                                                                            #("i4052"))
                                                                                          #(ribcage
                                                                                            #(_
                                                                                              var
                                                                                              init
                                                                                              step
                                                                                              e0
                                                                                              e1
                                                                                              c)
                                                                                            #((top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top))
                                                                                            #("i4035"
                                                                                              "i4036"
                                                                                              "i4037"
                                                                                              "i4038"
                                                                                              "i4039"
                                                                                              "i4040"
                                                                                              "i4041"))
                                                                                          #(ribcage
                                                                                            ()
                                                                                            ()
                                                                                            ())
                                                                                          #(ribcage
                                                                                            #(orig-x)
                                                                                            #((top))
                                                                                            #("i4032")))
                                                                                         (hygiene
                                                                                           guile))
                                                                                      (cons #{e1\ 4063}#
                                                                                            #{e2\ 4064}#))
                                                                                (cons '#(syntax-object
                                                                                         begin
                                                                                         ((top)
                                                                                          #(ribcage
                                                                                            #(e1
                                                                                              e2)
                                                                                            #((top)
                                                                                              (top))
                                                                                            #("i4061"
                                                                                              "i4062"))
                                                                                          #(ribcage
                                                                                            #(step)
                                                                                            #((top))
                                                                                            #("i4052"))
                                                                                          #(ribcage
                                                                                            #(_
                                                                                              var
                                                                                              init
                                                                                              step
                                                                                              e0
                                                                                              e1
                                                                                              c)
                                                                                            #((top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top))
                                                                                            #("i4035"
                                                                                              "i4036"
                                                                                              "i4037"
                                                                                              "i4038"
                                                                                              "i4039"
                                                                                              "i4040"
                                                                                              "i4041"))
                                                                                          #(ribcage
                                                                                            ()
                                                                                            ()
                                                                                            ())
                                                                                          #(ribcage
                                                                                            #(orig-x)
                                                                                            #((top))
                                                                                            #("i4032")))
                                                                                         (hygiene
                                                                                           guile))
                                                                                      (append
                                                                                        #{c\ 4048}#
                                                                                        (list (cons '#(syntax-object
                                                                                                       doloop
                                                                                                       ((top)
                                                                                                        #(ribcage
                                                                                                          #(e1
                                                                                                            e2)
                                                                                                          #((top)
                                                                                                            (top))
                                                                                                          #("i4061"
                                                                                                            "i4062"))
                                                                                                        #(ribcage
                                                                                                          #(step)
                                                                                                          #((top))
                                                                                                          #("i4052"))
                                                                                                        #(ribcage
                                                                                                          #(_
                                                                                                            var
                                                                                                            init
                                                                                                            step
                                                                                                            e0
                                                                                                            e1
                                                                                                            c)
                                                                                                          #((top)
                                                                                                            (top)
                                                                                                            (top)
                                                                                                            (top)
                                                                                                            (top)
                                                                                                            (top)
                                                                                                            (top))
                                                                                                          #("i4035"
                                                                                                            "i4036"
                                                                                                            "i4037"
                                                                                                            "i4038"
                                                                                                            "i4039"
                                                                                                            "i4040"
                                                                                                            "i4041"))
                                                                                                        #(ribcage
                                                                                                          ()
                                                                                                          ()
                                                                                                          ())
                                                                                                        #(ribcage
                                                                                                          #(orig-x)
                                                                                                          #((top))
                                                                                                          #("i4032")))
                                                                                                       (hygiene
                                                                                                         guile))
                                                                                                    #{step\ 4053}#)))))))
                                                                  #{tmp\ 4060}#)
                                                           (syntax-violation
                                                             #f
                                                             "source expression failed to match any pattern"
                                                             #{tmp\ 4054}#)))
                                                       ($sc-dispatch
                                                         #{tmp\ 4054}#
                                                         '(any . each-any)))))
                                                  ($sc-dispatch
                                                    #{tmp\ 4054}#
                                                    '())))
                                               #{e1\ 4047}#))
                                            #{tmp\ 4051}#)
                                     (syntax-violation
                                       #f
                                       "source expression failed to match any pattern"
                                       #{tmp\ 4050}#)))
                                 ($sc-dispatch
                                   #{tmp\ 4050}#
                                   'each-any)))
                              (map (lambda (#{v\ 4071}# #{s\ 4072}#)
                                     ((lambda (#{tmp\ 4075}#)
                                        ((lambda (#{tmp\ 4076}#)
                                           (if #{tmp\ 4076}#
                                             (apply (lambda () #{v\ 4071}#)
                                                    #{tmp\ 4076}#)
                                             ((lambda (#{tmp\ 4077}#)
                                                (if #{tmp\ 4077}#
                                                  (apply (lambda (#{e\ 4079}#)
                                                           #{e\ 4079}#)
                                                         #{tmp\ 4077}#)
                                                  ((lambda (#{_\ 4081}#)
                                                     (syntax-violation
                                                       'do
                                                       "bad step expression"
                                                       #{orig-x\ 4031}#
                                                       #{s\ 4072}#))
                                                   #{tmp\ 4075}#)))
                                              ($sc-dispatch
                                                #{tmp\ 4075}#
                                                '(any)))))
                                         ($sc-dispatch
                                           #{tmp\ 4075}#
                                           '())))
                                      #{s\ 4072}#))
                                   #{var\ 4043}#
                                   #{step\ 4045}#)))
                           #{tmp\ 4034}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 4033}#)))
                ($sc-dispatch
                  #{tmp\ 4033}#
                  '(any #(each (any any . any))
                        (any . each-any)
                        .
                        each-any))))
             #{orig-x\ 4031}#))
          (module-name (current-module)))))

(define quasiquote
  (make-syntax-transformer
    'quasiquote
    'macro
    (cons (letrec ((#{quasicons\ 4088}#
                     (lambda (#{x\ 4092}# #{y\ 4093}#)
                       ((lambda (#{tmp\ 4097}#)
                          ((lambda (#{tmp\ 4098}#)
                             (if #{tmp\ 4098}#
                               (apply (lambda (#{x\ 4101}# #{y\ 4102}#)
                                        ((lambda (#{tmp\ 4103}#)
                                           ((lambda (#{tmp\ 4104}#)
                                              (if #{tmp\ 4104}#
                                                (apply (lambda (#{dy\ 4106}#)
                                                         ((lambda (#{tmp\ 4107}#)
                                                            ((lambda (#{tmp\ 4108}#)
                                                               (if #{tmp\ 4108}#
                                                                 (apply (lambda (#{dx\ 4110}#)
                                                                          (list '#(syntax-object
                                                                                   quote
                                                                                   ((top)
                                                                                    #(ribcage
                                                                                      #(dx)
                                                                                      #((top))
                                                                                      #("i4109"))
                                                                                    #(ribcage
                                                                                      #(dy)
                                                                                      #((top))
                                                                                      #("i4105"))
                                                                                    #(ribcage
                                                                                      #(x
                                                                                        y)
                                                                                      #((top)
                                                                                        (top))
                                                                                      #("i4099"
                                                                                        "i4100"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(x
                                                                                        y)
                                                                                      #((top)
                                                                                        (top))
                                                                                      #("i4094"
                                                                                        "i4095"))
                                                                                    #(ribcage
                                                                                      #(quasicons
                                                                                        quasiappend
                                                                                        quasivector
                                                                                        quasi)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i4084"
                                                                                        "i4085"
                                                                                        "i4086"
                                                                                        "i4087")))
                                                                                   (hygiene
                                                                                     guile))
                                                                                (cons #{dx\ 4110}#
                                                                                      #{dy\ 4106}#)))
                                                                        #{tmp\ 4108}#)
                                                                 ((lambda (#{_\ 4112}#)
                                                                    (if (null? #{dy\ 4106}#)
                                                                      (list '#(syntax-object
                                                                               list
                                                                               ((top)
                                                                                #(ribcage
                                                                                  #(_)
                                                                                  #((top))
                                                                                  #("i4111"))
                                                                                #(ribcage
                                                                                  #(dy)
                                                                                  #((top))
                                                                                  #("i4105"))
                                                                                #(ribcage
                                                                                  #(x
                                                                                    y)
                                                                                  #((top)
                                                                                    (top))
                                                                                  #("i4099"
                                                                                    "i4100"))
                                                                                #(ribcage
                                                                                  ()
                                                                                  ()
                                                                                  ())
                                                                                #(ribcage
                                                                                  ()
                                                                                  ()
                                                                                  ())
                                                                                #(ribcage
                                                                                  #(x
                                                                                    y)
                                                                                  #((top)
                                                                                    (top))
                                                                                  #("i4094"
                                                                                    "i4095"))
                                                                                #(ribcage
                                                                                  #(quasicons
                                                                                    quasiappend
                                                                                    quasivector
                                                                                    quasi)
                                                                                  #((top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top))
                                                                                  #("i4084"
                                                                                    "i4085"
                                                                                    "i4086"
                                                                                    "i4087")))
                                                                               (hygiene
                                                                                 guile))
                                                                            #{x\ 4101}#)
                                                                      (list '#(syntax-object
                                                                               cons
                                                                               ((top)
                                                                                #(ribcage
                                                                                  #(_)
                                                                                  #((top))
                                                                                  #("i4111"))
                                                                                #(ribcage
                                                                                  #(dy)
                                                                                  #((top))
                                                                                  #("i4105"))
                                                                                #(ribcage
                                                                                  #(x
                                                                                    y)
                                                                                  #((top)
                                                                                    (top))
                                                                                  #("i4099"
                                                                                    "i4100"))
                                                                                #(ribcage
                                                                                  ()
                                                                                  ()
                                                                                  ())
                                                                                #(ribcage
                                                                                  ()
                                                                                  ()
                                                                                  ())
                                                                                #(ribcage
                                                                                  #(x
                                                                                    y)
                                                                                  #((top)
                                                                                    (top))
                                                                                  #("i4094"
                                                                                    "i4095"))
                                                                                #(ribcage
                                                                                  #(quasicons
                                                                                    quasiappend
                                                                                    quasivector
                                                                                    quasi)
                                                                                  #((top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top))
                                                                                  #("i4084"
                                                                                    "i4085"
                                                                                    "i4086"
                                                                                    "i4087")))
                                                                               (hygiene
                                                                                 guile))
                                                                            #{x\ 4101}#
                                                                            #{y\ 4102}#)))
                                                                  #{tmp\ 4107}#)))
                                                             ($sc-dispatch
                                                               #{tmp\ 4107}#
                                                               '(#(free-id
                                                                   #(syntax-object
                                                                     quote
                                                                     ((top)
                                                                      #(ribcage
                                                                        #(dy)
                                                                        #((top))
                                                                        #("i4105"))
                                                                      #(ribcage
                                                                        #(x y)
                                                                        #((top)
                                                                          (top))
                                                                        #("i4099"
                                                                          "i4100"))
                                                                      #(ribcage
                                                                        ()
                                                                        ()
                                                                        ())
                                                                      #(ribcage
                                                                        ()
                                                                        ()
                                                                        ())
                                                                      #(ribcage
                                                                        #(x y)
                                                                        #((top)
                                                                          (top))
                                                                        #("i4094"
                                                                          "i4095"))
                                                                      #(ribcage
                                                                        #(quasicons
                                                                          quasiappend
                                                                          quasivector
                                                                          quasi)
                                                                        #((top)
                                                                          (top)
                                                                          (top)
                                                                          (top))
                                                                        #("i4084"
                                                                          "i4085"
                                                                          "i4086"
                                                                          "i4087")))
                                                                     (hygiene
                                                                       guile)))
                                                                 any))))
                                                          #{x\ 4101}#))
                                                       #{tmp\ 4104}#)
                                                ((lambda (#{tmp\ 4113}#)
                                                   (if #{tmp\ 4113}#
                                                     (apply (lambda (#{stuff\ 4115}#)
                                                              (cons '#(syntax-object
                                                                       list
                                                                       ((top)
                                                                        #(ribcage
                                                                          #(stuff)
                                                                          #((top))
                                                                          #("i4114"))
                                                                        #(ribcage
                                                                          #(x
                                                                            y)
                                                                          #((top)
                                                                            (top))
                                                                          #("i4099"
                                                                            "i4100"))
                                                                        #(ribcage
                                                                          ()
                                                                          ()
                                                                          ())
                                                                        #(ribcage
                                                                          ()
                                                                          ()
                                                                          ())
                                                                        #(ribcage
                                                                          #(x
                                                                            y)
                                                                          #((top)
                                                                            (top))
                                                                          #("i4094"
                                                                            "i4095"))
                                                                        #(ribcage
                                                                          #(quasicons
                                                                            quasiappend
                                                                            quasivector
                                                                            quasi)
                                                                          #((top)
                                                                            (top)
                                                                            (top)
                                                                            (top))
                                                                          #("i4084"
                                                                            "i4085"
                                                                            "i4086"
                                                                            "i4087")))
                                                                       (hygiene
                                                                         guile))
                                                                    (cons #{x\ 4101}#
                                                                          #{stuff\ 4115}#)))
                                                            #{tmp\ 4113}#)
                                                     ((lambda (#{else\ 4117}#)
                                                        (list '#(syntax-object
                                                                 cons
                                                                 ((top)
                                                                  #(ribcage
                                                                    #(else)
                                                                    #((top))
                                                                    #("i4116"))
                                                                  #(ribcage
                                                                    #(x y)
                                                                    #((top)
                                                                      (top))
                                                                    #("i4099"
                                                                      "i4100"))
                                                                  #(ribcage
                                                                    ()
                                                                    ()
                                                                    ())
                                                                  #(ribcage
                                                                    ()
                                                                    ()
                                                                    ())
                                                                  #(ribcage
                                                                    #(x y)
                                                                    #((top)
                                                                      (top))
                                                                    #("i4094"
                                                                      "i4095"))
                                                                  #(ribcage
                                                                    #(quasicons
                                                                      quasiappend
                                                                      quasivector
                                                                      quasi)
                                                                    #((top)
                                                                      (top)
                                                                      (top)
                                                                      (top))
                                                                    #("i4084"
                                                                      "i4085"
                                                                      "i4086"
                                                                      "i4087")))
                                                                 (hygiene
                                                                   guile))
                                                              #{x\ 4101}#
                                                              #{y\ 4102}#))
                                                      #{tmp\ 4103}#)))
                                                 ($sc-dispatch
                                                   #{tmp\ 4103}#
                                                   '(#(free-id
                                                       #(syntax-object
                                                         list
                                                         ((top)
                                                          #(ribcage
                                                            #(x y)
                                                            #((top) (top))
                                                            #("i4099" "i4100"))
                                                          #(ribcage () () ())
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(x y)
                                                            #((top) (top))
                                                            #("i4094" "i4095"))
                                                          #(ribcage
                                                            #(quasicons
                                                              quasiappend
                                                              quasivector
                                                              quasi)
                                                            #((top)
                                                              (top)
                                                              (top)
                                                              (top))
                                                            #("i4084"
                                                              "i4085"
                                                              "i4086"
                                                              "i4087")))
                                                         (hygiene guile)))
                                                     .
                                                     any)))))
                                            ($sc-dispatch
                                              #{tmp\ 4103}#
                                              '(#(free-id
                                                  #(syntax-object
                                                    quote
                                                    ((top)
                                                     #(ribcage
                                                       #(x y)
                                                       #((top) (top))
                                                       #("i4099" "i4100"))
                                                     #(ribcage () () ())
                                                     #(ribcage () () ())
                                                     #(ribcage
                                                       #(x y)
                                                       #((top) (top))
                                                       #("i4094" "i4095"))
                                                     #(ribcage
                                                       #(quasicons
                                                         quasiappend
                                                         quasivector
                                                         quasi)
                                                       #((top)
                                                         (top)
                                                         (top)
                                                         (top))
                                                       #("i4084"
                                                         "i4085"
                                                         "i4086"
                                                         "i4087")))
                                                    (hygiene guile)))
                                                any))))
                                         #{y\ 4102}#))
                                      #{tmp\ 4098}#)
                               (syntax-violation
                                 #f
                                 "source expression failed to match any pattern"
                                 #{tmp\ 4097}#)))
                           ($sc-dispatch #{tmp\ 4097}# (quote (any any)))))
                        (list #{x\ 4092}# #{y\ 4093}#))))
                   (#{quasiappend\ 4089}#
                     (lambda (#{x\ 4118}# #{y\ 4119}#)
                       ((lambda (#{tmp\ 4123}#)
                          ((lambda (#{tmp\ 4124}#)
                             (if #{tmp\ 4124}#
                               (apply (lambda (#{x\ 4127}# #{y\ 4128}#)
                                        ((lambda (#{tmp\ 4129}#)
                                           ((lambda (#{tmp\ 4130}#)
                                              (if #{tmp\ 4130}#
                                                (apply (lambda () #{x\ 4127}#)
                                                       #{tmp\ 4130}#)
                                                ((lambda (#{_\ 4132}#)
                                                   (list '#(syntax-object
                                                            append
                                                            ((top)
                                                             #(ribcage
                                                               #(_)
                                                               #((top))
                                                               #("i4131"))
                                                             #(ribcage
                                                               #(x y)
                                                               #((top) (top))
                                                               #("i4125"
                                                                 "i4126"))
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               #(x y)
                                                               #((top) (top))
                                                               #("i4120"
                                                                 "i4121"))
                                                             #(ribcage
                                                               #(quasicons
                                                                 quasiappend
                                                                 quasivector
                                                                 quasi)
                                                               #((top)
                                                                 (top)
                                                                 (top)
                                                                 (top))
                                                               #("i4084"
                                                                 "i4085"
                                                                 "i4086"
                                                                 "i4087")))
                                                            (hygiene guile))
                                                         #{x\ 4127}#
                                                         #{y\ 4128}#))
                                                 #{tmp\ 4129}#)))
                                            ($sc-dispatch
                                              #{tmp\ 4129}#
                                              '(#(free-id
                                                  #(syntax-object
                                                    quote
                                                    ((top)
                                                     #(ribcage
                                                       #(x y)
                                                       #((top) (top))
                                                       #("i4125" "i4126"))
                                                     #(ribcage () () ())
                                                     #(ribcage () () ())
                                                     #(ribcage
                                                       #(x y)
                                                       #((top) (top))
                                                       #("i4120" "i4121"))
                                                     #(ribcage
                                                       #(quasicons
                                                         quasiappend
                                                         quasivector
                                                         quasi)
                                                       #((top)
                                                         (top)
                                                         (top)
                                                         (top))
                                                       #("i4084"
                                                         "i4085"
                                                         "i4086"
                                                         "i4087")))
                                                    (hygiene guile)))
                                                ()))))
                                         #{y\ 4128}#))
                                      #{tmp\ 4124}#)
                               (syntax-violation
                                 #f
                                 "source expression failed to match any pattern"
                                 #{tmp\ 4123}#)))
                           ($sc-dispatch #{tmp\ 4123}# (quote (any any)))))
                        (list #{x\ 4118}# #{y\ 4119}#))))
                   (#{quasivector\ 4090}#
                     (lambda (#{x\ 4133}#)
                       ((lambda (#{tmp\ 4136}#)
                          ((lambda (#{x\ 4138}#)
                             ((lambda (#{tmp\ 4139}#)
                                ((lambda (#{tmp\ 4140}#)
                                   (if #{tmp\ 4140}#
                                     (apply (lambda (#{x\ 4142}#)
                                              (list '#(syntax-object
                                                       quote
                                                       ((top)
                                                        #(ribcage
                                                          #(x)
                                                          #((top))
                                                          #("i4141"))
                                                        #(ribcage
                                                          #(x)
                                                          #((top))
                                                          #("i4137"))
                                                        #(ribcage () () ())
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(x)
                                                          #((top))
                                                          #("i4134"))
                                                        #(ribcage
                                                          #(quasicons
                                                            quasiappend
                                                            quasivector
                                                            quasi)
                                                          #((top)
                                                            (top)
                                                            (top)
                                                            (top))
                                                          #("i4084"
                                                            "i4085"
                                                            "i4086"
                                                            "i4087")))
                                                       (hygiene guile))
                                                    (list->vector
                                                      #{x\ 4142}#)))
                                            #{tmp\ 4140}#)
                                     ((lambda (#{tmp\ 4144}#)
                                        (if #{tmp\ 4144}#
                                          (apply (lambda (#{x\ 4146}#)
                                                   (cons '#(syntax-object
                                                            vector
                                                            ((top)
                                                             #(ribcage
                                                               #(x)
                                                               #((top))
                                                               #("i4145"))
                                                             #(ribcage
                                                               #(x)
                                                               #((top))
                                                               #("i4137"))
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               #(x)
                                                               #((top))
                                                               #("i4134"))
                                                             #(ribcage
                                                               #(quasicons
                                                                 quasiappend
                                                                 quasivector
                                                                 quasi)
                                                               #((top)
                                                                 (top)
                                                                 (top)
                                                                 (top))
                                                               #("i4084"
                                                                 "i4085"
                                                                 "i4086"
                                                                 "i4087")))
                                                            (hygiene guile))
                                                         #{x\ 4146}#))
                                                 #{tmp\ 4144}#)
                                          ((lambda (#{_\ 4149}#)
                                             (list '#(syntax-object
                                                      list->vector
                                                      ((top)
                                                       #(ribcage
                                                         #(_)
                                                         #((top))
                                                         #("i4148"))
                                                       #(ribcage
                                                         #(x)
                                                         #((top))
                                                         #("i4137"))
                                                       #(ribcage () () ())
                                                       #(ribcage () () ())
                                                       #(ribcage
                                                         #(x)
                                                         #((top))
                                                         #("i4134"))
                                                       #(ribcage
                                                         #(quasicons
                                                           quasiappend
                                                           quasivector
                                                           quasi)
                                                         #((top)
                                                           (top)
                                                           (top)
                                                           (top))
                                                         #("i4084"
                                                           "i4085"
                                                           "i4086"
                                                           "i4087")))
                                                      (hygiene guile))
                                                   #{x\ 4138}#))
                                           #{tmp\ 4139}#)))
                                      ($sc-dispatch
                                        #{tmp\ 4139}#
                                        '(#(free-id
                                            #(syntax-object
                                              list
                                              ((top)
                                               #(ribcage
                                                 #(x)
                                                 #((top))
                                                 #("i4137"))
                                               #(ribcage () () ())
                                               #(ribcage () () ())
                                               #(ribcage
                                                 #(x)
                                                 #((top))
                                                 #("i4134"))
                                               #(ribcage
                                                 #(quasicons
                                                   quasiappend
                                                   quasivector
                                                   quasi)
                                                 #((top) (top) (top) (top))
                                                 #("i4084"
                                                   "i4085"
                                                   "i4086"
                                                   "i4087")))
                                              (hygiene guile)))
                                          .
                                          each-any)))))
                                 ($sc-dispatch
                                   #{tmp\ 4139}#
                                   '(#(free-id
                                       #(syntax-object
                                         quote
                                         ((top)
                                          #(ribcage #(x) #((top)) #("i4137"))
                                          #(ribcage () () ())
                                          #(ribcage () () ())
                                          #(ribcage #(x) #((top)) #("i4134"))
                                          #(ribcage
                                            #(quasicons
                                              quasiappend
                                              quasivector
                                              quasi)
                                            #((top) (top) (top) (top))
                                            #("i4084"
                                              "i4085"
                                              "i4086"
                                              "i4087")))
                                         (hygiene guile)))
                                     each-any))))
                              #{x\ 4138}#))
                           #{tmp\ 4136}#))
                        #{x\ 4133}#)))
                   (#{quasi\ 4091}#
                     (lambda (#{p\ 4150}# #{lev\ 4151}#)
                       ((lambda (#{tmp\ 4154}#)
                          ((lambda (#{tmp\ 4155}#)
                             (if #{tmp\ 4155}#
                               (apply (lambda (#{p\ 4157}#)
                                        (if (= #{lev\ 4151}# 0)
                                          #{p\ 4157}#
                                          (#{quasicons\ 4088}#
                                            '(#(syntax-object
                                                quote
                                                ((top)
                                                 #(ribcage
                                                   #(p)
                                                   #((top))
                                                   #("i4156"))
                                                 #(ribcage () () ())
                                                 #(ribcage
                                                   #(p lev)
                                                   #((top) (top))
                                                   #("i4152" "i4153"))
                                                 #(ribcage
                                                   #(quasicons
                                                     quasiappend
                                                     quasivector
                                                     quasi)
                                                   #((top) (top) (top) (top))
                                                   #("i4084"
                                                     "i4085"
                                                     "i4086"
                                                     "i4087")))
                                                (hygiene guile))
                                              #(syntax-object
                                                unquote
                                                ((top)
                                                 #(ribcage
                                                   #(p)
                                                   #((top))
                                                   #("i4156"))
                                                 #(ribcage () () ())
                                                 #(ribcage
                                                   #(p lev)
                                                   #((top) (top))
                                                   #("i4152" "i4153"))
                                                 #(ribcage
                                                   #(quasicons
                                                     quasiappend
                                                     quasivector
                                                     quasi)
                                                   #((top) (top) (top) (top))
                                                   #("i4084"
                                                     "i4085"
                                                     "i4086"
                                                     "i4087")))
                                                (hygiene guile)))
                                            (#{quasi\ 4091}#
                                              (list #{p\ 4157}#)
                                              (- #{lev\ 4151}# 1)))))
                                      #{tmp\ 4155}#)
                               ((lambda (#{tmp\ 4158}#)
                                  (if (if #{tmp\ 4158}#
                                        (apply (lambda (#{args\ 4160}#)
                                                 (= #{lev\ 4151}# 0))
                                               #{tmp\ 4158}#)
                                        #f)
                                    (apply (lambda (#{args\ 4162}#)
                                             (syntax-violation
                                               'unquote
                                               "unquote takes exactly one argument"
                                               #{p\ 4150}#
                                               (cons '#(syntax-object
                                                        unquote
                                                        ((top)
                                                         #(ribcage
                                                           #(args)
                                                           #((top))
                                                           #("i4161"))
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(p lev)
                                                           #((top) (top))
                                                           #("i4152" "i4153"))
                                                         #(ribcage
                                                           #(quasicons
                                                             quasiappend
                                                             quasivector
                                                             quasi)
                                                           #((top)
                                                             (top)
                                                             (top)
                                                             (top))
                                                           #("i4084"
                                                             "i4085"
                                                             "i4086"
                                                             "i4087")))
                                                        (hygiene guile))
                                                     #{args\ 4162}#)))
                                           #{tmp\ 4158}#)
                                    ((lambda (#{tmp\ 4163}#)
                                       (if #{tmp\ 4163}#
                                         (apply (lambda (#{p\ 4166}#
                                                         #{q\ 4167}#)
                                                  (if (= #{lev\ 4151}# 0)
                                                    (#{quasiappend\ 4089}#
                                                      #{p\ 4166}#
                                                      (#{quasi\ 4091}#
                                                        #{q\ 4167}#
                                                        #{lev\ 4151}#))
                                                    (#{quasicons\ 4088}#
                                                      (#{quasicons\ 4088}#
                                                        '(#(syntax-object
                                                            quote
                                                            ((top)
                                                             #(ribcage
                                                               #(p q)
                                                               #((top) (top))
                                                               #("i4164"
                                                                 "i4165"))
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               #(p lev)
                                                               #((top) (top))
                                                               #("i4152"
                                                                 "i4153"))
                                                             #(ribcage
                                                               #(quasicons
                                                                 quasiappend
                                                                 quasivector
                                                                 quasi)
                                                               #((top)
                                                                 (top)
                                                                 (top)
                                                                 (top))
                                                               #("i4084"
                                                                 "i4085"
                                                                 "i4086"
                                                                 "i4087")))
                                                            (hygiene guile))
                                                          #(syntax-object
                                                            unquote-splicing
                                                            ((top)
                                                             #(ribcage
                                                               #(p q)
                                                               #((top) (top))
                                                               #("i4164"
                                                                 "i4165"))
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               #(p lev)
                                                               #((top) (top))
                                                               #("i4152"
                                                                 "i4153"))
                                                             #(ribcage
                                                               #(quasicons
                                                                 quasiappend
                                                                 quasivector
                                                                 quasi)
                                                               #((top)
                                                                 (top)
                                                                 (top)
                                                                 (top))
                                                               #("i4084"
                                                                 "i4085"
                                                                 "i4086"
                                                                 "i4087")))
                                                            (hygiene guile)))
                                                        (#{quasi\ 4091}#
                                                          (list #{p\ 4166}#)
                                                          (- #{lev\ 4151}# 1)))
                                                      (#{quasi\ 4091}#
                                                        #{q\ 4167}#
                                                        #{lev\ 4151}#))))
                                                #{tmp\ 4163}#)
                                         ((lambda (#{tmp\ 4168}#)
                                            (if (if #{tmp\ 4168}#
                                                  (apply (lambda (#{args\ 4171}#
                                                                  #{q\ 4172}#)
                                                           (= #{lev\ 4151}# 0))
                                                         #{tmp\ 4168}#)
                                                  #f)
                                              (apply (lambda (#{args\ 4175}#
                                                              #{q\ 4176}#)
                                                       (syntax-violation
                                                         'unquote-splicing
                                                         "unquote-splicing takes exactly one argument"
                                                         #{p\ 4150}#
                                                         (cons '#(syntax-object
                                                                  unquote-splicing
                                                                  ((top)
                                                                   #(ribcage
                                                                     #(args q)
                                                                     #((top)
                                                                       (top))
                                                                     #("i4173"
                                                                       "i4174"))
                                                                   #(ribcage
                                                                     ()
                                                                     ()
                                                                     ())
                                                                   #(ribcage
                                                                     #(p lev)
                                                                     #((top)
                                                                       (top))
                                                                     #("i4152"
                                                                       "i4153"))
                                                                   #(ribcage
                                                                     #(quasicons
                                                                       quasiappend
                                                                       quasivector
                                                                       quasi)
                                                                     #((top)
                                                                       (top)
                                                                       (top)
                                                                       (top))
                                                                     #("i4084"
                                                                       "i4085"
                                                                       "i4086"
                                                                       "i4087")))
                                                                  (hygiene
                                                                    guile))
                                                               #{args\ 4175}#)))
                                                     #{tmp\ 4168}#)
                                              ((lambda (#{tmp\ 4177}#)
                                                 (if #{tmp\ 4177}#
                                                   (apply (lambda (#{p\ 4179}#)
                                                            (#{quasicons\ 4088}#
                                                              '(#(syntax-object
                                                                  quote
                                                                  ((top)
                                                                   #(ribcage
                                                                     #(p)
                                                                     #((top))
                                                                     #("i4178"))
                                                                   #(ribcage
                                                                     ()
                                                                     ()
                                                                     ())
                                                                   #(ribcage
                                                                     #(p lev)
                                                                     #((top)
                                                                       (top))
                                                                     #("i4152"
                                                                       "i4153"))
                                                                   #(ribcage
                                                                     #(quasicons
                                                                       quasiappend
                                                                       quasivector
                                                                       quasi)
                                                                     #((top)
                                                                       (top)
                                                                       (top)
                                                                       (top))
                                                                     #("i4084"
                                                                       "i4085"
                                                                       "i4086"
                                                                       "i4087")))
                                                                  (hygiene
                                                                    guile))
                                                                #(syntax-object
                                                                  quasiquote
                                                                  ((top)
                                                                   #(ribcage
                                                                     #(p)
                                                                     #((top))
                                                                     #("i4178"))
                                                                   #(ribcage
                                                                     ()
                                                                     ()
                                                                     ())
                                                                   #(ribcage
                                                                     #(p lev)
                                                                     #((top)
                                                                       (top))
                                                                     #("i4152"
                                                                       "i4153"))
                                                                   #(ribcage
                                                                     #(quasicons
                                                                       quasiappend
                                                                       quasivector
                                                                       quasi)
                                                                     #((top)
                                                                       (top)
                                                                       (top)
                                                                       (top))
                                                                     #("i4084"
                                                                       "i4085"
                                                                       "i4086"
                                                                       "i4087")))
                                                                  (hygiene
                                                                    guile)))
                                                              (#{quasi\ 4091}#
                                                                (list #{p\ 4179}#)
                                                                (+ #{lev\ 4151}#
                                                                   1))))
                                                          #{tmp\ 4177}#)
                                                   ((lambda (#{tmp\ 4180}#)
                                                      (if #{tmp\ 4180}#
                                                        (apply (lambda (#{p\ 4183}#
                                                                        #{q\ 4184}#)
                                                                 (#{quasicons\ 4088}#
                                                                   (#{quasi\ 4091}#
                                                                     #{p\ 4183}#
                                                                     #{lev\ 4151}#)
                                                                   (#{quasi\ 4091}#
                                                                     #{q\ 4184}#
                                                                     #{lev\ 4151}#)))
                                                               #{tmp\ 4180}#)
                                                        ((lambda (#{tmp\ 4185}#)
                                                           (if #{tmp\ 4185}#
                                                             (apply (lambda (#{x\ 4187}#)
                                                                      (#{quasivector\ 4090}#
                                                                        (#{quasi\ 4091}#
                                                                          #{x\ 4187}#
                                                                          #{lev\ 4151}#)))
                                                                    #{tmp\ 4185}#)
                                                             ((lambda (#{p\ 4190}#)
                                                                (list '#(syntax-object
                                                                         quote
                                                                         ((top)
                                                                          #(ribcage
                                                                            #(p)
                                                                            #((top))
                                                                            #("i4189"))
                                                                          #(ribcage
                                                                            ()
                                                                            ()
                                                                            ())
                                                                          #(ribcage
                                                                            #(p
                                                                              lev)
                                                                            #((top)
                                                                              (top))
                                                                            #("i4152"
                                                                              "i4153"))
                                                                          #(ribcage
                                                                            #(quasicons
                                                                              quasiappend
                                                                              quasivector
                                                                              quasi)
                                                                            #((top)
                                                                              (top)
                                                                              (top)
                                                                              (top))
                                                                            #("i4084"
                                                                              "i4085"
                                                                              "i4086"
                                                                              "i4087")))
                                                                         (hygiene
                                                                           guile))
                                                                      #{p\ 4190}#))
                                                              #{tmp\ 4154}#)))
                                                         ($sc-dispatch
                                                           #{tmp\ 4154}#
                                                           '#(vector
                                                              each-any)))))
                                                    ($sc-dispatch
                                                      #{tmp\ 4154}#
                                                      '(any . any)))))
                                               ($sc-dispatch
                                                 #{tmp\ 4154}#
                                                 '(#(free-id
                                                     #(syntax-object
                                                       quasiquote
                                                       ((top)
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(p lev)
                                                          #((top) (top))
                                                          #("i4152" "i4153"))
                                                        #(ribcage
                                                          #(quasicons
                                                            quasiappend
                                                            quasivector
                                                            quasi)
                                                          #((top)
                                                            (top)
                                                            (top)
                                                            (top))
                                                          #("i4084"
                                                            "i4085"
                                                            "i4086"
                                                            "i4087")))
                                                       (hygiene guile)))
                                                   any)))))
                                          ($sc-dispatch
                                            #{tmp\ 4154}#
                                            '((#(free-id
                                                 #(syntax-object
                                                   unquote-splicing
                                                   ((top)
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(p lev)
                                                      #((top) (top))
                                                      #("i4152" "i4153"))
                                                    #(ribcage
                                                      #(quasicons
                                                        quasiappend
                                                        quasivector
                                                        quasi)
                                                      #((top)
                                                        (top)
                                                        (top)
                                                        (top))
                                                      #("i4084"
                                                        "i4085"
                                                        "i4086"
                                                        "i4087")))
                                                   (hygiene guile)))
                                               .
                                               any)
                                              .
                                              any)))))
                                     ($sc-dispatch
                                       #{tmp\ 4154}#
                                       '((#(free-id
                                            #(syntax-object
                                              unquote-splicing
                                              ((top)
                                               #(ribcage () () ())
                                               #(ribcage
                                                 #(p lev)
                                                 #((top) (top))
                                                 #("i4152" "i4153"))
                                               #(ribcage
                                                 #(quasicons
                                                   quasiappend
                                                   quasivector
                                                   quasi)
                                                 #((top) (top) (top) (top))
                                                 #("i4084"
                                                   "i4085"
                                                   "i4086"
                                                   "i4087")))
                                              (hygiene guile)))
                                          any)
                                         .
                                         any)))))
                                ($sc-dispatch
                                  #{tmp\ 4154}#
                                  '(#(free-id
                                      #(syntax-object
                                        unquote
                                        ((top)
                                         #(ribcage () () ())
                                         #(ribcage
                                           #(p lev)
                                           #((top) (top))
                                           #("i4152" "i4153"))
                                         #(ribcage
                                           #(quasicons
                                             quasiappend
                                             quasivector
                                             quasi)
                                           #((top) (top) (top) (top))
                                           #("i4084" "i4085" "i4086" "i4087")))
                                        (hygiene guile)))
                                    .
                                    any)))))
                           ($sc-dispatch
                             #{tmp\ 4154}#
                             '(#(free-id
                                 #(syntax-object
                                   unquote
                                   ((top)
                                    #(ribcage () () ())
                                    #(ribcage
                                      #(p lev)
                                      #((top) (top))
                                      #("i4152" "i4153"))
                                    #(ribcage
                                      #(quasicons
                                        quasiappend
                                        quasivector
                                        quasi)
                                      #((top) (top) (top) (top))
                                      #("i4084" "i4085" "i4086" "i4087")))
                                   (hygiene guile)))
                               any))))
                        #{p\ 4150}#))))
            (lambda (#{x\ 4191}#)
              ((lambda (#{tmp\ 4193}#)
                 ((lambda (#{tmp\ 4194}#)
                    (if #{tmp\ 4194}#
                      (apply (lambda (#{_\ 4197}# #{e\ 4198}#)
                               (#{quasi\ 4091}# #{e\ 4198}# 0))
                             #{tmp\ 4194}#)
                      (syntax-violation
                        #f
                        "source expression failed to match any pattern"
                        #{tmp\ 4193}#)))
                  ($sc-dispatch #{tmp\ 4193}# (quote (any any)))))
               #{x\ 4191}#)))
          (module-name (current-module)))))

(define include
  (make-syntax-transformer
    'include
    'macro
    (cons (lambda (#{x\ 4199}#)
            (letrec ((#{read-file\ 4202}#
                       (lambda (#{fn\ 4203}# #{k\ 4204}#)
                         (let ((#{p\ 4208}# (open-input-file #{fn\ 4203}#)))
                           (letrec ((#{f\ 4212}#
                                      (lambda (#{x\ 4213}# #{result\ 4214}#)
                                        (if (eof-object? #{x\ 4213}#)
                                          (begin
                                            (close-input-port #{p\ 4208}#)
                                            (reverse #{result\ 4214}#))
                                          (#{f\ 4212}#
                                            (read #{p\ 4208}#)
                                            (cons (datum->syntax
                                                    #{k\ 4204}#
                                                    #{x\ 4213}#)
                                                  #{result\ 4214}#))))))
                             (#{f\ 4212}# (read #{p\ 4208}#) (quote ())))))))
              ((lambda (#{tmp\ 4215}#)
                 ((lambda (#{tmp\ 4216}#)
                    (if #{tmp\ 4216}#
                      (apply (lambda (#{k\ 4219}# #{filename\ 4220}#)
                               (let ((#{fn\ 4222}#
                                       (syntax->datum #{filename\ 4220}#)))
                                 ((lambda (#{tmp\ 4224}#)
                                    ((lambda (#{tmp\ 4225}#)
                                       (if #{tmp\ 4225}#
                                         (apply (lambda (#{exp\ 4227}#)
                                                  (cons '#(syntax-object
                                                           begin
                                                           ((top)
                                                            #(ribcage
                                                              #(exp)
                                                              #((top))
                                                              #("i4226"))
                                                            #(ribcage () () ())
                                                            #(ribcage () () ())
                                                            #(ribcage
                                                              #(fn)
                                                              #((top))
                                                              #("i4221"))
                                                            #(ribcage
                                                              #(k filename)
                                                              #((top) (top))
                                                              #("i4217"
                                                                "i4218"))
                                                            #(ribcage
                                                              (read-file)
                                                              ((top))
                                                              ("i4201"))
                                                            #(ribcage
                                                              #(x)
                                                              #((top))
                                                              #("i4200")))
                                                           (hygiene guile))
                                                        #{exp\ 4227}#))
                                                #{tmp\ 4225}#)
                                         (syntax-violation
                                           #f
                                           "source expression failed to match any pattern"
                                           #{tmp\ 4224}#)))
                                     ($sc-dispatch
                                       #{tmp\ 4224}#
                                       'each-any)))
                                  (#{read-file\ 4202}#
                                    #{fn\ 4222}#
                                    #{k\ 4219}#))))
                             #{tmp\ 4216}#)
                      (syntax-violation
                        #f
                        "source expression failed to match any pattern"
                        #{tmp\ 4215}#)))
                  ($sc-dispatch #{tmp\ 4215}# (quote (any any)))))
               #{x\ 4199}#)))
          (module-name (current-module)))))

(define include-from-path
  (make-syntax-transformer
    'include-from-path
    'macro
    (cons (lambda (#{x\ 4229}#)
            ((lambda (#{tmp\ 4231}#)
               ((lambda (#{tmp\ 4232}#)
                  (if #{tmp\ 4232}#
                    (apply (lambda (#{k\ 4235}# #{filename\ 4236}#)
                             (let ((#{fn\ 4238}#
                                     (syntax->datum #{filename\ 4236}#)))
                               ((lambda (#{tmp\ 4240}#)
                                  ((lambda (#{fn\ 4242}#)
                                     (list '#(syntax-object
                                              include
                                              ((top)
                                               #(ribcage
                                                 #(fn)
                                                 #((top))
                                                 #("i4241"))
                                               #(ribcage () () ())
                                               #(ribcage () () ())
                                               #(ribcage
                                                 #(fn)
                                                 #((top))
                                                 #("i4237"))
                                               #(ribcage
                                                 #(k filename)
                                                 #((top) (top))
                                                 #("i4233" "i4234"))
                                               #(ribcage () () ())
                                               #(ribcage
                                                 #(x)
                                                 #((top))
                                                 #("i4230")))
                                              (hygiene guile))
                                           #{fn\ 4242}#))
                                   #{tmp\ 4240}#))
                                (let ((#{t\ 4245}#
                                        (%search-load-path #{fn\ 4238}#)))
                                  (if #{t\ 4245}#
                                    #{t\ 4245}#
                                    (syntax-violation
                                      'include-from-path
                                      "file not found in path"
                                      #{x\ 4229}#
                                      #{filename\ 4236}#))))))
                           #{tmp\ 4232}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 4231}#)))
                ($sc-dispatch #{tmp\ 4231}# (quote (any any)))))
             #{x\ 4229}#))
          (module-name (current-module)))))

(define unquote
  (make-syntax-transformer
    'unquote
    'macro
    (cons (lambda (#{x\ 4247}#)
            ((lambda (#{tmp\ 4249}#)
               ((lambda (#{tmp\ 4250}#)
                  (if #{tmp\ 4250}#
                    (apply (lambda (#{_\ 4253}# #{e\ 4254}#)
                             (syntax-violation
                               'unquote
                               "expression not valid outside of quasiquote"
                               #{x\ 4247}#))
                           #{tmp\ 4250}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 4249}#)))
                ($sc-dispatch #{tmp\ 4249}# (quote (any any)))))
             #{x\ 4247}#))
          (module-name (current-module)))))

(define unquote-splicing
  (make-syntax-transformer
    'unquote-splicing
    'macro
    (cons (lambda (#{x\ 4255}#)
            ((lambda (#{tmp\ 4257}#)
               ((lambda (#{tmp\ 4258}#)
                  (if #{tmp\ 4258}#
                    (apply (lambda (#{_\ 4261}# #{e\ 4262}#)
                             (syntax-violation
                               'unquote-splicing
                               "expression not valid outside of quasiquote"
                               #{x\ 4255}#))
                           #{tmp\ 4258}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 4257}#)))
                ($sc-dispatch #{tmp\ 4257}# (quote (any any)))))
             #{x\ 4255}#))
          (module-name (current-module)))))

(define case
  (make-syntax-transformer
    'case
    'macro
    (cons (lambda (#{x\ 4263}#)
            ((lambda (#{tmp\ 4265}#)
               ((lambda (#{tmp\ 4266}#)
                  (if #{tmp\ 4266}#
                    (apply (lambda (#{_\ 4271}#
                                    #{e\ 4272}#
                                    #{m1\ 4273}#
                                    #{m2\ 4274}#)
                             ((lambda (#{tmp\ 4276}#)
                                ((lambda (#{body\ 4278}#)
                                   (list '#(syntax-object
                                            let
                                            ((top)
                                             #(ribcage
                                               #(body)
                                               #((top))
                                               #("i4277"))
                                             #(ribcage
                                               #(_ e m1 m2)
                                               #((top) (top) (top) (top))
                                               #("i4267"
                                                 "i4268"
                                                 "i4269"
                                                 "i4270"))
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(x)
                                               #((top))
                                               #("i4264")))
                                            (hygiene guile))
                                         (list (list '#(syntax-object
                                                        t
                                                        ((top)
                                                         #(ribcage
                                                           #(body)
                                                           #((top))
                                                           #("i4277"))
                                                         #(ribcage
                                                           #(_ e m1 m2)
                                                           #((top)
                                                             (top)
                                                             (top)
                                                             (top))
                                                           #("i4267"
                                                             "i4268"
                                                             "i4269"
                                                             "i4270"))
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(x)
                                                           #((top))
                                                           #("i4264")))
                                                        (hygiene guile))
                                                     #{e\ 4272}#))
                                         #{body\ 4278}#))
                                 #{tmp\ 4276}#))
                              (letrec ((#{f\ 4282}#
                                         (lambda (#{clause\ 4283}#
                                                  #{clauses\ 4284}#)
                                           (if (null? #{clauses\ 4284}#)
                                             ((lambda (#{tmp\ 4286}#)
                                                ((lambda (#{tmp\ 4287}#)
                                                   (if #{tmp\ 4287}#
                                                     (apply (lambda (#{e1\ 4290}#
                                                                     #{e2\ 4291}#)
                                                              (cons '#(syntax-object
                                                                       begin
                                                                       ((top)
                                                                        #(ribcage
                                                                          #(e1
                                                                            e2)
                                                                          #((top)
                                                                            (top))
                                                                          #("i4288"
                                                                            "i4289"))
                                                                        #(ribcage
                                                                          ()
                                                                          ()
                                                                          ())
                                                                        #(ribcage
                                                                          #(f
                                                                            clause
                                                                            clauses)
                                                                          #((top)
                                                                            (top)
                                                                            (top))
                                                                          #("i4279"
                                                                            "i4280"
                                                                            "i4281"))
                                                                        #(ribcage
                                                                          #(_
                                                                            e
                                                                            m1
                                                                            m2)
                                                                          #((top)
                                                                            (top)
                                                                            (top)
                                                                            (top))
                                                                          #("i4267"
                                                                            "i4268"
                                                                            "i4269"
                                                                            "i4270"))
                                                                        #(ribcage
                                                                          ()
                                                                          ()
                                                                          ())
                                                                        #(ribcage
                                                                          #(x)
                                                                          #((top))
                                                                          #("i4264")))
                                                                       (hygiene
                                                                         guile))
                                                                    (cons #{e1\ 4290}#
                                                                          #{e2\ 4291}#)))
                                                            #{tmp\ 4287}#)
                                                     ((lambda (#{tmp\ 4293}#)
                                                        (if #{tmp\ 4293}#
                                                          (apply (lambda (#{k\ 4297}#
                                                                          #{e1\ 4298}#
                                                                          #{e2\ 4299}#)
                                                                   (list '#(syntax-object
                                                                            if
                                                                            ((top)
                                                                             #(ribcage
                                                                               #(k
                                                                                 e1
                                                                                 e2)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i4294"
                                                                                 "i4295"
                                                                                 "i4296"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(f
                                                                                 clause
                                                                                 clauses)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i4279"
                                                                                 "i4280"
                                                                                 "i4281"))
                                                                             #(ribcage
                                                                               #(_
                                                                                 e
                                                                                 m1
                                                                                 m2)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i4267"
                                                                                 "i4268"
                                                                                 "i4269"
                                                                                 "i4270"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(x)
                                                                               #((top))
                                                                               #("i4264")))
                                                                            (hygiene
                                                                              guile))
                                                                         (list '#(syntax-object
                                                                                  memv
                                                                                  ((top)
                                                                                   #(ribcage
                                                                                     #(k
                                                                                       e1
                                                                                       e2)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i4294"
                                                                                       "i4295"
                                                                                       "i4296"))
                                                                                   #(ribcage
                                                                                     ()
                                                                                     ()
                                                                                     ())
                                                                                   #(ribcage
                                                                                     #(f
                                                                                       clause
                                                                                       clauses)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i4279"
                                                                                       "i4280"
                                                                                       "i4281"))
                                                                                   #(ribcage
                                                                                     #(_
                                                                                       e
                                                                                       m1
                                                                                       m2)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i4267"
                                                                                       "i4268"
                                                                                       "i4269"
                                                                                       "i4270"))
                                                                                   #(ribcage
                                                                                     ()
                                                                                     ()
                                                                                     ())
                                                                                   #(ribcage
                                                                                     #(x)
                                                                                     #((top))
                                                                                     #("i4264")))
                                                                                  (hygiene
                                                                                    guile))
                                                                               '#(syntax-object
                                                                                  t
                                                                                  ((top)
                                                                                   #(ribcage
                                                                                     #(k
                                                                                       e1
                                                                                       e2)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i4294"
                                                                                       "i4295"
                                                                                       "i4296"))
                                                                                   #(ribcage
                                                                                     ()
                                                                                     ()
                                                                                     ())
                                                                                   #(ribcage
                                                                                     #(f
                                                                                       clause
                                                                                       clauses)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i4279"
                                                                                       "i4280"
                                                                                       "i4281"))
                                                                                   #(ribcage
                                                                                     #(_
                                                                                       e
                                                                                       m1
                                                                                       m2)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i4267"
                                                                                       "i4268"
                                                                                       "i4269"
                                                                                       "i4270"))
                                                                                   #(ribcage
                                                                                     ()
                                                                                     ()
                                                                                     ())
                                                                                   #(ribcage
                                                                                     #(x)
                                                                                     #((top))
                                                                                     #("i4264")))
                                                                                  (hygiene
                                                                                    guile))
                                                                               (list '#(syntax-object
                                                                                        quote
                                                                                        ((top)
                                                                                         #(ribcage
                                                                                           #(k
                                                                                             e1
                                                                                             e2)
                                                                                           #((top)
                                                                                             (top)
                                                                                             (top))
                                                                                           #("i4294"
                                                                                             "i4295"
                                                                                             "i4296"))
                                                                                         #(ribcage
                                                                                           ()
                                                                                           ()
                                                                                           ())
                                                                                         #(ribcage
                                                                                           #(f
                                                                                             clause
                                                                                             clauses)
                                                                                           #((top)
                                                                                             (top)
                                                                                             (top))
                                                                                           #("i4279"
                                                                                             "i4280"
                                                                                             "i4281"))
                                                                                         #(ribcage
                                                                                           #(_
                                                                                             e
                                                                                             m1
                                                                                             m2)
                                                                                           #((top)
                                                                                             (top)
                                                                                             (top)
                                                                                             (top))
                                                                                           #("i4267"
                                                                                             "i4268"
                                                                                             "i4269"
                                                                                             "i4270"))
                                                                                         #(ribcage
                                                                                           ()
                                                                                           ()
                                                                                           ())
                                                                                         #(ribcage
                                                                                           #(x)
                                                                                           #((top))
                                                                                           #("i4264")))
                                                                                        (hygiene
                                                                                          guile))
                                                                                     #{k\ 4297}#))
                                                                         (cons '#(syntax-object
                                                                                  begin
                                                                                  ((top)
                                                                                   #(ribcage
                                                                                     #(k
                                                                                       e1
                                                                                       e2)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i4294"
                                                                                       "i4295"
                                                                                       "i4296"))
                                                                                   #(ribcage
                                                                                     ()
                                                                                     ()
                                                                                     ())
                                                                                   #(ribcage
                                                                                     #(f
                                                                                       clause
                                                                                       clauses)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i4279"
                                                                                       "i4280"
                                                                                       "i4281"))
                                                                                   #(ribcage
                                                                                     #(_
                                                                                       e
                                                                                       m1
                                                                                       m2)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i4267"
                                                                                       "i4268"
                                                                                       "i4269"
                                                                                       "i4270"))
                                                                                   #(ribcage
                                                                                     ()
                                                                                     ()
                                                                                     ())
                                                                                   #(ribcage
                                                                                     #(x)
                                                                                     #((top))
                                                                                     #("i4264")))
                                                                                  (hygiene
                                                                                    guile))
                                                                               (cons #{e1\ 4298}#
                                                                                     #{e2\ 4299}#))))
                                                                 #{tmp\ 4293}#)
                                                          ((lambda (#{_\ 4303}#)
                                                             (syntax-violation
                                                               'case
                                                               "bad clause"
                                                               #{x\ 4263}#
                                                               #{clause\ 4283}#))
                                                           #{tmp\ 4286}#)))
                                                      ($sc-dispatch
                                                        #{tmp\ 4286}#
                                                        '(each-any
                                                           any
                                                           .
                                                           each-any)))))
                                                 ($sc-dispatch
                                                   #{tmp\ 4286}#
                                                   '(#(free-id
                                                       #(syntax-object
                                                         else
                                                         ((top)
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(f clause clauses)
                                                            #((top)
                                                              (top)
                                                              (top))
                                                            #("i4279"
                                                              "i4280"
                                                              "i4281"))
                                                          #(ribcage
                                                            #(_ e m1 m2)
                                                            #((top)
                                                              (top)
                                                              (top)
                                                              (top))
                                                            #("i4267"
                                                              "i4268"
                                                              "i4269"
                                                              "i4270"))
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(x)
                                                            #((top))
                                                            #("i4264")))
                                                         (hygiene guile)))
                                                     any
                                                     .
                                                     each-any))))
                                              #{clause\ 4283}#)
                                             ((lambda (#{tmp\ 4305}#)
                                                ((lambda (#{rest\ 4307}#)
                                                   ((lambda (#{tmp\ 4308}#)
                                                      ((lambda (#{tmp\ 4309}#)
                                                         (if #{tmp\ 4309}#
                                                           (apply (lambda (#{k\ 4313}#
                                                                           #{e1\ 4314}#
                                                                           #{e2\ 4315}#)
                                                                    (list '#(syntax-object
                                                                             if
                                                                             ((top)
                                                                              #(ribcage
                                                                                #(k
                                                                                  e1
                                                                                  e2)
                                                                                #((top)
                                                                                  (top)
                                                                                  (top))
                                                                                #("i4310"
                                                                                  "i4311"
                                                                                  "i4312"))
                                                                              #(ribcage
                                                                                #(rest)
                                                                                #((top))
                                                                                #("i4306"))
                                                                              #(ribcage
                                                                                ()
                                                                                ()
                                                                                ())
                                                                              #(ribcage
                                                                                #(f
                                                                                  clause
                                                                                  clauses)
                                                                                #((top)
                                                                                  (top)
                                                                                  (top))
                                                                                #("i4279"
                                                                                  "i4280"
                                                                                  "i4281"))
                                                                              #(ribcage
                                                                                #(_
                                                                                  e
                                                                                  m1
                                                                                  m2)
                                                                                #((top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top))
                                                                                #("i4267"
                                                                                  "i4268"
                                                                                  "i4269"
                                                                                  "i4270"))
                                                                              #(ribcage
                                                                                ()
                                                                                ()
                                                                                ())
                                                                              #(ribcage
                                                                                #(x)
                                                                                #((top))
                                                                                #("i4264")))
                                                                             (hygiene
                                                                               guile))
                                                                          (list '#(syntax-object
                                                                                   memv
                                                                                   ((top)
                                                                                    #(ribcage
                                                                                      #(k
                                                                                        e1
                                                                                        e2)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i4310"
                                                                                        "i4311"
                                                                                        "i4312"))
                                                                                    #(ribcage
                                                                                      #(rest)
                                                                                      #((top))
                                                                                      #("i4306"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(f
                                                                                        clause
                                                                                        clauses)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i4279"
                                                                                        "i4280"
                                                                                        "i4281"))
                                                                                    #(ribcage
                                                                                      #(_
                                                                                        e
                                                                                        m1
                                                                                        m2)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i4267"
                                                                                        "i4268"
                                                                                        "i4269"
                                                                                        "i4270"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(x)
                                                                                      #((top))
                                                                                      #("i4264")))
                                                                                   (hygiene
                                                                                     guile))
                                                                                '#(syntax-object
                                                                                   t
                                                                                   ((top)
                                                                                    #(ribcage
                                                                                      #(k
                                                                                        e1
                                                                                        e2)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i4310"
                                                                                        "i4311"
                                                                                        "i4312"))
                                                                                    #(ribcage
                                                                                      #(rest)
                                                                                      #((top))
                                                                                      #("i4306"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(f
                                                                                        clause
                                                                                        clauses)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i4279"
                                                                                        "i4280"
                                                                                        "i4281"))
                                                                                    #(ribcage
                                                                                      #(_
                                                                                        e
                                                                                        m1
                                                                                        m2)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i4267"
                                                                                        "i4268"
                                                                                        "i4269"
                                                                                        "i4270"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(x)
                                                                                      #((top))
                                                                                      #("i4264")))
                                                                                   (hygiene
                                                                                     guile))
                                                                                (list '#(syntax-object
                                                                                         quote
                                                                                         ((top)
                                                                                          #(ribcage
                                                                                            #(k
                                                                                              e1
                                                                                              e2)
                                                                                            #((top)
                                                                                              (top)
                                                                                              (top))
                                                                                            #("i4310"
                                                                                              "i4311"
                                                                                              "i4312"))
                                                                                          #(ribcage
                                                                                            #(rest)
                                                                                            #((top))
                                                                                            #("i4306"))
                                                                                          #(ribcage
                                                                                            ()
                                                                                            ()
                                                                                            ())
                                                                                          #(ribcage
                                                                                            #(f
                                                                                              clause
                                                                                              clauses)
                                                                                            #((top)
                                                                                              (top)
                                                                                              (top))
                                                                                            #("i4279"
                                                                                              "i4280"
                                                                                              "i4281"))
                                                                                          #(ribcage
                                                                                            #(_
                                                                                              e
                                                                                              m1
                                                                                              m2)
                                                                                            #((top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top))
                                                                                            #("i4267"
                                                                                              "i4268"
                                                                                              "i4269"
                                                                                              "i4270"))
                                                                                          #(ribcage
                                                                                            ()
                                                                                            ()
                                                                                            ())
                                                                                          #(ribcage
                                                                                            #(x)
                                                                                            #((top))
                                                                                            #("i4264")))
                                                                                         (hygiene
                                                                                           guile))
                                                                                      #{k\ 4313}#))
                                                                          (cons '#(syntax-object
                                                                                   begin
                                                                                   ((top)
                                                                                    #(ribcage
                                                                                      #(k
                                                                                        e1
                                                                                        e2)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i4310"
                                                                                        "i4311"
                                                                                        "i4312"))
                                                                                    #(ribcage
                                                                                      #(rest)
                                                                                      #((top))
                                                                                      #("i4306"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(f
                                                                                        clause
                                                                                        clauses)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i4279"
                                                                                        "i4280"
                                                                                        "i4281"))
                                                                                    #(ribcage
                                                                                      #(_
                                                                                        e
                                                                                        m1
                                                                                        m2)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i4267"
                                                                                        "i4268"
                                                                                        "i4269"
                                                                                        "i4270"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(x)
                                                                                      #((top))
                                                                                      #("i4264")))
                                                                                   (hygiene
                                                                                     guile))
                                                                                (cons #{e1\ 4314}#
                                                                                      #{e2\ 4315}#))
                                                                          #{rest\ 4307}#))
                                                                  #{tmp\ 4309}#)
                                                           ((lambda (#{_\ 4319}#)
                                                              (syntax-violation
                                                                'case
                                                                "bad clause"
                                                                #{x\ 4263}#
                                                                #{clause\ 4283}#))
                                                            #{tmp\ 4308}#)))
                                                       ($sc-dispatch
                                                         #{tmp\ 4308}#
                                                         '(each-any
                                                            any
                                                            .
                                                            each-any))))
                                                    #{clause\ 4283}#))
                                                 #{tmp\ 4305}#))
                                              (#{f\ 4282}#
                                                (car #{clauses\ 4284}#)
                                                (cdr #{clauses\ 4284}#)))))))
                                (#{f\ 4282}# #{m1\ 4273}# #{m2\ 4274}#))))
                           #{tmp\ 4266}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 4265}#)))
                ($sc-dispatch
                  #{tmp\ 4265}#
                  '(any any any . each-any))))
             #{x\ 4263}#))
          (module-name (current-module)))))

(define identifier-syntax
  (make-syntax-transformer
    'identifier-syntax
    'macro
    (cons (lambda (#{x\ 4320}#)
            ((lambda (#{tmp\ 4322}#)
               ((lambda (#{tmp\ 4323}#)
                  (if #{tmp\ 4323}#
                    (apply (lambda (#{_\ 4326}# #{e\ 4327}#)
                             (list '#(syntax-object
                                      lambda
                                      ((top)
                                       #(ribcage
                                         #(_ e)
                                         #((top) (top))
                                         #("i4324" "i4325"))
                                       #(ribcage () () ())
                                       #(ribcage #(x) #((top)) #("i4321")))
                                      (hygiene guile))
                                   '(#(syntax-object
                                       x
                                       ((top)
                                        #(ribcage
                                          #(_ e)
                                          #((top) (top))
                                          #("i4324" "i4325"))
                                        #(ribcage () () ())
                                        #(ribcage #(x) #((top)) #("i4321")))
                                       (hygiene guile)))
                                   (list '#(syntax-object
                                            syntax-case
                                            ((top)
                                             #(ribcage
                                               #(_ e)
                                               #((top) (top))
                                               #("i4324" "i4325"))
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(x)
                                               #((top))
                                               #("i4321")))
                                            (hygiene guile))
                                         '#(syntax-object
                                            x
                                            ((top)
                                             #(ribcage
                                               #(_ e)
                                               #((top) (top))
                                               #("i4324" "i4325"))
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(x)
                                               #((top))
                                               #("i4321")))
                                            (hygiene guile))
                                         '()
                                         (list '#(syntax-object
                                                  id
                                                  ((top)
                                                   #(ribcage
                                                     #(_ e)
                                                     #((top) (top))
                                                     #("i4324" "i4325"))
                                                   #(ribcage () () ())
                                                   #(ribcage
                                                     #(x)
                                                     #((top))
                                                     #("i4321")))
                                                  (hygiene guile))
                                               '(#(syntax-object
                                                   identifier?
                                                   ((top)
                                                    #(ribcage
                                                      #(_ e)
                                                      #((top) (top))
                                                      #("i4324" "i4325"))
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(x)
                                                      #((top))
                                                      #("i4321")))
                                                   (hygiene guile))
                                                 (#(syntax-object
                                                    syntax
                                                    ((top)
                                                     #(ribcage
                                                       #(_ e)
                                                       #((top) (top))
                                                       #("i4324" "i4325"))
                                                     #(ribcage () () ())
                                                     #(ribcage
                                                       #(x)
                                                       #((top))
                                                       #("i4321")))
                                                    (hygiene guile))
                                                  #(syntax-object
                                                    id
                                                    ((top)
                                                     #(ribcage
                                                       #(_ e)
                                                       #((top) (top))
                                                       #("i4324" "i4325"))
                                                     #(ribcage () () ())
                                                     #(ribcage
                                                       #(x)
                                                       #((top))
                                                       #("i4321")))
                                                    (hygiene guile))))
                                               (list '#(syntax-object
                                                        syntax
                                                        ((top)
                                                         #(ribcage
                                                           #(_ e)
                                                           #((top) (top))
                                                           #("i4324" "i4325"))
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(x)
                                                           #((top))
                                                           #("i4321")))
                                                        (hygiene guile))
                                                     #{e\ 4327}#))
                                         (list (cons #{_\ 4326}#
                                                     '(#(syntax-object
                                                         x
                                                         ((top)
                                                          #(ribcage
                                                            #(_ e)
                                                            #((top) (top))
                                                            #("i4324" "i4325"))
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(x)
                                                            #((top))
                                                            #("i4321")))
                                                         (hygiene guile))
                                                       #(syntax-object
                                                         ...
                                                         ((top)
                                                          #(ribcage
                                                            #(_ e)
                                                            #((top) (top))
                                                            #("i4324" "i4325"))
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(x)
                                                            #((top))
                                                            #("i4321")))
                                                         (hygiene guile))))
                                               (list '#(syntax-object
                                                        syntax
                                                        ((top)
                                                         #(ribcage
                                                           #(_ e)
                                                           #((top) (top))
                                                           #("i4324" "i4325"))
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(x)
                                                           #((top))
                                                           #("i4321")))
                                                        (hygiene guile))
                                                     (cons #{e\ 4327}#
                                                           '(#(syntax-object
                                                               x
                                                               ((top)
                                                                #(ribcage
                                                                  #(_ e)
                                                                  #((top)
                                                                    (top))
                                                                  #("i4324"
                                                                    "i4325"))
                                                                #(ribcage
                                                                  ()
                                                                  ()
                                                                  ())
                                                                #(ribcage
                                                                  #(x)
                                                                  #((top))
                                                                  #("i4321")))
                                                               (hygiene guile))
                                                             #(syntax-object
                                                               ...
                                                               ((top)
                                                                #(ribcage
                                                                  #(_ e)
                                                                  #((top)
                                                                    (top))
                                                                  #("i4324"
                                                                    "i4325"))
                                                                #(ribcage
                                                                  ()
                                                                  ()
                                                                  ())
                                                                #(ribcage
                                                                  #(x)
                                                                  #((top))
                                                                  #("i4321")))
                                                               (hygiene
                                                                 guile)))))))))
                           #{tmp\ 4323}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 4322}#)))
                ($sc-dispatch #{tmp\ 4322}# (quote (any any)))))
             #{x\ 4320}#))
          (module-name (current-module)))))

(define define*
  (make-syntax-transformer
    'define*
    'macro
    (cons (lambda (#{x\ 4328}#)
            ((lambda (#{tmp\ 4330}#)
               ((lambda (#{tmp\ 4331}#)
                  (if #{tmp\ 4331}#
                    (apply (lambda (#{_\ 4337}#
                                    #{id\ 4338}#
                                    #{args\ 4339}#
                                    #{b0\ 4340}#
                                    #{b1\ 4341}#)
                             (list '#(syntax-object
                                      define
                                      ((top)
                                       #(ribcage
                                         #(_ id args b0 b1)
                                         #((top) (top) (top) (top) (top))
                                         #("i4332"
                                           "i4333"
                                           "i4334"
                                           "i4335"
                                           "i4336"))
                                       #(ribcage () () ())
                                       #(ribcage #(x) #((top)) #("i4329")))
                                      (hygiene guile))
                                   #{id\ 4338}#
                                   (cons '#(syntax-object
                                            lambda*
                                            ((top)
                                             #(ribcage
                                               #(_ id args b0 b1)
                                               #((top) (top) (top) (top) (top))
                                               #("i4332"
                                                 "i4333"
                                                 "i4334"
                                                 "i4335"
                                                 "i4336"))
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(x)
                                               #((top))
                                               #("i4329")))
                                            (hygiene guile))
                                         (cons #{args\ 4339}#
                                               (cons #{b0\ 4340}#
                                                     #{b1\ 4341}#)))))
                           #{tmp\ 4331}#)
                    ((lambda (#{tmp\ 4343}#)
                       (if (if #{tmp\ 4343}#
                             (apply (lambda (#{_\ 4347}#
                                             #{id\ 4348}#
                                             #{val\ 4349}#)
                                      (identifier?
                                        '#(syntax-object
                                           x
                                           ((top)
                                            #(ribcage
                                              #(_ id val)
                                              #((top) (top) (top))
                                              #("i4344" "i4345" "i4346"))
                                            #(ribcage () () ())
                                            #(ribcage
                                              #(x)
                                              #((top))
                                              #("i4329")))
                                           (hygiene guile))))
                                    #{tmp\ 4343}#)
                             #f)
                         (apply (lambda (#{_\ 4353}#
                                         #{id\ 4354}#
                                         #{val\ 4355}#)
                                  (list '#(syntax-object
                                           define
                                           ((top)
                                            #(ribcage
                                              #(_ id val)
                                              #((top) (top) (top))
                                              #("i4350" "i4351" "i4352"))
                                            #(ribcage () () ())
                                            #(ribcage
                                              #(x)
                                              #((top))
                                              #("i4329")))
                                           (hygiene guile))
                                        #{id\ 4354}#
                                        #{val\ 4355}#))
                                #{tmp\ 4343}#)
                         (syntax-violation
                           #f
                           "source expression failed to match any pattern"
                           #{tmp\ 4330}#)))
                     ($sc-dispatch
                       #{tmp\ 4330}#
                       '(any any any)))))
                ($sc-dispatch
                  #{tmp\ 4330}#
                  '(any (any . any) any . each-any))))
             #{x\ 4328}#))
          (module-name (current-module)))))

