(eval-when (compile) (set-current-module (resolve-module (quote (guile)))))
(if #f #f)

(letrec ((#{and-map*\ 20}#
           (lambda (#{f\ 134}# #{first\ 135}# . #{rest\ 136}#)
             (let ((#{t\ 142}# (null? #{first\ 135}#)))
               (if #{t\ 142}#
                 #{t\ 142}#
                 (if (null? #{rest\ 136}#)
                   (letrec ((#{andmap\ 146}#
                              (lambda (#{first\ 147}#)
                                (let ((#{x\ 150}# (car #{first\ 147}#))
                                      (#{first\ 151}# (cdr #{first\ 147}#)))
                                  (if (null? #{first\ 151}#)
                                    (#{f\ 134}# #{x\ 150}#)
                                    (if (#{f\ 134}# #{x\ 150}#)
                                      (#{andmap\ 146}# #{first\ 151}#)
                                      #f))))))
                     (#{andmap\ 146}# #{first\ 135}#))
                   (letrec ((#{andmap\ 157}#
                              (lambda (#{first\ 158}# #{rest\ 159}#)
                                (let ((#{x\ 164}# (car #{first\ 158}#))
                                      (#{xr\ 165}# (map car #{rest\ 159}#))
                                      (#{first\ 166}# (cdr #{first\ 158}#))
                                      (#{rest\ 167}# (map cdr #{rest\ 159}#)))
                                  (if (null? #{first\ 166}#)
                                    (apply #{f\ 134}#
                                           (cons #{x\ 164}# #{xr\ 165}#))
                                    (if (apply #{f\ 134}#
                                               (cons #{x\ 164}# #{xr\ 165}#))
                                      (#{andmap\ 157}#
                                        #{first\ 166}#
                                        #{rest\ 167}#)
                                      #f))))))
                     (#{andmap\ 157}# #{first\ 135}# #{rest\ 136}#))))))))
  (letrec ((#{lambda-var-list\ 422}#
             (lambda (#{vars\ 637}#)
               (letrec ((#{lvl\ 643}#
                          (lambda (#{vars\ 644}# #{ls\ 645}# #{w\ 646}#)
                            (if (pair? #{vars\ 644}#)
                              (#{lvl\ 643}#
                                (cdr #{vars\ 644}#)
                                (cons (#{wrap\ 376}#
                                        (car #{vars\ 644}#)
                                        #{w\ 646}#
                                        #f)
                                      #{ls\ 645}#)
                                #{w\ 646}#)
                              (if (#{id?\ 307}# #{vars\ 644}#)
                                (cons (#{wrap\ 376}#
                                        #{vars\ 644}#
                                        #{w\ 646}#
                                        #f)
                                      #{ls\ 645}#)
                                (if (null? #{vars\ 644}#)
                                  #{ls\ 645}#
                                  (if (#{syntax-object?\ 271}# #{vars\ 644}#)
                                    (#{lvl\ 643}#
                                      (#{syntax-object-expression\ 273}#
                                        #{vars\ 644}#)
                                      #{ls\ 645}#
                                      (#{join-wraps\ 358}#
                                        #{w\ 646}#
                                        (#{syntax-object-wrap\ 275}#
                                          #{vars\ 644}#)))
                                    (cons #{vars\ 644}# #{ls\ 645}#))))))))
                 (#{lvl\ 643}#
                   #{vars\ 637}#
                   '()
                   '(())))))
           (#{gen-var\ 420}#
             (lambda (#{id\ 657}#)
               (let ((#{id\ 660}#
                       (if (#{syntax-object?\ 271}# #{id\ 657}#)
                         (#{syntax-object-expression\ 273}# #{id\ 657}#)
                         #{id\ 657}#)))
                 (gensym
                   (string-append (symbol->string #{id\ 660}#) " ")))))
           (#{strip\ 418}#
             (lambda (#{x\ 662}# #{w\ 663}#)
               (if (memq 'top
                         (#{wrap-marks\ 314}# #{w\ 663}#))
                 #{x\ 662}#
                 (letrec ((#{f\ 669}# (lambda (#{x\ 670}#)
                                        (if (#{syntax-object?\ 271}#
                                              #{x\ 670}#)
                                          (#{strip\ 418}#
                                            (#{syntax-object-expression\ 273}#
                                              #{x\ 670}#)
                                            (#{syntax-object-wrap\ 275}#
                                              #{x\ 670}#))
                                          (if (pair? #{x\ 670}#)
                                            (let ((#{a\ 677}# (#{f\ 669}# (car #{x\ 670}#)))
                                                  (#{d\ 678}# (#{f\ 669}# (cdr #{x\ 670}#))))
                                              (if (if (eq? #{a\ 677}#
                                                           (car #{x\ 670}#))
                                                    (eq? #{d\ 678}#
                                                         (cdr #{x\ 670}#))
                                                    #f)
                                                #{x\ 670}#
                                                (cons #{a\ 677}# #{d\ 678}#)))
                                            (if (vector? #{x\ 670}#)
                                              (let ((#{old\ 684}#
                                                      (vector->list
                                                        #{x\ 670}#)))
                                                (let ((#{new\ 686}#
                                                        (map #{f\ 669}#
                                                             #{old\ 684}#)))
                                                  (if (#{and-map*\ 20}#
                                                        eq?
                                                        #{old\ 684}#
                                                        #{new\ 686}#)
                                                    #{x\ 670}#
                                                    (list->vector
                                                      #{new\ 686}#))))
                                              #{x\ 670}#))))))
                   (#{f\ 669}# #{x\ 662}#)))))
           (#{chi-lambda-case\ 416}#
             (lambda (#{e\ 688}#
                      #{r\ 689}#
                      #{w\ 690}#
                      #{s\ 691}#
                      #{mod\ 692}#
                      #{get-formals\ 693}#
                      #{clauses\ 694}#)
               (letrec ((#{expand-body\ 709}#
                          (lambda (#{req\ 710}#
                                   #{opt\ 711}#
                                   #{rest\ 712}#
                                   #{kw\ 713}#
                                   #{body\ 714}#
                                   #{vars\ 715}#
                                   #{r*\ 716}#
                                   #{w*\ 717}#
                                   #{inits\ 718}#
                                   #{meta\ 719}#)
                            ((lambda (#{tmp\ 730}#)
                               ((lambda (#{tmp\ 731}#)
                                  (if (if #{tmp\ 731}#
                                        (apply (lambda (#{docstring\ 735}#
                                                        #{e1\ 736}#
                                                        #{e2\ 737}#)
                                                 (string?
                                                   (syntax->datum
                                                     #{docstring\ 735}#)))
                                               #{tmp\ 731}#)
                                        #f)
                                    (apply (lambda (#{docstring\ 741}#
                                                    #{e1\ 742}#
                                                    #{e2\ 743}#)
                                             (#{expand-body\ 709}#
                                               #{req\ 710}#
                                               #{opt\ 711}#
                                               #{rest\ 712}#
                                               #{kw\ 713}#
                                               (cons #{e1\ 742}# #{e2\ 743}#)
                                               #{vars\ 715}#
                                               #{r*\ 716}#
                                               #{w*\ 717}#
                                               #{inits\ 718}#
                                               (append
                                                 #{meta\ 719}#
                                                 (list (cons 'documentation
                                                             (syntax->datum
                                                               #{docstring\ 741}#))))))
                                           #{tmp\ 731}#)
                                    ((lambda (#{tmp\ 746}#)
                                       (if #{tmp\ 746}#
                                         (apply (lambda (#{k\ 751}#
                                                         #{v\ 752}#
                                                         #{e1\ 753}#
                                                         #{e2\ 754}#)
                                                  (#{expand-body\ 709}#
                                                    #{req\ 710}#
                                                    #{opt\ 711}#
                                                    #{rest\ 712}#
                                                    #{kw\ 713}#
                                                    (cons #{e1\ 753}#
                                                          #{e2\ 754}#)
                                                    #{vars\ 715}#
                                                    #{r*\ 716}#
                                                    #{w*\ 717}#
                                                    #{inits\ 718}#
                                                    (append
                                                      #{meta\ 719}#
                                                      (syntax->datum
                                                        (map cons
                                                             #{k\ 751}#
                                                             #{v\ 752}#)))))
                                                #{tmp\ 746}#)
                                         ((lambda (#{tmp\ 758}#)
                                            (if #{tmp\ 758}#
                                              (apply (lambda (#{e1\ 761}#
                                                              #{e2\ 762}#)
                                                       (values
                                                         #{meta\ 719}#
                                                         #{req\ 710}#
                                                         #{opt\ 711}#
                                                         #{rest\ 712}#
                                                         #{kw\ 713}#
                                                         #{inits\ 718}#
                                                         #{vars\ 715}#
                                                         (#{chi-body\ 400}#
                                                           (cons #{e1\ 761}#
                                                                 #{e2\ 762}#)
                                                           (#{source-wrap\ 378}#
                                                             #{e\ 688}#
                                                             #{w\ 690}#
                                                             #{s\ 691}#
                                                             #{mod\ 692}#)
                                                           #{r*\ 716}#
                                                           #{w*\ 717}#
                                                           #{mod\ 692}#)))
                                                     #{tmp\ 758}#)
                                              (syntax-violation
                                                #f
                                                "source expression failed to match any pattern"
                                                #{tmp\ 730}#)))
                                          ($sc-dispatch
                                            #{tmp\ 730}#
                                            '(any . each-any)))))
                                     ($sc-dispatch
                                       #{tmp\ 730}#
                                       '(#(vector #(each (any . any)))
                                         any
                                         .
                                         each-any)))))
                                ($sc-dispatch
                                  #{tmp\ 730}#
                                  '(any any . each-any))))
                             #{body\ 714}#)))
                        (#{expand-kw\ 707}#
                          (lambda (#{req\ 764}#
                                   #{opt\ 765}#
                                   #{rest\ 766}#
                                   #{kw\ 767}#
                                   #{body\ 768}#
                                   #{vars\ 769}#
                                   #{r*\ 770}#
                                   #{w*\ 771}#
                                   #{aok\ 772}#
                                   #{out\ 773}#
                                   #{inits\ 774}#)
                            (if (pair? #{kw\ 767}#)
                              ((lambda (#{tmp\ 788}#)
                                 ((lambda (#{tmp\ 789}#)
                                    (if #{tmp\ 789}#
                                      (apply (lambda (#{k\ 793}#
                                                      #{id\ 794}#
                                                      #{i\ 795}#)
                                               (let ((#{v\ 798}# (#{gen-var\ 420}#
                                                                   #{id\ 794}#)))
                                                 (let ((#{l\ 800}# (#{gen-labels\ 325}#
                                                                     (list #{v\ 798}#))))
                                                   (let ((#{r**\ 802}#
                                                           (#{extend-var-env\ 297}#
                                                             #{l\ 800}#
                                                             (list #{v\ 798}#)
                                                             #{r*\ 770}#)))
                                                     (let ((#{w**\ 804}#
                                                             (#{make-binding-wrap\ 354}#
                                                               (list #{id\ 794}#)
                                                               #{l\ 800}#
                                                               #{w*\ 771}#)))
                                                       (#{expand-kw\ 707}#
                                                         #{req\ 764}#
                                                         #{opt\ 765}#
                                                         #{rest\ 766}#
                                                         (cdr #{kw\ 767}#)
                                                         #{body\ 768}#
                                                         (cons #{v\ 798}#
                                                               #{vars\ 769}#)
                                                         #{r**\ 802}#
                                                         #{w**\ 804}#
                                                         #{aok\ 772}#
                                                         (cons (list (syntax->datum
                                                                       #{k\ 793}#)
                                                                     (syntax->datum
                                                                       #{id\ 794}#)
                                                                     #{v\ 798}#)
                                                               #{out\ 773}#)
                                                         (cons (#{chi\ 392}#
                                                                 #{i\ 795}#
                                                                 #{r*\ 770}#
                                                                 #{w*\ 771}#
                                                                 #{mod\ 692}#)
                                                               #{inits\ 774}#)))))))
                                             #{tmp\ 789}#)
                                      (syntax-violation
                                        #f
                                        "source expression failed to match any pattern"
                                        #{tmp\ 788}#)))
                                  ($sc-dispatch
                                    #{tmp\ 788}#
                                    '(any any any))))
                               (car #{kw\ 767}#))
                              (#{expand-body\ 709}#
                                #{req\ 764}#
                                #{opt\ 765}#
                                #{rest\ 766}#
                                (if (let ((#{t\ 808}# #{aok\ 772}#))
                                      (if #{t\ 808}#
                                        #{t\ 808}#
                                        (pair? #{out\ 773}#)))
                                  (cons #{aok\ 772}# (reverse #{out\ 773}#))
                                  #f)
                                #{body\ 768}#
                                (reverse #{vars\ 769}#)
                                #{r*\ 770}#
                                #{w*\ 771}#
                                (reverse #{inits\ 774}#)
                                '()))))
                        (#{expand-opt\ 705}#
                          (lambda (#{req\ 810}#
                                   #{opt\ 811}#
                                   #{rest\ 812}#
                                   #{kw\ 813}#
                                   #{body\ 814}#
                                   #{vars\ 815}#
                                   #{r*\ 816}#
                                   #{w*\ 817}#
                                   #{out\ 818}#
                                   #{inits\ 819}#)
                            (if (pair? #{opt\ 811}#)
                              ((lambda (#{tmp\ 832}#)
                                 ((lambda (#{tmp\ 833}#)
                                    (if #{tmp\ 833}#
                                      (apply (lambda (#{id\ 836}# #{i\ 837}#)
                                               (let ((#{v\ 840}# (#{gen-var\ 420}#
                                                                   #{id\ 836}#)))
                                                 (let ((#{l\ 842}# (#{gen-labels\ 325}#
                                                                     (list #{v\ 840}#))))
                                                   (let ((#{r**\ 844}#
                                                           (#{extend-var-env\ 297}#
                                                             #{l\ 842}#
                                                             (list #{v\ 840}#)
                                                             #{r*\ 816}#)))
                                                     (let ((#{w**\ 846}#
                                                             (#{make-binding-wrap\ 354}#
                                                               (list #{id\ 836}#)
                                                               #{l\ 842}#
                                                               #{w*\ 817}#)))
                                                       (#{expand-opt\ 705}#
                                                         #{req\ 810}#
                                                         (cdr #{opt\ 811}#)
                                                         #{rest\ 812}#
                                                         #{kw\ 813}#
                                                         #{body\ 814}#
                                                         (cons #{v\ 840}#
                                                               #{vars\ 815}#)
                                                         #{r**\ 844}#
                                                         #{w**\ 846}#
                                                         (cons (syntax->datum
                                                                 #{id\ 836}#)
                                                               #{out\ 818}#)
                                                         (cons (#{chi\ 392}#
                                                                 #{i\ 837}#
                                                                 #{r*\ 816}#
                                                                 #{w*\ 817}#
                                                                 #{mod\ 692}#)
                                                               #{inits\ 819}#)))))))
                                             #{tmp\ 833}#)
                                      (syntax-violation
                                        #f
                                        "source expression failed to match any pattern"
                                        #{tmp\ 832}#)))
                                  ($sc-dispatch
                                    #{tmp\ 832}#
                                    '(any any))))
                               (car #{opt\ 811}#))
                              (if #{rest\ 812}#
                                (let ((#{v\ 851}# (#{gen-var\ 420}#
                                                    #{rest\ 812}#)))
                                  (let ((#{l\ 853}# (#{gen-labels\ 325}#
                                                      (list #{v\ 851}#))))
                                    (let ((#{r*\ 855}#
                                            (#{extend-var-env\ 297}#
                                              #{l\ 853}#
                                              (list #{v\ 851}#)
                                              #{r*\ 816}#)))
                                      (let ((#{w*\ 857}#
                                              (#{make-binding-wrap\ 354}#
                                                (list #{rest\ 812}#)
                                                #{l\ 853}#
                                                #{w*\ 817}#)))
                                        (#{expand-kw\ 707}#
                                          #{req\ 810}#
                                          (if (pair? #{out\ 818}#)
                                            (reverse #{out\ 818}#)
                                            #f)
                                          (syntax->datum #{rest\ 812}#)
                                          (if (pair? #{kw\ 813}#)
                                            (cdr #{kw\ 813}#)
                                            #{kw\ 813}#)
                                          #{body\ 814}#
                                          (cons #{v\ 851}# #{vars\ 815}#)
                                          #{r*\ 855}#
                                          #{w*\ 857}#
                                          (if (pair? #{kw\ 813}#)
                                            (car #{kw\ 813}#)
                                            #f)
                                          '()
                                          #{inits\ 819}#)))))
                                (#{expand-kw\ 707}#
                                  #{req\ 810}#
                                  (if (pair? #{out\ 818}#)
                                    (reverse #{out\ 818}#)
                                    #f)
                                  #f
                                  (if (pair? #{kw\ 813}#)
                                    (cdr #{kw\ 813}#)
                                    #{kw\ 813}#)
                                  #{body\ 814}#
                                  #{vars\ 815}#
                                  #{r*\ 816}#
                                  #{w*\ 817}#
                                  (if (pair? #{kw\ 813}#) (car #{kw\ 813}#) #f)
                                  '()
                                  #{inits\ 819}#)))))
                        (#{expand-req\ 703}#
                          (lambda (#{req\ 859}#
                                   #{opt\ 860}#
                                   #{rest\ 861}#
                                   #{kw\ 862}#
                                   #{body\ 863}#)
                            (let ((#{vars\ 871}#
                                    (map #{gen-var\ 420}# #{req\ 859}#))
                                  (#{labels\ 872}#
                                    (#{gen-labels\ 325}# #{req\ 859}#)))
                              (let ((#{r*\ 875}#
                                      (#{extend-var-env\ 297}#
                                        #{labels\ 872}#
                                        #{vars\ 871}#
                                        #{r\ 689}#))
                                    (#{w*\ 876}#
                                      (#{make-binding-wrap\ 354}#
                                        #{req\ 859}#
                                        #{labels\ 872}#
                                        #{w\ 690}#)))
                                (#{expand-opt\ 705}#
                                  (map syntax->datum #{req\ 859}#)
                                  #{opt\ 860}#
                                  #{rest\ 861}#
                                  #{kw\ 862}#
                                  #{body\ 863}#
                                  (reverse #{vars\ 871}#)
                                  #{r*\ 875}#
                                  #{w*\ 876}#
                                  '()
                                  '()))))))
                 ((lambda (#{tmp\ 877}#)
                    ((lambda (#{tmp\ 878}#)
                       (if #{tmp\ 878}#
                         (apply (lambda () (values (quote ()) #f))
                                #{tmp\ 878}#)
                         ((lambda (#{tmp\ 879}#)
                            (if #{tmp\ 879}#
                              (apply (lambda (#{args\ 886}#
                                              #{e1\ 887}#
                                              #{e2\ 888}#
                                              #{args*\ 889}#
                                              #{e1*\ 890}#
                                              #{e2*\ 891}#)
                                       (call-with-values
                                         (lambda ()
                                           (#{get-formals\ 693}#
                                             #{args\ 886}#))
                                         (lambda (#{req\ 892}#
                                                  #{opt\ 893}#
                                                  #{rest\ 894}#
                                                  #{kw\ 895}#)
                                           (call-with-values
                                             (lambda ()
                                               (#{expand-req\ 703}#
                                                 #{req\ 892}#
                                                 #{opt\ 893}#
                                                 #{rest\ 894}#
                                                 #{kw\ 895}#
                                                 (cons #{e1\ 887}#
                                                       #{e2\ 888}#)))
                                             (lambda (#{meta\ 901}#
                                                      #{req\ 902}#
                                                      #{opt\ 903}#
                                                      #{rest\ 904}#
                                                      #{kw\ 905}#
                                                      #{inits\ 906}#
                                                      #{vars\ 907}#
                                                      #{body\ 908}#)
                                               (call-with-values
                                                 (lambda ()
                                                   (#{chi-lambda-case\ 416}#
                                                     #{e\ 688}#
                                                     #{r\ 689}#
                                                     #{w\ 690}#
                                                     #{s\ 691}#
                                                     #{mod\ 692}#
                                                     #{get-formals\ 693}#
                                                     (map (lambda (#{tmp\ 919}#
                                                                   #{tmp\ 918}#
                                                                   #{tmp\ 917}#)
                                                            (cons #{tmp\ 917}#
                                                                  (cons #{tmp\ 918}#
                                                                        #{tmp\ 919}#)))
                                                          #{e2*\ 891}#
                                                          #{e1*\ 890}#
                                                          #{args*\ 889}#)))
                                                 (lambda (#{meta*\ 921}#
                                                          #{else*\ 922}#)
                                                   (values
                                                     (append
                                                       #{meta\ 901}#
                                                       #{meta*\ 921}#)
                                                     (#{build-lambda-case\ 253}#
                                                       #{s\ 691}#
                                                       #{req\ 902}#
                                                       #{opt\ 903}#
                                                       #{rest\ 904}#
                                                       #{kw\ 905}#
                                                       #{inits\ 906}#
                                                       #{vars\ 907}#
                                                       #{body\ 908}#
                                                       #{else*\ 922}#)))))))))
                                     #{tmp\ 879}#)
                              (syntax-violation
                                #f
                                "source expression failed to match any pattern"
                                #{tmp\ 877}#)))
                          ($sc-dispatch
                            #{tmp\ 877}#
                            '((any any . each-any)
                              .
                              #(each (any any . each-any)))))))
                     ($sc-dispatch #{tmp\ 877}# (quote ()))))
                  #{clauses\ 694}#))))
           (#{lambda*-formals\ 414}#
             (lambda (#{orig-args\ 925}#)
               (letrec ((#{check\ 936}#
                          (lambda (#{req\ 937}#
                                   #{opt\ 938}#
                                   #{rest\ 939}#
                                   #{kw\ 940}#)
                            (if (#{distinct-bound-ids?\ 372}#
                                  (append
                                    #{req\ 937}#
                                    (map car #{opt\ 938}#)
                                    (if #{rest\ 939}#
                                      (list #{rest\ 939}#)
                                      '())
                                    (if (pair? #{kw\ 940}#)
                                      (map cadr (cdr #{kw\ 940}#))
                                      '())))
                              (values
                                #{req\ 937}#
                                #{opt\ 938}#
                                #{rest\ 939}#
                                #{kw\ 940}#)
                              (syntax-violation
                                'lambda*
                                "duplicate identifier in argument list"
                                #{orig-args\ 925}#))))
                        (#{rest\ 934}#
                          (lambda (#{args\ 948}#
                                   #{req\ 949}#
                                   #{opt\ 950}#
                                   #{kw\ 951}#)
                            ((lambda (#{tmp\ 956}#)
                               ((lambda (#{tmp\ 957}#)
                                  (if (if #{tmp\ 957}#
                                        (apply (lambda (#{r\ 959}#)
                                                 (#{id?\ 307}# #{r\ 959}#))
                                               #{tmp\ 957}#)
                                        #f)
                                    (apply (lambda (#{r\ 961}#)
                                             (#{check\ 936}#
                                               #{req\ 949}#
                                               #{opt\ 950}#
                                               #{r\ 961}#
                                               #{kw\ 951}#))
                                           #{tmp\ 957}#)
                                    ((lambda (#{else\ 963}#)
                                       (syntax-violation
                                         'lambda*
                                         "invalid rest argument"
                                         #{orig-args\ 925}#
                                         #{args\ 948}#))
                                     #{tmp\ 956}#)))
                                (list #{tmp\ 956}#)))
                             #{args\ 948}#)))
                        (#{key\ 932}#
                          (lambda (#{args\ 964}#
                                   #{req\ 965}#
                                   #{opt\ 966}#
                                   #{rkey\ 967}#)
                            ((lambda (#{tmp\ 972}#)
                               ((lambda (#{tmp\ 973}#)
                                  (if #{tmp\ 973}#
                                    (apply (lambda ()
                                             (#{check\ 936}#
                                               #{req\ 965}#
                                               #{opt\ 966}#
                                               #f
                                               (cons #f
                                                     (reverse #{rkey\ 967}#))))
                                           #{tmp\ 973}#)
                                    ((lambda (#{tmp\ 974}#)
                                       (if (if #{tmp\ 974}#
                                             (apply (lambda (#{a\ 977}#
                                                             #{b\ 978}#)
                                                      (#{id?\ 307}#
                                                        #{a\ 977}#))
                                                    #{tmp\ 974}#)
                                             #f)
                                         (apply (lambda (#{a\ 981}# #{b\ 982}#)
                                                  ((lambda (#{tmp\ 984}#)
                                                     ((lambda (#{k\ 986}#)
                                                        (#{key\ 932}#
                                                          #{b\ 982}#
                                                          #{req\ 965}#
                                                          #{opt\ 966}#
                                                          (cons (cons #{k\ 986}#
                                                                      (cons #{a\ 981}#
                                                                            '(#(syntax-object
                                                                                #f
                                                                                ((top)
                                                                                 #(ribcage
                                                                                   #(k)
                                                                                   #((top))
                                                                                   #("i985"))
                                                                                 #(ribcage
                                                                                   #(a
                                                                                     b)
                                                                                   #((top)
                                                                                     (top))
                                                                                   #("i979"
                                                                                     "i980"))
                                                                                 #(ribcage
                                                                                   ()
                                                                                   ()
                                                                                   ())
                                                                                 #(ribcage
                                                                                   #(args
                                                                                     req
                                                                                     opt
                                                                                     rkey)
                                                                                   #((top)
                                                                                     (top)
                                                                                     (top)
                                                                                     (top))
                                                                                   #("i968"
                                                                                     "i969"
                                                                                     "i970"
                                                                                     "i971"))
                                                                                 #(ribcage
                                                                                   (check rest
                                                                                          key
                                                                                          opt
                                                                                          req)
                                                                                   ((top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top))
                                                                                   ("i935"
                                                                                    "i933"
                                                                                    "i931"
                                                                                    "i929"
                                                                                    "i927"))
                                                                                 #(ribcage
                                                                                   #(orig-args)
                                                                                   #((top))
                                                                                   #("i926"))
                                                                                 #(ribcage
                                                                                   (lambda-var-list
                                                                                     gen-var
                                                                                     strip
                                                                                     chi-lambda-case
                                                                                     lambda*-formals
                                                                                     chi-simple-lambda
                                                                                     lambda-formals
                                                                                     ellipsis?
                                                                                     chi-void
                                                                                     eval-local-transformer
                                                                                     chi-local-syntax
                                                                                     chi-body
                                                                                     chi-macro
                                                                                     chi-application
                                                                                     chi-expr
                                                                                     chi
                                                                                     chi-top
                                                                                     syntax-type
                                                                                     chi-when-list
                                                                                     chi-install-global
                                                                                     chi-top-sequence
                                                                                     chi-sequence
                                                                                     source-wrap
                                                                                     wrap
                                                                                     bound-id-member?
                                                                                     distinct-bound-ids?
                                                                                     valid-bound-ids?
                                                                                     bound-id=?
                                                                                     free-id=?
                                                                                     id-var-name
                                                                                     same-marks?
                                                                                     join-marks
                                                                                     join-wraps
                                                                                     smart-append
                                                                                     make-binding-wrap
                                                                                     extend-ribcage!
                                                                                     make-empty-ribcage
                                                                                     new-mark
                                                                                     anti-mark
                                                                                     the-anti-mark
                                                                                     top-marked?
                                                                                     top-wrap
                                                                                     empty-wrap
                                                                                     set-ribcage-labels!
                                                                                     set-ribcage-marks!
                                                                                     set-ribcage-symnames!
                                                                                     ribcage-labels
                                                                                     ribcage-marks
                                                                                     ribcage-symnames
                                                                                     ribcage?
                                                                                     make-ribcage
                                                                                     gen-labels
                                                                                     gen-label
                                                                                     make-rename
                                                                                     rename-marks
                                                                                     rename-new
                                                                                     rename-old
                                                                                     subst-rename?
                                                                                     wrap-subst
                                                                                     wrap-marks
                                                                                     make-wrap
                                                                                     id-sym-name&marks
                                                                                     id-sym-name
                                                                                     id?
                                                                                     nonsymbol-id?
                                                                                     global-extend
                                                                                     lookup
                                                                                     macros-only-env
                                                                                     extend-var-env
                                                                                     extend-env
                                                                                     null-env
                                                                                     binding-value
                                                                                     binding-type
                                                                                     make-binding
                                                                                     arg-check
                                                                                     source-annotation
                                                                                     no-source
                                                                                     set-syntax-object-module!
                                                                                     set-syntax-object-wrap!
                                                                                     set-syntax-object-expression!
                                                                                     syntax-object-module
                                                                                     syntax-object-wrap
                                                                                     syntax-object-expression
                                                                                     syntax-object?
                                                                                     make-syntax-object
                                                                                     build-lexical-var
                                                                                     build-letrec
                                                                                     build-named-let
                                                                                     build-let
                                                                                     build-sequence
                                                                                     build-data
                                                                                     build-primref
                                                                                     build-lambda-case
                                                                                     build-case-lambda
                                                                                     build-simple-lambda
                                                                                     build-global-definition
                                                                                     maybe-name-value!
                                                                                     build-global-assignment
                                                                                     build-global-reference
                                                                                     analyze-variable
                                                                                     build-lexical-assignment
                                                                                     build-lexical-reference
                                                                                     build-dynlet
                                                                                     build-conditional
                                                                                     build-application
                                                                                     build-void
                                                                                     decorate-source
                                                                                     get-global-definition-hook
                                                                                     put-global-definition-hook
                                                                                     gensym-hook
                                                                                     local-eval-hook
                                                                                     top-level-eval-hook
                                                                                     fx<
                                                                                     fx=
                                                                                     fx-
                                                                                     fx+
                                                                                     make-dynlet
                                                                                     make-letrec
                                                                                     make-let
                                                                                     make-lambda-case
                                                                                     make-lambda
                                                                                     make-sequence
                                                                                     make-application
                                                                                     make-conditional
                                                                                     make-toplevel-define
                                                                                     make-toplevel-set
                                                                                     make-toplevel-ref
                                                                                     make-module-set
                                                                                     make-module-ref
                                                                                     make-lexical-set
                                                                                     make-lexical-ref
                                                                                     make-primitive-ref
                                                                                     make-const
                                                                                     make-void)
                                                                                   ((top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top))
                                                                                   ("i421"
                                                                                    "i419"
                                                                                    "i417"
                                                                                    "i415"
                                                                                    "i413"
                                                                                    "i411"
                                                                                    "i409"
                                                                                    "i407"
                                                                                    "i405"
                                                                                    "i403"
                                                                                    "i401"
                                                                                    "i399"
                                                                                    "i397"
                                                                                    "i395"
                                                                                    "i393"
                                                                                    "i391"
                                                                                    "i389"
                                                                                    "i387"
                                                                                    "i385"
                                                                                    "i383"
                                                                                    "i381"
                                                                                    "i379"
                                                                                    "i377"
                                                                                    "i375"
                                                                                    "i373"
                                                                                    "i371"
                                                                                    "i369"
                                                                                    "i367"
                                                                                    "i365"
                                                                                    "i363"
                                                                                    "i361"
                                                                                    "i359"
                                                                                    "i357"
                                                                                    "i355"
                                                                                    "i353"
                                                                                    "i351"
                                                                                    "i350"
                                                                                    "i349"
                                                                                    "i347"
                                                                                    "i346"
                                                                                    "i345"
                                                                                    "i344"
                                                                                    "i343"
                                                                                    "i341"
                                                                                    "i339"
                                                                                    "i337"
                                                                                    "i335"
                                                                                    "i333"
                                                                                    "i331"
                                                                                    "i329"
                                                                                    "i327"
                                                                                    "i324"
                                                                                    "i322"
                                                                                    "i321"
                                                                                    "i320"
                                                                                    "i319"
                                                                                    "i318"
                                                                                    "i317"
                                                                                    "i315"
                                                                                    "i313"
                                                                                    "i311"
                                                                                    "i309"
                                                                                    "i308"
                                                                                    "i306"
                                                                                    "i304"
                                                                                    "i302"
                                                                                    "i300"
                                                                                    "i298"
                                                                                    "i296"
                                                                                    "i294"
                                                                                    "i293"
                                                                                    "i291"
                                                                                    "i289"
                                                                                    "i288"
                                                                                    "i287"
                                                                                    "i285"
                                                                                    "i284"
                                                                                    "i282"
                                                                                    "i280"
                                                                                    "i278"
                                                                                    "i276"
                                                                                    "i274"
                                                                                    "i272"
                                                                                    "i270"
                                                                                    "i268"
                                                                                    "i266"
                                                                                    "i264"
                                                                                    "i262"
                                                                                    "i260"
                                                                                    "i258"
                                                                                    "i256"
                                                                                    "i254"
                                                                                    "i252"
                                                                                    "i250"
                                                                                    "i248"
                                                                                    "i246"
                                                                                    "i244"
                                                                                    "i242"
                                                                                    "i240"
                                                                                    "i238"
                                                                                    "i236"
                                                                                    "i234"
                                                                                    "i232"
                                                                                    "i230"
                                                                                    "i228"
                                                                                    "i226"
                                                                                    "i224"
                                                                                    "i222"
                                                                                    "i220"
                                                                                    "i219"
                                                                                    "i217"
                                                                                    "i215"
                                                                                    "i213"
                                                                                    "i211"
                                                                                    "i209"
                                                                                    "i207"
                                                                                    "i205"
                                                                                    "i203"
                                                                                    "i201"
                                                                                    "i199"
                                                                                    "i197"
                                                                                    "i195"
                                                                                    "i193"
                                                                                    "i191"
                                                                                    "i189"
                                                                                    "i187"
                                                                                    "i185"
                                                                                    "i183"
                                                                                    "i181"
                                                                                    "i179"
                                                                                    "i177"
                                                                                    "i175"
                                                                                    "i173"
                                                                                    "i171"))
                                                                                 #(ribcage
                                                                                   (define-structure
                                                                                     define-expansion-constructors
                                                                                     and-map*)
                                                                                   ((top)
                                                                                    (top)
                                                                                    (top))
                                                                                   ("i22"
                                                                                    "i21"
                                                                                    "i19")))
                                                                                (hygiene
                                                                                  guile)))))
                                                                #{rkey\ 967}#)))
                                                      #{tmp\ 984}#))
                                                   (symbol->keyword
                                                     (syntax->datum
                                                       #{a\ 981}#))))
                                                #{tmp\ 974}#)
                                         ((lambda (#{tmp\ 987}#)
                                            (if (if #{tmp\ 987}#
                                                  (apply (lambda (#{a\ 991}#
                                                                  #{init\ 992}#
                                                                  #{b\ 993}#)
                                                           (#{id?\ 307}#
                                                             #{a\ 991}#))
                                                         #{tmp\ 987}#)
                                                  #f)
                                              (apply (lambda (#{a\ 997}#
                                                              #{init\ 998}#
                                                              #{b\ 999}#)
                                                       ((lambda (#{tmp\ 1001}#)
                                                          ((lambda (#{k\ 1003}#)
                                                             (#{key\ 932}#
                                                               #{b\ 999}#
                                                               #{req\ 965}#
                                                               #{opt\ 966}#
                                                               (cons (list #{k\ 1003}#
                                                                           #{a\ 997}#
                                                                           #{init\ 998}#)
                                                                     #{rkey\ 967}#)))
                                                           #{tmp\ 1001}#))
                                                        (symbol->keyword
                                                          (syntax->datum
                                                            #{a\ 997}#))))
                                                     #{tmp\ 987}#)
                                              ((lambda (#{tmp\ 1004}#)
                                                 (if (if #{tmp\ 1004}#
                                                       (apply (lambda (#{a\ 1009}#
                                                                       #{init\ 1010}#
                                                                       #{k\ 1011}#
                                                                       #{b\ 1012}#)
                                                                (if (#{id?\ 307}#
                                                                      #{a\ 1009}#)
                                                                  (keyword?
                                                                    (syntax->datum
                                                                      #{k\ 1011}#))
                                                                  #f))
                                                              #{tmp\ 1004}#)
                                                       #f)
                                                   (apply (lambda (#{a\ 1019}#
                                                                   #{init\ 1020}#
                                                                   #{k\ 1021}#
                                                                   #{b\ 1022}#)
                                                            (#{key\ 932}#
                                                              #{b\ 1022}#
                                                              #{req\ 965}#
                                                              #{opt\ 966}#
                                                              (cons (list #{k\ 1021}#
                                                                          #{a\ 1019}#
                                                                          #{init\ 1020}#)
                                                                    #{rkey\ 967}#)))
                                                          #{tmp\ 1004}#)
                                                   ((lambda (#{tmp\ 1023}#)
                                                      (if (if #{tmp\ 1023}#
                                                            (apply (lambda (#{aok\ 1025}#)
                                                                     (eq? (syntax->datum
                                                                            #{aok\ 1025}#)
                                                                          #:allow-other-keys))
                                                                   #{tmp\ 1023}#)
                                                            #f)
                                                        (apply (lambda (#{aok\ 1027}#)
                                                                 (#{check\ 936}#
                                                                   #{req\ 965}#
                                                                   #{opt\ 966}#
                                                                   #f
                                                                   (cons #t
                                                                         (reverse
                                                                           #{rkey\ 967}#))))
                                                               #{tmp\ 1023}#)
                                                        ((lambda (#{tmp\ 1028}#)
                                                           (if (if #{tmp\ 1028}#
                                                                 (apply (lambda (#{aok\ 1032}#
                                                                                 #{a\ 1033}#
                                                                                 #{b\ 1034}#)
                                                                          (if (eq? (syntax->datum
                                                                                     #{aok\ 1032}#)
                                                                                   #:allow-other-keys)
                                                                            (eq? (syntax->datum
                                                                                   #{a\ 1033}#)
                                                                                 #:rest)
                                                                            #f))
                                                                        #{tmp\ 1028}#)
                                                                 #f)
                                                             (apply (lambda (#{aok\ 1040}#
                                                                             #{a\ 1041}#
                                                                             #{b\ 1042}#)
                                                                      (#{rest\ 934}#
                                                                        #{b\ 1042}#
                                                                        #{req\ 965}#
                                                                        #{opt\ 966}#
                                                                        (cons #t
                                                                              (reverse
                                                                                #{rkey\ 967}#))))
                                                                    #{tmp\ 1028}#)
                                                             ((lambda (#{tmp\ 1043}#)
                                                                (if (if #{tmp\ 1043}#
                                                                      (apply (lambda (#{aok\ 1046}#
                                                                                      #{r\ 1047}#)
                                                                               (if (eq? (syntax->datum
                                                                                          #{aok\ 1046}#)
                                                                                        #:allow-other-keys)
                                                                                 (#{id?\ 307}#
                                                                                   #{r\ 1047}#)
                                                                                 #f))
                                                                             #{tmp\ 1043}#)
                                                                      #f)
                                                                  (apply (lambda (#{aok\ 1052}#
                                                                                  #{r\ 1053}#)
                                                                           (#{rest\ 934}#
                                                                             #{r\ 1053}#
                                                                             #{req\ 965}#
                                                                             #{opt\ 966}#
                                                                             (cons #t
                                                                                   (reverse
                                                                                     #{rkey\ 967}#))))
                                                                         #{tmp\ 1043}#)
                                                                  ((lambda (#{tmp\ 1054}#)
                                                                     (if (if #{tmp\ 1054}#
                                                                           (apply (lambda (#{a\ 1057}#
                                                                                           #{b\ 1058}#)
                                                                                    (eq? (syntax->datum
                                                                                           #{a\ 1057}#)
                                                                                         #:rest))
                                                                                  #{tmp\ 1054}#)
                                                                           #f)
                                                                       (apply (lambda (#{a\ 1061}#
                                                                                       #{b\ 1062}#)
                                                                                (#{rest\ 934}#
                                                                                  #{b\ 1062}#
                                                                                  #{req\ 965}#
                                                                                  #{opt\ 966}#
                                                                                  (cons #f
                                                                                        (reverse
                                                                                          #{rkey\ 967}#))))
                                                                              #{tmp\ 1054}#)
                                                                       ((lambda (#{tmp\ 1063}#)
                                                                          (if (if #{tmp\ 1063}#
                                                                                (apply (lambda (#{r\ 1065}#)
                                                                                         (#{id?\ 307}#
                                                                                           #{r\ 1065}#))
                                                                                       #{tmp\ 1063}#)
                                                                                #f)
                                                                            (apply (lambda (#{r\ 1067}#)
                                                                                     (#{rest\ 934}#
                                                                                       #{r\ 1067}#
                                                                                       #{req\ 965}#
                                                                                       #{opt\ 966}#
                                                                                       (cons #f
                                                                                             (reverse
                                                                                               #{rkey\ 967}#))))
                                                                                   #{tmp\ 1063}#)
                                                                            ((lambda (#{else\ 1069}#)
                                                                               (syntax-violation
                                                                                 'lambda*
                                                                                 "invalid keyword argument list"
                                                                                 #{orig-args\ 925}#
                                                                                 #{args\ 964}#))
                                                                             #{tmp\ 972}#)))
                                                                        (list #{tmp\ 972}#))))
                                                                   ($sc-dispatch
                                                                     #{tmp\ 972}#
                                                                     '(any any)))))
                                                              ($sc-dispatch
                                                                #{tmp\ 972}#
                                                                '(any .
                                                                      any)))))
                                                         ($sc-dispatch
                                                           #{tmp\ 972}#
                                                           '(any any any)))))
                                                    ($sc-dispatch
                                                      #{tmp\ 972}#
                                                      '(any)))))
                                               ($sc-dispatch
                                                 #{tmp\ 972}#
                                                 '((any any any) . any)))))
                                          ($sc-dispatch
                                            #{tmp\ 972}#
                                            '((any any) . any)))))
                                     ($sc-dispatch
                                       #{tmp\ 972}#
                                       '(any . any)))))
                                ($sc-dispatch #{tmp\ 972}# (quote ()))))
                             #{args\ 964}#)))
                        (#{opt\ 930}#
                          (lambda (#{args\ 1070}# #{req\ 1071}# #{ropt\ 1072}#)
                            ((lambda (#{tmp\ 1076}#)
                               ((lambda (#{tmp\ 1077}#)
                                  (if #{tmp\ 1077}#
                                    (apply (lambda ()
                                             (#{check\ 936}#
                                               #{req\ 1071}#
                                               (reverse #{ropt\ 1072}#)
                                               #f
                                               '()))
                                           #{tmp\ 1077}#)
                                    ((lambda (#{tmp\ 1078}#)
                                       (if (if #{tmp\ 1078}#
                                             (apply (lambda (#{a\ 1081}#
                                                             #{b\ 1082}#)
                                                      (#{id?\ 307}#
                                                        #{a\ 1081}#))
                                                    #{tmp\ 1078}#)
                                             #f)
                                         (apply (lambda (#{a\ 1085}#
                                                         #{b\ 1086}#)
                                                  (#{opt\ 930}#
                                                    #{b\ 1086}#
                                                    #{req\ 1071}#
                                                    (cons (cons #{a\ 1085}#
                                                                '(#(syntax-object
                                                                    #f
                                                                    ((top)
                                                                     #(ribcage
                                                                       #(a b)
                                                                       #((top)
                                                                         (top))
                                                                       #("i1083"
                                                                         "i1084"))
                                                                     #(ribcage
                                                                       ()
                                                                       ()
                                                                       ())
                                                                     #(ribcage
                                                                       #(args
                                                                         req
                                                                         ropt)
                                                                       #((top)
                                                                         (top)
                                                                         (top))
                                                                       #("i1073"
                                                                         "i1074"
                                                                         "i1075"))
                                                                     #(ribcage
                                                                       (check rest
                                                                              key
                                                                              opt
                                                                              req)
                                                                       ((top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top))
                                                                       ("i935"
                                                                        "i933"
                                                                        "i931"
                                                                        "i929"
                                                                        "i927"))
                                                                     #(ribcage
                                                                       #(orig-args)
                                                                       #((top))
                                                                       #("i926"))
                                                                     #(ribcage
                                                                       (lambda-var-list
                                                                         gen-var
                                                                         strip
                                                                         chi-lambda-case
                                                                         lambda*-formals
                                                                         chi-simple-lambda
                                                                         lambda-formals
                                                                         ellipsis?
                                                                         chi-void
                                                                         eval-local-transformer
                                                                         chi-local-syntax
                                                                         chi-body
                                                                         chi-macro
                                                                         chi-application
                                                                         chi-expr
                                                                         chi
                                                                         chi-top
                                                                         syntax-type
                                                                         chi-when-list
                                                                         chi-install-global
                                                                         chi-top-sequence
                                                                         chi-sequence
                                                                         source-wrap
                                                                         wrap
                                                                         bound-id-member?
                                                                         distinct-bound-ids?
                                                                         valid-bound-ids?
                                                                         bound-id=?
                                                                         free-id=?
                                                                         id-var-name
                                                                         same-marks?
                                                                         join-marks
                                                                         join-wraps
                                                                         smart-append
                                                                         make-binding-wrap
                                                                         extend-ribcage!
                                                                         make-empty-ribcage
                                                                         new-mark
                                                                         anti-mark
                                                                         the-anti-mark
                                                                         top-marked?
                                                                         top-wrap
                                                                         empty-wrap
                                                                         set-ribcage-labels!
                                                                         set-ribcage-marks!
                                                                         set-ribcage-symnames!
                                                                         ribcage-labels
                                                                         ribcage-marks
                                                                         ribcage-symnames
                                                                         ribcage?
                                                                         make-ribcage
                                                                         gen-labels
                                                                         gen-label
                                                                         make-rename
                                                                         rename-marks
                                                                         rename-new
                                                                         rename-old
                                                                         subst-rename?
                                                                         wrap-subst
                                                                         wrap-marks
                                                                         make-wrap
                                                                         id-sym-name&marks
                                                                         id-sym-name
                                                                         id?
                                                                         nonsymbol-id?
                                                                         global-extend
                                                                         lookup
                                                                         macros-only-env
                                                                         extend-var-env
                                                                         extend-env
                                                                         null-env
                                                                         binding-value
                                                                         binding-type
                                                                         make-binding
                                                                         arg-check
                                                                         source-annotation
                                                                         no-source
                                                                         set-syntax-object-module!
                                                                         set-syntax-object-wrap!
                                                                         set-syntax-object-expression!
                                                                         syntax-object-module
                                                                         syntax-object-wrap
                                                                         syntax-object-expression
                                                                         syntax-object?
                                                                         make-syntax-object
                                                                         build-lexical-var
                                                                         build-letrec
                                                                         build-named-let
                                                                         build-let
                                                                         build-sequence
                                                                         build-data
                                                                         build-primref
                                                                         build-lambda-case
                                                                         build-case-lambda
                                                                         build-simple-lambda
                                                                         build-global-definition
                                                                         maybe-name-value!
                                                                         build-global-assignment
                                                                         build-global-reference
                                                                         analyze-variable
                                                                         build-lexical-assignment
                                                                         build-lexical-reference
                                                                         build-dynlet
                                                                         build-conditional
                                                                         build-application
                                                                         build-void
                                                                         decorate-source
                                                                         get-global-definition-hook
                                                                         put-global-definition-hook
                                                                         gensym-hook
                                                                         local-eval-hook
                                                                         top-level-eval-hook
                                                                         fx<
                                                                         fx=
                                                                         fx-
                                                                         fx+
                                                                         make-dynlet
                                                                         make-letrec
                                                                         make-let
                                                                         make-lambda-case
                                                                         make-lambda
                                                                         make-sequence
                                                                         make-application
                                                                         make-conditional
                                                                         make-toplevel-define
                                                                         make-toplevel-set
                                                                         make-toplevel-ref
                                                                         make-module-set
                                                                         make-module-ref
                                                                         make-lexical-set
                                                                         make-lexical-ref
                                                                         make-primitive-ref
                                                                         make-const
                                                                         make-void)
                                                                       ((top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top))
                                                                       ("i421"
                                                                        "i419"
                                                                        "i417"
                                                                        "i415"
                                                                        "i413"
                                                                        "i411"
                                                                        "i409"
                                                                        "i407"
                                                                        "i405"
                                                                        "i403"
                                                                        "i401"
                                                                        "i399"
                                                                        "i397"
                                                                        "i395"
                                                                        "i393"
                                                                        "i391"
                                                                        "i389"
                                                                        "i387"
                                                                        "i385"
                                                                        "i383"
                                                                        "i381"
                                                                        "i379"
                                                                        "i377"
                                                                        "i375"
                                                                        "i373"
                                                                        "i371"
                                                                        "i369"
                                                                        "i367"
                                                                        "i365"
                                                                        "i363"
                                                                        "i361"
                                                                        "i359"
                                                                        "i357"
                                                                        "i355"
                                                                        "i353"
                                                                        "i351"
                                                                        "i350"
                                                                        "i349"
                                                                        "i347"
                                                                        "i346"
                                                                        "i345"
                                                                        "i344"
                                                                        "i343"
                                                                        "i341"
                                                                        "i339"
                                                                        "i337"
                                                                        "i335"
                                                                        "i333"
                                                                        "i331"
                                                                        "i329"
                                                                        "i327"
                                                                        "i324"
                                                                        "i322"
                                                                        "i321"
                                                                        "i320"
                                                                        "i319"
                                                                        "i318"
                                                                        "i317"
                                                                        "i315"
                                                                        "i313"
                                                                        "i311"
                                                                        "i309"
                                                                        "i308"
                                                                        "i306"
                                                                        "i304"
                                                                        "i302"
                                                                        "i300"
                                                                        "i298"
                                                                        "i296"
                                                                        "i294"
                                                                        "i293"
                                                                        "i291"
                                                                        "i289"
                                                                        "i288"
                                                                        "i287"
                                                                        "i285"
                                                                        "i284"
                                                                        "i282"
                                                                        "i280"
                                                                        "i278"
                                                                        "i276"
                                                                        "i274"
                                                                        "i272"
                                                                        "i270"
                                                                        "i268"
                                                                        "i266"
                                                                        "i264"
                                                                        "i262"
                                                                        "i260"
                                                                        "i258"
                                                                        "i256"
                                                                        "i254"
                                                                        "i252"
                                                                        "i250"
                                                                        "i248"
                                                                        "i246"
                                                                        "i244"
                                                                        "i242"
                                                                        "i240"
                                                                        "i238"
                                                                        "i236"
                                                                        "i234"
                                                                        "i232"
                                                                        "i230"
                                                                        "i228"
                                                                        "i226"
                                                                        "i224"
                                                                        "i222"
                                                                        "i220"
                                                                        "i219"
                                                                        "i217"
                                                                        "i215"
                                                                        "i213"
                                                                        "i211"
                                                                        "i209"
                                                                        "i207"
                                                                        "i205"
                                                                        "i203"
                                                                        "i201"
                                                                        "i199"
                                                                        "i197"
                                                                        "i195"
                                                                        "i193"
                                                                        "i191"
                                                                        "i189"
                                                                        "i187"
                                                                        "i185"
                                                                        "i183"
                                                                        "i181"
                                                                        "i179"
                                                                        "i177"
                                                                        "i175"
                                                                        "i173"
                                                                        "i171"))
                                                                     #(ribcage
                                                                       (define-structure
                                                                         define-expansion-constructors
                                                                         and-map*)
                                                                       ((top)
                                                                        (top)
                                                                        (top))
                                                                       ("i22"
                                                                        "i21"
                                                                        "i19")))
                                                                    (hygiene
                                                                      guile))))
                                                          #{ropt\ 1072}#)))
                                                #{tmp\ 1078}#)
                                         ((lambda (#{tmp\ 1087}#)
                                            (if (if #{tmp\ 1087}#
                                                  (apply (lambda (#{a\ 1091}#
                                                                  #{init\ 1092}#
                                                                  #{b\ 1093}#)
                                                           (#{id?\ 307}#
                                                             #{a\ 1091}#))
                                                         #{tmp\ 1087}#)
                                                  #f)
                                              (apply (lambda (#{a\ 1097}#
                                                              #{init\ 1098}#
                                                              #{b\ 1099}#)
                                                       (#{opt\ 930}#
                                                         #{b\ 1099}#
                                                         #{req\ 1071}#
                                                         (cons (list #{a\ 1097}#
                                                                     #{init\ 1098}#)
                                                               #{ropt\ 1072}#)))
                                                     #{tmp\ 1087}#)
                                              ((lambda (#{tmp\ 1100}#)
                                                 (if (if #{tmp\ 1100}#
                                                       (apply (lambda (#{a\ 1103}#
                                                                       #{b\ 1104}#)
                                                                (eq? (syntax->datum
                                                                       #{a\ 1103}#)
                                                                     #:key))
                                                              #{tmp\ 1100}#)
                                                       #f)
                                                   (apply (lambda (#{a\ 1107}#
                                                                   #{b\ 1108}#)
                                                            (#{key\ 932}#
                                                              #{b\ 1108}#
                                                              #{req\ 1071}#
                                                              (reverse
                                                                #{ropt\ 1072}#)
                                                              '()))
                                                          #{tmp\ 1100}#)
                                                   ((lambda (#{tmp\ 1109}#)
                                                      (if (if #{tmp\ 1109}#
                                                            (apply (lambda (#{a\ 1112}#
                                                                            #{b\ 1113}#)
                                                                     (eq? (syntax->datum
                                                                            #{a\ 1112}#)
                                                                          #:rest))
                                                                   #{tmp\ 1109}#)
                                                            #f)
                                                        (apply (lambda (#{a\ 1116}#
                                                                        #{b\ 1117}#)
                                                                 (#{rest\ 934}#
                                                                   #{b\ 1117}#
                                                                   #{req\ 1071}#
                                                                   (reverse
                                                                     #{ropt\ 1072}#)
                                                                   '()))
                                                               #{tmp\ 1109}#)
                                                        ((lambda (#{tmp\ 1118}#)
                                                           (if (if #{tmp\ 1118}#
                                                                 (apply (lambda (#{r\ 1120}#)
                                                                          (#{id?\ 307}#
                                                                            #{r\ 1120}#))
                                                                        #{tmp\ 1118}#)
                                                                 #f)
                                                             (apply (lambda (#{r\ 1122}#)
                                                                      (#{rest\ 934}#
                                                                        #{r\ 1122}#
                                                                        #{req\ 1071}#
                                                                        (reverse
                                                                          #{ropt\ 1072}#)
                                                                        '()))
                                                                    #{tmp\ 1118}#)
                                                             ((lambda (#{else\ 1124}#)
                                                                (syntax-violation
                                                                  'lambda*
                                                                  "invalid optional argument list"
                                                                  #{orig-args\ 925}#
                                                                  #{args\ 1070}#))
                                                              #{tmp\ 1076}#)))
                                                         (list #{tmp\ 1076}#))))
                                                    ($sc-dispatch
                                                      #{tmp\ 1076}#
                                                      '(any any)))))
                                               ($sc-dispatch
                                                 #{tmp\ 1076}#
                                                 '(any . any)))))
                                          ($sc-dispatch
                                            #{tmp\ 1076}#
                                            '((any any) . any)))))
                                     ($sc-dispatch
                                       #{tmp\ 1076}#
                                       '(any . any)))))
                                ($sc-dispatch #{tmp\ 1076}# (quote ()))))
                             #{args\ 1070}#)))
                        (#{req\ 928}#
                          (lambda (#{args\ 1125}# #{rreq\ 1126}#)
                            ((lambda (#{tmp\ 1129}#)
                               ((lambda (#{tmp\ 1130}#)
                                  (if #{tmp\ 1130}#
                                    (apply (lambda ()
                                             (#{check\ 936}#
                                               (reverse #{rreq\ 1126}#)
                                               '()
                                               #f
                                               '()))
                                           #{tmp\ 1130}#)
                                    ((lambda (#{tmp\ 1131}#)
                                       (if (if #{tmp\ 1131}#
                                             (apply (lambda (#{a\ 1134}#
                                                             #{b\ 1135}#)
                                                      (#{id?\ 307}#
                                                        #{a\ 1134}#))
                                                    #{tmp\ 1131}#)
                                             #f)
                                         (apply (lambda (#{a\ 1138}#
                                                         #{b\ 1139}#)
                                                  (#{req\ 928}#
                                                    #{b\ 1139}#
                                                    (cons #{a\ 1138}#
                                                          #{rreq\ 1126}#)))
                                                #{tmp\ 1131}#)
                                         ((lambda (#{tmp\ 1140}#)
                                            (if (if #{tmp\ 1140}#
                                                  (apply (lambda (#{a\ 1143}#
                                                                  #{b\ 1144}#)
                                                           (eq? (syntax->datum
                                                                  #{a\ 1143}#)
                                                                #:optional))
                                                         #{tmp\ 1140}#)
                                                  #f)
                                              (apply (lambda (#{a\ 1147}#
                                                              #{b\ 1148}#)
                                                       (#{opt\ 930}#
                                                         #{b\ 1148}#
                                                         (reverse
                                                           #{rreq\ 1126}#)
                                                         '()))
                                                     #{tmp\ 1140}#)
                                              ((lambda (#{tmp\ 1149}#)
                                                 (if (if #{tmp\ 1149}#
                                                       (apply (lambda (#{a\ 1152}#
                                                                       #{b\ 1153}#)
                                                                (eq? (syntax->datum
                                                                       #{a\ 1152}#)
                                                                     #:key))
                                                              #{tmp\ 1149}#)
                                                       #f)
                                                   (apply (lambda (#{a\ 1156}#
                                                                   #{b\ 1157}#)
                                                            (#{key\ 932}#
                                                              #{b\ 1157}#
                                                              (reverse
                                                                #{rreq\ 1126}#)
                                                              '()
                                                              '()))
                                                          #{tmp\ 1149}#)
                                                   ((lambda (#{tmp\ 1158}#)
                                                      (if (if #{tmp\ 1158}#
                                                            (apply (lambda (#{a\ 1161}#
                                                                            #{b\ 1162}#)
                                                                     (eq? (syntax->datum
                                                                            #{a\ 1161}#)
                                                                          #:rest))
                                                                   #{tmp\ 1158}#)
                                                            #f)
                                                        (apply (lambda (#{a\ 1165}#
                                                                        #{b\ 1166}#)
                                                                 (#{rest\ 934}#
                                                                   #{b\ 1166}#
                                                                   (reverse
                                                                     #{rreq\ 1126}#)
                                                                   '()
                                                                   '()))
                                                               #{tmp\ 1158}#)
                                                        ((lambda (#{tmp\ 1167}#)
                                                           (if (if #{tmp\ 1167}#
                                                                 (apply (lambda (#{r\ 1169}#)
                                                                          (#{id?\ 307}#
                                                                            #{r\ 1169}#))
                                                                        #{tmp\ 1167}#)
                                                                 #f)
                                                             (apply (lambda (#{r\ 1171}#)
                                                                      (#{rest\ 934}#
                                                                        #{r\ 1171}#
                                                                        (reverse
                                                                          #{rreq\ 1126}#)
                                                                        '()
                                                                        '()))
                                                                    #{tmp\ 1167}#)
                                                             ((lambda (#{else\ 1173}#)
                                                                (syntax-violation
                                                                  'lambda*
                                                                  "invalid argument list"
                                                                  #{orig-args\ 925}#
                                                                  #{args\ 1125}#))
                                                              #{tmp\ 1129}#)))
                                                         (list #{tmp\ 1129}#))))
                                                    ($sc-dispatch
                                                      #{tmp\ 1129}#
                                                      '(any any)))))
                                               ($sc-dispatch
                                                 #{tmp\ 1129}#
                                                 '(any . any)))))
                                          ($sc-dispatch
                                            #{tmp\ 1129}#
                                            '(any . any)))))
                                     ($sc-dispatch
                                       #{tmp\ 1129}#
                                       '(any . any)))))
                                ($sc-dispatch #{tmp\ 1129}# (quote ()))))
                             #{args\ 1125}#))))
                 (#{req\ 928}# #{orig-args\ 925}# (quote ())))))
           (#{chi-simple-lambda\ 412}#
             (lambda (#{e\ 1174}#
                      #{r\ 1175}#
                      #{w\ 1176}#
                      #{s\ 1177}#
                      #{mod\ 1178}#
                      #{req\ 1179}#
                      #{rest\ 1180}#
                      #{meta\ 1181}#
                      #{body\ 1182}#)
               (let ((#{ids\ 1194}#
                       (if #{rest\ 1180}#
                         (append #{req\ 1179}# (list #{rest\ 1180}#))
                         #{req\ 1179}#)))
                 (let ((#{vars\ 1196}#
                         (map #{gen-var\ 420}# #{ids\ 1194}#)))
                   (let ((#{labels\ 1198}#
                           (#{gen-labels\ 325}# #{ids\ 1194}#)))
                     (#{build-simple-lambda\ 249}#
                       #{s\ 1177}#
                       (map syntax->datum #{req\ 1179}#)
                       (if #{rest\ 1180}#
                         (syntax->datum #{rest\ 1180}#)
                         #f)
                       #{vars\ 1196}#
                       #{meta\ 1181}#
                       (#{chi-body\ 400}#
                         #{body\ 1182}#
                         (#{source-wrap\ 378}#
                           #{e\ 1174}#
                           #{w\ 1176}#
                           #{s\ 1177}#
                           #{mod\ 1178}#)
                         (#{extend-var-env\ 297}#
                           #{labels\ 1198}#
                           #{vars\ 1196}#
                           #{r\ 1175}#)
                         (#{make-binding-wrap\ 354}#
                           #{ids\ 1194}#
                           #{labels\ 1198}#
                           #{w\ 1176}#)
                         #{mod\ 1178}#)))))))
           (#{lambda-formals\ 410}#
             (lambda (#{orig-args\ 1201}#)
               (letrec ((#{check\ 1206}#
                          (lambda (#{req\ 1207}# #{rest\ 1208}#)
                            (if (#{distinct-bound-ids?\ 372}#
                                  (if #{rest\ 1208}#
                                    (cons #{rest\ 1208}# #{req\ 1207}#)
                                    #{req\ 1207}#))
                              (values #{req\ 1207}# #f #{rest\ 1208}# #f)
                              (syntax-violation
                                'lambda
                                "duplicate identifier in argument list"
                                #{orig-args\ 1201}#))))
                        (#{req\ 1204}#
                          (lambda (#{args\ 1214}# #{rreq\ 1215}#)
                            ((lambda (#{tmp\ 1218}#)
                               ((lambda (#{tmp\ 1219}#)
                                  (if #{tmp\ 1219}#
                                    (apply (lambda ()
                                             (#{check\ 1206}#
                                               (reverse #{rreq\ 1215}#)
                                               #f))
                                           #{tmp\ 1219}#)
                                    ((lambda (#{tmp\ 1220}#)
                                       (if (if #{tmp\ 1220}#
                                             (apply (lambda (#{a\ 1223}#
                                                             #{b\ 1224}#)
                                                      (#{id?\ 307}#
                                                        #{a\ 1223}#))
                                                    #{tmp\ 1220}#)
                                             #f)
                                         (apply (lambda (#{a\ 1227}#
                                                         #{b\ 1228}#)
                                                  (#{req\ 1204}#
                                                    #{b\ 1228}#
                                                    (cons #{a\ 1227}#
                                                          #{rreq\ 1215}#)))
                                                #{tmp\ 1220}#)
                                         ((lambda (#{tmp\ 1229}#)
                                            (if (if #{tmp\ 1229}#
                                                  (apply (lambda (#{r\ 1231}#)
                                                           (#{id?\ 307}#
                                                             #{r\ 1231}#))
                                                         #{tmp\ 1229}#)
                                                  #f)
                                              (apply (lambda (#{r\ 1233}#)
                                                       (#{check\ 1206}#
                                                         (reverse
                                                           #{rreq\ 1215}#)
                                                         #{r\ 1233}#))
                                                     #{tmp\ 1229}#)
                                              ((lambda (#{else\ 1235}#)
                                                 (syntax-violation
                                                   'lambda
                                                   "invalid argument list"
                                                   #{orig-args\ 1201}#
                                                   #{args\ 1214}#))
                                               #{tmp\ 1218}#)))
                                          (list #{tmp\ 1218}#))))
                                     ($sc-dispatch
                                       #{tmp\ 1218}#
                                       '(any . any)))))
                                ($sc-dispatch #{tmp\ 1218}# (quote ()))))
                             #{args\ 1214}#))))
                 (#{req\ 1204}# #{orig-args\ 1201}# (quote ())))))
           (#{ellipsis?\ 408}#
             (lambda (#{x\ 1236}#)
               (if (#{nonsymbol-id?\ 305}# #{x\ 1236}#)
                 (#{free-id=?\ 366}#
                   #{x\ 1236}#
                   '#(syntax-object
                      ...
                      ((top)
                       #(ribcage () () ())
                       #(ribcage () () ())
                       #(ribcage #(x) #((top)) #("i1237"))
                       #(ribcage
                         (lambda-var-list
                           gen-var
                           strip
                           chi-lambda-case
                           lambda*-formals
                           chi-simple-lambda
                           lambda-formals
                           ellipsis?
                           chi-void
                           eval-local-transformer
                           chi-local-syntax
                           chi-body
                           chi-macro
                           chi-application
                           chi-expr
                           chi
                           chi-top
                           syntax-type
                           chi-when-list
                           chi-install-global
                           chi-top-sequence
                           chi-sequence
                           source-wrap
                           wrap
                           bound-id-member?
                           distinct-bound-ids?
                           valid-bound-ids?
                           bound-id=?
                           free-id=?
                           id-var-name
                           same-marks?
                           join-marks
                           join-wraps
                           smart-append
                           make-binding-wrap
                           extend-ribcage!
                           make-empty-ribcage
                           new-mark
                           anti-mark
                           the-anti-mark
                           top-marked?
                           top-wrap
                           empty-wrap
                           set-ribcage-labels!
                           set-ribcage-marks!
                           set-ribcage-symnames!
                           ribcage-labels
                           ribcage-marks
                           ribcage-symnames
                           ribcage?
                           make-ribcage
                           gen-labels
                           gen-label
                           make-rename
                           rename-marks
                           rename-new
                           rename-old
                           subst-rename?
                           wrap-subst
                           wrap-marks
                           make-wrap
                           id-sym-name&marks
                           id-sym-name
                           id?
                           nonsymbol-id?
                           global-extend
                           lookup
                           macros-only-env
                           extend-var-env
                           extend-env
                           null-env
                           binding-value
                           binding-type
                           make-binding
                           arg-check
                           source-annotation
                           no-source
                           set-syntax-object-module!
                           set-syntax-object-wrap!
                           set-syntax-object-expression!
                           syntax-object-module
                           syntax-object-wrap
                           syntax-object-expression
                           syntax-object?
                           make-syntax-object
                           build-lexical-var
                           build-letrec
                           build-named-let
                           build-let
                           build-sequence
                           build-data
                           build-primref
                           build-lambda-case
                           build-case-lambda
                           build-simple-lambda
                           build-global-definition
                           maybe-name-value!
                           build-global-assignment
                           build-global-reference
                           analyze-variable
                           build-lexical-assignment
                           build-lexical-reference
                           build-dynlet
                           build-conditional
                           build-application
                           build-void
                           decorate-source
                           get-global-definition-hook
                           put-global-definition-hook
                           gensym-hook
                           local-eval-hook
                           top-level-eval-hook
                           fx<
                           fx=
                           fx-
                           fx+
                           make-dynlet
                           make-letrec
                           make-let
                           make-lambda-case
                           make-lambda
                           make-sequence
                           make-application
                           make-conditional
                           make-toplevel-define
                           make-toplevel-set
                           make-toplevel-ref
                           make-module-set
                           make-module-ref
                           make-lexical-set
                           make-lexical-ref
                           make-primitive-ref
                           make-const
                           make-void)
                         ((top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top))
                         ("i421"
                          "i419"
                          "i417"
                          "i415"
                          "i413"
                          "i411"
                          "i409"
                          "i407"
                          "i405"
                          "i403"
                          "i401"
                          "i399"
                          "i397"
                          "i395"
                          "i393"
                          "i391"
                          "i389"
                          "i387"
                          "i385"
                          "i383"
                          "i381"
                          "i379"
                          "i377"
                          "i375"
                          "i373"
                          "i371"
                          "i369"
                          "i367"
                          "i365"
                          "i363"
                          "i361"
                          "i359"
                          "i357"
                          "i355"
                          "i353"
                          "i351"
                          "i350"
                          "i349"
                          "i347"
                          "i346"
                          "i345"
                          "i344"
                          "i343"
                          "i341"
                          "i339"
                          "i337"
                          "i335"
                          "i333"
                          "i331"
                          "i329"
                          "i327"
                          "i324"
                          "i322"
                          "i321"
                          "i320"
                          "i319"
                          "i318"
                          "i317"
                          "i315"
                          "i313"
                          "i311"
                          "i309"
                          "i308"
                          "i306"
                          "i304"
                          "i302"
                          "i300"
                          "i298"
                          "i296"
                          "i294"
                          "i293"
                          "i291"
                          "i289"
                          "i288"
                          "i287"
                          "i285"
                          "i284"
                          "i282"
                          "i280"
                          "i278"
                          "i276"
                          "i274"
                          "i272"
                          "i270"
                          "i268"
                          "i266"
                          "i264"
                          "i262"
                          "i260"
                          "i258"
                          "i256"
                          "i254"
                          "i252"
                          "i250"
                          "i248"
                          "i246"
                          "i244"
                          "i242"
                          "i240"
                          "i238"
                          "i236"
                          "i234"
                          "i232"
                          "i230"
                          "i228"
                          "i226"
                          "i224"
                          "i222"
                          "i220"
                          "i219"
                          "i217"
                          "i215"
                          "i213"
                          "i211"
                          "i209"
                          "i207"
                          "i205"
                          "i203"
                          "i201"
                          "i199"
                          "i197"
                          "i195"
                          "i193"
                          "i191"
                          "i189"
                          "i187"
                          "i185"
                          "i183"
                          "i181"
                          "i179"
                          "i177"
                          "i175"
                          "i173"
                          "i171"))
                       #(ribcage
                         (define-structure
                           define-expansion-constructors
                           and-map*)
                         ((top) (top) (top))
                         ("i22" "i21" "i19")))
                      (hygiene guile)))
                 #f)))
           (#{chi-void\ 406}#
             (lambda () (#{build-void\ 227}# #f)))
           (#{eval-local-transformer\ 404}#
             (lambda (#{expanded\ 1241}# #{mod\ 1242}#)
               (let ((#{p\ 1246}#
                       (#{local-eval-hook\ 218}#
                         #{expanded\ 1241}#
                         #{mod\ 1242}#)))
                 (if (procedure? #{p\ 1246}#)
                   (cons #{p\ 1246}# (module-name (current-module)))
                   (syntax-violation
                     #f
                     "nonprocedure transformer"
                     #{p\ 1246}#)))))
           (#{chi-local-syntax\ 402}#
             (lambda (#{rec?\ 1247}#
                      #{e\ 1248}#
                      #{r\ 1249}#
                      #{w\ 1250}#
                      #{s\ 1251}#
                      #{mod\ 1252}#
                      #{k\ 1253}#)
               ((lambda (#{tmp\ 1261}#)
                  ((lambda (#{tmp\ 1262}#)
                     (if #{tmp\ 1262}#
                       (apply (lambda (#{_\ 1268}#
                                       #{id\ 1269}#
                                       #{val\ 1270}#
                                       #{e1\ 1271}#
                                       #{e2\ 1272}#)
                                (let ((#{ids\ 1274}# #{id\ 1269}#))
                                  (if (not (#{valid-bound-ids?\ 370}#
                                             #{ids\ 1274}#))
                                    (syntax-violation
                                      #f
                                      "duplicate bound keyword"
                                      #{e\ 1248}#)
                                    (let ((#{labels\ 1277}#
                                            (#{gen-labels\ 325}#
                                              #{ids\ 1274}#)))
                                      (let ((#{new-w\ 1279}#
                                              (#{make-binding-wrap\ 354}#
                                                #{ids\ 1274}#
                                                #{labels\ 1277}#
                                                #{w\ 1250}#)))
                                        (#{k\ 1253}#
                                          (cons #{e1\ 1271}# #{e2\ 1272}#)
                                          (#{extend-env\ 295}#
                                            #{labels\ 1277}#
                                            (let ((#{w\ 1283}#
                                                    (if #{rec?\ 1247}#
                                                      #{new-w\ 1279}#
                                                      #{w\ 1250}#))
                                                  (#{trans-r\ 1284}#
                                                    (#{macros-only-env\ 299}#
                                                      #{r\ 1249}#)))
                                              (map (lambda (#{x\ 1285}#)
                                                     (cons 'macro
                                                           (#{eval-local-transformer\ 404}#
                                                             (#{chi\ 392}#
                                                               #{x\ 1285}#
                                                               #{trans-r\ 1284}#
                                                               #{w\ 1283}#
                                                               #{mod\ 1252}#)
                                                             #{mod\ 1252}#)))
                                                   #{val\ 1270}#))
                                            #{r\ 1249}#)
                                          #{new-w\ 1279}#
                                          #{s\ 1251}#
                                          #{mod\ 1252}#))))))
                              #{tmp\ 1262}#)
                       ((lambda (#{_\ 1290}#)
                          (syntax-violation
                            #f
                            "bad local syntax definition"
                            (#{source-wrap\ 378}#
                              #{e\ 1248}#
                              #{w\ 1250}#
                              #{s\ 1251}#
                              #{mod\ 1252}#)))
                        #{tmp\ 1261}#)))
                   ($sc-dispatch
                     #{tmp\ 1261}#
                     '(any #(each (any any)) any . each-any))))
                #{e\ 1248}#)))
           (#{chi-body\ 400}#
             (lambda (#{body\ 1291}#
                      #{outer-form\ 1292}#
                      #{r\ 1293}#
                      #{w\ 1294}#
                      #{mod\ 1295}#)
               (let ((#{r\ 1303}#
                       (cons '("placeholder" placeholder)
                             #{r\ 1293}#)))
                 (let ((#{ribcage\ 1305}#
                         (#{make-ribcage\ 328}#
                           '()
                           '()
                           '())))
                   (let ((#{w\ 1308}#
                           (#{make-wrap\ 312}#
                             (#{wrap-marks\ 314}# #{w\ 1294}#)
                             (cons #{ribcage\ 1305}#
                                   (#{wrap-subst\ 316}# #{w\ 1294}#)))))
                     (letrec ((#{parse\ 1317}#
                                (lambda (#{body\ 1318}#
                                         #{ids\ 1319}#
                                         #{labels\ 1320}#
                                         #{var-ids\ 1321}#
                                         #{vars\ 1322}#
                                         #{vals\ 1323}#
                                         #{bindings\ 1324}#)
                                  (if (null? #{body\ 1318}#)
                                    (syntax-violation
                                      #f
                                      "no expressions in body"
                                      #{outer-form\ 1292}#)
                                    (let ((#{e\ 1329}# (cdar #{body\ 1318}#))
                                          (#{er\ 1330}# (caar #{body\ 1318}#)))
                                      (call-with-values
                                        (lambda ()
                                          (#{syntax-type\ 388}#
                                            #{e\ 1329}#
                                            #{er\ 1330}#
                                            '(())
                                            (#{source-annotation\ 286}#
                                              #{er\ 1330}#)
                                            #{ribcage\ 1305}#
                                            #{mod\ 1295}#
                                            #f))
                                        (lambda (#{type\ 1332}#
                                                 #{value\ 1333}#
                                                 #{e\ 1334}#
                                                 #{w\ 1335}#
                                                 #{s\ 1336}#
                                                 #{mod\ 1337}#)
                                          (if (memv #{type\ 1332}#
                                                    '(define-form))
                                            (let ((#{id\ 1347}#
                                                    (#{wrap\ 376}#
                                                      #{value\ 1333}#
                                                      #{w\ 1335}#
                                                      #{mod\ 1337}#))
                                                  (#{label\ 1348}#
                                                    (#{gen-label\ 323}#)))
                                              (let ((#{var\ 1350}#
                                                      (#{gen-var\ 420}#
                                                        #{id\ 1347}#)))
                                                (begin
                                                  (#{extend-ribcage!\ 352}#
                                                    #{ribcage\ 1305}#
                                                    #{id\ 1347}#
                                                    #{label\ 1348}#)
                                                  (#{parse\ 1317}#
                                                    (cdr #{body\ 1318}#)
                                                    (cons #{id\ 1347}#
                                                          #{ids\ 1319}#)
                                                    (cons #{label\ 1348}#
                                                          #{labels\ 1320}#)
                                                    (cons #{id\ 1347}#
                                                          #{var-ids\ 1321}#)
                                                    (cons #{var\ 1350}#
                                                          #{vars\ 1322}#)
                                                    (cons (cons #{er\ 1330}#
                                                                (#{wrap\ 376}#
                                                                  #{e\ 1334}#
                                                                  #{w\ 1335}#
                                                                  #{mod\ 1337}#))
                                                          #{vals\ 1323}#)
                                                    (cons (cons 'lexical
                                                                #{var\ 1350}#)
                                                          #{bindings\ 1324}#)))))
                                            (if (memv #{type\ 1332}#
                                                      '(define-syntax-form))
                                              (let ((#{id\ 1355}#
                                                      (#{wrap\ 376}#
                                                        #{value\ 1333}#
                                                        #{w\ 1335}#
                                                        #{mod\ 1337}#))
                                                    (#{label\ 1356}#
                                                      (#{gen-label\ 323}#)))
                                                (begin
                                                  (#{extend-ribcage!\ 352}#
                                                    #{ribcage\ 1305}#
                                                    #{id\ 1355}#
                                                    #{label\ 1356}#)
                                                  (#{parse\ 1317}#
                                                    (cdr #{body\ 1318}#)
                                                    (cons #{id\ 1355}#
                                                          #{ids\ 1319}#)
                                                    (cons #{label\ 1356}#
                                                          #{labels\ 1320}#)
                                                    #{var-ids\ 1321}#
                                                    #{vars\ 1322}#
                                                    #{vals\ 1323}#
                                                    (cons (cons 'macro
                                                                (cons #{er\ 1330}#
                                                                      (#{wrap\ 376}#
                                                                        #{e\ 1334}#
                                                                        #{w\ 1335}#
                                                                        #{mod\ 1337}#)))
                                                          #{bindings\ 1324}#))))
                                              (if (memv #{type\ 1332}#
                                                        '(begin-form))
                                                ((lambda (#{tmp\ 1359}#)
                                                   ((lambda (#{tmp\ 1360}#)
                                                      (if #{tmp\ 1360}#
                                                        (apply (lambda (#{_\ 1363}#
                                                                        #{e1\ 1364}#)
                                                                 (#{parse\ 1317}#
                                                                   (letrec ((#{f\ 1367}#
                                                                              (lambda (#{forms\ 1368}#)
                                                                                (if (null? #{forms\ 1368}#)
                                                                                  (cdr #{body\ 1318}#)
                                                                                  (cons (cons #{er\ 1330}#
                                                                                              (#{wrap\ 376}#
                                                                                                (car #{forms\ 1368}#)
                                                                                                #{w\ 1335}#
                                                                                                #{mod\ 1337}#))
                                                                                        (#{f\ 1367}#
                                                                                          (cdr #{forms\ 1368}#)))))))
                                                                     (#{f\ 1367}#
                                                                       #{e1\ 1364}#))
                                                                   #{ids\ 1319}#
                                                                   #{labels\ 1320}#
                                                                   #{var-ids\ 1321}#
                                                                   #{vars\ 1322}#
                                                                   #{vals\ 1323}#
                                                                   #{bindings\ 1324}#))
                                                               #{tmp\ 1360}#)
                                                        (syntax-violation
                                                          #f
                                                          "source expression failed to match any pattern"
                                                          #{tmp\ 1359}#)))
                                                    ($sc-dispatch
                                                      #{tmp\ 1359}#
                                                      '(any . each-any))))
                                                 #{e\ 1334}#)
                                                (if (memv #{type\ 1332}#
                                                          '(local-syntax-form))
                                                  (#{chi-local-syntax\ 402}#
                                                    #{value\ 1333}#
                                                    #{e\ 1334}#
                                                    #{er\ 1330}#
                                                    #{w\ 1335}#
                                                    #{s\ 1336}#
                                                    #{mod\ 1337}#
                                                    (lambda (#{forms\ 1371}#
                                                             #{er\ 1372}#
                                                             #{w\ 1373}#
                                                             #{s\ 1374}#
                                                             #{mod\ 1375}#)
                                                      (#{parse\ 1317}#
                                                        (letrec ((#{f\ 1383}#
                                                                   (lambda (#{forms\ 1384}#)
                                                                     (if (null? #{forms\ 1384}#)
                                                                       (cdr #{body\ 1318}#)
                                                                       (cons (cons #{er\ 1372}#
                                                                                   (#{wrap\ 376}#
                                                                                     (car #{forms\ 1384}#)
                                                                                     #{w\ 1373}#
                                                                                     #{mod\ 1375}#))
                                                                             (#{f\ 1383}#
                                                                               (cdr #{forms\ 1384}#)))))))
                                                          (#{f\ 1383}#
                                                            #{forms\ 1371}#))
                                                        #{ids\ 1319}#
                                                        #{labels\ 1320}#
                                                        #{var-ids\ 1321}#
                                                        #{vars\ 1322}#
                                                        #{vals\ 1323}#
                                                        #{bindings\ 1324}#)))
                                                  (if (null? #{ids\ 1319}#)
                                                    (#{build-sequence\ 259}#
                                                      #f
                                                      (map (lambda (#{x\ 1387}#)
                                                             (#{chi\ 392}#
                                                               (cdr #{x\ 1387}#)
                                                               (car #{x\ 1387}#)
                                                               '(())
                                                               #{mod\ 1337}#))
                                                           (cons (cons #{er\ 1330}#
                                                                       (#{source-wrap\ 378}#
                                                                         #{e\ 1334}#
                                                                         #{w\ 1335}#
                                                                         #{s\ 1336}#
                                                                         #{mod\ 1337}#))
                                                                 (cdr #{body\ 1318}#))))
                                                    (begin
                                                      (if (not (#{valid-bound-ids?\ 370}#
                                                                 #{ids\ 1319}#))
                                                        (syntax-violation
                                                          #f
                                                          "invalid or duplicate identifier in definition"
                                                          #{outer-form\ 1292}#))
                                                      (letrec ((#{loop\ 1394}#
                                                                 (lambda (#{bs\ 1395}#
                                                                          #{er-cache\ 1396}#
                                                                          #{r-cache\ 1397}#)
                                                                   (if (not (null? #{bs\ 1395}#))
                                                                     (let ((#{b\ 1400}#
                                                                             (car #{bs\ 1395}#)))
                                                                       (if (eq? (car #{b\ 1400}#)
                                                                                'macro)
                                                                         (let ((#{er\ 1403}#
                                                                                 (cadr #{b\ 1400}#)))
                                                                           (let ((#{r-cache\ 1405}#
                                                                                   (if (eq? #{er\ 1403}#
                                                                                            #{er-cache\ 1396}#)
                                                                                     #{r-cache\ 1397}#
                                                                                     (#{macros-only-env\ 299}#
                                                                                       #{er\ 1403}#))))
                                                                             (begin
                                                                               (set-cdr!
                                                                                 #{b\ 1400}#
                                                                                 (#{eval-local-transformer\ 404}#
                                                                                   (#{chi\ 392}#
                                                                                     (cddr #{b\ 1400}#)
                                                                                     #{r-cache\ 1405}#
                                                                                     '(())
                                                                                     #{mod\ 1337}#)
                                                                                   #{mod\ 1337}#))
                                                                               (#{loop\ 1394}#
                                                                                 (cdr #{bs\ 1395}#)
                                                                                 #{er\ 1403}#
                                                                                 #{r-cache\ 1405}#))))
                                                                         (#{loop\ 1394}#
                                                                           (cdr #{bs\ 1395}#)
                                                                           #{er-cache\ 1396}#
                                                                           #{r-cache\ 1397}#)))))))
                                                        (#{loop\ 1394}#
                                                          #{bindings\ 1324}#
                                                          #f
                                                          #f))
                                                      (set-cdr!
                                                        #{r\ 1303}#
                                                        (#{extend-env\ 295}#
                                                          #{labels\ 1320}#
                                                          #{bindings\ 1324}#
                                                          (cdr #{r\ 1303}#)))
                                                      (#{build-letrec\ 265}#
                                                        #f
                                                        (map syntax->datum
                                                             #{var-ids\ 1321}#)
                                                        #{vars\ 1322}#
                                                        (map (lambda (#{x\ 1408}#)
                                                               (#{chi\ 392}#
                                                                 (cdr #{x\ 1408}#)
                                                                 (car #{x\ 1408}#)
                                                                 '(())
                                                                 #{mod\ 1337}#))
                                                             #{vals\ 1323}#)
                                                        (#{build-sequence\ 259}#
                                                          #f
                                                          (map (lambda (#{x\ 1412}#)
                                                                 (#{chi\ 392}#
                                                                   (cdr #{x\ 1412}#)
                                                                   (car #{x\ 1412}#)
                                                                   '(())
                                                                   #{mod\ 1337}#))
                                                               (cons (cons #{er\ 1330}#
                                                                           (#{source-wrap\ 378}#
                                                                             #{e\ 1334}#
                                                                             #{w\ 1335}#
                                                                             #{s\ 1336}#
                                                                             #{mod\ 1337}#))
                                                                     (cdr #{body\ 1318}#))))))))))))))))))
                       (#{parse\ 1317}#
                         (map (lambda (#{x\ 1325}#)
                                (cons #{r\ 1303}#
                                      (#{wrap\ 376}#
                                        #{x\ 1325}#
                                        #{w\ 1308}#
                                        #{mod\ 1295}#)))
                              #{body\ 1291}#)
                         '()
                         '()
                         '()
                         '()
                         '()
                         '())))))))
           (#{chi-macro\ 398}#
             (lambda (#{p\ 1415}#
                      #{e\ 1416}#
                      #{r\ 1417}#
                      #{w\ 1418}#
                      #{rib\ 1419}#
                      #{mod\ 1420}#)
               (letrec ((#{rebuild-macro-output\ 1428}#
                          (lambda (#{x\ 1429}# #{m\ 1430}#)
                            (if (pair? #{x\ 1429}#)
                              (cons (#{rebuild-macro-output\ 1428}#
                                      (car #{x\ 1429}#)
                                      #{m\ 1430}#)
                                    (#{rebuild-macro-output\ 1428}#
                                      (cdr #{x\ 1429}#)
                                      #{m\ 1430}#))
                              (if (#{syntax-object?\ 271}# #{x\ 1429}#)
                                (let ((#{w\ 1438}#
                                        (#{syntax-object-wrap\ 275}#
                                          #{x\ 1429}#)))
                                  (let ((#{ms\ 1441}#
                                          (#{wrap-marks\ 314}# #{w\ 1438}#))
                                        (#{s\ 1442}#
                                          (#{wrap-subst\ 316}# #{w\ 1438}#)))
                                    (if (if (pair? #{ms\ 1441}#)
                                          (eq? (car #{ms\ 1441}#) #f)
                                          #f)
                                      (#{make-syntax-object\ 269}#
                                        (#{syntax-object-expression\ 273}#
                                          #{x\ 1429}#)
                                        (#{make-wrap\ 312}#
                                          (cdr #{ms\ 1441}#)
                                          (if #{rib\ 1419}#
                                            (cons #{rib\ 1419}#
                                                  (cdr #{s\ 1442}#))
                                            (cdr #{s\ 1442}#)))
                                        (#{syntax-object-module\ 277}#
                                          #{x\ 1429}#))
                                      (#{make-syntax-object\ 269}#
                                        (#{syntax-object-expression\ 273}#
                                          #{x\ 1429}#)
                                        (#{make-wrap\ 312}#
                                          (cons #{m\ 1430}# #{ms\ 1441}#)
                                          (if #{rib\ 1419}#
                                            (cons #{rib\ 1419}#
                                                  (cons 'shift
                                                        #{s\ 1442}#))
                                            (cons (quote shift) #{s\ 1442}#)))
                                        (cons 'hygiene
                                              (cdr #{p\ 1415}#))))))
                                (if (vector? #{x\ 1429}#)
                                  (let ((#{n\ 1450}#
                                          (vector-length #{x\ 1429}#)))
                                    (let ((#{v\ 1452}#
                                            (make-vector #{n\ 1450}#)))
                                      (letrec ((#{loop\ 1455}#
                                                 (lambda (#{i\ 1456}#)
                                                   (if (#{fx=\ 212}#
                                                         #{i\ 1456}#
                                                         #{n\ 1450}#)
                                                     (begin
                                                       (if #f #f)
                                                       #{v\ 1452}#)
                                                     (begin
                                                       (vector-set!
                                                         #{v\ 1452}#
                                                         #{i\ 1456}#
                                                         (#{rebuild-macro-output\ 1428}#
                                                           (vector-ref
                                                             #{x\ 1429}#
                                                             #{i\ 1456}#)
                                                           #{m\ 1430}#))
                                                       (#{loop\ 1455}#
                                                         (#{fx+\ 208}#
                                                           #{i\ 1456}#
                                                           1)))))))
                                        (#{loop\ 1455}# 0))))
                                  (if (symbol? #{x\ 1429}#)
                                    (syntax-violation
                                      #f
                                      "encountered raw symbol in macro output"
                                      (#{source-wrap\ 378}#
                                        #{e\ 1416}#
                                        #{w\ 1418}#
                                        (#{wrap-subst\ 316}# #{w\ 1418}#)
                                        #{mod\ 1420}#)
                                      #{x\ 1429}#)
                                    #{x\ 1429}#)))))))
                 (#{rebuild-macro-output\ 1428}#
                   ((car #{p\ 1415}#)
                    (#{wrap\ 376}#
                      #{e\ 1416}#
                      (#{anti-mark\ 348}# #{w\ 1418}#)
                      #{mod\ 1420}#))
                   (gensym "m")))))
           (#{chi-application\ 396}#
             (lambda (#{x\ 1463}#
                      #{e\ 1464}#
                      #{r\ 1465}#
                      #{w\ 1466}#
                      #{s\ 1467}#
                      #{mod\ 1468}#)
               ((lambda (#{tmp\ 1475}#)
                  ((lambda (#{tmp\ 1476}#)
                     (if #{tmp\ 1476}#
                       (apply (lambda (#{e0\ 1479}# #{e1\ 1480}#)
                                (#{build-application\ 229}#
                                  #{s\ 1467}#
                                  #{x\ 1463}#
                                  (map (lambda (#{e\ 1481}#)
                                         (#{chi\ 392}#
                                           #{e\ 1481}#
                                           #{r\ 1465}#
                                           #{w\ 1466}#
                                           #{mod\ 1468}#))
                                       #{e1\ 1480}#)))
                              #{tmp\ 1476}#)
                       (syntax-violation
                         #f
                         "source expression failed to match any pattern"
                         #{tmp\ 1475}#)))
                   ($sc-dispatch
                     #{tmp\ 1475}#
                     '(any . each-any))))
                #{e\ 1464}#)))
           (#{chi-expr\ 394}#
             (lambda (#{type\ 1484}#
                      #{value\ 1485}#
                      #{e\ 1486}#
                      #{r\ 1487}#
                      #{w\ 1488}#
                      #{s\ 1489}#
                      #{mod\ 1490}#)
               (if (memv #{type\ 1484}# (quote (lexical)))
                 (#{build-lexical-reference\ 235}#
                   'value
                   #{s\ 1489}#
                   #{e\ 1486}#
                   #{value\ 1485}#)
                 (if (memv #{type\ 1484}# (quote (core core-form)))
                   (#{value\ 1485}#
                     #{e\ 1486}#
                     #{r\ 1487}#
                     #{w\ 1488}#
                     #{s\ 1489}#
                     #{mod\ 1490}#)
                   (if (memv #{type\ 1484}# (quote (module-ref)))
                     (call-with-values
                       (lambda ()
                         (#{value\ 1485}#
                           #{e\ 1486}#
                           #{r\ 1487}#
                           #{w\ 1488}#))
                       (lambda (#{e\ 1501}#
                                #{r\ 1502}#
                                #{w\ 1503}#
                                #{s\ 1504}#
                                #{mod\ 1505}#)
                         (#{chi\ 392}#
                           #{e\ 1501}#
                           #{r\ 1502}#
                           #{w\ 1503}#
                           #{mod\ 1505}#)))
                     (if (memv #{type\ 1484}# (quote (lexical-call)))
                       (#{chi-application\ 396}#
                         (#{build-lexical-reference\ 235}#
                           'fun
                           (#{source-annotation\ 286}# (car #{e\ 1486}#))
                           (car #{e\ 1486}#)
                           #{value\ 1485}#)
                         #{e\ 1486}#
                         #{r\ 1487}#
                         #{w\ 1488}#
                         #{s\ 1489}#
                         #{mod\ 1490}#)
                       (if (memv #{type\ 1484}# (quote (global-call)))
                         (#{chi-application\ 396}#
                           (#{build-global-reference\ 241}#
                             (#{source-annotation\ 286}# (car #{e\ 1486}#))
                             (if (#{syntax-object?\ 271}# #{value\ 1485}#)
                               (#{syntax-object-expression\ 273}#
                                 #{value\ 1485}#)
                               #{value\ 1485}#)
                             (if (#{syntax-object?\ 271}# #{value\ 1485}#)
                               (#{syntax-object-module\ 277}# #{value\ 1485}#)
                               #{mod\ 1490}#))
                           #{e\ 1486}#
                           #{r\ 1487}#
                           #{w\ 1488}#
                           #{s\ 1489}#
                           #{mod\ 1490}#)
                         (if (memv #{type\ 1484}# (quote (constant)))
                           (#{build-data\ 257}#
                             #{s\ 1489}#
                             (#{strip\ 418}#
                               (#{source-wrap\ 378}#
                                 #{e\ 1486}#
                                 #{w\ 1488}#
                                 #{s\ 1489}#
                                 #{mod\ 1490}#)
                               '(())))
                           (if (memv #{type\ 1484}# (quote (global)))
                             (#{build-global-reference\ 241}#
                               #{s\ 1489}#
                               #{value\ 1485}#
                               #{mod\ 1490}#)
                             (if (memv #{type\ 1484}# (quote (call)))
                               (#{chi-application\ 396}#
                                 (#{chi\ 392}#
                                   (car #{e\ 1486}#)
                                   #{r\ 1487}#
                                   #{w\ 1488}#
                                   #{mod\ 1490}#)
                                 #{e\ 1486}#
                                 #{r\ 1487}#
                                 #{w\ 1488}#
                                 #{s\ 1489}#
                                 #{mod\ 1490}#)
                               (if (memv #{type\ 1484}# (quote (begin-form)))
                                 ((lambda (#{tmp\ 1518}#)
                                    ((lambda (#{tmp\ 1519}#)
                                       (if #{tmp\ 1519}#
                                         (apply (lambda (#{_\ 1523}#
                                                         #{e1\ 1524}#
                                                         #{e2\ 1525}#)
                                                  (#{chi-sequence\ 380}#
                                                    (cons #{e1\ 1524}#
                                                          #{e2\ 1525}#)
                                                    #{r\ 1487}#
                                                    #{w\ 1488}#
                                                    #{s\ 1489}#
                                                    #{mod\ 1490}#))
                                                #{tmp\ 1519}#)
                                         (syntax-violation
                                           #f
                                           "source expression failed to match any pattern"
                                           #{tmp\ 1518}#)))
                                     ($sc-dispatch
                                       #{tmp\ 1518}#
                                       '(any any . each-any))))
                                  #{e\ 1486}#)
                                 (if (memv #{type\ 1484}#
                                           '(local-syntax-form))
                                   (#{chi-local-syntax\ 402}#
                                     #{value\ 1485}#
                                     #{e\ 1486}#
                                     #{r\ 1487}#
                                     #{w\ 1488}#
                                     #{s\ 1489}#
                                     #{mod\ 1490}#
                                     #{chi-sequence\ 380}#)
                                   (if (memv #{type\ 1484}#
                                             '(eval-when-form))
                                     ((lambda (#{tmp\ 1529}#)
                                        ((lambda (#{tmp\ 1530}#)
                                           (if #{tmp\ 1530}#
                                             (apply (lambda (#{_\ 1535}#
                                                             #{x\ 1536}#
                                                             #{e1\ 1537}#
                                                             #{e2\ 1538}#)
                                                      (let ((#{when-list\ 1540}#
                                                              (#{chi-when-list\ 386}#
                                                                #{e\ 1486}#
                                                                #{x\ 1536}#
                                                                #{w\ 1488}#)))
                                                        (if (memq 'eval
                                                                  #{when-list\ 1540}#)
                                                          (#{chi-sequence\ 380}#
                                                            (cons #{e1\ 1537}#
                                                                  #{e2\ 1538}#)
                                                            #{r\ 1487}#
                                                            #{w\ 1488}#
                                                            #{s\ 1489}#
                                                            #{mod\ 1490}#)
                                                          (#{chi-void\ 406}#))))
                                                    #{tmp\ 1530}#)
                                             (syntax-violation
                                               #f
                                               "source expression failed to match any pattern"
                                               #{tmp\ 1529}#)))
                                         ($sc-dispatch
                                           #{tmp\ 1529}#
                                           '(any each-any any . each-any))))
                                      #{e\ 1486}#)
                                     (if (memv #{type\ 1484}#
                                               '(define-form
                                                  define-syntax-form))
                                       (syntax-violation
                                         #f
                                         "definition in expression context"
                                         #{e\ 1486}#
                                         (#{wrap\ 376}#
                                           #{value\ 1485}#
                                           #{w\ 1488}#
                                           #{mod\ 1490}#))
                                       (if (memv #{type\ 1484}#
                                                 '(syntax))
                                         (syntax-violation
                                           #f
                                           "reference to pattern variable outside syntax form"
                                           (#{source-wrap\ 378}#
                                             #{e\ 1486}#
                                             #{w\ 1488}#
                                             #{s\ 1489}#
                                             #{mod\ 1490}#))
                                         (if (memv #{type\ 1484}#
                                                   '(displaced-lexical))
                                           (syntax-violation
                                             #f
                                             "reference to identifier outside its scope"
                                             (#{source-wrap\ 378}#
                                               #{e\ 1486}#
                                               #{w\ 1488}#
                                               #{s\ 1489}#
                                               #{mod\ 1490}#))
                                           (syntax-violation
                                             #f
                                             "unexpected syntax"
                                             (#{source-wrap\ 378}#
                                               #{e\ 1486}#
                                               #{w\ 1488}#
                                               #{s\ 1489}#
                                               #{mod\ 1490}#))))))))))))))))))
           (#{chi\ 392}#
             (lambda (#{e\ 1547}#
                      #{r\ 1548}#
                      #{w\ 1549}#
                      #{mod\ 1550}#)
               (call-with-values
                 (lambda ()
                   (#{syntax-type\ 388}#
                     #{e\ 1547}#
                     #{r\ 1548}#
                     #{w\ 1549}#
                     (#{source-annotation\ 286}# #{e\ 1547}#)
                     #f
                     #{mod\ 1550}#
                     #f))
                 (lambda (#{type\ 1555}#
                          #{value\ 1556}#
                          #{e\ 1557}#
                          #{w\ 1558}#
                          #{s\ 1559}#
                          #{mod\ 1560}#)
                   (#{chi-expr\ 394}#
                     #{type\ 1555}#
                     #{value\ 1556}#
                     #{e\ 1557}#
                     #{r\ 1548}#
                     #{w\ 1558}#
                     #{s\ 1559}#
                     #{mod\ 1560}#)))))
           (#{chi-top\ 390}#
             (lambda (#{e\ 1567}#
                      #{r\ 1568}#
                      #{w\ 1569}#
                      #{m\ 1570}#
                      #{esew\ 1571}#
                      #{mod\ 1572}#)
               (call-with-values
                 (lambda ()
                   (#{syntax-type\ 388}#
                     #{e\ 1567}#
                     #{r\ 1568}#
                     #{w\ 1569}#
                     (#{source-annotation\ 286}# #{e\ 1567}#)
                     #f
                     #{mod\ 1572}#
                     #f))
                 (lambda (#{type\ 1593}#
                          #{value\ 1594}#
                          #{e\ 1595}#
                          #{w\ 1596}#
                          #{s\ 1597}#
                          #{mod\ 1598}#)
                   (if (memv #{type\ 1593}# (quote (begin-form)))
                     ((lambda (#{tmp\ 1606}#)
                        ((lambda (#{tmp\ 1607}#)
                           (if #{tmp\ 1607}#
                             (apply (lambda (#{_\ 1609}#) (#{chi-void\ 406}#))
                                    #{tmp\ 1607}#)
                             ((lambda (#{tmp\ 1610}#)
                                (if #{tmp\ 1610}#
                                  (apply (lambda (#{_\ 1614}#
                                                  #{e1\ 1615}#
                                                  #{e2\ 1616}#)
                                           (#{chi-top-sequence\ 382}#
                                             (cons #{e1\ 1615}# #{e2\ 1616}#)
                                             #{r\ 1568}#
                                             #{w\ 1596}#
                                             #{s\ 1597}#
                                             #{m\ 1570}#
                                             #{esew\ 1571}#
                                             #{mod\ 1598}#))
                                         #{tmp\ 1610}#)
                                  (syntax-violation
                                    #f
                                    "source expression failed to match any pattern"
                                    #{tmp\ 1606}#)))
                              ($sc-dispatch
                                #{tmp\ 1606}#
                                '(any any . each-any)))))
                         ($sc-dispatch #{tmp\ 1606}# (quote (any)))))
                      #{e\ 1595}#)
                     (if (memv #{type\ 1593}# (quote (local-syntax-form)))
                       (#{chi-local-syntax\ 402}#
                         #{value\ 1594}#
                         #{e\ 1595}#
                         #{r\ 1568}#
                         #{w\ 1596}#
                         #{s\ 1597}#
                         #{mod\ 1598}#
                         (lambda (#{body\ 1619}#
                                  #{r\ 1620}#
                                  #{w\ 1621}#
                                  #{s\ 1622}#
                                  #{mod\ 1623}#)
                           (#{chi-top-sequence\ 382}#
                             #{body\ 1619}#
                             #{r\ 1620}#
                             #{w\ 1621}#
                             #{s\ 1622}#
                             #{m\ 1570}#
                             #{esew\ 1571}#
                             #{mod\ 1623}#)))
                       (if (memv #{type\ 1593}# (quote (eval-when-form)))
                         ((lambda (#{tmp\ 1630}#)
                            ((lambda (#{tmp\ 1631}#)
                               (if #{tmp\ 1631}#
                                 (apply (lambda (#{_\ 1636}#
                                                 #{x\ 1637}#
                                                 #{e1\ 1638}#
                                                 #{e2\ 1639}#)
                                          (let ((#{when-list\ 1642}#
                                                  (#{chi-when-list\ 386}#
                                                    #{e\ 1595}#
                                                    #{x\ 1637}#
                                                    #{w\ 1596}#))
                                                (#{body\ 1643}#
                                                  (cons #{e1\ 1638}#
                                                        #{e2\ 1639}#)))
                                            (if (eq? #{m\ 1570}# (quote e))
                                              (if (memq 'eval
                                                        #{when-list\ 1642}#)
                                                (#{chi-top-sequence\ 382}#
                                                  #{body\ 1643}#
                                                  #{r\ 1568}#
                                                  #{w\ 1596}#
                                                  #{s\ 1597}#
                                                  (if (memq 'expand
                                                            #{when-list\ 1642}#)
                                                    'c&e
                                                    'e)
                                                  '(eval)
                                                  #{mod\ 1598}#)
                                                (begin
                                                  (if (memq 'expand
                                                            #{when-list\ 1642}#)
                                                    (#{top-level-eval-hook\ 216}#
                                                      (#{chi-top-sequence\ 382}#
                                                        #{body\ 1643}#
                                                        #{r\ 1568}#
                                                        #{w\ 1596}#
                                                        #{s\ 1597}#
                                                        'e
                                                        '(eval)
                                                        #{mod\ 1598}#)
                                                      #{mod\ 1598}#))
                                                  (#{chi-void\ 406}#)))
                                              (if (memq 'load
                                                        #{when-list\ 1642}#)
                                                (if (let ((#{t\ 1652}#
                                                            (memq 'compile
                                                                  #{when-list\ 1642}#)))
                                                      (if #{t\ 1652}#
                                                        #{t\ 1652}#
                                                        (let ((#{t\ 1655}#
                                                                (memq 'expand
                                                                      #{when-list\ 1642}#)))
                                                          (if #{t\ 1655}#
                                                            #{t\ 1655}#
                                                            (if (eq? #{m\ 1570}#
                                                                     'c&e)
                                                              (memq 'eval
                                                                    #{when-list\ 1642}#)
                                                              #f)))))
                                                  (#{chi-top-sequence\ 382}#
                                                    #{body\ 1643}#
                                                    #{r\ 1568}#
                                                    #{w\ 1596}#
                                                    #{s\ 1597}#
                                                    'c&e
                                                    '(compile load)
                                                    #{mod\ 1598}#)
                                                  (if (memq #{m\ 1570}#
                                                            '(c c&e))
                                                    (#{chi-top-sequence\ 382}#
                                                      #{body\ 1643}#
                                                      #{r\ 1568}#
                                                      #{w\ 1596}#
                                                      #{s\ 1597}#
                                                      'c
                                                      '(load)
                                                      #{mod\ 1598}#)
                                                    (#{chi-void\ 406}#)))
                                                (if (let ((#{t\ 1663}#
                                                            (memq 'compile
                                                                  #{when-list\ 1642}#)))
                                                      (if #{t\ 1663}#
                                                        #{t\ 1663}#
                                                        (let ((#{t\ 1666}#
                                                                (memq 'expand
                                                                      #{when-list\ 1642}#)))
                                                          (if #{t\ 1666}#
                                                            #{t\ 1666}#
                                                            (if (eq? #{m\ 1570}#
                                                                     'c&e)
                                                              (memq 'eval
                                                                    #{when-list\ 1642}#)
                                                              #f)))))
                                                  (begin
                                                    (#{top-level-eval-hook\ 216}#
                                                      (#{chi-top-sequence\ 382}#
                                                        #{body\ 1643}#
                                                        #{r\ 1568}#
                                                        #{w\ 1596}#
                                                        #{s\ 1597}#
                                                        'e
                                                        '(eval)
                                                        #{mod\ 1598}#)
                                                      #{mod\ 1598}#)
                                                    (#{chi-void\ 406}#))
                                                  (#{chi-void\ 406}#))))))
                                        #{tmp\ 1631}#)
                                 (syntax-violation
                                   #f
                                   "source expression failed to match any pattern"
                                   #{tmp\ 1630}#)))
                             ($sc-dispatch
                               #{tmp\ 1630}#
                               '(any each-any any . each-any))))
                          #{e\ 1595}#)
                         (if (memv #{type\ 1593}#
                                   '(define-syntax-form))
                           (let ((#{n\ 1674}#
                                   (#{id-var-name\ 364}#
                                     #{value\ 1594}#
                                     #{w\ 1596}#))
                                 (#{r\ 1675}#
                                   (#{macros-only-env\ 299}# #{r\ 1568}#)))
                             (if (memv #{m\ 1570}# (quote (c)))
                               (if (memq (quote compile) #{esew\ 1571}#)
                                 (let ((#{e\ 1678}#
                                         (#{chi-install-global\ 384}#
                                           #{n\ 1674}#
                                           (#{chi\ 392}#
                                             #{e\ 1595}#
                                             #{r\ 1675}#
                                             #{w\ 1596}#
                                             #{mod\ 1598}#))))
                                   (begin
                                     (#{top-level-eval-hook\ 216}#
                                       #{e\ 1678}#
                                       #{mod\ 1598}#)
                                     (if (memq (quote load) #{esew\ 1571}#)
                                       #{e\ 1678}#
                                       (#{chi-void\ 406}#))))
                                 (if (memq (quote load) #{esew\ 1571}#)
                                   (#{chi-install-global\ 384}#
                                     #{n\ 1674}#
                                     (#{chi\ 392}#
                                       #{e\ 1595}#
                                       #{r\ 1675}#
                                       #{w\ 1596}#
                                       #{mod\ 1598}#))
                                   (#{chi-void\ 406}#)))
                               (if (memv #{m\ 1570}# (quote (c&e)))
                                 (let ((#{e\ 1681}#
                                         (#{chi-install-global\ 384}#
                                           #{n\ 1674}#
                                           (#{chi\ 392}#
                                             #{e\ 1595}#
                                             #{r\ 1675}#
                                             #{w\ 1596}#
                                             #{mod\ 1598}#))))
                                   (begin
                                     (#{top-level-eval-hook\ 216}#
                                       #{e\ 1681}#
                                       #{mod\ 1598}#)
                                     #{e\ 1681}#))
                                 (begin
                                   (if (memq (quote eval) #{esew\ 1571}#)
                                     (#{top-level-eval-hook\ 216}#
                                       (#{chi-install-global\ 384}#
                                         #{n\ 1674}#
                                         (#{chi\ 392}#
                                           #{e\ 1595}#
                                           #{r\ 1675}#
                                           #{w\ 1596}#
                                           #{mod\ 1598}#))
                                       #{mod\ 1598}#))
                                   (#{chi-void\ 406}#)))))
                           (if (memv #{type\ 1593}# (quote (define-form)))
                             (let ((#{n\ 1686}#
                                     (#{id-var-name\ 364}#
                                       #{value\ 1594}#
                                       #{w\ 1596}#)))
                               (let ((#{type\ 1688}#
                                       (#{binding-type\ 290}#
                                         (#{lookup\ 301}#
                                           #{n\ 1686}#
                                           #{r\ 1568}#
                                           #{mod\ 1598}#))))
                                 (if (memv #{type\ 1688}#
                                           '(global core macro module-ref))
                                   (begin
                                     (if (if (memq #{m\ 1570}# (quote (c c&e)))
                                           (if (not (module-local-variable
                                                      (current-module)
                                                      #{n\ 1686}#))
                                             (current-module)
                                             #f)
                                           #f)
                                       (let ((#{old\ 1694}#
                                               (module-variable
                                                 (current-module)
                                                 #{n\ 1686}#)))
                                         (module-define!
                                           (current-module)
                                           #{n\ 1686}#
                                           (if (variable? #{old\ 1694}#)
                                             (variable-ref #{old\ 1694}#)
                                             #f))))
                                     (let ((#{x\ 1697}#
                                             (#{build-global-definition\ 247}#
                                               #{s\ 1597}#
                                               #{n\ 1686}#
                                               (#{chi\ 392}#
                                                 #{e\ 1595}#
                                                 #{r\ 1568}#
                                                 #{w\ 1596}#
                                                 #{mod\ 1598}#))))
                                       (begin
                                         (if (eq? #{m\ 1570}# (quote c&e))
                                           (#{top-level-eval-hook\ 216}#
                                             #{x\ 1697}#
                                             #{mod\ 1598}#))
                                         #{x\ 1697}#)))
                                   (if (memv #{type\ 1688}#
                                             '(displaced-lexical))
                                     (syntax-violation
                                       #f
                                       "identifier out of context"
                                       #{e\ 1595}#
                                       (#{wrap\ 376}#
                                         #{value\ 1594}#
                                         #{w\ 1596}#
                                         #{mod\ 1598}#))
                                     (syntax-violation
                                       #f
                                       "cannot define keyword at top level"
                                       #{e\ 1595}#
                                       (#{wrap\ 376}#
                                         #{value\ 1594}#
                                         #{w\ 1596}#
                                         #{mod\ 1598}#))))))
                             (let ((#{x\ 1703}#
                                     (#{chi-expr\ 394}#
                                       #{type\ 1593}#
                                       #{value\ 1594}#
                                       #{e\ 1595}#
                                       #{r\ 1568}#
                                       #{w\ 1596}#
                                       #{s\ 1597}#
                                       #{mod\ 1598}#)))
                               (begin
                                 (if (eq? #{m\ 1570}# (quote c&e))
                                   (#{top-level-eval-hook\ 216}#
                                     #{x\ 1703}#
                                     #{mod\ 1598}#))
                                 #{x\ 1703}#)))))))))))
           (#{syntax-type\ 388}#
             (lambda (#{e\ 1704}#
                      #{r\ 1705}#
                      #{w\ 1706}#
                      #{s\ 1707}#
                      #{rib\ 1708}#
                      #{mod\ 1709}#
                      #{for-car?\ 1710}#)
               (if (symbol? #{e\ 1704}#)
                 (let ((#{n\ 1722}#
                         (#{id-var-name\ 364}# #{e\ 1704}# #{w\ 1706}#)))
                   (let ((#{b\ 1724}#
                           (#{lookup\ 301}#
                             #{n\ 1722}#
                             #{r\ 1705}#
                             #{mod\ 1709}#)))
                     (let ((#{type\ 1726}#
                             (#{binding-type\ 290}# #{b\ 1724}#)))
                       (if (memv #{type\ 1726}# (quote (lexical)))
                         (values
                           #{type\ 1726}#
                           (#{binding-value\ 292}# #{b\ 1724}#)
                           #{e\ 1704}#
                           #{w\ 1706}#
                           #{s\ 1707}#
                           #{mod\ 1709}#)
                         (if (memv #{type\ 1726}# (quote (global)))
                           (values
                             #{type\ 1726}#
                             #{n\ 1722}#
                             #{e\ 1704}#
                             #{w\ 1706}#
                             #{s\ 1707}#
                             #{mod\ 1709}#)
                           (if (memv #{type\ 1726}# (quote (macro)))
                             (if #{for-car?\ 1710}#
                               (values
                                 #{type\ 1726}#
                                 (#{binding-value\ 292}# #{b\ 1724}#)
                                 #{e\ 1704}#
                                 #{w\ 1706}#
                                 #{s\ 1707}#
                                 #{mod\ 1709}#)
                               (#{syntax-type\ 388}#
                                 (#{chi-macro\ 398}#
                                   (#{binding-value\ 292}# #{b\ 1724}#)
                                   #{e\ 1704}#
                                   #{r\ 1705}#
                                   #{w\ 1706}#
                                   #{rib\ 1708}#
                                   #{mod\ 1709}#)
                                 #{r\ 1705}#
                                 '(())
                                 #{s\ 1707}#
                                 #{rib\ 1708}#
                                 #{mod\ 1709}#
                                 #f))
                             (values
                               #{type\ 1726}#
                               (#{binding-value\ 292}# #{b\ 1724}#)
                               #{e\ 1704}#
                               #{w\ 1706}#
                               #{s\ 1707}#
                               #{mod\ 1709}#)))))))
                 (if (pair? #{e\ 1704}#)
                   (let ((#{first\ 1735}# (car #{e\ 1704}#)))
                     (call-with-values
                       (lambda ()
                         (#{syntax-type\ 388}#
                           #{first\ 1735}#
                           #{r\ 1705}#
                           #{w\ 1706}#
                           #{s\ 1707}#
                           #{rib\ 1708}#
                           #{mod\ 1709}#
                           #t))
                       (lambda (#{ftype\ 1736}#
                                #{fval\ 1737}#
                                #{fe\ 1738}#
                                #{fw\ 1739}#
                                #{fs\ 1740}#
                                #{fmod\ 1741}#)
                         (if (memv #{ftype\ 1736}# (quote (lexical)))
                           (values
                             'lexical-call
                             #{fval\ 1737}#
                             #{e\ 1704}#
                             #{w\ 1706}#
                             #{s\ 1707}#
                             #{mod\ 1709}#)
                           (if (memv #{ftype\ 1736}# (quote (global)))
                             (values
                               'global-call
                               (#{make-syntax-object\ 269}#
                                 #{fval\ 1737}#
                                 #{w\ 1706}#
                                 #{fmod\ 1741}#)
                               #{e\ 1704}#
                               #{w\ 1706}#
                               #{s\ 1707}#
                               #{mod\ 1709}#)
                             (if (memv #{ftype\ 1736}# (quote (macro)))
                               (#{syntax-type\ 388}#
                                 (#{chi-macro\ 398}#
                                   #{fval\ 1737}#
                                   #{e\ 1704}#
                                   #{r\ 1705}#
                                   #{w\ 1706}#
                                   #{rib\ 1708}#
                                   #{mod\ 1709}#)
                                 #{r\ 1705}#
                                 '(())
                                 #{s\ 1707}#
                                 #{rib\ 1708}#
                                 #{mod\ 1709}#
                                 #{for-car?\ 1710}#)
                               (if (memv #{ftype\ 1736}# (quote (module-ref)))
                                 (call-with-values
                                   (lambda ()
                                     (#{fval\ 1737}#
                                       #{e\ 1704}#
                                       #{r\ 1705}#
                                       #{w\ 1706}#))
                                   (lambda (#{e\ 1753}#
                                            #{r\ 1754}#
                                            #{w\ 1755}#
                                            #{s\ 1756}#
                                            #{mod\ 1757}#)
                                     (#{syntax-type\ 388}#
                                       #{e\ 1753}#
                                       #{r\ 1754}#
                                       #{w\ 1755}#
                                       #{s\ 1756}#
                                       #{rib\ 1708}#
                                       #{mod\ 1757}#
                                       #{for-car?\ 1710}#)))
                                 (if (memv #{ftype\ 1736}# (quote (core)))
                                   (values
                                     'core-form
                                     #{fval\ 1737}#
                                     #{e\ 1704}#
                                     #{w\ 1706}#
                                     #{s\ 1707}#
                                     #{mod\ 1709}#)
                                   (if (memv #{ftype\ 1736}#
                                             '(local-syntax))
                                     (values
                                       'local-syntax-form
                                       #{fval\ 1737}#
                                       #{e\ 1704}#
                                       #{w\ 1706}#
                                       #{s\ 1707}#
                                       #{mod\ 1709}#)
                                     (if (memv #{ftype\ 1736}# (quote (begin)))
                                       (values
                                         'begin-form
                                         #f
                                         #{e\ 1704}#
                                         #{w\ 1706}#
                                         #{s\ 1707}#
                                         #{mod\ 1709}#)
                                       (if (memv #{ftype\ 1736}#
                                                 '(eval-when))
                                         (values
                                           'eval-when-form
                                           #f
                                           #{e\ 1704}#
                                           #{w\ 1706}#
                                           #{s\ 1707}#
                                           #{mod\ 1709}#)
                                         (if (memv #{ftype\ 1736}#
                                                   '(define))
                                           ((lambda (#{tmp\ 1768}#)
                                              ((lambda (#{tmp\ 1769}#)
                                                 (if (if #{tmp\ 1769}#
                                                       (apply (lambda (#{_\ 1773}#
                                                                       #{name\ 1774}#
                                                                       #{val\ 1775}#)
                                                                (#{id?\ 307}#
                                                                  #{name\ 1774}#))
                                                              #{tmp\ 1769}#)
                                                       #f)
                                                   (apply (lambda (#{_\ 1779}#
                                                                   #{name\ 1780}#
                                                                   #{val\ 1781}#)
                                                            (values
                                                              'define-form
                                                              #{name\ 1780}#
                                                              #{val\ 1781}#
                                                              #{w\ 1706}#
                                                              #{s\ 1707}#
                                                              #{mod\ 1709}#))
                                                          #{tmp\ 1769}#)
                                                   ((lambda (#{tmp\ 1782}#)
                                                      (if (if #{tmp\ 1782}#
                                                            (apply (lambda (#{_\ 1788}#
                                                                            #{name\ 1789}#
                                                                            #{args\ 1790}#
                                                                            #{e1\ 1791}#
                                                                            #{e2\ 1792}#)
                                                                     (if (#{id?\ 307}#
                                                                           #{name\ 1789}#)
                                                                       (#{valid-bound-ids?\ 370}#
                                                                         (#{lambda-var-list\ 422}#
                                                                           #{args\ 1790}#))
                                                                       #f))
                                                                   #{tmp\ 1782}#)
                                                            #f)
                                                        (apply (lambda (#{_\ 1800}#
                                                                        #{name\ 1801}#
                                                                        #{args\ 1802}#
                                                                        #{e1\ 1803}#
                                                                        #{e2\ 1804}#)
                                                                 (values
                                                                   'define-form
                                                                   (#{wrap\ 376}#
                                                                     #{name\ 1801}#
                                                                     #{w\ 1706}#
                                                                     #{mod\ 1709}#)
                                                                   (#{decorate-source\ 225}#
                                                                     (cons '#(syntax-object
                                                                              lambda
                                                                              ((top)
                                                                               #(ribcage
                                                                                 #(_
                                                                                   name
                                                                                   args
                                                                                   e1
                                                                                   e2)
                                                                                 #((top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top))
                                                                                 #("i1795"
                                                                                   "i1796"
                                                                                   "i1797"
                                                                                   "i1798"
                                                                                   "i1799"))
                                                                               #(ribcage
                                                                                 ()
                                                                                 ()
                                                                                 ())
                                                                               #(ribcage
                                                                                 ()
                                                                                 ()
                                                                                 ())
                                                                               #(ribcage
                                                                                 #(ftype
                                                                                   fval
                                                                                   fe
                                                                                   fw
                                                                                   fs
                                                                                   fmod)
                                                                                 #((top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top))
                                                                                 #("i1742"
                                                                                   "i1743"
                                                                                   "i1744"
                                                                                   "i1745"
                                                                                   "i1746"
                                                                                   "i1747"))
                                                                               #(ribcage
                                                                                 ()
                                                                                 ()
                                                                                 ())
                                                                               #(ribcage
                                                                                 #(first)
                                                                                 #((top))
                                                                                 #("i1734"))
                                                                               #(ribcage
                                                                                 ()
                                                                                 ()
                                                                                 ())
                                                                               #(ribcage
                                                                                 ()
                                                                                 ()
                                                                                 ())
                                                                               #(ribcage
                                                                                 ()
                                                                                 ()
                                                                                 ())
                                                                               #(ribcage
                                                                                 #(e
                                                                                   r
                                                                                   w
                                                                                   s
                                                                                   rib
                                                                                   mod
                                                                                   for-car?)
                                                                                 #((top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top))
                                                                                 #("i1711"
                                                                                   "i1712"
                                                                                   "i1713"
                                                                                   "i1714"
                                                                                   "i1715"
                                                                                   "i1716"
                                                                                   "i1717"))
                                                                               #(ribcage
                                                                                 (lambda-var-list
                                                                                   gen-var
                                                                                   strip
                                                                                   chi-lambda-case
                                                                                   lambda*-formals
                                                                                   chi-simple-lambda
                                                                                   lambda-formals
                                                                                   ellipsis?
                                                                                   chi-void
                                                                                   eval-local-transformer
                                                                                   chi-local-syntax
                                                                                   chi-body
                                                                                   chi-macro
                                                                                   chi-application
                                                                                   chi-expr
                                                                                   chi
                                                                                   chi-top
                                                                                   syntax-type
                                                                                   chi-when-list
                                                                                   chi-install-global
                                                                                   chi-top-sequence
                                                                                   chi-sequence
                                                                                   source-wrap
                                                                                   wrap
                                                                                   bound-id-member?
                                                                                   distinct-bound-ids?
                                                                                   valid-bound-ids?
                                                                                   bound-id=?
                                                                                   free-id=?
                                                                                   id-var-name
                                                                                   same-marks?
                                                                                   join-marks
                                                                                   join-wraps
                                                                                   smart-append
                                                                                   make-binding-wrap
                                                                                   extend-ribcage!
                                                                                   make-empty-ribcage
                                                                                   new-mark
                                                                                   anti-mark
                                                                                   the-anti-mark
                                                                                   top-marked?
                                                                                   top-wrap
                                                                                   empty-wrap
                                                                                   set-ribcage-labels!
                                                                                   set-ribcage-marks!
                                                                                   set-ribcage-symnames!
                                                                                   ribcage-labels
                                                                                   ribcage-marks
                                                                                   ribcage-symnames
                                                                                   ribcage?
                                                                                   make-ribcage
                                                                                   gen-labels
                                                                                   gen-label
                                                                                   make-rename
                                                                                   rename-marks
                                                                                   rename-new
                                                                                   rename-old
                                                                                   subst-rename?
                                                                                   wrap-subst
                                                                                   wrap-marks
                                                                                   make-wrap
                                                                                   id-sym-name&marks
                                                                                   id-sym-name
                                                                                   id?
                                                                                   nonsymbol-id?
                                                                                   global-extend
                                                                                   lookup
                                                                                   macros-only-env
                                                                                   extend-var-env
                                                                                   extend-env
                                                                                   null-env
                                                                                   binding-value
                                                                                   binding-type
                                                                                   make-binding
                                                                                   arg-check
                                                                                   source-annotation
                                                                                   no-source
                                                                                   set-syntax-object-module!
                                                                                   set-syntax-object-wrap!
                                                                                   set-syntax-object-expression!
                                                                                   syntax-object-module
                                                                                   syntax-object-wrap
                                                                                   syntax-object-expression
                                                                                   syntax-object?
                                                                                   make-syntax-object
                                                                                   build-lexical-var
                                                                                   build-letrec
                                                                                   build-named-let
                                                                                   build-let
                                                                                   build-sequence
                                                                                   build-data
                                                                                   build-primref
                                                                                   build-lambda-case
                                                                                   build-case-lambda
                                                                                   build-simple-lambda
                                                                                   build-global-definition
                                                                                   maybe-name-value!
                                                                                   build-global-assignment
                                                                                   build-global-reference
                                                                                   analyze-variable
                                                                                   build-lexical-assignment
                                                                                   build-lexical-reference
                                                                                   build-dynlet
                                                                                   build-conditional
                                                                                   build-application
                                                                                   build-void
                                                                                   decorate-source
                                                                                   get-global-definition-hook
                                                                                   put-global-definition-hook
                                                                                   gensym-hook
                                                                                   local-eval-hook
                                                                                   top-level-eval-hook
                                                                                   fx<
                                                                                   fx=
                                                                                   fx-
                                                                                   fx+
                                                                                   make-dynlet
                                                                                   make-letrec
                                                                                   make-let
                                                                                   make-lambda-case
                                                                                   make-lambda
                                                                                   make-sequence
                                                                                   make-application
                                                                                   make-conditional
                                                                                   make-toplevel-define
                                                                                   make-toplevel-set
                                                                                   make-toplevel-ref
                                                                                   make-module-set
                                                                                   make-module-ref
                                                                                   make-lexical-set
                                                                                   make-lexical-ref
                                                                                   make-primitive-ref
                                                                                   make-const
                                                                                   make-void)
                                                                                 ((top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top))
                                                                                 ("i421"
                                                                                  "i419"
                                                                                  "i417"
                                                                                  "i415"
                                                                                  "i413"
                                                                                  "i411"
                                                                                  "i409"
                                                                                  "i407"
                                                                                  "i405"
                                                                                  "i403"
                                                                                  "i401"
                                                                                  "i399"
                                                                                  "i397"
                                                                                  "i395"
                                                                                  "i393"
                                                                                  "i391"
                                                                                  "i389"
                                                                                  "i387"
                                                                                  "i385"
                                                                                  "i383"
                                                                                  "i381"
                                                                                  "i379"
                                                                                  "i377"
                                                                                  "i375"
                                                                                  "i373"
                                                                                  "i371"
                                                                                  "i369"
                                                                                  "i367"
                                                                                  "i365"
                                                                                  "i363"
                                                                                  "i361"
                                                                                  "i359"
                                                                                  "i357"
                                                                                  "i355"
                                                                                  "i353"
                                                                                  "i351"
                                                                                  "i350"
                                                                                  "i349"
                                                                                  "i347"
                                                                                  "i346"
                                                                                  "i345"
                                                                                  "i344"
                                                                                  "i343"
                                                                                  "i341"
                                                                                  "i339"
                                                                                  "i337"
                                                                                  "i335"
                                                                                  "i333"
                                                                                  "i331"
                                                                                  "i329"
                                                                                  "i327"
                                                                                  "i324"
                                                                                  "i322"
                                                                                  "i321"
                                                                                  "i320"
                                                                                  "i319"
                                                                                  "i318"
                                                                                  "i317"
                                                                                  "i315"
                                                                                  "i313"
                                                                                  "i311"
                                                                                  "i309"
                                                                                  "i308"
                                                                                  "i306"
                                                                                  "i304"
                                                                                  "i302"
                                                                                  "i300"
                                                                                  "i298"
                                                                                  "i296"
                                                                                  "i294"
                                                                                  "i293"
                                                                                  "i291"
                                                                                  "i289"
                                                                                  "i288"
                                                                                  "i287"
                                                                                  "i285"
                                                                                  "i284"
                                                                                  "i282"
                                                                                  "i280"
                                                                                  "i278"
                                                                                  "i276"
                                                                                  "i274"
                                                                                  "i272"
                                                                                  "i270"
                                                                                  "i268"
                                                                                  "i266"
                                                                                  "i264"
                                                                                  "i262"
                                                                                  "i260"
                                                                                  "i258"
                                                                                  "i256"
                                                                                  "i254"
                                                                                  "i252"
                                                                                  "i250"
                                                                                  "i248"
                                                                                  "i246"
                                                                                  "i244"
                                                                                  "i242"
                                                                                  "i240"
                                                                                  "i238"
                                                                                  "i236"
                                                                                  "i234"
                                                                                  "i232"
                                                                                  "i230"
                                                                                  "i228"
                                                                                  "i226"
                                                                                  "i224"
                                                                                  "i222"
                                                                                  "i220"
                                                                                  "i219"
                                                                                  "i217"
                                                                                  "i215"
                                                                                  "i213"
                                                                                  "i211"
                                                                                  "i209"
                                                                                  "i207"
                                                                                  "i205"
                                                                                  "i203"
                                                                                  "i201"
                                                                                  "i199"
                                                                                  "i197"
                                                                                  "i195"
                                                                                  "i193"
                                                                                  "i191"
                                                                                  "i189"
                                                                                  "i187"
                                                                                  "i185"
                                                                                  "i183"
                                                                                  "i181"
                                                                                  "i179"
                                                                                  "i177"
                                                                                  "i175"
                                                                                  "i173"
                                                                                  "i171"))
                                                                               #(ribcage
                                                                                 (define-structure
                                                                                   define-expansion-constructors
                                                                                   and-map*)
                                                                                 ((top)
                                                                                  (top)
                                                                                  (top))
                                                                                 ("i22"
                                                                                  "i21"
                                                                                  "i19")))
                                                                              (hygiene
                                                                                guile))
                                                                           (#{wrap\ 376}#
                                                                             (cons #{args\ 1802}#
                                                                                   (cons #{e1\ 1803}#
                                                                                         #{e2\ 1804}#))
                                                                             #{w\ 1706}#
                                                                             #{mod\ 1709}#))
                                                                     #{s\ 1707}#)
                                                                   '(())
                                                                   #{s\ 1707}#
                                                                   #{mod\ 1709}#))
                                                               #{tmp\ 1782}#)
                                                        ((lambda (#{tmp\ 1807}#)
                                                           (if (if #{tmp\ 1807}#
                                                                 (apply (lambda (#{_\ 1810}#
                                                                                 #{name\ 1811}#)
                                                                          (#{id?\ 307}#
                                                                            #{name\ 1811}#))
                                                                        #{tmp\ 1807}#)
                                                                 #f)
                                                             (apply (lambda (#{_\ 1814}#
                                                                             #{name\ 1815}#)
                                                                      (values
                                                                        'define-form
                                                                        (#{wrap\ 376}#
                                                                          #{name\ 1815}#
                                                                          #{w\ 1706}#
                                                                          #{mod\ 1709}#)
                                                                        '(#(syntax-object
                                                                            if
                                                                            ((top)
                                                                             #(ribcage
                                                                               #(_
                                                                                 name)
                                                                               #((top)
                                                                                 (top))
                                                                               #("i1812"
                                                                                 "i1813"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(ftype
                                                                                 fval
                                                                                 fe
                                                                                 fw
                                                                                 fs
                                                                                 fmod)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i1742"
                                                                                 "i1743"
                                                                                 "i1744"
                                                                                 "i1745"
                                                                                 "i1746"
                                                                                 "i1747"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(first)
                                                                               #((top))
                                                                               #("i1734"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(e
                                                                                 r
                                                                                 w
                                                                                 s
                                                                                 rib
                                                                                 mod
                                                                                 for-car?)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i1711"
                                                                                 "i1712"
                                                                                 "i1713"
                                                                                 "i1714"
                                                                                 "i1715"
                                                                                 "i1716"
                                                                                 "i1717"))
                                                                             #(ribcage
                                                                               (lambda-var-list
                                                                                 gen-var
                                                                                 strip
                                                                                 chi-lambda-case
                                                                                 lambda*-formals
                                                                                 chi-simple-lambda
                                                                                 lambda-formals
                                                                                 ellipsis?
                                                                                 chi-void
                                                                                 eval-local-transformer
                                                                                 chi-local-syntax
                                                                                 chi-body
                                                                                 chi-macro
                                                                                 chi-application
                                                                                 chi-expr
                                                                                 chi
                                                                                 chi-top
                                                                                 syntax-type
                                                                                 chi-when-list
                                                                                 chi-install-global
                                                                                 chi-top-sequence
                                                                                 chi-sequence
                                                                                 source-wrap
                                                                                 wrap
                                                                                 bound-id-member?
                                                                                 distinct-bound-ids?
                                                                                 valid-bound-ids?
                                                                                 bound-id=?
                                                                                 free-id=?
                                                                                 id-var-name
                                                                                 same-marks?
                                                                                 join-marks
                                                                                 join-wraps
                                                                                 smart-append
                                                                                 make-binding-wrap
                                                                                 extend-ribcage!
                                                                                 make-empty-ribcage
                                                                                 new-mark
                                                                                 anti-mark
                                                                                 the-anti-mark
                                                                                 top-marked?
                                                                                 top-wrap
                                                                                 empty-wrap
                                                                                 set-ribcage-labels!
                                                                                 set-ribcage-marks!
                                                                                 set-ribcage-symnames!
                                                                                 ribcage-labels
                                                                                 ribcage-marks
                                                                                 ribcage-symnames
                                                                                 ribcage?
                                                                                 make-ribcage
                                                                                 gen-labels
                                                                                 gen-label
                                                                                 make-rename
                                                                                 rename-marks
                                                                                 rename-new
                                                                                 rename-old
                                                                                 subst-rename?
                                                                                 wrap-subst
                                                                                 wrap-marks
                                                                                 make-wrap
                                                                                 id-sym-name&marks
                                                                                 id-sym-name
                                                                                 id?
                                                                                 nonsymbol-id?
                                                                                 global-extend
                                                                                 lookup
                                                                                 macros-only-env
                                                                                 extend-var-env
                                                                                 extend-env
                                                                                 null-env
                                                                                 binding-value
                                                                                 binding-type
                                                                                 make-binding
                                                                                 arg-check
                                                                                 source-annotation
                                                                                 no-source
                                                                                 set-syntax-object-module!
                                                                                 set-syntax-object-wrap!
                                                                                 set-syntax-object-expression!
                                                                                 syntax-object-module
                                                                                 syntax-object-wrap
                                                                                 syntax-object-expression
                                                                                 syntax-object?
                                                                                 make-syntax-object
                                                                                 build-lexical-var
                                                                                 build-letrec
                                                                                 build-named-let
                                                                                 build-let
                                                                                 build-sequence
                                                                                 build-data
                                                                                 build-primref
                                                                                 build-lambda-case
                                                                                 build-case-lambda
                                                                                 build-simple-lambda
                                                                                 build-global-definition
                                                                                 maybe-name-value!
                                                                                 build-global-assignment
                                                                                 build-global-reference
                                                                                 analyze-variable
                                                                                 build-lexical-assignment
                                                                                 build-lexical-reference
                                                                                 build-dynlet
                                                                                 build-conditional
                                                                                 build-application
                                                                                 build-void
                                                                                 decorate-source
                                                                                 get-global-definition-hook
                                                                                 put-global-definition-hook
                                                                                 gensym-hook
                                                                                 local-eval-hook
                                                                                 top-level-eval-hook
                                                                                 fx<
                                                                                 fx=
                                                                                 fx-
                                                                                 fx+
                                                                                 make-dynlet
                                                                                 make-letrec
                                                                                 make-let
                                                                                 make-lambda-case
                                                                                 make-lambda
                                                                                 make-sequence
                                                                                 make-application
                                                                                 make-conditional
                                                                                 make-toplevel-define
                                                                                 make-toplevel-set
                                                                                 make-toplevel-ref
                                                                                 make-module-set
                                                                                 make-module-ref
                                                                                 make-lexical-set
                                                                                 make-lexical-ref
                                                                                 make-primitive-ref
                                                                                 make-const
                                                                                 make-void)
                                                                               ((top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top))
                                                                               ("i421"
                                                                                "i419"
                                                                                "i417"
                                                                                "i415"
                                                                                "i413"
                                                                                "i411"
                                                                                "i409"
                                                                                "i407"
                                                                                "i405"
                                                                                "i403"
                                                                                "i401"
                                                                                "i399"
                                                                                "i397"
                                                                                "i395"
                                                                                "i393"
                                                                                "i391"
                                                                                "i389"
                                                                                "i387"
                                                                                "i385"
                                                                                "i383"
                                                                                "i381"
                                                                                "i379"
                                                                                "i377"
                                                                                "i375"
                                                                                "i373"
                                                                                "i371"
                                                                                "i369"
                                                                                "i367"
                                                                                "i365"
                                                                                "i363"
                                                                                "i361"
                                                                                "i359"
                                                                                "i357"
                                                                                "i355"
                                                                                "i353"
                                                                                "i351"
                                                                                "i350"
                                                                                "i349"
                                                                                "i347"
                                                                                "i346"
                                                                                "i345"
                                                                                "i344"
                                                                                "i343"
                                                                                "i341"
                                                                                "i339"
                                                                                "i337"
                                                                                "i335"
                                                                                "i333"
                                                                                "i331"
                                                                                "i329"
                                                                                "i327"
                                                                                "i324"
                                                                                "i322"
                                                                                "i321"
                                                                                "i320"
                                                                                "i319"
                                                                                "i318"
                                                                                "i317"
                                                                                "i315"
                                                                                "i313"
                                                                                "i311"
                                                                                "i309"
                                                                                "i308"
                                                                                "i306"
                                                                                "i304"
                                                                                "i302"
                                                                                "i300"
                                                                                "i298"
                                                                                "i296"
                                                                                "i294"
                                                                                "i293"
                                                                                "i291"
                                                                                "i289"
                                                                                "i288"
                                                                                "i287"
                                                                                "i285"
                                                                                "i284"
                                                                                "i282"
                                                                                "i280"
                                                                                "i278"
                                                                                "i276"
                                                                                "i274"
                                                                                "i272"
                                                                                "i270"
                                                                                "i268"
                                                                                "i266"
                                                                                "i264"
                                                                                "i262"
                                                                                "i260"
                                                                                "i258"
                                                                                "i256"
                                                                                "i254"
                                                                                "i252"
                                                                                "i250"
                                                                                "i248"
                                                                                "i246"
                                                                                "i244"
                                                                                "i242"
                                                                                "i240"
                                                                                "i238"
                                                                                "i236"
                                                                                "i234"
                                                                                "i232"
                                                                                "i230"
                                                                                "i228"
                                                                                "i226"
                                                                                "i224"
                                                                                "i222"
                                                                                "i220"
                                                                                "i219"
                                                                                "i217"
                                                                                "i215"
                                                                                "i213"
                                                                                "i211"
                                                                                "i209"
                                                                                "i207"
                                                                                "i205"
                                                                                "i203"
                                                                                "i201"
                                                                                "i199"
                                                                                "i197"
                                                                                "i195"
                                                                                "i193"
                                                                                "i191"
                                                                                "i189"
                                                                                "i187"
                                                                                "i185"
                                                                                "i183"
                                                                                "i181"
                                                                                "i179"
                                                                                "i177"
                                                                                "i175"
                                                                                "i173"
                                                                                "i171"))
                                                                             #(ribcage
                                                                               (define-structure
                                                                                 define-expansion-constructors
                                                                                 and-map*)
                                                                               ((top)
                                                                                (top)
                                                                                (top))
                                                                               ("i22"
                                                                                "i21"
                                                                                "i19")))
                                                                            (hygiene
                                                                              guile))
                                                                          #(syntax-object
                                                                            #f
                                                                            ((top)
                                                                             #(ribcage
                                                                               #(_
                                                                                 name)
                                                                               #((top)
                                                                                 (top))
                                                                               #("i1812"
                                                                                 "i1813"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(ftype
                                                                                 fval
                                                                                 fe
                                                                                 fw
                                                                                 fs
                                                                                 fmod)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i1742"
                                                                                 "i1743"
                                                                                 "i1744"
                                                                                 "i1745"
                                                                                 "i1746"
                                                                                 "i1747"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(first)
                                                                               #((top))
                                                                               #("i1734"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(e
                                                                                 r
                                                                                 w
                                                                                 s
                                                                                 rib
                                                                                 mod
                                                                                 for-car?)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i1711"
                                                                                 "i1712"
                                                                                 "i1713"
                                                                                 "i1714"
                                                                                 "i1715"
                                                                                 "i1716"
                                                                                 "i1717"))
                                                                             #(ribcage
                                                                               (lambda-var-list
                                                                                 gen-var
                                                                                 strip
                                                                                 chi-lambda-case
                                                                                 lambda*-formals
                                                                                 chi-simple-lambda
                                                                                 lambda-formals
                                                                                 ellipsis?
                                                                                 chi-void
                                                                                 eval-local-transformer
                                                                                 chi-local-syntax
                                                                                 chi-body
                                                                                 chi-macro
                                                                                 chi-application
                                                                                 chi-expr
                                                                                 chi
                                                                                 chi-top
                                                                                 syntax-type
                                                                                 chi-when-list
                                                                                 chi-install-global
                                                                                 chi-top-sequence
                                                                                 chi-sequence
                                                                                 source-wrap
                                                                                 wrap
                                                                                 bound-id-member?
                                                                                 distinct-bound-ids?
                                                                                 valid-bound-ids?
                                                                                 bound-id=?
                                                                                 free-id=?
                                                                                 id-var-name
                                                                                 same-marks?
                                                                                 join-marks
                                                                                 join-wraps
                                                                                 smart-append
                                                                                 make-binding-wrap
                                                                                 extend-ribcage!
                                                                                 make-empty-ribcage
                                                                                 new-mark
                                                                                 anti-mark
                                                                                 the-anti-mark
                                                                                 top-marked?
                                                                                 top-wrap
                                                                                 empty-wrap
                                                                                 set-ribcage-labels!
                                                                                 set-ribcage-marks!
                                                                                 set-ribcage-symnames!
                                                                                 ribcage-labels
                                                                                 ribcage-marks
                                                                                 ribcage-symnames
                                                                                 ribcage?
                                                                                 make-ribcage
                                                                                 gen-labels
                                                                                 gen-label
                                                                                 make-rename
                                                                                 rename-marks
                                                                                 rename-new
                                                                                 rename-old
                                                                                 subst-rename?
                                                                                 wrap-subst
                                                                                 wrap-marks
                                                                                 make-wrap
                                                                                 id-sym-name&marks
                                                                                 id-sym-name
                                                                                 id?
                                                                                 nonsymbol-id?
                                                                                 global-extend
                                                                                 lookup
                                                                                 macros-only-env
                                                                                 extend-var-env
                                                                                 extend-env
                                                                                 null-env
                                                                                 binding-value
                                                                                 binding-type
                                                                                 make-binding
                                                                                 arg-check
                                                                                 source-annotation
                                                                                 no-source
                                                                                 set-syntax-object-module!
                                                                                 set-syntax-object-wrap!
                                                                                 set-syntax-object-expression!
                                                                                 syntax-object-module
                                                                                 syntax-object-wrap
                                                                                 syntax-object-expression
                                                                                 syntax-object?
                                                                                 make-syntax-object
                                                                                 build-lexical-var
                                                                                 build-letrec
                                                                                 build-named-let
                                                                                 build-let
                                                                                 build-sequence
                                                                                 build-data
                                                                                 build-primref
                                                                                 build-lambda-case
                                                                                 build-case-lambda
                                                                                 build-simple-lambda
                                                                                 build-global-definition
                                                                                 maybe-name-value!
                                                                                 build-global-assignment
                                                                                 build-global-reference
                                                                                 analyze-variable
                                                                                 build-lexical-assignment
                                                                                 build-lexical-reference
                                                                                 build-dynlet
                                                                                 build-conditional
                                                                                 build-application
                                                                                 build-void
                                                                                 decorate-source
                                                                                 get-global-definition-hook
                                                                                 put-global-definition-hook
                                                                                 gensym-hook
                                                                                 local-eval-hook
                                                                                 top-level-eval-hook
                                                                                 fx<
                                                                                 fx=
                                                                                 fx-
                                                                                 fx+
                                                                                 make-dynlet
                                                                                 make-letrec
                                                                                 make-let
                                                                                 make-lambda-case
                                                                                 make-lambda
                                                                                 make-sequence
                                                                                 make-application
                                                                                 make-conditional
                                                                                 make-toplevel-define
                                                                                 make-toplevel-set
                                                                                 make-toplevel-ref
                                                                                 make-module-set
                                                                                 make-module-ref
                                                                                 make-lexical-set
                                                                                 make-lexical-ref
                                                                                 make-primitive-ref
                                                                                 make-const
                                                                                 make-void)
                                                                               ((top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top))
                                                                               ("i421"
                                                                                "i419"
                                                                                "i417"
                                                                                "i415"
                                                                                "i413"
                                                                                "i411"
                                                                                "i409"
                                                                                "i407"
                                                                                "i405"
                                                                                "i403"
                                                                                "i401"
                                                                                "i399"
                                                                                "i397"
                                                                                "i395"
                                                                                "i393"
                                                                                "i391"
                                                                                "i389"
                                                                                "i387"
                                                                                "i385"
                                                                                "i383"
                                                                                "i381"
                                                                                "i379"
                                                                                "i377"
                                                                                "i375"
                                                                                "i373"
                                                                                "i371"
                                                                                "i369"
                                                                                "i367"
                                                                                "i365"
                                                                                "i363"
                                                                                "i361"
                                                                                "i359"
                                                                                "i357"
                                                                                "i355"
                                                                                "i353"
                                                                                "i351"
                                                                                "i350"
                                                                                "i349"
                                                                                "i347"
                                                                                "i346"
                                                                                "i345"
                                                                                "i344"
                                                                                "i343"
                                                                                "i341"
                                                                                "i339"
                                                                                "i337"
                                                                                "i335"
                                                                                "i333"
                                                                                "i331"
                                                                                "i329"
                                                                                "i327"
                                                                                "i324"
                                                                                "i322"
                                                                                "i321"
                                                                                "i320"
                                                                                "i319"
                                                                                "i318"
                                                                                "i317"
                                                                                "i315"
                                                                                "i313"
                                                                                "i311"
                                                                                "i309"
                                                                                "i308"
                                                                                "i306"
                                                                                "i304"
                                                                                "i302"
                                                                                "i300"
                                                                                "i298"
                                                                                "i296"
                                                                                "i294"
                                                                                "i293"
                                                                                "i291"
                                                                                "i289"
                                                                                "i288"
                                                                                "i287"
                                                                                "i285"
                                                                                "i284"
                                                                                "i282"
                                                                                "i280"
                                                                                "i278"
                                                                                "i276"
                                                                                "i274"
                                                                                "i272"
                                                                                "i270"
                                                                                "i268"
                                                                                "i266"
                                                                                "i264"
                                                                                "i262"
                                                                                "i260"
                                                                                "i258"
                                                                                "i256"
                                                                                "i254"
                                                                                "i252"
                                                                                "i250"
                                                                                "i248"
                                                                                "i246"
                                                                                "i244"
                                                                                "i242"
                                                                                "i240"
                                                                                "i238"
                                                                                "i236"
                                                                                "i234"
                                                                                "i232"
                                                                                "i230"
                                                                                "i228"
                                                                                "i226"
                                                                                "i224"
                                                                                "i222"
                                                                                "i220"
                                                                                "i219"
                                                                                "i217"
                                                                                "i215"
                                                                                "i213"
                                                                                "i211"
                                                                                "i209"
                                                                                "i207"
                                                                                "i205"
                                                                                "i203"
                                                                                "i201"
                                                                                "i199"
                                                                                "i197"
                                                                                "i195"
                                                                                "i193"
                                                                                "i191"
                                                                                "i189"
                                                                                "i187"
                                                                                "i185"
                                                                                "i183"
                                                                                "i181"
                                                                                "i179"
                                                                                "i177"
                                                                                "i175"
                                                                                "i173"
                                                                                "i171"))
                                                                             #(ribcage
                                                                               (define-structure
                                                                                 define-expansion-constructors
                                                                                 and-map*)
                                                                               ((top)
                                                                                (top)
                                                                                (top))
                                                                               ("i22"
                                                                                "i21"
                                                                                "i19")))
                                                                            (hygiene
                                                                              guile))
                                                                          #(syntax-object
                                                                            #f
                                                                            ((top)
                                                                             #(ribcage
                                                                               #(_
                                                                                 name)
                                                                               #((top)
                                                                                 (top))
                                                                               #("i1812"
                                                                                 "i1813"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(ftype
                                                                                 fval
                                                                                 fe
                                                                                 fw
                                                                                 fs
                                                                                 fmod)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i1742"
                                                                                 "i1743"
                                                                                 "i1744"
                                                                                 "i1745"
                                                                                 "i1746"
                                                                                 "i1747"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(first)
                                                                               #((top))
                                                                               #("i1734"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(e
                                                                                 r
                                                                                 w
                                                                                 s
                                                                                 rib
                                                                                 mod
                                                                                 for-car?)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i1711"
                                                                                 "i1712"
                                                                                 "i1713"
                                                                                 "i1714"
                                                                                 "i1715"
                                                                                 "i1716"
                                                                                 "i1717"))
                                                                             #(ribcage
                                                                               (lambda-var-list
                                                                                 gen-var
                                                                                 strip
                                                                                 chi-lambda-case
                                                                                 lambda*-formals
                                                                                 chi-simple-lambda
                                                                                 lambda-formals
                                                                                 ellipsis?
                                                                                 chi-void
                                                                                 eval-local-transformer
                                                                                 chi-local-syntax
                                                                                 chi-body
                                                                                 chi-macro
                                                                                 chi-application
                                                                                 chi-expr
                                                                                 chi
                                                                                 chi-top
                                                                                 syntax-type
                                                                                 chi-when-list
                                                                                 chi-install-global
                                                                                 chi-top-sequence
                                                                                 chi-sequence
                                                                                 source-wrap
                                                                                 wrap
                                                                                 bound-id-member?
                                                                                 distinct-bound-ids?
                                                                                 valid-bound-ids?
                                                                                 bound-id=?
                                                                                 free-id=?
                                                                                 id-var-name
                                                                                 same-marks?
                                                                                 join-marks
                                                                                 join-wraps
                                                                                 smart-append
                                                                                 make-binding-wrap
                                                                                 extend-ribcage!
                                                                                 make-empty-ribcage
                                                                                 new-mark
                                                                                 anti-mark
                                                                                 the-anti-mark
                                                                                 top-marked?
                                                                                 top-wrap
                                                                                 empty-wrap
                                                                                 set-ribcage-labels!
                                                                                 set-ribcage-marks!
                                                                                 set-ribcage-symnames!
                                                                                 ribcage-labels
                                                                                 ribcage-marks
                                                                                 ribcage-symnames
                                                                                 ribcage?
                                                                                 make-ribcage
                                                                                 gen-labels
                                                                                 gen-label
                                                                                 make-rename
                                                                                 rename-marks
                                                                                 rename-new
                                                                                 rename-old
                                                                                 subst-rename?
                                                                                 wrap-subst
                                                                                 wrap-marks
                                                                                 make-wrap
                                                                                 id-sym-name&marks
                                                                                 id-sym-name
                                                                                 id?
                                                                                 nonsymbol-id?
                                                                                 global-extend
                                                                                 lookup
                                                                                 macros-only-env
                                                                                 extend-var-env
                                                                                 extend-env
                                                                                 null-env
                                                                                 binding-value
                                                                                 binding-type
                                                                                 make-binding
                                                                                 arg-check
                                                                                 source-annotation
                                                                                 no-source
                                                                                 set-syntax-object-module!
                                                                                 set-syntax-object-wrap!
                                                                                 set-syntax-object-expression!
                                                                                 syntax-object-module
                                                                                 syntax-object-wrap
                                                                                 syntax-object-expression
                                                                                 syntax-object?
                                                                                 make-syntax-object
                                                                                 build-lexical-var
                                                                                 build-letrec
                                                                                 build-named-let
                                                                                 build-let
                                                                                 build-sequence
                                                                                 build-data
                                                                                 build-primref
                                                                                 build-lambda-case
                                                                                 build-case-lambda
                                                                                 build-simple-lambda
                                                                                 build-global-definition
                                                                                 maybe-name-value!
                                                                                 build-global-assignment
                                                                                 build-global-reference
                                                                                 analyze-variable
                                                                                 build-lexical-assignment
                                                                                 build-lexical-reference
                                                                                 build-dynlet
                                                                                 build-conditional
                                                                                 build-application
                                                                                 build-void
                                                                                 decorate-source
                                                                                 get-global-definition-hook
                                                                                 put-global-definition-hook
                                                                                 gensym-hook
                                                                                 local-eval-hook
                                                                                 top-level-eval-hook
                                                                                 fx<
                                                                                 fx=
                                                                                 fx-
                                                                                 fx+
                                                                                 make-dynlet
                                                                                 make-letrec
                                                                                 make-let
                                                                                 make-lambda-case
                                                                                 make-lambda
                                                                                 make-sequence
                                                                                 make-application
                                                                                 make-conditional
                                                                                 make-toplevel-define
                                                                                 make-toplevel-set
                                                                                 make-toplevel-ref
                                                                                 make-module-set
                                                                                 make-module-ref
                                                                                 make-lexical-set
                                                                                 make-lexical-ref
                                                                                 make-primitive-ref
                                                                                 make-const
                                                                                 make-void)
                                                                               ((top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top))
                                                                               ("i421"
                                                                                "i419"
                                                                                "i417"
                                                                                "i415"
                                                                                "i413"
                                                                                "i411"
                                                                                "i409"
                                                                                "i407"
                                                                                "i405"
                                                                                "i403"
                                                                                "i401"
                                                                                "i399"
                                                                                "i397"
                                                                                "i395"
                                                                                "i393"
                                                                                "i391"
                                                                                "i389"
                                                                                "i387"
                                                                                "i385"
                                                                                "i383"
                                                                                "i381"
                                                                                "i379"
                                                                                "i377"
                                                                                "i375"
                                                                                "i373"
                                                                                "i371"
                                                                                "i369"
                                                                                "i367"
                                                                                "i365"
                                                                                "i363"
                                                                                "i361"
                                                                                "i359"
                                                                                "i357"
                                                                                "i355"
                                                                                "i353"
                                                                                "i351"
                                                                                "i350"
                                                                                "i349"
                                                                                "i347"
                                                                                "i346"
                                                                                "i345"
                                                                                "i344"
                                                                                "i343"
                                                                                "i341"
                                                                                "i339"
                                                                                "i337"
                                                                                "i335"
                                                                                "i333"
                                                                                "i331"
                                                                                "i329"
                                                                                "i327"
                                                                                "i324"
                                                                                "i322"
                                                                                "i321"
                                                                                "i320"
                                                                                "i319"
                                                                                "i318"
                                                                                "i317"
                                                                                "i315"
                                                                                "i313"
                                                                                "i311"
                                                                                "i309"
                                                                                "i308"
                                                                                "i306"
                                                                                "i304"
                                                                                "i302"
                                                                                "i300"
                                                                                "i298"
                                                                                "i296"
                                                                                "i294"
                                                                                "i293"
                                                                                "i291"
                                                                                "i289"
                                                                                "i288"
                                                                                "i287"
                                                                                "i285"
                                                                                "i284"
                                                                                "i282"
                                                                                "i280"
                                                                                "i278"
                                                                                "i276"
                                                                                "i274"
                                                                                "i272"
                                                                                "i270"
                                                                                "i268"
                                                                                "i266"
                                                                                "i264"
                                                                                "i262"
                                                                                "i260"
                                                                                "i258"
                                                                                "i256"
                                                                                "i254"
                                                                                "i252"
                                                                                "i250"
                                                                                "i248"
                                                                                "i246"
                                                                                "i244"
                                                                                "i242"
                                                                                "i240"
                                                                                "i238"
                                                                                "i236"
                                                                                "i234"
                                                                                "i232"
                                                                                "i230"
                                                                                "i228"
                                                                                "i226"
                                                                                "i224"
                                                                                "i222"
                                                                                "i220"
                                                                                "i219"
                                                                                "i217"
                                                                                "i215"
                                                                                "i213"
                                                                                "i211"
                                                                                "i209"
                                                                                "i207"
                                                                                "i205"
                                                                                "i203"
                                                                                "i201"
                                                                                "i199"
                                                                                "i197"
                                                                                "i195"
                                                                                "i193"
                                                                                "i191"
                                                                                "i189"
                                                                                "i187"
                                                                                "i185"
                                                                                "i183"
                                                                                "i181"
                                                                                "i179"
                                                                                "i177"
                                                                                "i175"
                                                                                "i173"
                                                                                "i171"))
                                                                             #(ribcage
                                                                               (define-structure
                                                                                 define-expansion-constructors
                                                                                 and-map*)
                                                                               ((top)
                                                                                (top)
                                                                                (top))
                                                                               ("i22"
                                                                                "i21"
                                                                                "i19")))
                                                                            (hygiene
                                                                              guile)))
                                                                        '(())
                                                                        #{s\ 1707}#
                                                                        #{mod\ 1709}#))
                                                                    #{tmp\ 1807}#)
                                                             (syntax-violation
                                                               #f
                                                               "source expression failed to match any pattern"
                                                               #{tmp\ 1768}#)))
                                                         ($sc-dispatch
                                                           #{tmp\ 1768}#
                                                           '(any any)))))
                                                    ($sc-dispatch
                                                      #{tmp\ 1768}#
                                                      '(any (any . any)
                                                            any
                                                            .
                                                            each-any)))))
                                               ($sc-dispatch
                                                 #{tmp\ 1768}#
                                                 '(any any any))))
                                            #{e\ 1704}#)
                                           (if (memv #{ftype\ 1736}#
                                                     '(define-syntax))
                                             ((lambda (#{tmp\ 1818}#)
                                                ((lambda (#{tmp\ 1819}#)
                                                   (if (if #{tmp\ 1819}#
                                                         (apply (lambda (#{_\ 1823}#
                                                                         #{name\ 1824}#
                                                                         #{val\ 1825}#)
                                                                  (#{id?\ 307}#
                                                                    #{name\ 1824}#))
                                                                #{tmp\ 1819}#)
                                                         #f)
                                                     (apply (lambda (#{_\ 1829}#
                                                                     #{name\ 1830}#
                                                                     #{val\ 1831}#)
                                                              (values
                                                                'define-syntax-form
                                                                #{name\ 1830}#
                                                                #{val\ 1831}#
                                                                #{w\ 1706}#
                                                                #{s\ 1707}#
                                                                #{mod\ 1709}#))
                                                            #{tmp\ 1819}#)
                                                     (syntax-violation
                                                       #f
                                                       "source expression failed to match any pattern"
                                                       #{tmp\ 1818}#)))
                                                 ($sc-dispatch
                                                   #{tmp\ 1818}#
                                                   '(any any any))))
                                              #{e\ 1704}#)
                                             (values
                                               'call
                                               #f
                                               #{e\ 1704}#
                                               #{w\ 1706}#
                                               #{s\ 1707}#
                                               #{mod\ 1709}#))))))))))))))
                   (if (#{syntax-object?\ 271}# #{e\ 1704}#)
                     (#{syntax-type\ 388}#
                       (#{syntax-object-expression\ 273}# #{e\ 1704}#)
                       #{r\ 1705}#
                       (#{join-wraps\ 358}#
                         #{w\ 1706}#
                         (#{syntax-object-wrap\ 275}# #{e\ 1704}#))
                       #{s\ 1707}#
                       #{rib\ 1708}#
                       (let ((#{t\ 1837}#
                               (#{syntax-object-module\ 277}# #{e\ 1704}#)))
                         (if #{t\ 1837}# #{t\ 1837}# #{mod\ 1709}#))
                       #{for-car?\ 1710}#)
                     (if (self-evaluating? #{e\ 1704}#)
                       (values
                         'constant
                         #f
                         #{e\ 1704}#
                         #{w\ 1706}#
                         #{s\ 1707}#
                         #{mod\ 1709}#)
                       (values
                         'other
                         #f
                         #{e\ 1704}#
                         #{w\ 1706}#
                         #{s\ 1707}#
                         #{mod\ 1709}#)))))))
           (#{chi-when-list\ 386}#
             (lambda (#{e\ 1842}# #{when-list\ 1843}# #{w\ 1844}#)
               (letrec ((#{f\ 1851}#
                          (lambda (#{when-list\ 1852}# #{situations\ 1853}#)
                            (if (null? #{when-list\ 1852}#)
                              #{situations\ 1853}#
                              (#{f\ 1851}#
                                (cdr #{when-list\ 1852}#)
                                (cons (let ((#{x\ 1855}#
                                              (car #{when-list\ 1852}#)))
                                        (if (#{free-id=?\ 366}#
                                              #{x\ 1855}#
                                              '#(syntax-object
                                                 compile
                                                 ((top)
                                                  #(ribcage () () ())
                                                  #(ribcage () () ())
                                                  #(ribcage () () ())
                                                  #(ribcage
                                                    #(x)
                                                    #((top))
                                                    #("i1854"))
                                                  #(ribcage () () ())
                                                  #(ribcage
                                                    #(f when-list situations)
                                                    #((top) (top) (top))
                                                    #("i1848" "i1849" "i1850"))
                                                  #(ribcage () () ())
                                                  #(ribcage
                                                    #(e when-list w)
                                                    #((top) (top) (top))
                                                    #("i1845" "i1846" "i1847"))
                                                  #(ribcage
                                                    (lambda-var-list
                                                      gen-var
                                                      strip
                                                      chi-lambda-case
                                                      lambda*-formals
                                                      chi-simple-lambda
                                                      lambda-formals
                                                      ellipsis?
                                                      chi-void
                                                      eval-local-transformer
                                                      chi-local-syntax
                                                      chi-body
                                                      chi-macro
                                                      chi-application
                                                      chi-expr
                                                      chi
                                                      chi-top
                                                      syntax-type
                                                      chi-when-list
                                                      chi-install-global
                                                      chi-top-sequence
                                                      chi-sequence
                                                      source-wrap
                                                      wrap
                                                      bound-id-member?
                                                      distinct-bound-ids?
                                                      valid-bound-ids?
                                                      bound-id=?
                                                      free-id=?
                                                      id-var-name
                                                      same-marks?
                                                      join-marks
                                                      join-wraps
                                                      smart-append
                                                      make-binding-wrap
                                                      extend-ribcage!
                                                      make-empty-ribcage
                                                      new-mark
                                                      anti-mark
                                                      the-anti-mark
                                                      top-marked?
                                                      top-wrap
                                                      empty-wrap
                                                      set-ribcage-labels!
                                                      set-ribcage-marks!
                                                      set-ribcage-symnames!
                                                      ribcage-labels
                                                      ribcage-marks
                                                      ribcage-symnames
                                                      ribcage?
                                                      make-ribcage
                                                      gen-labels
                                                      gen-label
                                                      make-rename
                                                      rename-marks
                                                      rename-new
                                                      rename-old
                                                      subst-rename?
                                                      wrap-subst
                                                      wrap-marks
                                                      make-wrap
                                                      id-sym-name&marks
                                                      id-sym-name
                                                      id?
                                                      nonsymbol-id?
                                                      global-extend
                                                      lookup
                                                      macros-only-env
                                                      extend-var-env
                                                      extend-env
                                                      null-env
                                                      binding-value
                                                      binding-type
                                                      make-binding
                                                      arg-check
                                                      source-annotation
                                                      no-source
                                                      set-syntax-object-module!
                                                      set-syntax-object-wrap!
                                                      set-syntax-object-expression!
                                                      syntax-object-module
                                                      syntax-object-wrap
                                                      syntax-object-expression
                                                      syntax-object?
                                                      make-syntax-object
                                                      build-lexical-var
                                                      build-letrec
                                                      build-named-let
                                                      build-let
                                                      build-sequence
                                                      build-data
                                                      build-primref
                                                      build-lambda-case
                                                      build-case-lambda
                                                      build-simple-lambda
                                                      build-global-definition
                                                      maybe-name-value!
                                                      build-global-assignment
                                                      build-global-reference
                                                      analyze-variable
                                                      build-lexical-assignment
                                                      build-lexical-reference
                                                      build-dynlet
                                                      build-conditional
                                                      build-application
                                                      build-void
                                                      decorate-source
                                                      get-global-definition-hook
                                                      put-global-definition-hook
                                                      gensym-hook
                                                      local-eval-hook
                                                      top-level-eval-hook
                                                      fx<
                                                      fx=
                                                      fx-
                                                      fx+
                                                      make-dynlet
                                                      make-letrec
                                                      make-let
                                                      make-lambda-case
                                                      make-lambda
                                                      make-sequence
                                                      make-application
                                                      make-conditional
                                                      make-toplevel-define
                                                      make-toplevel-set
                                                      make-toplevel-ref
                                                      make-module-set
                                                      make-module-ref
                                                      make-lexical-set
                                                      make-lexical-ref
                                                      make-primitive-ref
                                                      make-const
                                                      make-void)
                                                    ((top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top))
                                                    ("i421"
                                                     "i419"
                                                     "i417"
                                                     "i415"
                                                     "i413"
                                                     "i411"
                                                     "i409"
                                                     "i407"
                                                     "i405"
                                                     "i403"
                                                     "i401"
                                                     "i399"
                                                     "i397"
                                                     "i395"
                                                     "i393"
                                                     "i391"
                                                     "i389"
                                                     "i387"
                                                     "i385"
                                                     "i383"
                                                     "i381"
                                                     "i379"
                                                     "i377"
                                                     "i375"
                                                     "i373"
                                                     "i371"
                                                     "i369"
                                                     "i367"
                                                     "i365"
                                                     "i363"
                                                     "i361"
                                                     "i359"
                                                     "i357"
                                                     "i355"
                                                     "i353"
                                                     "i351"
                                                     "i350"
                                                     "i349"
                                                     "i347"
                                                     "i346"
                                                     "i345"
                                                     "i344"
                                                     "i343"
                                                     "i341"
                                                     "i339"
                                                     "i337"
                                                     "i335"
                                                     "i333"
                                                     "i331"
                                                     "i329"
                                                     "i327"
                                                     "i324"
                                                     "i322"
                                                     "i321"
                                                     "i320"
                                                     "i319"
                                                     "i318"
                                                     "i317"
                                                     "i315"
                                                     "i313"
                                                     "i311"
                                                     "i309"
                                                     "i308"
                                                     "i306"
                                                     "i304"
                                                     "i302"
                                                     "i300"
                                                     "i298"
                                                     "i296"
                                                     "i294"
                                                     "i293"
                                                     "i291"
                                                     "i289"
                                                     "i288"
                                                     "i287"
                                                     "i285"
                                                     "i284"
                                                     "i282"
                                                     "i280"
                                                     "i278"
                                                     "i276"
                                                     "i274"
                                                     "i272"
                                                     "i270"
                                                     "i268"
                                                     "i266"
                                                     "i264"
                                                     "i262"
                                                     "i260"
                                                     "i258"
                                                     "i256"
                                                     "i254"
                                                     "i252"
                                                     "i250"
                                                     "i248"
                                                     "i246"
                                                     "i244"
                                                     "i242"
                                                     "i240"
                                                     "i238"
                                                     "i236"
                                                     "i234"
                                                     "i232"
                                                     "i230"
                                                     "i228"
                                                     "i226"
                                                     "i224"
                                                     "i222"
                                                     "i220"
                                                     "i219"
                                                     "i217"
                                                     "i215"
                                                     "i213"
                                                     "i211"
                                                     "i209"
                                                     "i207"
                                                     "i205"
                                                     "i203"
                                                     "i201"
                                                     "i199"
                                                     "i197"
                                                     "i195"
                                                     "i193"
                                                     "i191"
                                                     "i189"
                                                     "i187"
                                                     "i185"
                                                     "i183"
                                                     "i181"
                                                     "i179"
                                                     "i177"
                                                     "i175"
                                                     "i173"
                                                     "i171"))
                                                  #(ribcage
                                                    (define-structure
                                                      define-expansion-constructors
                                                      and-map*)
                                                    ((top) (top) (top))
                                                    ("i22" "i21" "i19")))
                                                 (hygiene guile)))
                                          'compile
                                          (if (#{free-id=?\ 366}#
                                                #{x\ 1855}#
                                                '#(syntax-object
                                                   load
                                                   ((top)
                                                    #(ribcage () () ())
                                                    #(ribcage () () ())
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(x)
                                                      #((top))
                                                      #("i1854"))
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(f when-list situations)
                                                      #((top) (top) (top))
                                                      #("i1848"
                                                        "i1849"
                                                        "i1850"))
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(e when-list w)
                                                      #((top) (top) (top))
                                                      #("i1845"
                                                        "i1846"
                                                        "i1847"))
                                                    #(ribcage
                                                      (lambda-var-list
                                                        gen-var
                                                        strip
                                                        chi-lambda-case
                                                        lambda*-formals
                                                        chi-simple-lambda
                                                        lambda-formals
                                                        ellipsis?
                                                        chi-void
                                                        eval-local-transformer
                                                        chi-local-syntax
                                                        chi-body
                                                        chi-macro
                                                        chi-application
                                                        chi-expr
                                                        chi
                                                        chi-top
                                                        syntax-type
                                                        chi-when-list
                                                        chi-install-global
                                                        chi-top-sequence
                                                        chi-sequence
                                                        source-wrap
                                                        wrap
                                                        bound-id-member?
                                                        distinct-bound-ids?
                                                        valid-bound-ids?
                                                        bound-id=?
                                                        free-id=?
                                                        id-var-name
                                                        same-marks?
                                                        join-marks
                                                        join-wraps
                                                        smart-append
                                                        make-binding-wrap
                                                        extend-ribcage!
                                                        make-empty-ribcage
                                                        new-mark
                                                        anti-mark
                                                        the-anti-mark
                                                        top-marked?
                                                        top-wrap
                                                        empty-wrap
                                                        set-ribcage-labels!
                                                        set-ribcage-marks!
                                                        set-ribcage-symnames!
                                                        ribcage-labels
                                                        ribcage-marks
                                                        ribcage-symnames
                                                        ribcage?
                                                        make-ribcage
                                                        gen-labels
                                                        gen-label
                                                        make-rename
                                                        rename-marks
                                                        rename-new
                                                        rename-old
                                                        subst-rename?
                                                        wrap-subst
                                                        wrap-marks
                                                        make-wrap
                                                        id-sym-name&marks
                                                        id-sym-name
                                                        id?
                                                        nonsymbol-id?
                                                        global-extend
                                                        lookup
                                                        macros-only-env
                                                        extend-var-env
                                                        extend-env
                                                        null-env
                                                        binding-value
                                                        binding-type
                                                        make-binding
                                                        arg-check
                                                        source-annotation
                                                        no-source
                                                        set-syntax-object-module!
                                                        set-syntax-object-wrap!
                                                        set-syntax-object-expression!
                                                        syntax-object-module
                                                        syntax-object-wrap
                                                        syntax-object-expression
                                                        syntax-object?
                                                        make-syntax-object
                                                        build-lexical-var
                                                        build-letrec
                                                        build-named-let
                                                        build-let
                                                        build-sequence
                                                        build-data
                                                        build-primref
                                                        build-lambda-case
                                                        build-case-lambda
                                                        build-simple-lambda
                                                        build-global-definition
                                                        maybe-name-value!
                                                        build-global-assignment
                                                        build-global-reference
                                                        analyze-variable
                                                        build-lexical-assignment
                                                        build-lexical-reference
                                                        build-dynlet
                                                        build-conditional
                                                        build-application
                                                        build-void
                                                        decorate-source
                                                        get-global-definition-hook
                                                        put-global-definition-hook
                                                        gensym-hook
                                                        local-eval-hook
                                                        top-level-eval-hook
                                                        fx<
                                                        fx=
                                                        fx-
                                                        fx+
                                                        make-dynlet
                                                        make-letrec
                                                        make-let
                                                        make-lambda-case
                                                        make-lambda
                                                        make-sequence
                                                        make-application
                                                        make-conditional
                                                        make-toplevel-define
                                                        make-toplevel-set
                                                        make-toplevel-ref
                                                        make-module-set
                                                        make-module-ref
                                                        make-lexical-set
                                                        make-lexical-ref
                                                        make-primitive-ref
                                                        make-const
                                                        make-void)
                                                      ((top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top))
                                                      ("i421"
                                                       "i419"
                                                       "i417"
                                                       "i415"
                                                       "i413"
                                                       "i411"
                                                       "i409"
                                                       "i407"
                                                       "i405"
                                                       "i403"
                                                       "i401"
                                                       "i399"
                                                       "i397"
                                                       "i395"
                                                       "i393"
                                                       "i391"
                                                       "i389"
                                                       "i387"
                                                       "i385"
                                                       "i383"
                                                       "i381"
                                                       "i379"
                                                       "i377"
                                                       "i375"
                                                       "i373"
                                                       "i371"
                                                       "i369"
                                                       "i367"
                                                       "i365"
                                                       "i363"
                                                       "i361"
                                                       "i359"
                                                       "i357"
                                                       "i355"
                                                       "i353"
                                                       "i351"
                                                       "i350"
                                                       "i349"
                                                       "i347"
                                                       "i346"
                                                       "i345"
                                                       "i344"
                                                       "i343"
                                                       "i341"
                                                       "i339"
                                                       "i337"
                                                       "i335"
                                                       "i333"
                                                       "i331"
                                                       "i329"
                                                       "i327"
                                                       "i324"
                                                       "i322"
                                                       "i321"
                                                       "i320"
                                                       "i319"
                                                       "i318"
                                                       "i317"
                                                       "i315"
                                                       "i313"
                                                       "i311"
                                                       "i309"
                                                       "i308"
                                                       "i306"
                                                       "i304"
                                                       "i302"
                                                       "i300"
                                                       "i298"
                                                       "i296"
                                                       "i294"
                                                       "i293"
                                                       "i291"
                                                       "i289"
                                                       "i288"
                                                       "i287"
                                                       "i285"
                                                       "i284"
                                                       "i282"
                                                       "i280"
                                                       "i278"
                                                       "i276"
                                                       "i274"
                                                       "i272"
                                                       "i270"
                                                       "i268"
                                                       "i266"
                                                       "i264"
                                                       "i262"
                                                       "i260"
                                                       "i258"
                                                       "i256"
                                                       "i254"
                                                       "i252"
                                                       "i250"
                                                       "i248"
                                                       "i246"
                                                       "i244"
                                                       "i242"
                                                       "i240"
                                                       "i238"
                                                       "i236"
                                                       "i234"
                                                       "i232"
                                                       "i230"
                                                       "i228"
                                                       "i226"
                                                       "i224"
                                                       "i222"
                                                       "i220"
                                                       "i219"
                                                       "i217"
                                                       "i215"
                                                       "i213"
                                                       "i211"
                                                       "i209"
                                                       "i207"
                                                       "i205"
                                                       "i203"
                                                       "i201"
                                                       "i199"
                                                       "i197"
                                                       "i195"
                                                       "i193"
                                                       "i191"
                                                       "i189"
                                                       "i187"
                                                       "i185"
                                                       "i183"
                                                       "i181"
                                                       "i179"
                                                       "i177"
                                                       "i175"
                                                       "i173"
                                                       "i171"))
                                                    #(ribcage
                                                      (define-structure
                                                        define-expansion-constructors
                                                        and-map*)
                                                      ((top) (top) (top))
                                                      ("i22" "i21" "i19")))
                                                   (hygiene guile)))
                                            'load
                                            (if (#{free-id=?\ 366}#
                                                  #{x\ 1855}#
                                                  '#(syntax-object
                                                     eval
                                                     ((top)
                                                      #(ribcage () () ())
                                                      #(ribcage () () ())
                                                      #(ribcage () () ())
                                                      #(ribcage
                                                        #(x)
                                                        #((top))
                                                        #("i1854"))
                                                      #(ribcage () () ())
                                                      #(ribcage
                                                        #(f
                                                          when-list
                                                          situations)
                                                        #((top) (top) (top))
                                                        #("i1848"
                                                          "i1849"
                                                          "i1850"))
                                                      #(ribcage () () ())
                                                      #(ribcage
                                                        #(e when-list w)
                                                        #((top) (top) (top))
                                                        #("i1845"
                                                          "i1846"
                                                          "i1847"))
                                                      #(ribcage
                                                        (lambda-var-list
                                                          gen-var
                                                          strip
                                                          chi-lambda-case
                                                          lambda*-formals
                                                          chi-simple-lambda
                                                          lambda-formals
                                                          ellipsis?
                                                          chi-void
                                                          eval-local-transformer
                                                          chi-local-syntax
                                                          chi-body
                                                          chi-macro
                                                          chi-application
                                                          chi-expr
                                                          chi
                                                          chi-top
                                                          syntax-type
                                                          chi-when-list
                                                          chi-install-global
                                                          chi-top-sequence
                                                          chi-sequence
                                                          source-wrap
                                                          wrap
                                                          bound-id-member?
                                                          distinct-bound-ids?
                                                          valid-bound-ids?
                                                          bound-id=?
                                                          free-id=?
                                                          id-var-name
                                                          same-marks?
                                                          join-marks
                                                          join-wraps
                                                          smart-append
                                                          make-binding-wrap
                                                          extend-ribcage!
                                                          make-empty-ribcage
                                                          new-mark
                                                          anti-mark
                                                          the-anti-mark
                                                          top-marked?
                                                          top-wrap
                                                          empty-wrap
                                                          set-ribcage-labels!
                                                          set-ribcage-marks!
                                                          set-ribcage-symnames!
                                                          ribcage-labels
                                                          ribcage-marks
                                                          ribcage-symnames
                                                          ribcage?
                                                          make-ribcage
                                                          gen-labels
                                                          gen-label
                                                          make-rename
                                                          rename-marks
                                                          rename-new
                                                          rename-old
                                                          subst-rename?
                                                          wrap-subst
                                                          wrap-marks
                                                          make-wrap
                                                          id-sym-name&marks
                                                          id-sym-name
                                                          id?
                                                          nonsymbol-id?
                                                          global-extend
                                                          lookup
                                                          macros-only-env
                                                          extend-var-env
                                                          extend-env
                                                          null-env
                                                          binding-value
                                                          binding-type
                                                          make-binding
                                                          arg-check
                                                          source-annotation
                                                          no-source
                                                          set-syntax-object-module!
                                                          set-syntax-object-wrap!
                                                          set-syntax-object-expression!
                                                          syntax-object-module
                                                          syntax-object-wrap
                                                          syntax-object-expression
                                                          syntax-object?
                                                          make-syntax-object
                                                          build-lexical-var
                                                          build-letrec
                                                          build-named-let
                                                          build-let
                                                          build-sequence
                                                          build-data
                                                          build-primref
                                                          build-lambda-case
                                                          build-case-lambda
                                                          build-simple-lambda
                                                          build-global-definition
                                                          maybe-name-value!
                                                          build-global-assignment
                                                          build-global-reference
                                                          analyze-variable
                                                          build-lexical-assignment
                                                          build-lexical-reference
                                                          build-dynlet
                                                          build-conditional
                                                          build-application
                                                          build-void
                                                          decorate-source
                                                          get-global-definition-hook
                                                          put-global-definition-hook
                                                          gensym-hook
                                                          local-eval-hook
                                                          top-level-eval-hook
                                                          fx<
                                                          fx=
                                                          fx-
                                                          fx+
                                                          make-dynlet
                                                          make-letrec
                                                          make-let
                                                          make-lambda-case
                                                          make-lambda
                                                          make-sequence
                                                          make-application
                                                          make-conditional
                                                          make-toplevel-define
                                                          make-toplevel-set
                                                          make-toplevel-ref
                                                          make-module-set
                                                          make-module-ref
                                                          make-lexical-set
                                                          make-lexical-ref
                                                          make-primitive-ref
                                                          make-const
                                                          make-void)
                                                        ((top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top))
                                                        ("i421"
                                                         "i419"
                                                         "i417"
                                                         "i415"
                                                         "i413"
                                                         "i411"
                                                         "i409"
                                                         "i407"
                                                         "i405"
                                                         "i403"
                                                         "i401"
                                                         "i399"
                                                         "i397"
                                                         "i395"
                                                         "i393"
                                                         "i391"
                                                         "i389"
                                                         "i387"
                                                         "i385"
                                                         "i383"
                                                         "i381"
                                                         "i379"
                                                         "i377"
                                                         "i375"
                                                         "i373"
                                                         "i371"
                                                         "i369"
                                                         "i367"
                                                         "i365"
                                                         "i363"
                                                         "i361"
                                                         "i359"
                                                         "i357"
                                                         "i355"
                                                         "i353"
                                                         "i351"
                                                         "i350"
                                                         "i349"
                                                         "i347"
                                                         "i346"
                                                         "i345"
                                                         "i344"
                                                         "i343"
                                                         "i341"
                                                         "i339"
                                                         "i337"
                                                         "i335"
                                                         "i333"
                                                         "i331"
                                                         "i329"
                                                         "i327"
                                                         "i324"
                                                         "i322"
                                                         "i321"
                                                         "i320"
                                                         "i319"
                                                         "i318"
                                                         "i317"
                                                         "i315"
                                                         "i313"
                                                         "i311"
                                                         "i309"
                                                         "i308"
                                                         "i306"
                                                         "i304"
                                                         "i302"
                                                         "i300"
                                                         "i298"
                                                         "i296"
                                                         "i294"
                                                         "i293"
                                                         "i291"
                                                         "i289"
                                                         "i288"
                                                         "i287"
                                                         "i285"
                                                         "i284"
                                                         "i282"
                                                         "i280"
                                                         "i278"
                                                         "i276"
                                                         "i274"
                                                         "i272"
                                                         "i270"
                                                         "i268"
                                                         "i266"
                                                         "i264"
                                                         "i262"
                                                         "i260"
                                                         "i258"
                                                         "i256"
                                                         "i254"
                                                         "i252"
                                                         "i250"
                                                         "i248"
                                                         "i246"
                                                         "i244"
                                                         "i242"
                                                         "i240"
                                                         "i238"
                                                         "i236"
                                                         "i234"
                                                         "i232"
                                                         "i230"
                                                         "i228"
                                                         "i226"
                                                         "i224"
                                                         "i222"
                                                         "i220"
                                                         "i219"
                                                         "i217"
                                                         "i215"
                                                         "i213"
                                                         "i211"
                                                         "i209"
                                                         "i207"
                                                         "i205"
                                                         "i203"
                                                         "i201"
                                                         "i199"
                                                         "i197"
                                                         "i195"
                                                         "i193"
                                                         "i191"
                                                         "i189"
                                                         "i187"
                                                         "i185"
                                                         "i183"
                                                         "i181"
                                                         "i179"
                                                         "i177"
                                                         "i175"
                                                         "i173"
                                                         "i171"))
                                                      #(ribcage
                                                        (define-structure
                                                          define-expansion-constructors
                                                          and-map*)
                                                        ((top) (top) (top))
                                                        ("i22" "i21" "i19")))
                                                     (hygiene guile)))
                                              'eval
                                              (if (#{free-id=?\ 366}#
                                                    #{x\ 1855}#
                                                    '#(syntax-object
                                                       expand
                                                       ((top)
                                                        #(ribcage () () ())
                                                        #(ribcage () () ())
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(x)
                                                          #((top))
                                                          #("i1854"))
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(f
                                                            when-list
                                                            situations)
                                                          #((top) (top) (top))
                                                          #("i1848"
                                                            "i1849"
                                                            "i1850"))
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(e when-list w)
                                                          #((top) (top) (top))
                                                          #("i1845"
                                                            "i1846"
                                                            "i1847"))
                                                        #(ribcage
                                                          (lambda-var-list
                                                            gen-var
                                                            strip
                                                            chi-lambda-case
                                                            lambda*-formals
                                                            chi-simple-lambda
                                                            lambda-formals
                                                            ellipsis?
                                                            chi-void
                                                            eval-local-transformer
                                                            chi-local-syntax
                                                            chi-body
                                                            chi-macro
                                                            chi-application
                                                            chi-expr
                                                            chi
                                                            chi-top
                                                            syntax-type
                                                            chi-when-list
                                                            chi-install-global
                                                            chi-top-sequence
                                                            chi-sequence
                                                            source-wrap
                                                            wrap
                                                            bound-id-member?
                                                            distinct-bound-ids?
                                                            valid-bound-ids?
                                                            bound-id=?
                                                            free-id=?
                                                            id-var-name
                                                            same-marks?
                                                            join-marks
                                                            join-wraps
                                                            smart-append
                                                            make-binding-wrap
                                                            extend-ribcage!
                                                            make-empty-ribcage
                                                            new-mark
                                                            anti-mark
                                                            the-anti-mark
                                                            top-marked?
                                                            top-wrap
                                                            empty-wrap
                                                            set-ribcage-labels!
                                                            set-ribcage-marks!
                                                            set-ribcage-symnames!
                                                            ribcage-labels
                                                            ribcage-marks
                                                            ribcage-symnames
                                                            ribcage?
                                                            make-ribcage
                                                            gen-labels
                                                            gen-label
                                                            make-rename
                                                            rename-marks
                                                            rename-new
                                                            rename-old
                                                            subst-rename?
                                                            wrap-subst
                                                            wrap-marks
                                                            make-wrap
                                                            id-sym-name&marks
                                                            id-sym-name
                                                            id?
                                                            nonsymbol-id?
                                                            global-extend
                                                            lookup
                                                            macros-only-env
                                                            extend-var-env
                                                            extend-env
                                                            null-env
                                                            binding-value
                                                            binding-type
                                                            make-binding
                                                            arg-check
                                                            source-annotation
                                                            no-source
                                                            set-syntax-object-module!
                                                            set-syntax-object-wrap!
                                                            set-syntax-object-expression!
                                                            syntax-object-module
                                                            syntax-object-wrap
                                                            syntax-object-expression
                                                            syntax-object?
                                                            make-syntax-object
                                                            build-lexical-var
                                                            build-letrec
                                                            build-named-let
                                                            build-let
                                                            build-sequence
                                                            build-data
                                                            build-primref
                                                            build-lambda-case
                                                            build-case-lambda
                                                            build-simple-lambda
                                                            build-global-definition
                                                            maybe-name-value!
                                                            build-global-assignment
                                                            build-global-reference
                                                            analyze-variable
                                                            build-lexical-assignment
                                                            build-lexical-reference
                                                            build-dynlet
                                                            build-conditional
                                                            build-application
                                                            build-void
                                                            decorate-source
                                                            get-global-definition-hook
                                                            put-global-definition-hook
                                                            gensym-hook
                                                            local-eval-hook
                                                            top-level-eval-hook
                                                            fx<
                                                            fx=
                                                            fx-
                                                            fx+
                                                            make-dynlet
                                                            make-letrec
                                                            make-let
                                                            make-lambda-case
                                                            make-lambda
                                                            make-sequence
                                                            make-application
                                                            make-conditional
                                                            make-toplevel-define
                                                            make-toplevel-set
                                                            make-toplevel-ref
                                                            make-module-set
                                                            make-module-ref
                                                            make-lexical-set
                                                            make-lexical-ref
                                                            make-primitive-ref
                                                            make-const
                                                            make-void)
                                                          ((top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top))
                                                          ("i421"
                                                           "i419"
                                                           "i417"
                                                           "i415"
                                                           "i413"
                                                           "i411"
                                                           "i409"
                                                           "i407"
                                                           "i405"
                                                           "i403"
                                                           "i401"
                                                           "i399"
                                                           "i397"
                                                           "i395"
                                                           "i393"
                                                           "i391"
                                                           "i389"
                                                           "i387"
                                                           "i385"
                                                           "i383"
                                                           "i381"
                                                           "i379"
                                                           "i377"
                                                           "i375"
                                                           "i373"
                                                           "i371"
                                                           "i369"
                                                           "i367"
                                                           "i365"
                                                           "i363"
                                                           "i361"
                                                           "i359"
                                                           "i357"
                                                           "i355"
                                                           "i353"
                                                           "i351"
                                                           "i350"
                                                           "i349"
                                                           "i347"
                                                           "i346"
                                                           "i345"
                                                           "i344"
                                                           "i343"
                                                           "i341"
                                                           "i339"
                                                           "i337"
                                                           "i335"
                                                           "i333"
                                                           "i331"
                                                           "i329"
                                                           "i327"
                                                           "i324"
                                                           "i322"
                                                           "i321"
                                                           "i320"
                                                           "i319"
                                                           "i318"
                                                           "i317"
                                                           "i315"
                                                           "i313"
                                                           "i311"
                                                           "i309"
                                                           "i308"
                                                           "i306"
                                                           "i304"
                                                           "i302"
                                                           "i300"
                                                           "i298"
                                                           "i296"
                                                           "i294"
                                                           "i293"
                                                           "i291"
                                                           "i289"
                                                           "i288"
                                                           "i287"
                                                           "i285"
                                                           "i284"
                                                           "i282"
                                                           "i280"
                                                           "i278"
                                                           "i276"
                                                           "i274"
                                                           "i272"
                                                           "i270"
                                                           "i268"
                                                           "i266"
                                                           "i264"
                                                           "i262"
                                                           "i260"
                                                           "i258"
                                                           "i256"
                                                           "i254"
                                                           "i252"
                                                           "i250"
                                                           "i248"
                                                           "i246"
                                                           "i244"
                                                           "i242"
                                                           "i240"
                                                           "i238"
                                                           "i236"
                                                           "i234"
                                                           "i232"
                                                           "i230"
                                                           "i228"
                                                           "i226"
                                                           "i224"
                                                           "i222"
                                                           "i220"
                                                           "i219"
                                                           "i217"
                                                           "i215"
                                                           "i213"
                                                           "i211"
                                                           "i209"
                                                           "i207"
                                                           "i205"
                                                           "i203"
                                                           "i201"
                                                           "i199"
                                                           "i197"
                                                           "i195"
                                                           "i193"
                                                           "i191"
                                                           "i189"
                                                           "i187"
                                                           "i185"
                                                           "i183"
                                                           "i181"
                                                           "i179"
                                                           "i177"
                                                           "i175"
                                                           "i173"
                                                           "i171"))
                                                        #(ribcage
                                                          (define-structure
                                                            define-expansion-constructors
                                                            and-map*)
                                                          ((top) (top) (top))
                                                          ("i22" "i21" "i19")))
                                                       (hygiene guile)))
                                                'expand
                                                (syntax-violation
                                                  'eval-when
                                                  "invalid situation"
                                                  #{e\ 1842}#
                                                  (#{wrap\ 376}#
                                                    #{x\ 1855}#
                                                    #{w\ 1844}#
                                                    #f)))))))
                                      #{situations\ 1853}#))))))
                 (#{f\ 1851}# #{when-list\ 1843}# (quote ())))))
           (#{chi-install-global\ 384}#
             (lambda (#{name\ 1865}# #{e\ 1866}#)
               (#{build-global-definition\ 247}#
                 #f
                 #{name\ 1865}#
                 (#{build-application\ 229}#
                   #f
                   (#{build-primref\ 255}#
                     #f
                     'make-syntax-transformer)
                   (list (#{build-data\ 257}# #f #{name\ 1865}#)
                         (#{build-data\ 257}# #f (quote macro))
                         (#{build-application\ 229}#
                           #f
                           (#{build-primref\ 255}# #f (quote cons))
                           (list #{e\ 1866}#
                                 (#{build-application\ 229}#
                                   #f
                                   (#{build-primref\ 255}#
                                     #f
                                     'module-name)
                                   (list (#{build-application\ 229}#
                                           #f
                                           (#{build-primref\ 255}#
                                             #f
                                             'current-module)
                                           '()))))))))))
           (#{chi-top-sequence\ 382}#
             (lambda (#{body\ 1880}#
                      #{r\ 1881}#
                      #{w\ 1882}#
                      #{s\ 1883}#
                      #{m\ 1884}#
                      #{esew\ 1885}#
                      #{mod\ 1886}#)
               (#{build-sequence\ 259}#
                 #{s\ 1883}#
                 (letrec ((#{dobody\ 1902}#
                            (lambda (#{body\ 1903}#
                                     #{r\ 1904}#
                                     #{w\ 1905}#
                                     #{m\ 1906}#
                                     #{esew\ 1907}#
                                     #{mod\ 1908}#
                                     #{out\ 1909}#)
                              (if (null? #{body\ 1903}#)
                                (reverse #{out\ 1909}#)
                                (#{dobody\ 1902}#
                                  (cdr #{body\ 1903}#)
                                  #{r\ 1904}#
                                  #{w\ 1905}#
                                  #{m\ 1906}#
                                  #{esew\ 1907}#
                                  #{mod\ 1908}#
                                  (cons (#{chi-top\ 390}#
                                          (car #{body\ 1903}#)
                                          #{r\ 1904}#
                                          #{w\ 1905}#
                                          #{m\ 1906}#
                                          #{esew\ 1907}#
                                          #{mod\ 1908}#)
                                        #{out\ 1909}#))))))
                   (#{dobody\ 1902}#
                     #{body\ 1880}#
                     #{r\ 1881}#
                     #{w\ 1882}#
                     #{m\ 1884}#
                     #{esew\ 1885}#
                     #{mod\ 1886}#
                     '())))))
           (#{chi-sequence\ 380}#
             (lambda (#{body\ 1910}#
                      #{r\ 1911}#
                      #{w\ 1912}#
                      #{s\ 1913}#
                      #{mod\ 1914}#)
               (#{build-sequence\ 259}#
                 #{s\ 1913}#
                 (letrec ((#{dobody\ 1925}#
                            (lambda (#{body\ 1926}#
                                     #{r\ 1927}#
                                     #{w\ 1928}#
                                     #{mod\ 1929}#)
                              (if (null? #{body\ 1926}#)
                                '()
                                (let ((#{first\ 1931}#
                                        (#{chi\ 392}#
                                          (car #{body\ 1926}#)
                                          #{r\ 1927}#
                                          #{w\ 1928}#
                                          #{mod\ 1929}#)))
                                  (cons #{first\ 1931}#
                                        (#{dobody\ 1925}#
                                          (cdr #{body\ 1926}#)
                                          #{r\ 1927}#
                                          #{w\ 1928}#
                                          #{mod\ 1929}#)))))))
                   (#{dobody\ 1925}#
                     #{body\ 1910}#
                     #{r\ 1911}#
                     #{w\ 1912}#
                     #{mod\ 1914}#)))))
           (#{source-wrap\ 378}#
             (lambda (#{x\ 1932}#
                      #{w\ 1933}#
                      #{s\ 1934}#
                      #{defmod\ 1935}#)
               (#{wrap\ 376}#
                 (#{decorate-source\ 225}#
                   #{x\ 1932}#
                   #{s\ 1934}#)
                 #{w\ 1933}#
                 #{defmod\ 1935}#)))
           (#{wrap\ 376}#
             (lambda (#{x\ 1940}# #{w\ 1941}# #{defmod\ 1942}#)
               (if (if (null? (#{wrap-marks\ 314}# #{w\ 1941}#))
                     (null? (#{wrap-subst\ 316}# #{w\ 1941}#))
                     #f)
                 #{x\ 1940}#
                 (if (#{syntax-object?\ 271}# #{x\ 1940}#)
                   (#{make-syntax-object\ 269}#
                     (#{syntax-object-expression\ 273}# #{x\ 1940}#)
                     (#{join-wraps\ 358}#
                       #{w\ 1941}#
                       (#{syntax-object-wrap\ 275}# #{x\ 1940}#))
                     (#{syntax-object-module\ 277}# #{x\ 1940}#))
                   (if (null? #{x\ 1940}#)
                     #{x\ 1940}#
                     (#{make-syntax-object\ 269}#
                       #{x\ 1940}#
                       #{w\ 1941}#
                       #{defmod\ 1942}#))))))
           (#{bound-id-member?\ 374}#
             (lambda (#{x\ 1955}# #{list\ 1956}#)
               (if (not (null? #{list\ 1956}#))
                 (let ((#{t\ 1963}#
                         (#{bound-id=?\ 368}#
                           #{x\ 1955}#
                           (car #{list\ 1956}#))))
                   (if #{t\ 1963}#
                     #{t\ 1963}#
                     (#{bound-id-member?\ 374}#
                       #{x\ 1955}#
                       (cdr #{list\ 1956}#))))
                 #f)))
           (#{distinct-bound-ids?\ 372}#
             (lambda (#{ids\ 1965}#)
               (letrec ((#{distinct?\ 1969}#
                          (lambda (#{ids\ 1970}#)
                            (let ((#{t\ 1973}# (null? #{ids\ 1970}#)))
                              (if #{t\ 1973}#
                                #{t\ 1973}#
                                (if (not (#{bound-id-member?\ 374}#
                                           (car #{ids\ 1970}#)
                                           (cdr #{ids\ 1970}#)))
                                  (#{distinct?\ 1969}# (cdr #{ids\ 1970}#))
                                  #f))))))
                 (#{distinct?\ 1969}# #{ids\ 1965}#))))
           (#{valid-bound-ids?\ 370}#
             (lambda (#{ids\ 1977}#)
               (if (letrec ((#{all-ids?\ 1982}#
                              (lambda (#{ids\ 1983}#)
                                (let ((#{t\ 1986}# (null? #{ids\ 1983}#)))
                                  (if #{t\ 1986}#
                                    #{t\ 1986}#
                                    (if (#{id?\ 307}# (car #{ids\ 1983}#))
                                      (#{all-ids?\ 1982}# (cdr #{ids\ 1983}#))
                                      #f))))))
                     (#{all-ids?\ 1982}# #{ids\ 1977}#))
                 (#{distinct-bound-ids?\ 372}# #{ids\ 1977}#)
                 #f)))
           (#{bound-id=?\ 368}#
             (lambda (#{i\ 1991}# #{j\ 1992}#)
               (if (if (#{syntax-object?\ 271}# #{i\ 1991}#)
                     (#{syntax-object?\ 271}# #{j\ 1992}#)
                     #f)
                 (if (eq? (#{syntax-object-expression\ 273}# #{i\ 1991}#)
                          (#{syntax-object-expression\ 273}# #{j\ 1992}#))
                   (#{same-marks?\ 362}#
                     (#{wrap-marks\ 314}#
                       (#{syntax-object-wrap\ 275}# #{i\ 1991}#))
                     (#{wrap-marks\ 314}#
                       (#{syntax-object-wrap\ 275}# #{j\ 1992}#)))
                   #f)
                 (eq? #{i\ 1991}# #{j\ 1992}#))))
           (#{free-id=?\ 366}#
             (lambda (#{i\ 1999}# #{j\ 2000}#)
               (if (eq? (let ((#{x\ 2006}# #{i\ 1999}#))
                          (if (#{syntax-object?\ 271}# #{x\ 2006}#)
                            (#{syntax-object-expression\ 273}# #{x\ 2006}#)
                            #{x\ 2006}#))
                        (let ((#{x\ 2009}# #{j\ 2000}#))
                          (if (#{syntax-object?\ 271}# #{x\ 2009}#)
                            (#{syntax-object-expression\ 273}# #{x\ 2009}#)
                            #{x\ 2009}#)))
                 (eq? (#{id-var-name\ 364}# #{i\ 1999}# (quote (())))
                      (#{id-var-name\ 364}# #{j\ 2000}# (quote (()))))
                 #f)))
           (#{id-var-name\ 364}#
             (lambda (#{id\ 2013}# #{w\ 2014}#)
               (letrec ((#{search-vector-rib\ 2023}#
                          (lambda (#{sym\ 2035}#
                                   #{subst\ 2036}#
                                   #{marks\ 2037}#
                                   #{symnames\ 2038}#
                                   #{ribcage\ 2039}#)
                            (let ((#{n\ 2046}#
                                    (vector-length #{symnames\ 2038}#)))
                              (letrec ((#{f\ 2049}#
                                         (lambda (#{i\ 2050}#)
                                           (if (#{fx=\ 212}#
                                                 #{i\ 2050}#
                                                 #{n\ 2046}#)
                                             (#{search\ 2019}#
                                               #{sym\ 2035}#
                                               (cdr #{subst\ 2036}#)
                                               #{marks\ 2037}#)
                                             (if (if (eq? (vector-ref
                                                            #{symnames\ 2038}#
                                                            #{i\ 2050}#)
                                                          #{sym\ 2035}#)
                                                   (#{same-marks?\ 362}#
                                                     #{marks\ 2037}#
                                                     (vector-ref
                                                       (#{ribcage-marks\ 334}#
                                                         #{ribcage\ 2039}#)
                                                       #{i\ 2050}#))
                                                   #f)
                                               (values
                                                 (vector-ref
                                                   (#{ribcage-labels\ 336}#
                                                     #{ribcage\ 2039}#)
                                                   #{i\ 2050}#)
                                                 #{marks\ 2037}#)
                                               (#{f\ 2049}#
                                                 (#{fx+\ 208}#
                                                   #{i\ 2050}#
                                                   1)))))))
                                (#{f\ 2049}# 0)))))
                        (#{search-list-rib\ 2021}#
                          (lambda (#{sym\ 2058}#
                                   #{subst\ 2059}#
                                   #{marks\ 2060}#
                                   #{symnames\ 2061}#
                                   #{ribcage\ 2062}#)
                            (letrec ((#{f\ 2071}#
                                       (lambda (#{symnames\ 2072}# #{i\ 2073}#)
                                         (if (null? #{symnames\ 2072}#)
                                           (#{search\ 2019}#
                                             #{sym\ 2058}#
                                             (cdr #{subst\ 2059}#)
                                             #{marks\ 2060}#)
                                           (if (if (eq? (car #{symnames\ 2072}#)
                                                        #{sym\ 2058}#)
                                                 (#{same-marks?\ 362}#
                                                   #{marks\ 2060}#
                                                   (list-ref
                                                     (#{ribcage-marks\ 334}#
                                                       #{ribcage\ 2062}#)
                                                     #{i\ 2073}#))
                                                 #f)
                                             (values
                                               (list-ref
                                                 (#{ribcage-labels\ 336}#
                                                   #{ribcage\ 2062}#)
                                                 #{i\ 2073}#)
                                               #{marks\ 2060}#)
                                             (#{f\ 2071}#
                                               (cdr #{symnames\ 2072}#)
                                               (#{fx+\ 208}#
                                                 #{i\ 2073}#
                                                 1)))))))
                              (#{f\ 2071}# #{symnames\ 2061}# 0))))
                        (#{search\ 2019}#
                          (lambda (#{sym\ 2081}#
                                   #{subst\ 2082}#
                                   #{marks\ 2083}#)
                            (if (null? #{subst\ 2082}#)
                              (values #f #{marks\ 2083}#)
                              (let ((#{fst\ 2088}# (car #{subst\ 2082}#)))
                                (if (eq? #{fst\ 2088}# (quote shift))
                                  (#{search\ 2019}#
                                    #{sym\ 2081}#
                                    (cdr #{subst\ 2082}#)
                                    (cdr #{marks\ 2083}#))
                                  (let ((#{symnames\ 2090}#
                                          (#{ribcage-symnames\ 332}#
                                            #{fst\ 2088}#)))
                                    (if (vector? #{symnames\ 2090}#)
                                      (#{search-vector-rib\ 2023}#
                                        #{sym\ 2081}#
                                        #{subst\ 2082}#
                                        #{marks\ 2083}#
                                        #{symnames\ 2090}#
                                        #{fst\ 2088}#)
                                      (#{search-list-rib\ 2021}#
                                        #{sym\ 2081}#
                                        #{subst\ 2082}#
                                        #{marks\ 2083}#
                                        #{symnames\ 2090}#
                                        #{fst\ 2088}#)))))))))
                 (if (symbol? #{id\ 2013}#)
                   (let ((#{t\ 2093}#
                           (call-with-values
                             (lambda ()
                               (#{search\ 2019}#
                                 #{id\ 2013}#
                                 (#{wrap-subst\ 316}# #{w\ 2014}#)
                                 (#{wrap-marks\ 314}# #{w\ 2014}#)))
                             (lambda (#{x\ 2095}# . #{ignore\ 2096}#)
                               #{x\ 2095}#))))
                     (if #{t\ 2093}# #{t\ 2093}# #{id\ 2013}#))
                   (if (#{syntax-object?\ 271}# #{id\ 2013}#)
                     (let ((#{id\ 2104}#
                             (#{syntax-object-expression\ 273}# #{id\ 2013}#))
                           (#{w1\ 2105}#
                             (#{syntax-object-wrap\ 275}# #{id\ 2013}#)))
                       (let ((#{marks\ 2107}#
                               (#{join-marks\ 360}#
                                 (#{wrap-marks\ 314}# #{w\ 2014}#)
                                 (#{wrap-marks\ 314}# #{w1\ 2105}#))))
                         (call-with-values
                           (lambda ()
                             (#{search\ 2019}#
                               #{id\ 2104}#
                               (#{wrap-subst\ 316}# #{w\ 2014}#)
                               #{marks\ 2107}#))
                           (lambda (#{new-id\ 2108}# #{marks\ 2109}#)
                             (let ((#{t\ 2114}# #{new-id\ 2108}#))
                               (if #{t\ 2114}#
                                 #{t\ 2114}#
                                 (let ((#{t\ 2117}#
                                         (call-with-values
                                           (lambda ()
                                             (#{search\ 2019}#
                                               #{id\ 2104}#
                                               (#{wrap-subst\ 316}#
                                                 #{w1\ 2105}#)
                                               #{marks\ 2109}#))
                                           (lambda (#{x\ 2119}#
                                                    .
                                                    #{ignore\ 2120}#)
                                             #{x\ 2119}#))))
                                   (if #{t\ 2117}#
                                     #{t\ 2117}#
                                     #{id\ 2104}#))))))))
                     (syntax-violation
                       'id-var-name
                       "invalid id"
                       #{id\ 2013}#))))))
           (#{same-marks?\ 362}#
             (lambda (#{x\ 2125}# #{y\ 2126}#)
               (let ((#{t\ 2131}# (eq? #{x\ 2125}# #{y\ 2126}#)))
                 (if #{t\ 2131}#
                   #{t\ 2131}#
                   (if (not (null? #{x\ 2125}#))
                     (if (not (null? #{y\ 2126}#))
                       (if (eq? (car #{x\ 2125}#) (car #{y\ 2126}#))
                         (#{same-marks?\ 362}#
                           (cdr #{x\ 2125}#)
                           (cdr #{y\ 2126}#))
                         #f)
                       #f)
                     #f)))))
           (#{join-marks\ 360}#
             (lambda (#{m1\ 2137}# #{m2\ 2138}#)
               (#{smart-append\ 356}# #{m1\ 2137}# #{m2\ 2138}#)))
           (#{join-wraps\ 358}#
             (lambda (#{w1\ 2141}# #{w2\ 2142}#)
               (let ((#{m1\ 2147}# (#{wrap-marks\ 314}# #{w1\ 2141}#))
                     (#{s1\ 2148}# (#{wrap-subst\ 316}# #{w1\ 2141}#)))
                 (if (null? #{m1\ 2147}#)
                   (if (null? #{s1\ 2148}#)
                     #{w2\ 2142}#
                     (#{make-wrap\ 312}#
                       (#{wrap-marks\ 314}# #{w2\ 2142}#)
                       (#{smart-append\ 356}#
                         #{s1\ 2148}#
                         (#{wrap-subst\ 316}# #{w2\ 2142}#))))
                   (#{make-wrap\ 312}#
                     (#{smart-append\ 356}#
                       #{m1\ 2147}#
                       (#{wrap-marks\ 314}# #{w2\ 2142}#))
                     (#{smart-append\ 356}#
                       #{s1\ 2148}#
                       (#{wrap-subst\ 316}# #{w2\ 2142}#)))))))
           (#{smart-append\ 356}#
             (lambda (#{m1\ 2149}# #{m2\ 2150}#)
               (if (null? #{m2\ 2150}#)
                 #{m1\ 2149}#
                 (append #{m1\ 2149}# #{m2\ 2150}#))))
           (#{make-binding-wrap\ 354}#
             (lambda (#{ids\ 2153}# #{labels\ 2154}# #{w\ 2155}#)
               (if (null? #{ids\ 2153}#)
                 #{w\ 2155}#
                 (#{make-wrap\ 312}#
                   (#{wrap-marks\ 314}# #{w\ 2155}#)
                   (cons (let ((#{labelvec\ 2160}#
                                 (list->vector #{labels\ 2154}#)))
                           (let ((#{n\ 2162}#
                                   (vector-length #{labelvec\ 2160}#)))
                             (let ((#{symnamevec\ 2165}#
                                     (make-vector #{n\ 2162}#))
                                   (#{marksvec\ 2166}#
                                     (make-vector #{n\ 2162}#)))
                               (begin
                                 (letrec ((#{f\ 2170}#
                                            (lambda (#{ids\ 2171}# #{i\ 2172}#)
                                              (if (not (null? #{ids\ 2171}#))
                                                (call-with-values
                                                  (lambda ()
                                                    (#{id-sym-name&marks\ 310}#
                                                      (car #{ids\ 2171}#)
                                                      #{w\ 2155}#))
                                                  (lambda (#{symname\ 2173}#
                                                           #{marks\ 2174}#)
                                                    (begin
                                                      (vector-set!
                                                        #{symnamevec\ 2165}#
                                                        #{i\ 2172}#
                                                        #{symname\ 2173}#)
                                                      (vector-set!
                                                        #{marksvec\ 2166}#
                                                        #{i\ 2172}#
                                                        #{marks\ 2174}#)
                                                      (#{f\ 2170}#
                                                        (cdr #{ids\ 2171}#)
                                                        (#{fx+\ 208}#
                                                          #{i\ 2172}#
                                                          1)))))))))
                                   (#{f\ 2170}# #{ids\ 2153}# 0))
                                 (#{make-ribcage\ 328}#
                                   #{symnamevec\ 2165}#
                                   #{marksvec\ 2166}#
                                   #{labelvec\ 2160}#)))))
                         (#{wrap-subst\ 316}# #{w\ 2155}#))))))
           (#{extend-ribcage!\ 352}#
             (lambda (#{ribcage\ 2177}# #{id\ 2178}# #{label\ 2179}#)
               (begin
                 (#{set-ribcage-symnames!\ 338}#
                   #{ribcage\ 2177}#
                   (cons (#{syntax-object-expression\ 273}# #{id\ 2178}#)
                         (#{ribcage-symnames\ 332}# #{ribcage\ 2177}#)))
                 (#{set-ribcage-marks!\ 340}#
                   #{ribcage\ 2177}#
                   (cons (#{wrap-marks\ 314}#
                           (#{syntax-object-wrap\ 275}# #{id\ 2178}#))
                         (#{ribcage-marks\ 334}# #{ribcage\ 2177}#)))
                 (#{set-ribcage-labels!\ 342}#
                   #{ribcage\ 2177}#
                   (cons #{label\ 2179}#
                         (#{ribcage-labels\ 336}# #{ribcage\ 2177}#))))))
           (#{anti-mark\ 348}#
             (lambda (#{w\ 2183}#)
               (#{make-wrap\ 312}#
                 (cons #f (#{wrap-marks\ 314}# #{w\ 2183}#))
                 (cons 'shift
                       (#{wrap-subst\ 316}# #{w\ 2183}#)))))
           (#{set-ribcage-labels!\ 342}#
             (lambda (#{x\ 2186}# #{update\ 2187}#)
               (vector-set! #{x\ 2186}# 3 #{update\ 2187}#)))
           (#{set-ribcage-marks!\ 340}#
             (lambda (#{x\ 2190}# #{update\ 2191}#)
               (vector-set! #{x\ 2190}# 2 #{update\ 2191}#)))
           (#{set-ribcage-symnames!\ 338}#
             (lambda (#{x\ 2194}# #{update\ 2195}#)
               (vector-set! #{x\ 2194}# 1 #{update\ 2195}#)))
           (#{ribcage-labels\ 336}#
             (lambda (#{x\ 2198}#) (vector-ref #{x\ 2198}# 3)))
           (#{ribcage-marks\ 334}#
             (lambda (#{x\ 2200}#) (vector-ref #{x\ 2200}# 2)))
           (#{ribcage-symnames\ 332}#
             (lambda (#{x\ 2202}#) (vector-ref #{x\ 2202}# 1)))
           (#{ribcage?\ 330}#
             (lambda (#{x\ 2204}#)
               (if (vector? #{x\ 2204}#)
                 (if (= (vector-length #{x\ 2204}#) 4)
                   (eq? (vector-ref #{x\ 2204}# 0) (quote ribcage))
                   #f)
                 #f)))
           (#{make-ribcage\ 328}#
             (lambda (#{symnames\ 2209}#
                      #{marks\ 2210}#
                      #{labels\ 2211}#)
               (vector
                 'ribcage
                 #{symnames\ 2209}#
                 #{marks\ 2210}#
                 #{labels\ 2211}#)))
           (#{gen-labels\ 325}#
             (lambda (#{ls\ 2215}#)
               (if (null? #{ls\ 2215}#)
                 '()
                 (cons (#{gen-label\ 323}#)
                       (#{gen-labels\ 325}# (cdr #{ls\ 2215}#))))))
           (#{gen-label\ 323}#
             (lambda () (symbol->string (gensym "i"))))
           (#{wrap-subst\ 316}# cdr)
           (#{wrap-marks\ 314}# car)
           (#{make-wrap\ 312}# cons)
           (#{id-sym-name&marks\ 310}#
             (lambda (#{x\ 2217}# #{w\ 2218}#)
               (if (#{syntax-object?\ 271}# #{x\ 2217}#)
                 (values
                   (#{syntax-object-expression\ 273}# #{x\ 2217}#)
                   (#{join-marks\ 360}#
                     (#{wrap-marks\ 314}# #{w\ 2218}#)
                     (#{wrap-marks\ 314}#
                       (#{syntax-object-wrap\ 275}# #{x\ 2217}#))))
                 (values
                   #{x\ 2217}#
                   (#{wrap-marks\ 314}# #{w\ 2218}#)))))
           (#{id?\ 307}#
             (lambda (#{x\ 2221}#)
               (if (symbol? #{x\ 2221}#)
                 #t
                 (if (#{syntax-object?\ 271}# #{x\ 2221}#)
                   (symbol?
                     (#{syntax-object-expression\ 273}# #{x\ 2221}#))
                   #f))))
           (#{nonsymbol-id?\ 305}#
             (lambda (#{x\ 2228}#)
               (if (#{syntax-object?\ 271}# #{x\ 2228}#)
                 (symbol?
                   (#{syntax-object-expression\ 273}# #{x\ 2228}#))
                 #f)))
           (#{global-extend\ 303}#
             (lambda (#{type\ 2232}# #{sym\ 2233}# #{val\ 2234}#)
               (#{put-global-definition-hook\ 221}#
                 #{sym\ 2233}#
                 #{type\ 2232}#
                 #{val\ 2234}#)))
           (#{lookup\ 301}#
             (lambda (#{x\ 2238}# #{r\ 2239}# #{mod\ 2240}#)
               (let ((#{t\ 2246}# (assq #{x\ 2238}# #{r\ 2239}#)))
                 (if #{t\ 2246}#
                   (cdr #{t\ 2246}#)
                   (if (symbol? #{x\ 2238}#)
                     (let ((#{t\ 2252}#
                             (#{get-global-definition-hook\ 223}#
                               #{x\ 2238}#
                               #{mod\ 2240}#)))
                       (if #{t\ 2252}# #{t\ 2252}# (quote (global))))
                     '(displaced-lexical))))))
           (#{macros-only-env\ 299}#
             (lambda (#{r\ 2257}#)
               (if (null? #{r\ 2257}#)
                 '()
                 (let ((#{a\ 2260}# (car #{r\ 2257}#)))
                   (if (eq? (cadr #{a\ 2260}#) (quote macro))
                     (cons #{a\ 2260}#
                           (#{macros-only-env\ 299}# (cdr #{r\ 2257}#)))
                     (#{macros-only-env\ 299}# (cdr #{r\ 2257}#)))))))
           (#{extend-var-env\ 297}#
             (lambda (#{labels\ 2261}# #{vars\ 2262}# #{r\ 2263}#)
               (if (null? #{labels\ 2261}#)
                 #{r\ 2263}#
                 (#{extend-var-env\ 297}#
                   (cdr #{labels\ 2261}#)
                   (cdr #{vars\ 2262}#)
                   (cons (cons (car #{labels\ 2261}#)
                               (cons (quote lexical) (car #{vars\ 2262}#)))
                         #{r\ 2263}#)))))
           (#{extend-env\ 295}#
             (lambda (#{labels\ 2268}# #{bindings\ 2269}# #{r\ 2270}#)
               (if (null? #{labels\ 2268}#)
                 #{r\ 2270}#
                 (#{extend-env\ 295}#
                   (cdr #{labels\ 2268}#)
                   (cdr #{bindings\ 2269}#)
                   (cons (cons (car #{labels\ 2268}#)
                               (car #{bindings\ 2269}#))
                         #{r\ 2270}#)))))
           (#{binding-value\ 292}# cdr)
           (#{binding-type\ 290}# car)
           (#{source-annotation\ 286}#
             (lambda (#{x\ 2274}#)
               (if (#{syntax-object?\ 271}# #{x\ 2274}#)
                 (#{source-annotation\ 286}#
                   (#{syntax-object-expression\ 273}# #{x\ 2274}#))
                 (if (pair? #{x\ 2274}#)
                   (let ((#{props\ 2281}# (source-properties #{x\ 2274}#)))
                     (if (pair? #{props\ 2281}#) #{props\ 2281}# #f))
                   #f))))
           (#{set-syntax-object-module!\ 283}#
             (lambda (#{x\ 2283}# #{update\ 2284}#)
               (vector-set! #{x\ 2283}# 3 #{update\ 2284}#)))
           (#{set-syntax-object-wrap!\ 281}#
             (lambda (#{x\ 2287}# #{update\ 2288}#)
               (vector-set! #{x\ 2287}# 2 #{update\ 2288}#)))
           (#{set-syntax-object-expression!\ 279}#
             (lambda (#{x\ 2291}# #{update\ 2292}#)
               (vector-set! #{x\ 2291}# 1 #{update\ 2292}#)))
           (#{syntax-object-module\ 277}#
             (lambda (#{x\ 2295}#) (vector-ref #{x\ 2295}# 3)))
           (#{syntax-object-wrap\ 275}#
             (lambda (#{x\ 2297}#) (vector-ref #{x\ 2297}# 2)))
           (#{syntax-object-expression\ 273}#
             (lambda (#{x\ 2299}#) (vector-ref #{x\ 2299}# 1)))
           (#{syntax-object?\ 271}#
             (lambda (#{x\ 2301}#)
               (if (vector? #{x\ 2301}#)
                 (if (= (vector-length #{x\ 2301}#) 4)
                   (eq? (vector-ref #{x\ 2301}# 0)
                        'syntax-object)
                   #f)
                 #f)))
           (#{make-syntax-object\ 269}#
             (lambda (#{expression\ 2306}#
                      #{wrap\ 2307}#
                      #{module\ 2308}#)
               (vector
                 'syntax-object
                 #{expression\ 2306}#
                 #{wrap\ 2307}#
                 #{module\ 2308}#)))
           (#{build-letrec\ 265}#
             (lambda (#{src\ 2312}#
                      #{ids\ 2313}#
                      #{vars\ 2314}#
                      #{val-exps\ 2315}#
                      #{body-exp\ 2316}#)
               (if (null? #{vars\ 2314}#)
                 #{body-exp\ 2316}#
                 (#{make-letrec\ 204}#
                   #{src\ 2312}#
                   #{ids\ 2313}#
                   #{vars\ 2314}#
                   #{val-exps\ 2315}#
                   #{body-exp\ 2316}#))))
           (#{build-named-let\ 263}#
             (lambda (#{src\ 2322}#
                      #{ids\ 2323}#
                      #{vars\ 2324}#
                      #{val-exps\ 2325}#
                      #{body-exp\ 2326}#)
               (let ((#{f\ 2336}# (car #{vars\ 2324}#))
                     (#{f-name\ 2337}# (car #{ids\ 2323}#))
                     (#{vars\ 2338}# (cdr #{vars\ 2324}#))
                     (#{ids\ 2339}# (cdr #{ids\ 2323}#)))
                 (let ((#{proc\ 2341}#
                         (#{build-simple-lambda\ 249}#
                           #{src\ 2322}#
                           #{ids\ 2339}#
                           #f
                           #{vars\ 2338}#
                           '()
                           #{body-exp\ 2326}#)))
                   (#{make-letrec\ 204}#
                     #{src\ 2322}#
                     (list #{f-name\ 2337}#)
                     (list #{f\ 2336}#)
                     (list #{proc\ 2341}#)
                     (#{build-application\ 229}#
                       #{src\ 2322}#
                       (#{build-lexical-reference\ 235}#
                         'fun
                         #{src\ 2322}#
                         #{f-name\ 2337}#
                         #{f\ 2336}#)
                       #{val-exps\ 2325}#))))))
           (#{build-let\ 261}#
             (lambda (#{src\ 2342}#
                      #{ids\ 2343}#
                      #{vars\ 2344}#
                      #{val-exps\ 2345}#
                      #{body-exp\ 2346}#)
               (if (null? #{vars\ 2344}#)
                 #{body-exp\ 2346}#
                 (#{make-let\ 202}#
                   #{src\ 2342}#
                   #{ids\ 2343}#
                   #{vars\ 2344}#
                   #{val-exps\ 2345}#
                   #{body-exp\ 2346}#))))
           (#{build-sequence\ 259}#
             (lambda (#{src\ 2352}# #{exps\ 2353}#)
               (if (null? (cdr #{exps\ 2353}#))
                 (car #{exps\ 2353}#)
                 (#{make-sequence\ 196}#
                   #{src\ 2352}#
                   #{exps\ 2353}#))))
           (#{build-data\ 257}#
             (lambda (#{src\ 2356}# #{exp\ 2357}#)
               (#{make-const\ 174}# #{src\ 2356}# #{exp\ 2357}#)))
           (#{build-primref\ 255}#
             (lambda (#{src\ 2360}# #{name\ 2361}#)
               (if (equal?
                     (module-name (current-module))
                     '(guile))
                 (#{make-toplevel-ref\ 186}#
                   #{src\ 2360}#
                   #{name\ 2361}#)
                 (#{make-module-ref\ 182}#
                   #{src\ 2360}#
                   '(guile)
                   #{name\ 2361}#
                   #f))))
           (#{build-lambda-case\ 253}#
             (lambda (#{src\ 2364}#
                      #{req\ 2365}#
                      #{opt\ 2366}#
                      #{rest\ 2367}#
                      #{kw\ 2368}#
                      #{inits\ 2369}#
                      #{vars\ 2370}#
                      #{body\ 2371}#
                      #{else-case\ 2372}#)
               (#{make-lambda-case\ 200}#
                 #{src\ 2364}#
                 #{req\ 2365}#
                 #{opt\ 2366}#
                 #{rest\ 2367}#
                 #{kw\ 2368}#
                 #{inits\ 2369}#
                 #{vars\ 2370}#
                 #{body\ 2371}#
                 #{else-case\ 2372}#)))
           (#{build-case-lambda\ 251}#
             (lambda (#{src\ 2382}# #{meta\ 2383}# #{body\ 2384}#)
               (#{make-lambda\ 198}#
                 #{src\ 2382}#
                 #{meta\ 2383}#
                 #{body\ 2384}#)))
           (#{build-simple-lambda\ 249}#
             (lambda (#{src\ 2388}#
                      #{req\ 2389}#
                      #{rest\ 2390}#
                      #{vars\ 2391}#
                      #{meta\ 2392}#
                      #{exp\ 2393}#)
               (#{make-lambda\ 198}#
                 #{src\ 2388}#
                 #{meta\ 2392}#
                 (#{make-lambda-case\ 200}#
                   #{src\ 2388}#
                   #{req\ 2389}#
                   #f
                   #{rest\ 2390}#
                   #f
                   '()
                   #{vars\ 2391}#
                   #{exp\ 2393}#
                   #f))))
           (#{build-global-definition\ 247}#
             (lambda (#{source\ 2400}# #{var\ 2401}# #{exp\ 2402}#)
               (#{make-toplevel-define\ 190}#
                 #{source\ 2400}#
                 #{var\ 2401}#
                 #{exp\ 2402}#)))
           (#{maybe-name-value!\ 245}#
             (lambda (#{name\ 2406}# #{val\ 2407}#)
               (if ((@ (language tree-il) lambda?) #{val\ 2407}#)
                 (let ((#{meta\ 2413}#
                         ((@ (language tree-il) lambda-meta)
                          #{val\ 2407}#)))
                   (if (not (assq (quote name) #{meta\ 2413}#))
                     ((setter (@ (language tree-il) lambda-meta))
                      #{val\ 2407}#
                      (acons 'name
                             #{name\ 2406}#
                             #{meta\ 2413}#)))))))
           (#{build-global-assignment\ 243}#
             (lambda (#{source\ 2414}#
                      #{var\ 2415}#
                      #{exp\ 2416}#
                      #{mod\ 2417}#)
               (#{analyze-variable\ 239}#
                 #{mod\ 2417}#
                 #{var\ 2415}#
                 (lambda (#{mod\ 2422}# #{var\ 2423}# #{public?\ 2424}#)
                   (#{make-module-set\ 184}#
                     #{source\ 2414}#
                     #{mod\ 2422}#
                     #{var\ 2423}#
                     #{public?\ 2424}#
                     #{exp\ 2416}#))
                 (lambda (#{var\ 2428}#)
                   (#{make-toplevel-set\ 188}#
                     #{source\ 2414}#
                     #{var\ 2428}#
                     #{exp\ 2416}#)))))
           (#{build-global-reference\ 241}#
             (lambda (#{source\ 2430}# #{var\ 2431}# #{mod\ 2432}#)
               (#{analyze-variable\ 239}#
                 #{mod\ 2432}#
                 #{var\ 2431}#
                 (lambda (#{mod\ 2436}# #{var\ 2437}# #{public?\ 2438}#)
                   (#{make-module-ref\ 182}#
                     #{source\ 2430}#
                     #{mod\ 2436}#
                     #{var\ 2437}#
                     #{public?\ 2438}#))
                 (lambda (#{var\ 2442}#)
                   (#{make-toplevel-ref\ 186}#
                     #{source\ 2430}#
                     #{var\ 2442}#)))))
           (#{analyze-variable\ 239}#
             (lambda (#{mod\ 2444}#
                      #{var\ 2445}#
                      #{modref-cont\ 2446}#
                      #{bare-cont\ 2447}#)
               (if (not #{mod\ 2444}#)
                 (#{bare-cont\ 2447}# #{var\ 2445}#)
                 (let ((#{kind\ 2454}# (car #{mod\ 2444}#))
                       (#{mod\ 2455}# (cdr #{mod\ 2444}#)))
                   (if (memv #{kind\ 2454}# (quote (public)))
                     (#{modref-cont\ 2446}#
                       #{mod\ 2455}#
                       #{var\ 2445}#
                       #t)
                     (if (memv #{kind\ 2454}# (quote (private)))
                       (if (not (equal?
                                  #{mod\ 2455}#
                                  (module-name (current-module))))
                         (#{modref-cont\ 2446}#
                           #{mod\ 2455}#
                           #{var\ 2445}#
                           #f)
                         (#{bare-cont\ 2447}# #{var\ 2445}#))
                       (if (memv #{kind\ 2454}# (quote (bare)))
                         (#{bare-cont\ 2447}# #{var\ 2445}#)
                         (if (memv #{kind\ 2454}# (quote (hygiene)))
                           (if (if (not (equal?
                                          #{mod\ 2455}#
                                          (module-name (current-module))))
                                 (module-variable
                                   (resolve-module #{mod\ 2455}#)
                                   #{var\ 2445}#)
                                 #f)
                             (#{modref-cont\ 2446}#
                               #{mod\ 2455}#
                               #{var\ 2445}#
                               #f)
                             (#{bare-cont\ 2447}# #{var\ 2445}#))
                           (syntax-violation
                             #f
                             "bad module kind"
                             #{var\ 2445}#
                             #{mod\ 2455}#)))))))))
           (#{build-lexical-assignment\ 237}#
             (lambda (#{source\ 2463}#
                      #{name\ 2464}#
                      #{var\ 2465}#
                      #{exp\ 2466}#)
               (#{make-lexical-set\ 180}#
                 #{source\ 2463}#
                 #{name\ 2464}#
                 #{var\ 2465}#
                 #{exp\ 2466}#)))
           (#{build-lexical-reference\ 235}#
             (lambda (#{type\ 2471}#
                      #{source\ 2472}#
                      #{name\ 2473}#
                      #{var\ 2474}#)
               (#{make-lexical-ref\ 178}#
                 #{source\ 2472}#
                 #{name\ 2473}#
                 #{var\ 2474}#)))
           (#{build-dynlet\ 233}#
             (lambda (#{source\ 2479}#
                      #{fluids\ 2480}#
                      #{vals\ 2481}#
                      #{body\ 2482}#)
               (#{make-dynlet\ 206}#
                 #{source\ 2479}#
                 #{fluids\ 2480}#
                 #{vals\ 2481}#
                 #{body\ 2482}#)))
           (#{build-conditional\ 231}#
             (lambda (#{source\ 2487}#
                      #{test-exp\ 2488}#
                      #{then-exp\ 2489}#
                      #{else-exp\ 2490}#)
               (#{make-conditional\ 192}#
                 #{source\ 2487}#
                 #{test-exp\ 2488}#
                 #{then-exp\ 2489}#
                 #{else-exp\ 2490}#)))
           (#{build-application\ 229}#
             (lambda (#{source\ 2495}#
                      #{fun-exp\ 2496}#
                      #{arg-exps\ 2497}#)
               (#{make-application\ 194}#
                 #{source\ 2495}#
                 #{fun-exp\ 2496}#
                 #{arg-exps\ 2497}#)))
           (#{build-void\ 227}#
             (lambda (#{source\ 2501}#)
               (#{make-void\ 172}# #{source\ 2501}#)))
           (#{decorate-source\ 225}#
             (lambda (#{e\ 2503}# #{s\ 2504}#)
               (begin
                 (if (if (pair? #{e\ 2503}#) #{s\ 2504}# #f)
                   (set-source-properties! #{e\ 2503}# #{s\ 2504}#))
                 #{e\ 2503}#)))
           (#{get-global-definition-hook\ 223}#
             (lambda (#{symbol\ 2509}# #{module\ 2510}#)
               (begin
                 (if (if (not #{module\ 2510}#) (current-module) #f)
                   (warn "module system is booted, we should have a module"
                         #{symbol\ 2509}#))
                 (let ((#{v\ 2516}#
                         (module-variable
                           (if #{module\ 2510}#
                             (resolve-module (cdr #{module\ 2510}#))
                             (current-module))
                           #{symbol\ 2509}#)))
                   (if #{v\ 2516}#
                     (if (variable-bound? #{v\ 2516}#)
                       (let ((#{val\ 2521}# (variable-ref #{v\ 2516}#)))
                         (if (macro? #{val\ 2521}#)
                           (if (macro-type #{val\ 2521}#)
                             (cons (macro-type #{val\ 2521}#)
                                   (macro-binding #{val\ 2521}#))
                             #f)
                           #f))
                       #f)
                     #f)))))
           (#{put-global-definition-hook\ 221}#
             (lambda (#{symbol\ 2525}# #{type\ 2526}# #{val\ 2527}#)
               (module-define!
                 (current-module)
                 #{symbol\ 2525}#
                 (make-syntax-transformer
                   #{symbol\ 2525}#
                   #{type\ 2526}#
                   #{val\ 2527}#))))
           (#{local-eval-hook\ 218}#
             (lambda (#{x\ 2531}# #{mod\ 2532}#)
               (primitive-eval #{x\ 2531}#)))
           (#{top-level-eval-hook\ 216}#
             (lambda (#{x\ 2535}# #{mod\ 2536}#)
               (primitive-eval #{x\ 2535}#)))
           (#{fx<\ 214}# <)
           (#{fx=\ 212}# =)
           (#{fx-\ 210}# -)
           (#{fx+\ 208}# +)
           (#{make-dynlet\ 206}#
             (lambda (#{src\ 2539}#
                      #{fluids\ 2540}#
                      #{vals\ 2541}#
                      #{body\ 2542}#)
               (make-struct
                 (vector-ref %expanded-vtables 17)
                 0
                 #{src\ 2539}#
                 #{fluids\ 2540}#
                 #{vals\ 2541}#
                 #{body\ 2542}#)))
           (#{make-letrec\ 204}#
             (lambda (#{src\ 2547}#
                      #{names\ 2548}#
                      #{gensyms\ 2549}#
                      #{vals\ 2550}#
                      #{body\ 2551}#)
               (make-struct
                 (vector-ref %expanded-vtables 16)
                 0
                 #{src\ 2547}#
                 #{names\ 2548}#
                 #{gensyms\ 2549}#
                 #{vals\ 2550}#
                 #{body\ 2551}#)))
           (#{make-let\ 202}#
             (lambda (#{src\ 2557}#
                      #{names\ 2558}#
                      #{gensyms\ 2559}#
                      #{vals\ 2560}#
                      #{body\ 2561}#)
               (make-struct
                 (vector-ref %expanded-vtables 15)
                 0
                 #{src\ 2557}#
                 #{names\ 2558}#
                 #{gensyms\ 2559}#
                 #{vals\ 2560}#
                 #{body\ 2561}#)))
           (#{make-lambda-case\ 200}#
             (lambda (#{src\ 2567}#
                      #{req\ 2568}#
                      #{opt\ 2569}#
                      #{rest\ 2570}#
                      #{kw\ 2571}#
                      #{inits\ 2572}#
                      #{gensyms\ 2573}#
                      #{body\ 2574}#
                      #{alternate\ 2575}#)
               (make-struct
                 (vector-ref %expanded-vtables 14)
                 0
                 #{src\ 2567}#
                 #{req\ 2568}#
                 #{opt\ 2569}#
                 #{rest\ 2570}#
                 #{kw\ 2571}#
                 #{inits\ 2572}#
                 #{gensyms\ 2573}#
                 #{body\ 2574}#
                 #{alternate\ 2575}#)))
           (#{make-lambda\ 198}#
             (lambda (#{src\ 2585}# #{meta\ 2586}# #{body\ 2587}#)
               (make-struct
                 (vector-ref %expanded-vtables 13)
                 0
                 #{src\ 2585}#
                 #{meta\ 2586}#
                 #{body\ 2587}#)))
           (#{make-sequence\ 196}#
             (lambda (#{src\ 2591}# #{exps\ 2592}#)
               (make-struct
                 (vector-ref %expanded-vtables 12)
                 0
                 #{src\ 2591}#
                 #{exps\ 2592}#)))
           (#{make-application\ 194}#
             (lambda (#{src\ 2595}# #{proc\ 2596}# #{args\ 2597}#)
               (make-struct
                 (vector-ref %expanded-vtables 11)
                 0
                 #{src\ 2595}#
                 #{proc\ 2596}#
                 #{args\ 2597}#)))
           (#{make-conditional\ 192}#
             (lambda (#{src\ 2601}#
                      #{test\ 2602}#
                      #{consequent\ 2603}#
                      #{alternate\ 2604}#)
               (make-struct
                 (vector-ref %expanded-vtables 10)
                 0
                 #{src\ 2601}#
                 #{test\ 2602}#
                 #{consequent\ 2603}#
                 #{alternate\ 2604}#)))
           (#{make-toplevel-define\ 190}#
             (lambda (#{src\ 2609}# #{name\ 2610}# #{exp\ 2611}#)
               (make-struct
                 (vector-ref %expanded-vtables 9)
                 0
                 #{src\ 2609}#
                 #{name\ 2610}#
                 #{exp\ 2611}#)))
           (#{make-toplevel-set\ 188}#
             (lambda (#{src\ 2615}# #{name\ 2616}# #{exp\ 2617}#)
               (make-struct
                 (vector-ref %expanded-vtables 8)
                 0
                 #{src\ 2615}#
                 #{name\ 2616}#
                 #{exp\ 2617}#)))
           (#{make-toplevel-ref\ 186}#
             (lambda (#{src\ 2621}# #{name\ 2622}#)
               (make-struct
                 (vector-ref %expanded-vtables 7)
                 0
                 #{src\ 2621}#
                 #{name\ 2622}#)))
           (#{make-module-set\ 184}#
             (lambda (#{src\ 2625}#
                      #{mod\ 2626}#
                      #{name\ 2627}#
                      #{public?\ 2628}#
                      #{exp\ 2629}#)
               (make-struct
                 (vector-ref %expanded-vtables 6)
                 0
                 #{src\ 2625}#
                 #{mod\ 2626}#
                 #{name\ 2627}#
                 #{public?\ 2628}#
                 #{exp\ 2629}#)))
           (#{make-module-ref\ 182}#
             (lambda (#{src\ 2635}#
                      #{mod\ 2636}#
                      #{name\ 2637}#
                      #{public?\ 2638}#)
               (make-struct
                 (vector-ref %expanded-vtables 5)
                 0
                 #{src\ 2635}#
                 #{mod\ 2636}#
                 #{name\ 2637}#
                 #{public?\ 2638}#)))
           (#{make-lexical-set\ 180}#
             (lambda (#{src\ 2643}#
                      #{name\ 2644}#
                      #{gensym\ 2645}#
                      #{exp\ 2646}#)
               (make-struct
                 (vector-ref %expanded-vtables 4)
                 0
                 #{src\ 2643}#
                 #{name\ 2644}#
                 #{gensym\ 2645}#
                 #{exp\ 2646}#)))
           (#{make-lexical-ref\ 178}#
             (lambda (#{src\ 2651}# #{name\ 2652}# #{gensym\ 2653}#)
               (make-struct
                 (vector-ref %expanded-vtables 3)
                 0
                 #{src\ 2651}#
                 #{name\ 2652}#
                 #{gensym\ 2653}#)))
           (#{make-primitive-ref\ 176}#
             (lambda (#{src\ 2657}# #{name\ 2658}#)
               (make-struct
                 (vector-ref %expanded-vtables 2)
                 0
                 #{src\ 2657}#
                 #{name\ 2658}#)))
           (#{make-const\ 174}#
             (lambda (#{src\ 2661}# #{exp\ 2662}#)
               (make-struct
                 (vector-ref %expanded-vtables 1)
                 0
                 #{src\ 2661}#
                 #{exp\ 2662}#)))
           (#{make-void\ 172}#
             (lambda (#{src\ 2665}#)
               (make-struct
                 (vector-ref %expanded-vtables 0)
                 0
                 #{src\ 2665}#))))
    (begin
      (#{global-extend\ 303}#
        'local-syntax
        'letrec-syntax
        #t)
      (#{global-extend\ 303}#
        'local-syntax
        'let-syntax
        #f)
      (#{global-extend\ 303}#
        'core
        'fluid-let-syntax
        (lambda (#{e\ 2667}#
                 #{r\ 2668}#
                 #{w\ 2669}#
                 #{s\ 2670}#
                 #{mod\ 2671}#)
          ((lambda (#{tmp\ 2677}#)
             ((lambda (#{tmp\ 2678}#)
                (if (if #{tmp\ 2678}#
                      (apply (lambda (#{_\ 2684}#
                                      #{var\ 2685}#
                                      #{val\ 2686}#
                                      #{e1\ 2687}#
                                      #{e2\ 2688}#)
                               (#{valid-bound-ids?\ 370}# #{var\ 2685}#))
                             #{tmp\ 2678}#)
                      #f)
                  (apply (lambda (#{_\ 2695}#
                                  #{var\ 2696}#
                                  #{val\ 2697}#
                                  #{e1\ 2698}#
                                  #{e2\ 2699}#)
                           (let ((#{names\ 2701}#
                                   (map (lambda (#{x\ 2702}#)
                                          (#{id-var-name\ 364}#
                                            #{x\ 2702}#
                                            #{w\ 2669}#))
                                        #{var\ 2696}#)))
                             (begin
                               (for-each
                                 (lambda (#{id\ 2705}# #{n\ 2706}#)
                                   (let ((#{atom-key\ 2711}#
                                           (#{binding-type\ 290}#
                                             (#{lookup\ 301}#
                                               #{n\ 2706}#
                                               #{r\ 2668}#
                                               #{mod\ 2671}#))))
                                     (if (memv #{atom-key\ 2711}#
                                               '(displaced-lexical))
                                       (syntax-violation
                                         'fluid-let-syntax
                                         "identifier out of context"
                                         #{e\ 2667}#
                                         (#{source-wrap\ 378}#
                                           #{id\ 2705}#
                                           #{w\ 2669}#
                                           #{s\ 2670}#
                                           #{mod\ 2671}#)))))
                                 #{var\ 2696}#
                                 #{names\ 2701}#)
                               (#{chi-body\ 400}#
                                 (cons #{e1\ 2698}# #{e2\ 2699}#)
                                 (#{source-wrap\ 378}#
                                   #{e\ 2667}#
                                   #{w\ 2669}#
                                   #{s\ 2670}#
                                   #{mod\ 2671}#)
                                 (#{extend-env\ 295}#
                                   #{names\ 2701}#
                                   (let ((#{trans-r\ 2716}#
                                           (#{macros-only-env\ 299}#
                                             #{r\ 2668}#)))
                                     (map (lambda (#{x\ 2717}#)
                                            (cons 'macro
                                                  (#{eval-local-transformer\ 404}#
                                                    (#{chi\ 392}#
                                                      #{x\ 2717}#
                                                      #{trans-r\ 2716}#
                                                      #{w\ 2669}#
                                                      #{mod\ 2671}#)
                                                    #{mod\ 2671}#)))
                                          #{val\ 2697}#))
                                   #{r\ 2668}#)
                                 #{w\ 2669}#
                                 #{mod\ 2671}#))))
                         #{tmp\ 2678}#)
                  ((lambda (#{_\ 2722}#)
                     (syntax-violation
                       'fluid-let-syntax
                       "bad syntax"
                       (#{source-wrap\ 378}#
                         #{e\ 2667}#
                         #{w\ 2669}#
                         #{s\ 2670}#
                         #{mod\ 2671}#)))
                   #{tmp\ 2677}#)))
              ($sc-dispatch
                #{tmp\ 2677}#
                '(any #(each (any any)) any . each-any))))
           #{e\ 2667}#)))
      (#{global-extend\ 303}#
        'core
        'quote
        (lambda (#{e\ 2723}#
                 #{r\ 2724}#
                 #{w\ 2725}#
                 #{s\ 2726}#
                 #{mod\ 2727}#)
          ((lambda (#{tmp\ 2733}#)
             ((lambda (#{tmp\ 2734}#)
                (if #{tmp\ 2734}#
                  (apply (lambda (#{_\ 2737}# #{e\ 2738}#)
                           (#{build-data\ 257}#
                             #{s\ 2726}#
                             (#{strip\ 418}# #{e\ 2738}# #{w\ 2725}#)))
                         #{tmp\ 2734}#)
                  ((lambda (#{_\ 2740}#)
                     (syntax-violation
                       'quote
                       "bad syntax"
                       (#{source-wrap\ 378}#
                         #{e\ 2723}#
                         #{w\ 2725}#
                         #{s\ 2726}#
                         #{mod\ 2727}#)))
                   #{tmp\ 2733}#)))
              ($sc-dispatch #{tmp\ 2733}# (quote (any any)))))
           #{e\ 2723}#)))
      (#{global-extend\ 303}#
        'core
        'syntax
        (letrec ((#{regen\ 2756}#
                   (lambda (#{x\ 2757}#)
                     (let ((#{atom-key\ 2761}# (car #{x\ 2757}#)))
                       (if (memv #{atom-key\ 2761}# (quote (ref)))
                         (#{build-lexical-reference\ 235}#
                           'value
                           #f
                           (cadr #{x\ 2757}#)
                           (cadr #{x\ 2757}#))
                         (if (memv #{atom-key\ 2761}# (quote (primitive)))
                           (#{build-primref\ 255}# #f (cadr #{x\ 2757}#))
                           (if (memv #{atom-key\ 2761}# (quote (quote)))
                             (#{build-data\ 257}# #f (cadr #{x\ 2757}#))
                             (if (memv #{atom-key\ 2761}# (quote (lambda)))
                               (if (list? (cadr #{x\ 2757}#))
                                 (#{build-simple-lambda\ 249}#
                                   #f
                                   (cadr #{x\ 2757}#)
                                   #f
                                   (cadr #{x\ 2757}#)
                                   '()
                                   (#{regen\ 2756}# (caddr #{x\ 2757}#)))
                                 (error "how did we get here" #{x\ 2757}#))
                               (#{build-application\ 229}#
                                 #f
                                 (#{build-primref\ 255}# #f (car #{x\ 2757}#))
                                 (map #{regen\ 2756}#
                                      (cdr #{x\ 2757}#))))))))))
                 (#{gen-vector\ 2754}#
                   (lambda (#{x\ 2773}#)
                     (if (eq? (car #{x\ 2773}#) (quote list))
                       (cons (quote vector) (cdr #{x\ 2773}#))
                       (if (eq? (car #{x\ 2773}#) (quote quote))
                         (list 'quote
                               (list->vector (cadr #{x\ 2773}#)))
                         (list (quote list->vector) #{x\ 2773}#)))))
                 (#{gen-append\ 2752}#
                   (lambda (#{x\ 2783}# #{y\ 2784}#)
                     (if (equal? #{y\ 2784}# (quote (quote ())))
                       #{x\ 2783}#
                       (list (quote append) #{x\ 2783}# #{y\ 2784}#))))
                 (#{gen-cons\ 2750}#
                   (lambda (#{x\ 2788}# #{y\ 2789}#)
                     (let ((#{atom-key\ 2794}# (car #{y\ 2789}#)))
                       (if (memv #{atom-key\ 2794}# (quote (quote)))
                         (if (eq? (car #{x\ 2788}#) (quote quote))
                           (list 'quote
                                 (cons (cadr #{x\ 2788}#) (cadr #{y\ 2789}#)))
                           (if (eq? (cadr #{y\ 2789}#) (quote ()))
                             (list (quote list) #{x\ 2788}#)
                             (list (quote cons) #{x\ 2788}# #{y\ 2789}#)))
                         (if (memv #{atom-key\ 2794}# (quote (list)))
                           (cons 'list
                                 (cons #{x\ 2788}# (cdr #{y\ 2789}#)))
                           (list (quote cons) #{x\ 2788}# #{y\ 2789}#))))))
                 (#{gen-map\ 2748}#
                   (lambda (#{e\ 2803}# #{map-env\ 2804}#)
                     (let ((#{formals\ 2809}# (map cdr #{map-env\ 2804}#))
                           (#{actuals\ 2810}#
                             (map (lambda (#{x\ 2811}#)
                                    (list (quote ref) (car #{x\ 2811}#)))
                                  #{map-env\ 2804}#)))
                       (if (eq? (car #{e\ 2803}#) (quote ref))
                         (car #{actuals\ 2810}#)
                         (if (and-map
                               (lambda (#{x\ 2818}#)
                                 (if (eq? (car #{x\ 2818}#) (quote ref))
                                   (memq (cadr #{x\ 2818}#) #{formals\ 2809}#)
                                   #f))
                               (cdr #{e\ 2803}#))
                           (cons 'map
                                 (cons (list 'primitive
                                             (car #{e\ 2803}#))
                                       (map (let ((#{r\ 2824}#
                                                    (map cons
                                                         #{formals\ 2809}#
                                                         #{actuals\ 2810}#)))
                                              (lambda (#{x\ 2825}#)
                                                (cdr (assq (cadr #{x\ 2825}#)
                                                           #{r\ 2824}#))))
                                            (cdr #{e\ 2803}#))))
                           (cons 'map
                                 (cons (list 'lambda
                                             #{formals\ 2809}#
                                             #{e\ 2803}#)
                                       #{actuals\ 2810}#)))))))
                 (#{gen-mappend\ 2746}#
                   (lambda (#{e\ 2829}# #{map-env\ 2830}#)
                     (list 'apply
                           '(primitive append)
                           (#{gen-map\ 2748}# #{e\ 2829}# #{map-env\ 2830}#))))
                 (#{gen-ref\ 2744}#
                   (lambda (#{src\ 2834}#
                            #{var\ 2835}#
                            #{level\ 2836}#
                            #{maps\ 2837}#)
                     (if (#{fx=\ 212}# #{level\ 2836}# 0)
                       (values #{var\ 2835}# #{maps\ 2837}#)
                       (if (null? #{maps\ 2837}#)
                         (syntax-violation
                           'syntax
                           "missing ellipsis"
                           #{src\ 2834}#)
                         (call-with-values
                           (lambda ()
                             (#{gen-ref\ 2744}#
                               #{src\ 2834}#
                               #{var\ 2835}#
                               (#{fx-\ 210}# #{level\ 2836}# 1)
                               (cdr #{maps\ 2837}#)))
                           (lambda (#{outer-var\ 2842}# #{outer-maps\ 2843}#)
                             (let ((#{b\ 2847}#
                                     (assq #{outer-var\ 2842}#
                                           (car #{maps\ 2837}#))))
                               (if #{b\ 2847}#
                                 (values (cdr #{b\ 2847}#) #{maps\ 2837}#)
                                 (let ((#{inner-var\ 2849}#
                                         (#{gen-var\ 420}# (quote tmp))))
                                   (values
                                     #{inner-var\ 2849}#
                                     (cons (cons (cons #{outer-var\ 2842}#
                                                       #{inner-var\ 2849}#)
                                                 (car #{maps\ 2837}#))
                                           #{outer-maps\ 2843}#)))))))))))
                 (#{gen-syntax\ 2742}#
                   (lambda (#{src\ 2850}#
                            #{e\ 2851}#
                            #{r\ 2852}#
                            #{maps\ 2853}#
                            #{ellipsis?\ 2854}#
                            #{mod\ 2855}#)
                     (if (#{id?\ 307}# #{e\ 2851}#)
                       (let ((#{label\ 2863}#
                               (#{id-var-name\ 364}#
                                 #{e\ 2851}#
                                 '(()))))
                         (let ((#{b\ 2866}#
                                 (#{lookup\ 301}#
                                   #{label\ 2863}#
                                   #{r\ 2852}#
                                   #{mod\ 2855}#)))
                           (if (eq? (#{binding-type\ 290}# #{b\ 2866}#)
                                    'syntax)
                             (call-with-values
                               (lambda ()
                                 (let ((#{var.lev\ 2868}#
                                         (#{binding-value\ 292}# #{b\ 2866}#)))
                                   (#{gen-ref\ 2744}#
                                     #{src\ 2850}#
                                     (car #{var.lev\ 2868}#)
                                     (cdr #{var.lev\ 2868}#)
                                     #{maps\ 2853}#)))
                               (lambda (#{var\ 2869}# #{maps\ 2870}#)
                                 (values
                                   (list (quote ref) #{var\ 2869}#)
                                   #{maps\ 2870}#)))
                             (if (#{ellipsis?\ 2854}# #{e\ 2851}#)
                               (syntax-violation
                                 'syntax
                                 "misplaced ellipsis"
                                 #{src\ 2850}#)
                               (values
                                 (list (quote quote) #{e\ 2851}#)
                                 #{maps\ 2853}#)))))
                       ((lambda (#{tmp\ 2875}#)
                          ((lambda (#{tmp\ 2876}#)
                             (if (if #{tmp\ 2876}#
                                   (apply (lambda (#{dots\ 2879}# #{e\ 2880}#)
                                            (#{ellipsis?\ 2854}#
                                              #{dots\ 2879}#))
                                          #{tmp\ 2876}#)
                                   #f)
                               (apply (lambda (#{dots\ 2883}# #{e\ 2884}#)
                                        (#{gen-syntax\ 2742}#
                                          #{src\ 2850}#
                                          #{e\ 2884}#
                                          #{r\ 2852}#
                                          #{maps\ 2853}#
                                          (lambda (#{x\ 2885}#) #f)
                                          #{mod\ 2855}#))
                                      #{tmp\ 2876}#)
                               ((lambda (#{tmp\ 2887}#)
                                  (if (if #{tmp\ 2887}#
                                        (apply (lambda (#{x\ 2891}#
                                                        #{dots\ 2892}#
                                                        #{y\ 2893}#)
                                                 (#{ellipsis?\ 2854}#
                                                   #{dots\ 2892}#))
                                               #{tmp\ 2887}#)
                                        #f)
                                    (apply (lambda (#{x\ 2897}#
                                                    #{dots\ 2898}#
                                                    #{y\ 2899}#)
                                             (letrec ((#{f\ 2903}#
                                                        (lambda (#{y\ 2904}#
                                                                 #{k\ 2905}#)
                                                          ((lambda (#{tmp\ 2912}#)
                                                             ((lambda (#{tmp\ 2913}#)
                                                                (if (if #{tmp\ 2913}#
                                                                      (apply (lambda (#{dots\ 2916}#
                                                                                      #{y\ 2917}#)
                                                                               (#{ellipsis?\ 2854}#
                                                                                 #{dots\ 2916}#))
                                                                             #{tmp\ 2913}#)
                                                                      #f)
                                                                  (apply (lambda (#{dots\ 2920}#
                                                                                  #{y\ 2921}#)
                                                                           (#{f\ 2903}#
                                                                             #{y\ 2921}#
                                                                             (lambda (#{maps\ 2922}#)
                                                                               (call-with-values
                                                                                 (lambda ()
                                                                                   (#{k\ 2905}#
                                                                                     (cons '()
                                                                                           #{maps\ 2922}#)))
                                                                                 (lambda (#{x\ 2924}#
                                                                                          #{maps\ 2925}#)
                                                                                   (if (null? (car #{maps\ 2925}#))
                                                                                     (syntax-violation
                                                                                       'syntax
                                                                                       "extra ellipsis"
                                                                                       #{src\ 2850}#)
                                                                                     (values
                                                                                       (#{gen-mappend\ 2746}#
                                                                                         #{x\ 2924}#
                                                                                         (car #{maps\ 2925}#))
                                                                                       (cdr #{maps\ 2925}#))))))))
                                                                         #{tmp\ 2913}#)
                                                                  ((lambda (#{_\ 2929}#)
                                                                     (call-with-values
                                                                       (lambda ()
                                                                         (#{gen-syntax\ 2742}#
                                                                           #{src\ 2850}#
                                                                           #{y\ 2904}#
                                                                           #{r\ 2852}#
                                                                           #{maps\ 2853}#
                                                                           #{ellipsis?\ 2854}#
                                                                           #{mod\ 2855}#))
                                                                       (lambda (#{y\ 2930}#
                                                                                #{maps\ 2931}#)
                                                                         (call-with-values
                                                                           (lambda ()
                                                                             (#{k\ 2905}#
                                                                               #{maps\ 2931}#))
                                                                           (lambda (#{x\ 2934}#
                                                                                    #{maps\ 2935}#)
                                                                             (values
                                                                               (#{gen-append\ 2752}#
                                                                                 #{x\ 2934}#
                                                                                 #{y\ 2930}#)
                                                                               #{maps\ 2935}#))))))
                                                                   #{tmp\ 2912}#)))
                                                              ($sc-dispatch
                                                                #{tmp\ 2912}#
                                                                '(any . any))))
                                                           #{y\ 2904}#))))
                                               (#{f\ 2903}#
                                                 #{y\ 2899}#
                                                 (lambda (#{maps\ 2906}#)
                                                   (call-with-values
                                                     (lambda ()
                                                       (#{gen-syntax\ 2742}#
                                                         #{src\ 2850}#
                                                         #{x\ 2897}#
                                                         #{r\ 2852}#
                                                         (cons '()
                                                               #{maps\ 2906}#)
                                                         #{ellipsis?\ 2854}#
                                                         #{mod\ 2855}#))
                                                     (lambda (#{x\ 2908}#
                                                              #{maps\ 2909}#)
                                                       (if (null? (car #{maps\ 2909}#))
                                                         (syntax-violation
                                                           'syntax
                                                           "extra ellipsis"
                                                           #{src\ 2850}#)
                                                         (values
                                                           (#{gen-map\ 2748}#
                                                             #{x\ 2908}#
                                                             (car #{maps\ 2909}#))
                                                           (cdr #{maps\ 2909}#)))))))))
                                           #{tmp\ 2887}#)
                                    ((lambda (#{tmp\ 2938}#)
                                       (if #{tmp\ 2938}#
                                         (apply (lambda (#{x\ 2941}#
                                                         #{y\ 2942}#)
                                                  (call-with-values
                                                    (lambda ()
                                                      (#{gen-syntax\ 2742}#
                                                        #{src\ 2850}#
                                                        #{x\ 2941}#
                                                        #{r\ 2852}#
                                                        #{maps\ 2853}#
                                                        #{ellipsis?\ 2854}#
                                                        #{mod\ 2855}#))
                                                    (lambda (#{x\ 2943}#
                                                             #{maps\ 2944}#)
                                                      (call-with-values
                                                        (lambda ()
                                                          (#{gen-syntax\ 2742}#
                                                            #{src\ 2850}#
                                                            #{y\ 2942}#
                                                            #{r\ 2852}#
                                                            #{maps\ 2944}#
                                                            #{ellipsis?\ 2854}#
                                                            #{mod\ 2855}#))
                                                        (lambda (#{y\ 2947}#
                                                                 #{maps\ 2948}#)
                                                          (values
                                                            (#{gen-cons\ 2750}#
                                                              #{x\ 2943}#
                                                              #{y\ 2947}#)
                                                            #{maps\ 2948}#))))))
                                                #{tmp\ 2938}#)
                                         ((lambda (#{tmp\ 2951}#)
                                            (if #{tmp\ 2951}#
                                              (apply (lambda (#{e1\ 2954}#
                                                              #{e2\ 2955}#)
                                                       (call-with-values
                                                         (lambda ()
                                                           (#{gen-syntax\ 2742}#
                                                             #{src\ 2850}#
                                                             (cons #{e1\ 2954}#
                                                                   #{e2\ 2955}#)
                                                             #{r\ 2852}#
                                                             #{maps\ 2853}#
                                                             #{ellipsis?\ 2854}#
                                                             #{mod\ 2855}#))
                                                         (lambda (#{e\ 2957}#
                                                                  #{maps\ 2958}#)
                                                           (values
                                                             (#{gen-vector\ 2754}#
                                                               #{e\ 2957}#)
                                                             #{maps\ 2958}#))))
                                                     #{tmp\ 2951}#)
                                              ((lambda (#{_\ 2962}#)
                                                 (values
                                                   (list 'quote
                                                         #{e\ 2851}#)
                                                   #{maps\ 2853}#))
                                               #{tmp\ 2875}#)))
                                          ($sc-dispatch
                                            #{tmp\ 2875}#
                                            '#(vector (any . each-any))))))
                                     ($sc-dispatch
                                       #{tmp\ 2875}#
                                       '(any . any)))))
                                ($sc-dispatch
                                  #{tmp\ 2875}#
                                  '(any any . any)))))
                           ($sc-dispatch #{tmp\ 2875}# (quote (any any)))))
                        #{e\ 2851}#)))))
          (lambda (#{e\ 2964}#
                   #{r\ 2965}#
                   #{w\ 2966}#
                   #{s\ 2967}#
                   #{mod\ 2968}#)
            (let ((#{e\ 2975}#
                    (#{source-wrap\ 378}#
                      #{e\ 2964}#
                      #{w\ 2966}#
                      #{s\ 2967}#
                      #{mod\ 2968}#)))
              ((lambda (#{tmp\ 2976}#)
                 ((lambda (#{tmp\ 2977}#)
                    (if #{tmp\ 2977}#
                      (apply (lambda (#{_\ 2980}# #{x\ 2981}#)
                               (call-with-values
                                 (lambda ()
                                   (#{gen-syntax\ 2742}#
                                     #{e\ 2975}#
                                     #{x\ 2981}#
                                     #{r\ 2965}#
                                     '()
                                     #{ellipsis?\ 408}#
                                     #{mod\ 2968}#))
                                 (lambda (#{e\ 2982}# #{maps\ 2983}#)
                                   (#{regen\ 2756}# #{e\ 2982}#))))
                             #{tmp\ 2977}#)
                      ((lambda (#{_\ 2987}#)
                         (syntax-violation
                           'syntax
                           "bad `syntax' form"
                           #{e\ 2975}#))
                       #{tmp\ 2976}#)))
                  ($sc-dispatch #{tmp\ 2976}# (quote (any any)))))
               #{e\ 2975}#)))))
      (#{global-extend\ 303}#
        'core
        'lambda
        (lambda (#{e\ 2988}#
                 #{r\ 2989}#
                 #{w\ 2990}#
                 #{s\ 2991}#
                 #{mod\ 2992}#)
          ((lambda (#{tmp\ 2998}#)
             ((lambda (#{tmp\ 2999}#)
                (if #{tmp\ 2999}#
                  (apply (lambda (#{_\ 3004}#
                                  #{args\ 3005}#
                                  #{e1\ 3006}#
                                  #{e2\ 3007}#)
                           (call-with-values
                             (lambda ()
                               (#{lambda-formals\ 410}# #{args\ 3005}#))
                             (lambda (#{req\ 3008}#
                                      #{opt\ 3009}#
                                      #{rest\ 3010}#
                                      #{kw\ 3011}#)
                               (letrec ((#{lp\ 3019}#
                                          (lambda (#{body\ 3020}#
                                                   #{meta\ 3021}#)
                                            ((lambda (#{tmp\ 3023}#)
                                               ((lambda (#{tmp\ 3024}#)
                                                  (if (if #{tmp\ 3024}#
                                                        (apply (lambda (#{docstring\ 3028}#
                                                                        #{e1\ 3029}#
                                                                        #{e2\ 3030}#)
                                                                 (string?
                                                                   (syntax->datum
                                                                     #{docstring\ 3028}#)))
                                                               #{tmp\ 3024}#)
                                                        #f)
                                                    (apply (lambda (#{docstring\ 3034}#
                                                                    #{e1\ 3035}#
                                                                    #{e2\ 3036}#)
                                                             (#{lp\ 3019}#
                                                               (cons #{e1\ 3035}#
                                                                     #{e2\ 3036}#)
                                                               (append
                                                                 #{meta\ 3021}#
                                                                 (list (cons 'documentation
                                                                             (syntax->datum
                                                                               #{docstring\ 3034}#))))))
                                                           #{tmp\ 3024}#)
                                                    ((lambda (#{tmp\ 3039}#)
                                                       (if #{tmp\ 3039}#
                                                         (apply (lambda (#{k\ 3044}#
                                                                         #{v\ 3045}#
                                                                         #{e1\ 3046}#
                                                                         #{e2\ 3047}#)
                                                                  (#{lp\ 3019}#
                                                                    (cons #{e1\ 3046}#
                                                                          #{e2\ 3047}#)
                                                                    (append
                                                                      #{meta\ 3021}#
                                                                      (syntax->datum
                                                                        (map cons
                                                                             #{k\ 3044}#
                                                                             #{v\ 3045}#)))))
                                                                #{tmp\ 3039}#)
                                                         ((lambda (#{_\ 3052}#)
                                                            (#{chi-simple-lambda\ 412}#
                                                              #{e\ 2988}#
                                                              #{r\ 2989}#
                                                              #{w\ 2990}#
                                                              #{s\ 2991}#
                                                              #{mod\ 2992}#
                                                              #{req\ 3008}#
                                                              #{rest\ 3010}#
                                                              #{meta\ 3021}#
                                                              #{body\ 3020}#))
                                                          #{tmp\ 3023}#)))
                                                     ($sc-dispatch
                                                       #{tmp\ 3023}#
                                                       '(#(vector
                                                           #(each (any . any)))
                                                         any
                                                         .
                                                         each-any)))))
                                                ($sc-dispatch
                                                  #{tmp\ 3023}#
                                                  '(any any . each-any))))
                                             #{body\ 3020}#))))
                                 (#{lp\ 3019}#
                                   (cons #{e1\ 3006}# #{e2\ 3007}#)
                                   '())))))
                         #{tmp\ 2999}#)
                  ((lambda (#{_\ 3054}#)
                     (syntax-violation
                       'lambda
                       "bad lambda"
                       #{e\ 2988}#))
                   #{tmp\ 2998}#)))
              ($sc-dispatch
                #{tmp\ 2998}#
                '(any any any . each-any))))
           #{e\ 2988}#)))
      (#{global-extend\ 303}#
        'core
        'lambda*
        (lambda (#{e\ 3055}#
                 #{r\ 3056}#
                 #{w\ 3057}#
                 #{s\ 3058}#
                 #{mod\ 3059}#)
          ((lambda (#{tmp\ 3065}#)
             ((lambda (#{tmp\ 3066}#)
                (if #{tmp\ 3066}#
                  (apply (lambda (#{_\ 3071}#
                                  #{args\ 3072}#
                                  #{e1\ 3073}#
                                  #{e2\ 3074}#)
                           (call-with-values
                             (lambda ()
                               (#{chi-lambda-case\ 416}#
                                 #{e\ 3055}#
                                 #{r\ 3056}#
                                 #{w\ 3057}#
                                 #{s\ 3058}#
                                 #{mod\ 3059}#
                                 #{lambda*-formals\ 414}#
                                 (list (cons #{args\ 3072}#
                                             (cons #{e1\ 3073}#
                                                   #{e2\ 3074}#)))))
                             (lambda (#{meta\ 3076}# #{lcase\ 3077}#)
                               (#{build-case-lambda\ 251}#
                                 #{s\ 3058}#
                                 #{meta\ 3076}#
                                 #{lcase\ 3077}#))))
                         #{tmp\ 3066}#)
                  ((lambda (#{_\ 3081}#)
                     (syntax-violation
                       'lambda
                       "bad lambda*"
                       #{e\ 3055}#))
                   #{tmp\ 3065}#)))
              ($sc-dispatch
                #{tmp\ 3065}#
                '(any any any . each-any))))
           #{e\ 3055}#)))
      (#{global-extend\ 303}#
        'core
        'case-lambda
        (lambda (#{e\ 3082}#
                 #{r\ 3083}#
                 #{w\ 3084}#
                 #{s\ 3085}#
                 #{mod\ 3086}#)
          ((lambda (#{tmp\ 3092}#)
             ((lambda (#{tmp\ 3093}#)
                (if #{tmp\ 3093}#
                  (apply (lambda (#{_\ 3101}#
                                  #{args\ 3102}#
                                  #{e1\ 3103}#
                                  #{e2\ 3104}#
                                  #{args*\ 3105}#
                                  #{e1*\ 3106}#
                                  #{e2*\ 3107}#)
                           (call-with-values
                             (lambda ()
                               (#{chi-lambda-case\ 416}#
                                 #{e\ 3082}#
                                 #{r\ 3083}#
                                 #{w\ 3084}#
                                 #{s\ 3085}#
                                 #{mod\ 3086}#
                                 #{lambda-formals\ 410}#
                                 (cons (cons #{args\ 3102}#
                                             (cons #{e1\ 3103}# #{e2\ 3104}#))
                                       (map (lambda (#{tmp\ 3111}#
                                                     #{tmp\ 3110}#
                                                     #{tmp\ 3109}#)
                                              (cons #{tmp\ 3109}#
                                                    (cons #{tmp\ 3110}#
                                                          #{tmp\ 3111}#)))
                                            #{e2*\ 3107}#
                                            #{e1*\ 3106}#
                                            #{args*\ 3105}#))))
                             (lambda (#{meta\ 3113}# #{lcase\ 3114}#)
                               (#{build-case-lambda\ 251}#
                                 #{s\ 3085}#
                                 #{meta\ 3113}#
                                 #{lcase\ 3114}#))))
                         #{tmp\ 3093}#)
                  ((lambda (#{_\ 3118}#)
                     (syntax-violation
                       'case-lambda
                       "bad case-lambda"
                       #{e\ 3082}#))
                   #{tmp\ 3092}#)))
              ($sc-dispatch
                #{tmp\ 3092}#
                '(any (any any . each-any)
                      .
                      #(each (any any . each-any))))))
           #{e\ 3082}#)))
      (#{global-extend\ 303}#
        'core
        'case-lambda*
        (lambda (#{e\ 3119}#
                 #{r\ 3120}#
                 #{w\ 3121}#
                 #{s\ 3122}#
                 #{mod\ 3123}#)
          ((lambda (#{tmp\ 3129}#)
             ((lambda (#{tmp\ 3130}#)
                (if #{tmp\ 3130}#
                  (apply (lambda (#{_\ 3138}#
                                  #{args\ 3139}#
                                  #{e1\ 3140}#
                                  #{e2\ 3141}#
                                  #{args*\ 3142}#
                                  #{e1*\ 3143}#
                                  #{e2*\ 3144}#)
                           (call-with-values
                             (lambda ()
                               (#{chi-lambda-case\ 416}#
                                 #{e\ 3119}#
                                 #{r\ 3120}#
                                 #{w\ 3121}#
                                 #{s\ 3122}#
                                 #{mod\ 3123}#
                                 #{lambda*-formals\ 414}#
                                 (cons (cons #{args\ 3139}#
                                             (cons #{e1\ 3140}# #{e2\ 3141}#))
                                       (map (lambda (#{tmp\ 3148}#
                                                     #{tmp\ 3147}#
                                                     #{tmp\ 3146}#)
                                              (cons #{tmp\ 3146}#
                                                    (cons #{tmp\ 3147}#
                                                          #{tmp\ 3148}#)))
                                            #{e2*\ 3144}#
                                            #{e1*\ 3143}#
                                            #{args*\ 3142}#))))
                             (lambda (#{meta\ 3150}# #{lcase\ 3151}#)
                               (#{build-case-lambda\ 251}#
                                 #{s\ 3122}#
                                 #{meta\ 3150}#
                                 #{lcase\ 3151}#))))
                         #{tmp\ 3130}#)
                  ((lambda (#{_\ 3155}#)
                     (syntax-violation
                       'case-lambda
                       "bad case-lambda*"
                       #{e\ 3119}#))
                   #{tmp\ 3129}#)))
              ($sc-dispatch
                #{tmp\ 3129}#
                '(any (any any . each-any)
                      .
                      #(each (any any . each-any))))))
           #{e\ 3119}#)))
      (#{global-extend\ 303}#
        'core
        'let
        (letrec ((#{chi-let\ 3157}#
                   (lambda (#{e\ 3158}#
                            #{r\ 3159}#
                            #{w\ 3160}#
                            #{s\ 3161}#
                            #{mod\ 3162}#
                            #{constructor\ 3163}#
                            #{ids\ 3164}#
                            #{vals\ 3165}#
                            #{exps\ 3166}#)
                     (if (not (#{valid-bound-ids?\ 370}# #{ids\ 3164}#))
                       (syntax-violation
                         'let
                         "duplicate bound variable"
                         #{e\ 3158}#)
                       (let ((#{labels\ 3178}#
                               (#{gen-labels\ 325}# #{ids\ 3164}#))
                             (#{new-vars\ 3179}#
                               (map #{gen-var\ 420}# #{ids\ 3164}#)))
                         (let ((#{nw\ 3182}#
                                 (#{make-binding-wrap\ 354}#
                                   #{ids\ 3164}#
                                   #{labels\ 3178}#
                                   #{w\ 3160}#))
                               (#{nr\ 3183}#
                                 (#{extend-var-env\ 297}#
                                   #{labels\ 3178}#
                                   #{new-vars\ 3179}#
                                   #{r\ 3159}#)))
                           (#{constructor\ 3163}#
                             #{s\ 3161}#
                             (map syntax->datum #{ids\ 3164}#)
                             #{new-vars\ 3179}#
                             (map (lambda (#{x\ 3184}#)
                                    (#{chi\ 392}#
                                      #{x\ 3184}#
                                      #{r\ 3159}#
                                      #{w\ 3160}#
                                      #{mod\ 3162}#))
                                  #{vals\ 3165}#)
                             (#{chi-body\ 400}#
                               #{exps\ 3166}#
                               (#{source-wrap\ 378}#
                                 #{e\ 3158}#
                                 #{nw\ 3182}#
                                 #{s\ 3161}#
                                 #{mod\ 3162}#)
                               #{nr\ 3183}#
                               #{nw\ 3182}#
                               #{mod\ 3162}#))))))))
          (lambda (#{e\ 3186}#
                   #{r\ 3187}#
                   #{w\ 3188}#
                   #{s\ 3189}#
                   #{mod\ 3190}#)
            ((lambda (#{tmp\ 3196}#)
               ((lambda (#{tmp\ 3197}#)
                  (if (if #{tmp\ 3197}#
                        (apply (lambda (#{_\ 3203}#
                                        #{id\ 3204}#
                                        #{val\ 3205}#
                                        #{e1\ 3206}#
                                        #{e2\ 3207}#)
                                 (and-map #{id?\ 307}# #{id\ 3204}#))
                               #{tmp\ 3197}#)
                        #f)
                    (apply (lambda (#{_\ 3214}#
                                    #{id\ 3215}#
                                    #{val\ 3216}#
                                    #{e1\ 3217}#
                                    #{e2\ 3218}#)
                             (#{chi-let\ 3157}#
                               #{e\ 3186}#
                               #{r\ 3187}#
                               #{w\ 3188}#
                               #{s\ 3189}#
                               #{mod\ 3190}#
                               #{build-let\ 261}#
                               #{id\ 3215}#
                               #{val\ 3216}#
                               (cons #{e1\ 3217}# #{e2\ 3218}#)))
                           #{tmp\ 3197}#)
                    ((lambda (#{tmp\ 3222}#)
                       (if (if #{tmp\ 3222}#
                             (apply (lambda (#{_\ 3229}#
                                             #{f\ 3230}#
                                             #{id\ 3231}#
                                             #{val\ 3232}#
                                             #{e1\ 3233}#
                                             #{e2\ 3234}#)
                                      (if (#{id?\ 307}# #{f\ 3230}#)
                                        (and-map #{id?\ 307}# #{id\ 3231}#)
                                        #f))
                                    #{tmp\ 3222}#)
                             #f)
                         (apply (lambda (#{_\ 3244}#
                                         #{f\ 3245}#
                                         #{id\ 3246}#
                                         #{val\ 3247}#
                                         #{e1\ 3248}#
                                         #{e2\ 3249}#)
                                  (#{chi-let\ 3157}#
                                    #{e\ 3186}#
                                    #{r\ 3187}#
                                    #{w\ 3188}#
                                    #{s\ 3189}#
                                    #{mod\ 3190}#
                                    #{build-named-let\ 263}#
                                    (cons #{f\ 3245}# #{id\ 3246}#)
                                    #{val\ 3247}#
                                    (cons #{e1\ 3248}# #{e2\ 3249}#)))
                                #{tmp\ 3222}#)
                         ((lambda (#{_\ 3254}#)
                            (syntax-violation
                              'let
                              "bad let"
                              (#{source-wrap\ 378}#
                                #{e\ 3186}#
                                #{w\ 3188}#
                                #{s\ 3189}#
                                #{mod\ 3190}#)))
                          #{tmp\ 3196}#)))
                     ($sc-dispatch
                       #{tmp\ 3196}#
                       '(any any #(each (any any)) any . each-any)))))
                ($sc-dispatch
                  #{tmp\ 3196}#
                  '(any #(each (any any)) any . each-any))))
             #{e\ 3186}#))))
      (#{global-extend\ 303}#
        'core
        'letrec
        (lambda (#{e\ 3255}#
                 #{r\ 3256}#
                 #{w\ 3257}#
                 #{s\ 3258}#
                 #{mod\ 3259}#)
          ((lambda (#{tmp\ 3265}#)
             ((lambda (#{tmp\ 3266}#)
                (if (if #{tmp\ 3266}#
                      (apply (lambda (#{_\ 3272}#
                                      #{id\ 3273}#
                                      #{val\ 3274}#
                                      #{e1\ 3275}#
                                      #{e2\ 3276}#)
                               (and-map #{id?\ 307}# #{id\ 3273}#))
                             #{tmp\ 3266}#)
                      #f)
                  (apply (lambda (#{_\ 3283}#
                                  #{id\ 3284}#
                                  #{val\ 3285}#
                                  #{e1\ 3286}#
                                  #{e2\ 3287}#)
                           (let ((#{ids\ 3289}# #{id\ 3284}#))
                             (if (not (#{valid-bound-ids?\ 370}#
                                        #{ids\ 3289}#))
                               (syntax-violation
                                 'letrec
                                 "duplicate bound variable"
                                 #{e\ 3255}#)
                               (let ((#{labels\ 3293}#
                                       (#{gen-labels\ 325}# #{ids\ 3289}#))
                                     (#{new-vars\ 3294}#
                                       (map #{gen-var\ 420}# #{ids\ 3289}#)))
                                 (let ((#{w\ 3297}#
                                         (#{make-binding-wrap\ 354}#
                                           #{ids\ 3289}#
                                           #{labels\ 3293}#
                                           #{w\ 3257}#))
                                       (#{r\ 3298}#
                                         (#{extend-var-env\ 297}#
                                           #{labels\ 3293}#
                                           #{new-vars\ 3294}#
                                           #{r\ 3256}#)))
                                   (#{build-letrec\ 265}#
                                     #{s\ 3258}#
                                     (map syntax->datum #{ids\ 3289}#)
                                     #{new-vars\ 3294}#
                                     (map (lambda (#{x\ 3299}#)
                                            (#{chi\ 392}#
                                              #{x\ 3299}#
                                              #{r\ 3298}#
                                              #{w\ 3297}#
                                              #{mod\ 3259}#))
                                          #{val\ 3285}#)
                                     (#{chi-body\ 400}#
                                       (cons #{e1\ 3286}# #{e2\ 3287}#)
                                       (#{source-wrap\ 378}#
                                         #{e\ 3255}#
                                         #{w\ 3297}#
                                         #{s\ 3258}#
                                         #{mod\ 3259}#)
                                       #{r\ 3298}#
                                       #{w\ 3297}#
                                       #{mod\ 3259}#)))))))
                         #{tmp\ 3266}#)
                  ((lambda (#{_\ 3304}#)
                     (syntax-violation
                       'letrec
                       "bad letrec"
                       (#{source-wrap\ 378}#
                         #{e\ 3255}#
                         #{w\ 3257}#
                         #{s\ 3258}#
                         #{mod\ 3259}#)))
                   #{tmp\ 3265}#)))
              ($sc-dispatch
                #{tmp\ 3265}#
                '(any #(each (any any)) any . each-any))))
           #{e\ 3255}#)))
      (#{global-extend\ 303}#
        'core
        'set!
        (lambda (#{e\ 3305}#
                 #{r\ 3306}#
                 #{w\ 3307}#
                 #{s\ 3308}#
                 #{mod\ 3309}#)
          ((lambda (#{tmp\ 3315}#)
             ((lambda (#{tmp\ 3316}#)
                (if (if #{tmp\ 3316}#
                      (apply (lambda (#{_\ 3320}# #{id\ 3321}# #{val\ 3322}#)
                               (#{id?\ 307}# #{id\ 3321}#))
                             #{tmp\ 3316}#)
                      #f)
                  (apply (lambda (#{_\ 3326}# #{id\ 3327}# #{val\ 3328}#)
                           (let ((#{val\ 3331}#
                                   (#{chi\ 392}#
                                     #{val\ 3328}#
                                     #{r\ 3306}#
                                     #{w\ 3307}#
                                     #{mod\ 3309}#))
                                 (#{n\ 3332}#
                                   (#{id-var-name\ 364}#
                                     #{id\ 3327}#
                                     #{w\ 3307}#)))
                             (let ((#{b\ 3334}#
                                     (#{lookup\ 301}#
                                       #{n\ 3332}#
                                       #{r\ 3306}#
                                       #{mod\ 3309}#)))
                               (let ((#{atom-key\ 3337}#
                                       (#{binding-type\ 290}# #{b\ 3334}#)))
                                 (if (memv #{atom-key\ 3337}#
                                           '(lexical))
                                   (#{build-lexical-assignment\ 237}#
                                     #{s\ 3308}#
                                     (syntax->datum #{id\ 3327}#)
                                     (#{binding-value\ 292}# #{b\ 3334}#)
                                     #{val\ 3331}#)
                                   (if (memv #{atom-key\ 3337}#
                                             '(global))
                                     (#{build-global-assignment\ 243}#
                                       #{s\ 3308}#
                                       #{n\ 3332}#
                                       #{val\ 3331}#
                                       #{mod\ 3309}#)
                                     (if (memv #{atom-key\ 3337}#
                                               '(displaced-lexical))
                                       (syntax-violation
                                         'set!
                                         "identifier out of context"
                                         (#{wrap\ 376}#
                                           #{id\ 3327}#
                                           #{w\ 3307}#
                                           #{mod\ 3309}#))
                                       (syntax-violation
                                         'set!
                                         "bad set!"
                                         (#{source-wrap\ 378}#
                                           #{e\ 3305}#
                                           #{w\ 3307}#
                                           #{s\ 3308}#
                                           #{mod\ 3309}#)))))))))
                         #{tmp\ 3316}#)
                  ((lambda (#{tmp\ 3342}#)
                     (if #{tmp\ 3342}#
                       (apply (lambda (#{_\ 3347}#
                                       #{head\ 3348}#
                                       #{tail\ 3349}#
                                       #{val\ 3350}#)
                                (call-with-values
                                  (lambda ()
                                    (#{syntax-type\ 388}#
                                      #{head\ 3348}#
                                      #{r\ 3306}#
                                      '(())
                                      #f
                                      #f
                                      #{mod\ 3309}#
                                      #t))
                                  (lambda (#{type\ 3353}#
                                           #{value\ 3354}#
                                           #{ee\ 3355}#
                                           #{ww\ 3356}#
                                           #{ss\ 3357}#
                                           #{modmod\ 3358}#)
                                    (if (memv #{type\ 3353}#
                                              '(module-ref))
                                      (let ((#{val\ 3367}#
                                              (#{chi\ 392}#
                                                #{val\ 3350}#
                                                #{r\ 3306}#
                                                #{w\ 3307}#
                                                #{mod\ 3309}#)))
                                        (call-with-values
                                          (lambda ()
                                            (#{value\ 3354}#
                                              (cons #{head\ 3348}#
                                                    #{tail\ 3349}#)
                                              #{r\ 3306}#
                                              #{w\ 3307}#))
                                          (lambda (#{e\ 3369}#
                                                   #{r\ 3370}#
                                                   #{w\ 3371}#
                                                   #{s*\ 3372}#
                                                   #{mod\ 3373}#)
                                            ((lambda (#{tmp\ 3379}#)
                                               ((lambda (#{tmp\ 3380}#)
                                                  (if (if #{tmp\ 3380}#
                                                        (apply (lambda (#{e\ 3382}#)
                                                                 (#{id?\ 307}#
                                                                   #{e\ 3382}#))
                                                               #{tmp\ 3380}#)
                                                        #f)
                                                    (apply (lambda (#{e\ 3384}#)
                                                             (#{build-global-assignment\ 243}#
                                                               #{s\ 3308}#
                                                               (syntax->datum
                                                                 #{e\ 3384}#)
                                                               #{val\ 3367}#
                                                               #{mod\ 3373}#))
                                                           #{tmp\ 3380}#)
                                                    (syntax-violation
                                                      #f
                                                      "source expression failed to match any pattern"
                                                      #{tmp\ 3379}#)))
                                                (list #{tmp\ 3379}#)))
                                             #{e\ 3369}#))))
                                      (#{build-application\ 229}#
                                        #{s\ 3308}#
                                        (#{chi\ 392}#
                                          (list '#(syntax-object
                                                   setter
                                                   ((top)
                                                    #(ribcage () () ())
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(type
                                                        value
                                                        ee
                                                        ww
                                                        ss
                                                        modmod)
                                                      #((top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top))
                                                      #("i3359"
                                                        "i3360"
                                                        "i3361"
                                                        "i3362"
                                                        "i3363"
                                                        "i3364"))
                                                    #(ribcage
                                                      #(_ head tail val)
                                                      #((top)
                                                        (top)
                                                        (top)
                                                        (top))
                                                      #("i3343"
                                                        "i3344"
                                                        "i3345"
                                                        "i3346"))
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(e r w s mod)
                                                      #((top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top))
                                                      #("i3310"
                                                        "i3311"
                                                        "i3312"
                                                        "i3313"
                                                        "i3314"))
                                                    #(ribcage
                                                      (lambda-var-list
                                                        gen-var
                                                        strip
                                                        chi-lambda-case
                                                        lambda*-formals
                                                        chi-simple-lambda
                                                        lambda-formals
                                                        ellipsis?
                                                        chi-void
                                                        eval-local-transformer
                                                        chi-local-syntax
                                                        chi-body
                                                        chi-macro
                                                        chi-application
                                                        chi-expr
                                                        chi
                                                        chi-top
                                                        syntax-type
                                                        chi-when-list
                                                        chi-install-global
                                                        chi-top-sequence
                                                        chi-sequence
                                                        source-wrap
                                                        wrap
                                                        bound-id-member?
                                                        distinct-bound-ids?
                                                        valid-bound-ids?
                                                        bound-id=?
                                                        free-id=?
                                                        id-var-name
                                                        same-marks?
                                                        join-marks
                                                        join-wraps
                                                        smart-append
                                                        make-binding-wrap
                                                        extend-ribcage!
                                                        make-empty-ribcage
                                                        new-mark
                                                        anti-mark
                                                        the-anti-mark
                                                        top-marked?
                                                        top-wrap
                                                        empty-wrap
                                                        set-ribcage-labels!
                                                        set-ribcage-marks!
                                                        set-ribcage-symnames!
                                                        ribcage-labels
                                                        ribcage-marks
                                                        ribcage-symnames
                                                        ribcage?
                                                        make-ribcage
                                                        gen-labels
                                                        gen-label
                                                        make-rename
                                                        rename-marks
                                                        rename-new
                                                        rename-old
                                                        subst-rename?
                                                        wrap-subst
                                                        wrap-marks
                                                        make-wrap
                                                        id-sym-name&marks
                                                        id-sym-name
                                                        id?
                                                        nonsymbol-id?
                                                        global-extend
                                                        lookup
                                                        macros-only-env
                                                        extend-var-env
                                                        extend-env
                                                        null-env
                                                        binding-value
                                                        binding-type
                                                        make-binding
                                                        arg-check
                                                        source-annotation
                                                        no-source
                                                        set-syntax-object-module!
                                                        set-syntax-object-wrap!
                                                        set-syntax-object-expression!
                                                        syntax-object-module
                                                        syntax-object-wrap
                                                        syntax-object-expression
                                                        syntax-object?
                                                        make-syntax-object
                                                        build-lexical-var
                                                        build-letrec
                                                        build-named-let
                                                        build-let
                                                        build-sequence
                                                        build-data
                                                        build-primref
                                                        build-lambda-case
                                                        build-case-lambda
                                                        build-simple-lambda
                                                        build-global-definition
                                                        maybe-name-value!
                                                        build-global-assignment
                                                        build-global-reference
                                                        analyze-variable
                                                        build-lexical-assignment
                                                        build-lexical-reference
                                                        build-dynlet
                                                        build-conditional
                                                        build-application
                                                        build-void
                                                        decorate-source
                                                        get-global-definition-hook
                                                        put-global-definition-hook
                                                        gensym-hook
                                                        local-eval-hook
                                                        top-level-eval-hook
                                                        fx<
                                                        fx=
                                                        fx-
                                                        fx+
                                                        make-dynlet
                                                        make-letrec
                                                        make-let
                                                        make-lambda-case
                                                        make-lambda
                                                        make-sequence
                                                        make-application
                                                        make-conditional
                                                        make-toplevel-define
                                                        make-toplevel-set
                                                        make-toplevel-ref
                                                        make-module-set
                                                        make-module-ref
                                                        make-lexical-set
                                                        make-lexical-ref
                                                        make-primitive-ref
                                                        make-const
                                                        make-void)
                                                      ((top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top))
                                                      ("i421"
                                                       "i419"
                                                       "i417"
                                                       "i415"
                                                       "i413"
                                                       "i411"
                                                       "i409"
                                                       "i407"
                                                       "i405"
                                                       "i403"
                                                       "i401"
                                                       "i399"
                                                       "i397"
                                                       "i395"
                                                       "i393"
                                                       "i391"
                                                       "i389"
                                                       "i387"
                                                       "i385"
                                                       "i383"
                                                       "i381"
                                                       "i379"
                                                       "i377"
                                                       "i375"
                                                       "i373"
                                                       "i371"
                                                       "i369"
                                                       "i367"
                                                       "i365"
                                                       "i363"
                                                       "i361"
                                                       "i359"
                                                       "i357"
                                                       "i355"
                                                       "i353"
                                                       "i351"
                                                       "i350"
                                                       "i349"
                                                       "i347"
                                                       "i346"
                                                       "i345"
                                                       "i344"
                                                       "i343"
                                                       "i341"
                                                       "i339"
                                                       "i337"
                                                       "i335"
                                                       "i333"
                                                       "i331"
                                                       "i329"
                                                       "i327"
                                                       "i324"
                                                       "i322"
                                                       "i321"
                                                       "i320"
                                                       "i319"
                                                       "i318"
                                                       "i317"
                                                       "i315"
                                                       "i313"
                                                       "i311"
                                                       "i309"
                                                       "i308"
                                                       "i306"
                                                       "i304"
                                                       "i302"
                                                       "i300"
                                                       "i298"
                                                       "i296"
                                                       "i294"
                                                       "i293"
                                                       "i291"
                                                       "i289"
                                                       "i288"
                                                       "i287"
                                                       "i285"
                                                       "i284"
                                                       "i282"
                                                       "i280"
                                                       "i278"
                                                       "i276"
                                                       "i274"
                                                       "i272"
                                                       "i270"
                                                       "i268"
                                                       "i266"
                                                       "i264"
                                                       "i262"
                                                       "i260"
                                                       "i258"
                                                       "i256"
                                                       "i254"
                                                       "i252"
                                                       "i250"
                                                       "i248"
                                                       "i246"
                                                       "i244"
                                                       "i242"
                                                       "i240"
                                                       "i238"
                                                       "i236"
                                                       "i234"
                                                       "i232"
                                                       "i230"
                                                       "i228"
                                                       "i226"
                                                       "i224"
                                                       "i222"
                                                       "i220"
                                                       "i219"
                                                       "i217"
                                                       "i215"
                                                       "i213"
                                                       "i211"
                                                       "i209"
                                                       "i207"
                                                       "i205"
                                                       "i203"
                                                       "i201"
                                                       "i199"
                                                       "i197"
                                                       "i195"
                                                       "i193"
                                                       "i191"
                                                       "i189"
                                                       "i187"
                                                       "i185"
                                                       "i183"
                                                       "i181"
                                                       "i179"
                                                       "i177"
                                                       "i175"
                                                       "i173"
                                                       "i171"))
                                                    #(ribcage
                                                      (define-structure
                                                        define-expansion-constructors
                                                        and-map*)
                                                      ((top) (top) (top))
                                                      ("i22" "i21" "i19")))
                                                   (hygiene guile))
                                                #{head\ 3348}#)
                                          #{r\ 3306}#
                                          #{w\ 3307}#
                                          #{mod\ 3309}#)
                                        (map (lambda (#{e\ 3386}#)
                                               (#{chi\ 392}#
                                                 #{e\ 3386}#
                                                 #{r\ 3306}#
                                                 #{w\ 3307}#
                                                 #{mod\ 3309}#))
                                             (append
                                               #{tail\ 3349}#
                                               (list #{val\ 3350}#))))))))
                              #{tmp\ 3342}#)
                       ((lambda (#{_\ 3390}#)
                          (syntax-violation
                            'set!
                            "bad set!"
                            (#{source-wrap\ 378}#
                              #{e\ 3305}#
                              #{w\ 3307}#
                              #{s\ 3308}#
                              #{mod\ 3309}#)))
                        #{tmp\ 3315}#)))
                   ($sc-dispatch
                     #{tmp\ 3315}#
                     '(any (any . each-any) any)))))
              ($sc-dispatch
                #{tmp\ 3315}#
                '(any any any))))
           #{e\ 3305}#)))
      (#{global-extend\ 303}#
        'module-ref
        '@
        (lambda (#{e\ 3391}# #{r\ 3392}# #{w\ 3393}#)
          ((lambda (#{tmp\ 3397}#)
             ((lambda (#{tmp\ 3398}#)
                (if (if #{tmp\ 3398}#
                      (apply (lambda (#{_\ 3402}# #{mod\ 3403}# #{id\ 3404}#)
                               (if (and-map #{id?\ 307}# #{mod\ 3403}#)
                                 (#{id?\ 307}# #{id\ 3404}#)
                                 #f))
                             #{tmp\ 3398}#)
                      #f)
                  (apply (lambda (#{_\ 3411}# #{mod\ 3412}# #{id\ 3413}#)
                           (values
                             (syntax->datum #{id\ 3413}#)
                             #{r\ 3392}#
                             #{w\ 3393}#
                             #f
                             (syntax->datum
                               (cons '#(syntax-object
                                        public
                                        ((top)
                                         #(ribcage
                                           #(_ mod id)
                                           #((top) (top) (top))
                                           #("i3408" "i3409" "i3410"))
                                         #(ribcage () () ())
                                         #(ribcage
                                           #(e r w)
                                           #((top) (top) (top))
                                           #("i3394" "i3395" "i3396"))
                                         #(ribcage
                                           (lambda-var-list
                                             gen-var
                                             strip
                                             chi-lambda-case
                                             lambda*-formals
                                             chi-simple-lambda
                                             lambda-formals
                                             ellipsis?
                                             chi-void
                                             eval-local-transformer
                                             chi-local-syntax
                                             chi-body
                                             chi-macro
                                             chi-application
                                             chi-expr
                                             chi
                                             chi-top
                                             syntax-type
                                             chi-when-list
                                             chi-install-global
                                             chi-top-sequence
                                             chi-sequence
                                             source-wrap
                                             wrap
                                             bound-id-member?
                                             distinct-bound-ids?
                                             valid-bound-ids?
                                             bound-id=?
                                             free-id=?
                                             id-var-name
                                             same-marks?
                                             join-marks
                                             join-wraps
                                             smart-append
                                             make-binding-wrap
                                             extend-ribcage!
                                             make-empty-ribcage
                                             new-mark
                                             anti-mark
                                             the-anti-mark
                                             top-marked?
                                             top-wrap
                                             empty-wrap
                                             set-ribcage-labels!
                                             set-ribcage-marks!
                                             set-ribcage-symnames!
                                             ribcage-labels
                                             ribcage-marks
                                             ribcage-symnames
                                             ribcage?
                                             make-ribcage
                                             gen-labels
                                             gen-label
                                             make-rename
                                             rename-marks
                                             rename-new
                                             rename-old
                                             subst-rename?
                                             wrap-subst
                                             wrap-marks
                                             make-wrap
                                             id-sym-name&marks
                                             id-sym-name
                                             id?
                                             nonsymbol-id?
                                             global-extend
                                             lookup
                                             macros-only-env
                                             extend-var-env
                                             extend-env
                                             null-env
                                             binding-value
                                             binding-type
                                             make-binding
                                             arg-check
                                             source-annotation
                                             no-source
                                             set-syntax-object-module!
                                             set-syntax-object-wrap!
                                             set-syntax-object-expression!
                                             syntax-object-module
                                             syntax-object-wrap
                                             syntax-object-expression
                                             syntax-object?
                                             make-syntax-object
                                             build-lexical-var
                                             build-letrec
                                             build-named-let
                                             build-let
                                             build-sequence
                                             build-data
                                             build-primref
                                             build-lambda-case
                                             build-case-lambda
                                             build-simple-lambda
                                             build-global-definition
                                             maybe-name-value!
                                             build-global-assignment
                                             build-global-reference
                                             analyze-variable
                                             build-lexical-assignment
                                             build-lexical-reference
                                             build-dynlet
                                             build-conditional
                                             build-application
                                             build-void
                                             decorate-source
                                             get-global-definition-hook
                                             put-global-definition-hook
                                             gensym-hook
                                             local-eval-hook
                                             top-level-eval-hook
                                             fx<
                                             fx=
                                             fx-
                                             fx+
                                             make-dynlet
                                             make-letrec
                                             make-let
                                             make-lambda-case
                                             make-lambda
                                             make-sequence
                                             make-application
                                             make-conditional
                                             make-toplevel-define
                                             make-toplevel-set
                                             make-toplevel-ref
                                             make-module-set
                                             make-module-ref
                                             make-lexical-set
                                             make-lexical-ref
                                             make-primitive-ref
                                             make-const
                                             make-void)
                                           ((top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top))
                                           ("i421"
                                            "i419"
                                            "i417"
                                            "i415"
                                            "i413"
                                            "i411"
                                            "i409"
                                            "i407"
                                            "i405"
                                            "i403"
                                            "i401"
                                            "i399"
                                            "i397"
                                            "i395"
                                            "i393"
                                            "i391"
                                            "i389"
                                            "i387"
                                            "i385"
                                            "i383"
                                            "i381"
                                            "i379"
                                            "i377"
                                            "i375"
                                            "i373"
                                            "i371"
                                            "i369"
                                            "i367"
                                            "i365"
                                            "i363"
                                            "i361"
                                            "i359"
                                            "i357"
                                            "i355"
                                            "i353"
                                            "i351"
                                            "i350"
                                            "i349"
                                            "i347"
                                            "i346"
                                            "i345"
                                            "i344"
                                            "i343"
                                            "i341"
                                            "i339"
                                            "i337"
                                            "i335"
                                            "i333"
                                            "i331"
                                            "i329"
                                            "i327"
                                            "i324"
                                            "i322"
                                            "i321"
                                            "i320"
                                            "i319"
                                            "i318"
                                            "i317"
                                            "i315"
                                            "i313"
                                            "i311"
                                            "i309"
                                            "i308"
                                            "i306"
                                            "i304"
                                            "i302"
                                            "i300"
                                            "i298"
                                            "i296"
                                            "i294"
                                            "i293"
                                            "i291"
                                            "i289"
                                            "i288"
                                            "i287"
                                            "i285"
                                            "i284"
                                            "i282"
                                            "i280"
                                            "i278"
                                            "i276"
                                            "i274"
                                            "i272"
                                            "i270"
                                            "i268"
                                            "i266"
                                            "i264"
                                            "i262"
                                            "i260"
                                            "i258"
                                            "i256"
                                            "i254"
                                            "i252"
                                            "i250"
                                            "i248"
                                            "i246"
                                            "i244"
                                            "i242"
                                            "i240"
                                            "i238"
                                            "i236"
                                            "i234"
                                            "i232"
                                            "i230"
                                            "i228"
                                            "i226"
                                            "i224"
                                            "i222"
                                            "i220"
                                            "i219"
                                            "i217"
                                            "i215"
                                            "i213"
                                            "i211"
                                            "i209"
                                            "i207"
                                            "i205"
                                            "i203"
                                            "i201"
                                            "i199"
                                            "i197"
                                            "i195"
                                            "i193"
                                            "i191"
                                            "i189"
                                            "i187"
                                            "i185"
                                            "i183"
                                            "i181"
                                            "i179"
                                            "i177"
                                            "i175"
                                            "i173"
                                            "i171"))
                                         #(ribcage
                                           (define-structure
                                             define-expansion-constructors
                                             and-map*)
                                           ((top) (top) (top))
                                           ("i22" "i21" "i19")))
                                        (hygiene guile))
                                     #{mod\ 3412}#))))
                         #{tmp\ 3398}#)
                  (syntax-violation
                    #f
                    "source expression failed to match any pattern"
                    #{tmp\ 3397}#)))
              ($sc-dispatch
                #{tmp\ 3397}#
                '(any each-any any))))
           #{e\ 3391}#)))
      (#{global-extend\ 303}#
        'module-ref
        '@@
        (lambda (#{e\ 3415}# #{r\ 3416}# #{w\ 3417}#)
          (letrec ((#{remodulate\ 3422}#
                     (lambda (#{x\ 3423}# #{mod\ 3424}#)
                       (if (pair? #{x\ 3423}#)
                         (cons (#{remodulate\ 3422}#
                                 (car #{x\ 3423}#)
                                 #{mod\ 3424}#)
                               (#{remodulate\ 3422}#
                                 (cdr #{x\ 3423}#)
                                 #{mod\ 3424}#))
                         (if (#{syntax-object?\ 271}# #{x\ 3423}#)
                           (#{make-syntax-object\ 269}#
                             (#{remodulate\ 3422}#
                               (#{syntax-object-expression\ 273}# #{x\ 3423}#)
                               #{mod\ 3424}#)
                             (#{syntax-object-wrap\ 275}# #{x\ 3423}#)
                             #{mod\ 3424}#)
                           (if (vector? #{x\ 3423}#)
                             (let ((#{n\ 3435}# (vector-length #{x\ 3423}#)))
                               (let ((#{v\ 3437}# (make-vector #{n\ 3435}#)))
                                 (letrec ((#{loop\ 3440}#
                                            (lambda (#{i\ 3441}#)
                                              (if (#{fx=\ 212}#
                                                    #{i\ 3441}#
                                                    #{n\ 3435}#)
                                                (begin (if #f #f) #{v\ 3437}#)
                                                (begin
                                                  (vector-set!
                                                    #{v\ 3437}#
                                                    #{i\ 3441}#
                                                    (#{remodulate\ 3422}#
                                                      (vector-ref
                                                        #{x\ 3423}#
                                                        #{i\ 3441}#)
                                                      #{mod\ 3424}#))
                                                  (#{loop\ 3440}#
                                                    (#{fx+\ 208}#
                                                      #{i\ 3441}#
                                                      1)))))))
                                   (#{loop\ 3440}# 0))))
                             #{x\ 3423}#))))))
            ((lambda (#{tmp\ 3445}#)
               ((lambda (#{tmp\ 3446}#)
                  (if (if #{tmp\ 3446}#
                        (apply (lambda (#{_\ 3450}#
                                        #{mod\ 3451}#
                                        #{exp\ 3452}#)
                                 (and-map #{id?\ 307}# #{mod\ 3451}#))
                               #{tmp\ 3446}#)
                        #f)
                    (apply (lambda (#{_\ 3457}# #{mod\ 3458}# #{exp\ 3459}#)
                             (let ((#{mod\ 3461}#
                                     (syntax->datum
                                       (cons '#(syntax-object
                                                private
                                                ((top)
                                                 #(ribcage
                                                   #(_ mod exp)
                                                   #((top) (top) (top))
                                                   #("i3454" "i3455" "i3456"))
                                                 #(ribcage
                                                   (remodulate)
                                                   ((top))
                                                   ("i3421"))
                                                 #(ribcage
                                                   #(e r w)
                                                   #((top) (top) (top))
                                                   #("i3418" "i3419" "i3420"))
                                                 #(ribcage
                                                   (lambda-var-list
                                                     gen-var
                                                     strip
                                                     chi-lambda-case
                                                     lambda*-formals
                                                     chi-simple-lambda
                                                     lambda-formals
                                                     ellipsis?
                                                     chi-void
                                                     eval-local-transformer
                                                     chi-local-syntax
                                                     chi-body
                                                     chi-macro
                                                     chi-application
                                                     chi-expr
                                                     chi
                                                     chi-top
                                                     syntax-type
                                                     chi-when-list
                                                     chi-install-global
                                                     chi-top-sequence
                                                     chi-sequence
                                                     source-wrap
                                                     wrap
                                                     bound-id-member?
                                                     distinct-bound-ids?
                                                     valid-bound-ids?
                                                     bound-id=?
                                                     free-id=?
                                                     id-var-name
                                                     same-marks?
                                                     join-marks
                                                     join-wraps
                                                     smart-append
                                                     make-binding-wrap
                                                     extend-ribcage!
                                                     make-empty-ribcage
                                                     new-mark
                                                     anti-mark
                                                     the-anti-mark
                                                     top-marked?
                                                     top-wrap
                                                     empty-wrap
                                                     set-ribcage-labels!
                                                     set-ribcage-marks!
                                                     set-ribcage-symnames!
                                                     ribcage-labels
                                                     ribcage-marks
                                                     ribcage-symnames
                                                     ribcage?
                                                     make-ribcage
                                                     gen-labels
                                                     gen-label
                                                     make-rename
                                                     rename-marks
                                                     rename-new
                                                     rename-old
                                                     subst-rename?
                                                     wrap-subst
                                                     wrap-marks
                                                     make-wrap
                                                     id-sym-name&marks
                                                     id-sym-name
                                                     id?
                                                     nonsymbol-id?
                                                     global-extend
                                                     lookup
                                                     macros-only-env
                                                     extend-var-env
                                                     extend-env
                                                     null-env
                                                     binding-value
                                                     binding-type
                                                     make-binding
                                                     arg-check
                                                     source-annotation
                                                     no-source
                                                     set-syntax-object-module!
                                                     set-syntax-object-wrap!
                                                     set-syntax-object-expression!
                                                     syntax-object-module
                                                     syntax-object-wrap
                                                     syntax-object-expression
                                                     syntax-object?
                                                     make-syntax-object
                                                     build-lexical-var
                                                     build-letrec
                                                     build-named-let
                                                     build-let
                                                     build-sequence
                                                     build-data
                                                     build-primref
                                                     build-lambda-case
                                                     build-case-lambda
                                                     build-simple-lambda
                                                     build-global-definition
                                                     maybe-name-value!
                                                     build-global-assignment
                                                     build-global-reference
                                                     analyze-variable
                                                     build-lexical-assignment
                                                     build-lexical-reference
                                                     build-dynlet
                                                     build-conditional
                                                     build-application
                                                     build-void
                                                     decorate-source
                                                     get-global-definition-hook
                                                     put-global-definition-hook
                                                     gensym-hook
                                                     local-eval-hook
                                                     top-level-eval-hook
                                                     fx<
                                                     fx=
                                                     fx-
                                                     fx+
                                                     make-dynlet
                                                     make-letrec
                                                     make-let
                                                     make-lambda-case
                                                     make-lambda
                                                     make-sequence
                                                     make-application
                                                     make-conditional
                                                     make-toplevel-define
                                                     make-toplevel-set
                                                     make-toplevel-ref
                                                     make-module-set
                                                     make-module-ref
                                                     make-lexical-set
                                                     make-lexical-ref
                                                     make-primitive-ref
                                                     make-const
                                                     make-void)
                                                   ((top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top))
                                                   ("i421"
                                                    "i419"
                                                    "i417"
                                                    "i415"
                                                    "i413"
                                                    "i411"
                                                    "i409"
                                                    "i407"
                                                    "i405"
                                                    "i403"
                                                    "i401"
                                                    "i399"
                                                    "i397"
                                                    "i395"
                                                    "i393"
                                                    "i391"
                                                    "i389"
                                                    "i387"
                                                    "i385"
                                                    "i383"
                                                    "i381"
                                                    "i379"
                                                    "i377"
                                                    "i375"
                                                    "i373"
                                                    "i371"
                                                    "i369"
                                                    "i367"
                                                    "i365"
                                                    "i363"
                                                    "i361"
                                                    "i359"
                                                    "i357"
                                                    "i355"
                                                    "i353"
                                                    "i351"
                                                    "i350"
                                                    "i349"
                                                    "i347"
                                                    "i346"
                                                    "i345"
                                                    "i344"
                                                    "i343"
                                                    "i341"
                                                    "i339"
                                                    "i337"
                                                    "i335"
                                                    "i333"
                                                    "i331"
                                                    "i329"
                                                    "i327"
                                                    "i324"
                                                    "i322"
                                                    "i321"
                                                    "i320"
                                                    "i319"
                                                    "i318"
                                                    "i317"
                                                    "i315"
                                                    "i313"
                                                    "i311"
                                                    "i309"
                                                    "i308"
                                                    "i306"
                                                    "i304"
                                                    "i302"
                                                    "i300"
                                                    "i298"
                                                    "i296"
                                                    "i294"
                                                    "i293"
                                                    "i291"
                                                    "i289"
                                                    "i288"
                                                    "i287"
                                                    "i285"
                                                    "i284"
                                                    "i282"
                                                    "i280"
                                                    "i278"
                                                    "i276"
                                                    "i274"
                                                    "i272"
                                                    "i270"
                                                    "i268"
                                                    "i266"
                                                    "i264"
                                                    "i262"
                                                    "i260"
                                                    "i258"
                                                    "i256"
                                                    "i254"
                                                    "i252"
                                                    "i250"
                                                    "i248"
                                                    "i246"
                                                    "i244"
                                                    "i242"
                                                    "i240"
                                                    "i238"
                                                    "i236"
                                                    "i234"
                                                    "i232"
                                                    "i230"
                                                    "i228"
                                                    "i226"
                                                    "i224"
                                                    "i222"
                                                    "i220"
                                                    "i219"
                                                    "i217"
                                                    "i215"
                                                    "i213"
                                                    "i211"
                                                    "i209"
                                                    "i207"
                                                    "i205"
                                                    "i203"
                                                    "i201"
                                                    "i199"
                                                    "i197"
                                                    "i195"
                                                    "i193"
                                                    "i191"
                                                    "i189"
                                                    "i187"
                                                    "i185"
                                                    "i183"
                                                    "i181"
                                                    "i179"
                                                    "i177"
                                                    "i175"
                                                    "i173"
                                                    "i171"))
                                                 #(ribcage
                                                   (define-structure
                                                     define-expansion-constructors
                                                     and-map*)
                                                   ((top) (top) (top))
                                                   ("i22" "i21" "i19")))
                                                (hygiene guile))
                                             #{mod\ 3458}#))))
                               (values
                                 (#{remodulate\ 3422}#
                                   #{exp\ 3459}#
                                   #{mod\ 3461}#)
                                 #{r\ 3416}#
                                 #{w\ 3417}#
                                 (#{source-annotation\ 286}# #{exp\ 3459}#)
                                 #{mod\ 3461}#)))
                           #{tmp\ 3446}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 3445}#)))
                ($sc-dispatch
                  #{tmp\ 3445}#
                  '(any each-any any))))
             #{e\ 3415}#))))
      (#{global-extend\ 303}#
        'core
        'if
        (lambda (#{e\ 3463}#
                 #{r\ 3464}#
                 #{w\ 3465}#
                 #{s\ 3466}#
                 #{mod\ 3467}#)
          ((lambda (#{tmp\ 3473}#)
             ((lambda (#{tmp\ 3474}#)
                (if #{tmp\ 3474}#
                  (apply (lambda (#{_\ 3478}# #{test\ 3479}# #{then\ 3480}#)
                           (#{build-conditional\ 231}#
                             #{s\ 3466}#
                             (#{chi\ 392}#
                               #{test\ 3479}#
                               #{r\ 3464}#
                               #{w\ 3465}#
                               #{mod\ 3467}#)
                             (#{chi\ 392}#
                               #{then\ 3480}#
                               #{r\ 3464}#
                               #{w\ 3465}#
                               #{mod\ 3467}#)
                             (#{build-void\ 227}# #f)))
                         #{tmp\ 3474}#)
                  ((lambda (#{tmp\ 3482}#)
                     (if #{tmp\ 3482}#
                       (apply (lambda (#{_\ 3487}#
                                       #{test\ 3488}#
                                       #{then\ 3489}#
                                       #{else\ 3490}#)
                                (#{build-conditional\ 231}#
                                  #{s\ 3466}#
                                  (#{chi\ 392}#
                                    #{test\ 3488}#
                                    #{r\ 3464}#
                                    #{w\ 3465}#
                                    #{mod\ 3467}#)
                                  (#{chi\ 392}#
                                    #{then\ 3489}#
                                    #{r\ 3464}#
                                    #{w\ 3465}#
                                    #{mod\ 3467}#)
                                  (#{chi\ 392}#
                                    #{else\ 3490}#
                                    #{r\ 3464}#
                                    #{w\ 3465}#
                                    #{mod\ 3467}#)))
                              #{tmp\ 3482}#)
                       (syntax-violation
                         #f
                         "source expression failed to match any pattern"
                         #{tmp\ 3473}#)))
                   ($sc-dispatch
                     #{tmp\ 3473}#
                     '(any any any any)))))
              ($sc-dispatch
                #{tmp\ 3473}#
                '(any any any))))
           #{e\ 3463}#)))
      (#{global-extend\ 303}#
        'core
        'with-fluids
        (lambda (#{e\ 3491}#
                 #{r\ 3492}#
                 #{w\ 3493}#
                 #{s\ 3494}#
                 #{mod\ 3495}#)
          ((lambda (#{tmp\ 3501}#)
             ((lambda (#{tmp\ 3502}#)
                (if #{tmp\ 3502}#
                  (apply (lambda (#{_\ 3508}#
                                  #{fluid\ 3509}#
                                  #{val\ 3510}#
                                  #{b\ 3511}#
                                  #{b*\ 3512}#)
                           (#{build-dynlet\ 233}#
                             #{s\ 3494}#
                             (map (lambda (#{x\ 3513}#)
                                    (#{chi\ 392}#
                                      #{x\ 3513}#
                                      #{r\ 3492}#
                                      #{w\ 3493}#
                                      #{mod\ 3495}#))
                                  #{fluid\ 3509}#)
                             (map (lambda (#{x\ 3516}#)
                                    (#{chi\ 392}#
                                      #{x\ 3516}#
                                      #{r\ 3492}#
                                      #{w\ 3493}#
                                      #{mod\ 3495}#))
                                  #{val\ 3510}#)
                             (#{chi-body\ 400}#
                               (cons #{b\ 3511}# #{b*\ 3512}#)
                               (#{source-wrap\ 378}#
                                 #{e\ 3491}#
                                 #{w\ 3493}#
                                 #{s\ 3494}#
                                 #{mod\ 3495}#)
                               #{r\ 3492}#
                               #{w\ 3493}#
                               #{mod\ 3495}#)))
                         #{tmp\ 3502}#)
                  (syntax-violation
                    #f
                    "source expression failed to match any pattern"
                    #{tmp\ 3501}#)))
              ($sc-dispatch
                #{tmp\ 3501}#
                '(any #(each (any any)) any . each-any))))
           #{e\ 3491}#)))
      (#{global-extend\ 303}#
        'begin
        'begin
        '())
      (#{global-extend\ 303}#
        'define
        'define
        '())
      (#{global-extend\ 303}#
        'define-syntax
        'define-syntax
        '())
      (#{global-extend\ 303}#
        'eval-when
        'eval-when
        '())
      (#{global-extend\ 303}#
        'core
        'syntax-case
        (letrec ((#{gen-syntax-case\ 3527}#
                   (lambda (#{x\ 3528}#
                            #{keys\ 3529}#
                            #{clauses\ 3530}#
                            #{r\ 3531}#
                            #{mod\ 3532}#)
                     (if (null? #{clauses\ 3530}#)
                       (#{build-application\ 229}#
                         #f
                         (#{build-primref\ 255}#
                           #f
                           'syntax-violation)
                         (list (#{build-data\ 257}# #f #f)
                               (#{build-data\ 257}#
                                 #f
                                 "source expression failed to match any pattern")
                               #{x\ 3528}#))
                       ((lambda (#{tmp\ 3542}#)
                          ((lambda (#{tmp\ 3543}#)
                             (if #{tmp\ 3543}#
                               (apply (lambda (#{pat\ 3546}# #{exp\ 3547}#)
                                        (if (if (#{id?\ 307}# #{pat\ 3546}#)
                                              (and-map
                                                (lambda (#{x\ 3550}#)
                                                  (not (#{free-id=?\ 366}#
                                                         #{pat\ 3546}#
                                                         #{x\ 3550}#)))
                                                (cons '#(syntax-object
                                                         ...
                                                         ((top)
                                                          #(ribcage
                                                            #(pat exp)
                                                            #((top) (top))
                                                            #("i3544" "i3545"))
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(x
                                                              keys
                                                              clauses
                                                              r
                                                              mod)
                                                            #((top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top))
                                                            #("i3533"
                                                              "i3534"
                                                              "i3535"
                                                              "i3536"
                                                              "i3537"))
                                                          #(ribcage
                                                            (gen-syntax-case
                                                              gen-clause
                                                              build-dispatch-call
                                                              convert-pattern)
                                                            ((top)
                                                             (top)
                                                             (top)
                                                             (top))
                                                            ("i3526"
                                                             "i3524"
                                                             "i3522"
                                                             "i3520"))
                                                          #(ribcage
                                                            (lambda-var-list
                                                              gen-var
                                                              strip
                                                              chi-lambda-case
                                                              lambda*-formals
                                                              chi-simple-lambda
                                                              lambda-formals
                                                              ellipsis?
                                                              chi-void
                                                              eval-local-transformer
                                                              chi-local-syntax
                                                              chi-body
                                                              chi-macro
                                                              chi-application
                                                              chi-expr
                                                              chi
                                                              chi-top
                                                              syntax-type
                                                              chi-when-list
                                                              chi-install-global
                                                              chi-top-sequence
                                                              chi-sequence
                                                              source-wrap
                                                              wrap
                                                              bound-id-member?
                                                              distinct-bound-ids?
                                                              valid-bound-ids?
                                                              bound-id=?
                                                              free-id=?
                                                              id-var-name
                                                              same-marks?
                                                              join-marks
                                                              join-wraps
                                                              smart-append
                                                              make-binding-wrap
                                                              extend-ribcage!
                                                              make-empty-ribcage
                                                              new-mark
                                                              anti-mark
                                                              the-anti-mark
                                                              top-marked?
                                                              top-wrap
                                                              empty-wrap
                                                              set-ribcage-labels!
                                                              set-ribcage-marks!
                                                              set-ribcage-symnames!
                                                              ribcage-labels
                                                              ribcage-marks
                                                              ribcage-symnames
                                                              ribcage?
                                                              make-ribcage
                                                              gen-labels
                                                              gen-label
                                                              make-rename
                                                              rename-marks
                                                              rename-new
                                                              rename-old
                                                              subst-rename?
                                                              wrap-subst
                                                              wrap-marks
                                                              make-wrap
                                                              id-sym-name&marks
                                                              id-sym-name
                                                              id?
                                                              nonsymbol-id?
                                                              global-extend
                                                              lookup
                                                              macros-only-env
                                                              extend-var-env
                                                              extend-env
                                                              null-env
                                                              binding-value
                                                              binding-type
                                                              make-binding
                                                              arg-check
                                                              source-annotation
                                                              no-source
                                                              set-syntax-object-module!
                                                              set-syntax-object-wrap!
                                                              set-syntax-object-expression!
                                                              syntax-object-module
                                                              syntax-object-wrap
                                                              syntax-object-expression
                                                              syntax-object?
                                                              make-syntax-object
                                                              build-lexical-var
                                                              build-letrec
                                                              build-named-let
                                                              build-let
                                                              build-sequence
                                                              build-data
                                                              build-primref
                                                              build-lambda-case
                                                              build-case-lambda
                                                              build-simple-lambda
                                                              build-global-definition
                                                              maybe-name-value!
                                                              build-global-assignment
                                                              build-global-reference
                                                              analyze-variable
                                                              build-lexical-assignment
                                                              build-lexical-reference
                                                              build-dynlet
                                                              build-conditional
                                                              build-application
                                                              build-void
                                                              decorate-source
                                                              get-global-definition-hook
                                                              put-global-definition-hook
                                                              gensym-hook
                                                              local-eval-hook
                                                              top-level-eval-hook
                                                              fx<
                                                              fx=
                                                              fx-
                                                              fx+
                                                              make-dynlet
                                                              make-letrec
                                                              make-let
                                                              make-lambda-case
                                                              make-lambda
                                                              make-sequence
                                                              make-application
                                                              make-conditional
                                                              make-toplevel-define
                                                              make-toplevel-set
                                                              make-toplevel-ref
                                                              make-module-set
                                                              make-module-ref
                                                              make-lexical-set
                                                              make-lexical-ref
                                                              make-primitive-ref
                                                              make-const
                                                              make-void)
                                                            ((top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top))
                                                            ("i421"
                                                             "i419"
                                                             "i417"
                                                             "i415"
                                                             "i413"
                                                             "i411"
                                                             "i409"
                                                             "i407"
                                                             "i405"
                                                             "i403"
                                                             "i401"
                                                             "i399"
                                                             "i397"
                                                             "i395"
                                                             "i393"
                                                             "i391"
                                                             "i389"
                                                             "i387"
                                                             "i385"
                                                             "i383"
                                                             "i381"
                                                             "i379"
                                                             "i377"
                                                             "i375"
                                                             "i373"
                                                             "i371"
                                                             "i369"
                                                             "i367"
                                                             "i365"
                                                             "i363"
                                                             "i361"
                                                             "i359"
                                                             "i357"
                                                             "i355"
                                                             "i353"
                                                             "i351"
                                                             "i350"
                                                             "i349"
                                                             "i347"
                                                             "i346"
                                                             "i345"
                                                             "i344"
                                                             "i343"
                                                             "i341"
                                                             "i339"
                                                             "i337"
                                                             "i335"
                                                             "i333"
                                                             "i331"
                                                             "i329"
                                                             "i327"
                                                             "i324"
                                                             "i322"
                                                             "i321"
                                                             "i320"
                                                             "i319"
                                                             "i318"
                                                             "i317"
                                                             "i315"
                                                             "i313"
                                                             "i311"
                                                             "i309"
                                                             "i308"
                                                             "i306"
                                                             "i304"
                                                             "i302"
                                                             "i300"
                                                             "i298"
                                                             "i296"
                                                             "i294"
                                                             "i293"
                                                             "i291"
                                                             "i289"
                                                             "i288"
                                                             "i287"
                                                             "i285"
                                                             "i284"
                                                             "i282"
                                                             "i280"
                                                             "i278"
                                                             "i276"
                                                             "i274"
                                                             "i272"
                                                             "i270"
                                                             "i268"
                                                             "i266"
                                                             "i264"
                                                             "i262"
                                                             "i260"
                                                             "i258"
                                                             "i256"
                                                             "i254"
                                                             "i252"
                                                             "i250"
                                                             "i248"
                                                             "i246"
                                                             "i244"
                                                             "i242"
                                                             "i240"
                                                             "i238"
                                                             "i236"
                                                             "i234"
                                                             "i232"
                                                             "i230"
                                                             "i228"
                                                             "i226"
                                                             "i224"
                                                             "i222"
                                                             "i220"
                                                             "i219"
                                                             "i217"
                                                             "i215"
                                                             "i213"
                                                             "i211"
                                                             "i209"
                                                             "i207"
                                                             "i205"
                                                             "i203"
                                                             "i201"
                                                             "i199"
                                                             "i197"
                                                             "i195"
                                                             "i193"
                                                             "i191"
                                                             "i189"
                                                             "i187"
                                                             "i185"
                                                             "i183"
                                                             "i181"
                                                             "i179"
                                                             "i177"
                                                             "i175"
                                                             "i173"
                                                             "i171"))
                                                          #(ribcage
                                                            (define-structure
                                                              define-expansion-constructors
                                                              and-map*)
                                                            ((top) (top) (top))
                                                            ("i22"
                                                             "i21"
                                                             "i19")))
                                                         (hygiene guile))
                                                      #{keys\ 3529}#))
                                              #f)
                                          (let ((#{labels\ 3554}#
                                                  (list (#{gen-label\ 323}#)))
                                                (#{var\ 3555}#
                                                  (#{gen-var\ 420}#
                                                    #{pat\ 3546}#)))
                                            (#{build-application\ 229}#
                                              #f
                                              (#{build-simple-lambda\ 249}#
                                                #f
                                                (list (syntax->datum
                                                        #{pat\ 3546}#))
                                                #f
                                                (list #{var\ 3555}#)
                                                '()
                                                (#{chi\ 392}#
                                                  #{exp\ 3547}#
                                                  (#{extend-env\ 295}#
                                                    #{labels\ 3554}#
                                                    (list (cons 'syntax
                                                                (cons #{var\ 3555}#
                                                                      0)))
                                                    #{r\ 3531}#)
                                                  (#{make-binding-wrap\ 354}#
                                                    (list #{pat\ 3546}#)
                                                    #{labels\ 3554}#
                                                    '(()))
                                                  #{mod\ 3532}#))
                                              (list #{x\ 3528}#)))
                                          (#{gen-clause\ 3525}#
                                            #{x\ 3528}#
                                            #{keys\ 3529}#
                                            (cdr #{clauses\ 3530}#)
                                            #{r\ 3531}#
                                            #{pat\ 3546}#
                                            #t
                                            #{exp\ 3547}#
                                            #{mod\ 3532}#)))
                                      #{tmp\ 3543}#)
                               ((lambda (#{tmp\ 3561}#)
                                  (if #{tmp\ 3561}#
                                    (apply (lambda (#{pat\ 3565}#
                                                    #{fender\ 3566}#
                                                    #{exp\ 3567}#)
                                             (#{gen-clause\ 3525}#
                                               #{x\ 3528}#
                                               #{keys\ 3529}#
                                               (cdr #{clauses\ 3530}#)
                                               #{r\ 3531}#
                                               #{pat\ 3565}#
                                               #{fender\ 3566}#
                                               #{exp\ 3567}#
                                               #{mod\ 3532}#))
                                           #{tmp\ 3561}#)
                                    ((lambda (#{_\ 3569}#)
                                       (syntax-violation
                                         'syntax-case
                                         "invalid clause"
                                         (car #{clauses\ 3530}#)))
                                     #{tmp\ 3542}#)))
                                ($sc-dispatch
                                  #{tmp\ 3542}#
                                  '(any any any)))))
                           ($sc-dispatch #{tmp\ 3542}# (quote (any any)))))
                        (car #{clauses\ 3530}#)))))
                 (#{gen-clause\ 3525}#
                   (lambda (#{x\ 3570}#
                            #{keys\ 3571}#
                            #{clauses\ 3572}#
                            #{r\ 3573}#
                            #{pat\ 3574}#
                            #{fender\ 3575}#
                            #{exp\ 3576}#
                            #{mod\ 3577}#)
                     (call-with-values
                       (lambda ()
                         (#{convert-pattern\ 3521}#
                           #{pat\ 3574}#
                           #{keys\ 3571}#))
                       (lambda (#{p\ 3586}# #{pvars\ 3587}#)
                         (if (not (#{distinct-bound-ids?\ 372}#
                                    (map car #{pvars\ 3587}#)))
                           (syntax-violation
                             'syntax-case
                             "duplicate pattern variable"
                             #{pat\ 3574}#)
                           (if (not (and-map
                                      (lambda (#{x\ 3594}#)
                                        (not (#{ellipsis?\ 408}#
                                               (car #{x\ 3594}#))))
                                      #{pvars\ 3587}#))
                             (syntax-violation
                               'syntax-case
                               "misplaced ellipsis"
                               #{pat\ 3574}#)
                             (let ((#{y\ 3598}#
                                     (#{gen-var\ 420}# (quote tmp))))
                               (#{build-application\ 229}#
                                 #f
                                 (#{build-simple-lambda\ 249}#
                                   #f
                                   (list (quote tmp))
                                   #f
                                   (list #{y\ 3598}#)
                                   '()
                                   (let ((#{y\ 3602}#
                                           (#{build-lexical-reference\ 235}#
                                             'value
                                             #f
                                             'tmp
                                             #{y\ 3598}#)))
                                     (#{build-conditional\ 231}#
                                       #f
                                       ((lambda (#{tmp\ 3605}#)
                                          ((lambda (#{tmp\ 3606}#)
                                             (if #{tmp\ 3606}#
                                               (apply (lambda () #{y\ 3602}#)
                                                      #{tmp\ 3606}#)
                                               ((lambda (#{_\ 3608}#)
                                                  (#{build-conditional\ 231}#
                                                    #f
                                                    #{y\ 3602}#
                                                    (#{build-dispatch-call\ 3523}#
                                                      #{pvars\ 3587}#
                                                      #{fender\ 3575}#
                                                      #{y\ 3602}#
                                                      #{r\ 3573}#
                                                      #{mod\ 3577}#)
                                                    (#{build-data\ 257}#
                                                      #f
                                                      #f)))
                                                #{tmp\ 3605}#)))
                                           ($sc-dispatch
                                             #{tmp\ 3605}#
                                             '#(atom #t))))
                                        #{fender\ 3575}#)
                                       (#{build-dispatch-call\ 3523}#
                                         #{pvars\ 3587}#
                                         #{exp\ 3576}#
                                         #{y\ 3602}#
                                         #{r\ 3573}#
                                         #{mod\ 3577}#)
                                       (#{gen-syntax-case\ 3527}#
                                         #{x\ 3570}#
                                         #{keys\ 3571}#
                                         #{clauses\ 3572}#
                                         #{r\ 3573}#
                                         #{mod\ 3577}#))))
                                 (list (if (eq? #{p\ 3586}# (quote any))
                                         (#{build-application\ 229}#
                                           #f
                                           (#{build-primref\ 255}#
                                             #f
                                             'list)
                                           (list #{x\ 3570}#))
                                         (#{build-application\ 229}#
                                           #f
                                           (#{build-primref\ 255}#
                                             #f
                                             '$sc-dispatch)
                                           (list #{x\ 3570}#
                                                 (#{build-data\ 257}#
                                                   #f
                                                   #{p\ 3586}#)))))))))))))
                 (#{build-dispatch-call\ 3523}#
                   (lambda (#{pvars\ 3616}#
                            #{exp\ 3617}#
                            #{y\ 3618}#
                            #{r\ 3619}#
                            #{mod\ 3620}#)
                     (let ((#{ids\ 3628}# (map car #{pvars\ 3616}#))
                           (#{levels\ 3629}# (map cdr #{pvars\ 3616}#)))
                       (let ((#{labels\ 3632}#
                               (#{gen-labels\ 325}# #{ids\ 3628}#))
                             (#{new-vars\ 3633}#
                               (map #{gen-var\ 420}# #{ids\ 3628}#)))
                         (#{build-application\ 229}#
                           #f
                           (#{build-primref\ 255}# #f (quote apply))
                           (list (#{build-simple-lambda\ 249}#
                                   #f
                                   (map syntax->datum #{ids\ 3628}#)
                                   #f
                                   #{new-vars\ 3633}#
                                   '()
                                   (#{chi\ 392}#
                                     #{exp\ 3617}#
                                     (#{extend-env\ 295}#
                                       #{labels\ 3632}#
                                       (map (lambda (#{var\ 3637}#
                                                     #{level\ 3638}#)
                                              (cons 'syntax
                                                    (cons #{var\ 3637}#
                                                          #{level\ 3638}#)))
                                            #{new-vars\ 3633}#
                                            (map cdr #{pvars\ 3616}#))
                                       #{r\ 3619}#)
                                     (#{make-binding-wrap\ 354}#
                                       #{ids\ 3628}#
                                       #{labels\ 3632}#
                                       '(()))
                                     #{mod\ 3620}#))
                                 #{y\ 3618}#))))))
                 (#{convert-pattern\ 3521}#
                   (lambda (#{pattern\ 3644}# #{keys\ 3645}#)
                     (letrec ((#{cvt\ 3651}#
                                (lambda (#{p\ 3652}# #{n\ 3653}# #{ids\ 3654}#)
                                  (if (#{id?\ 307}# #{p\ 3652}#)
                                    (if (#{bound-id-member?\ 374}#
                                          #{p\ 3652}#
                                          #{keys\ 3645}#)
                                      (values
                                        (vector (quote free-id) #{p\ 3652}#)
                                        #{ids\ 3654}#)
                                      (values
                                        'any
                                        (cons (cons #{p\ 3652}# #{n\ 3653}#)
                                              #{ids\ 3654}#)))
                                    ((lambda (#{tmp\ 3658}#)
                                       ((lambda (#{tmp\ 3659}#)
                                          (if (if #{tmp\ 3659}#
                                                (apply (lambda (#{x\ 3662}#
                                                                #{dots\ 3663}#)
                                                         (#{ellipsis?\ 408}#
                                                           #{dots\ 3663}#))
                                                       #{tmp\ 3659}#)
                                                #f)
                                            (apply (lambda (#{x\ 3666}#
                                                            #{dots\ 3667}#)
                                                     (call-with-values
                                                       (lambda ()
                                                         (#{cvt\ 3651}#
                                                           #{x\ 3666}#
                                                           (#{fx+\ 208}#
                                                             #{n\ 3653}#
                                                             1)
                                                           #{ids\ 3654}#))
                                                       (lambda (#{p\ 3668}#
                                                                #{ids\ 3669}#)
                                                         (values
                                                           (if (eq? #{p\ 3668}#
                                                                    'any)
                                                             'each-any
                                                             (vector
                                                               'each
                                                               #{p\ 3668}#))
                                                           #{ids\ 3669}#))))
                                                   #{tmp\ 3659}#)
                                            ((lambda (#{tmp\ 3672}#)
                                               (if (if #{tmp\ 3672}#
                                                     (apply (lambda (#{x\ 3676}#
                                                                     #{dots\ 3677}#
                                                                     #{ys\ 3678}#)
                                                              (#{ellipsis?\ 408}#
                                                                #{dots\ 3677}#))
                                                            #{tmp\ 3672}#)
                                                     #f)
                                                 (apply (lambda (#{x\ 3682}#
                                                                 #{dots\ 3683}#
                                                                 #{ys\ 3684}#)
                                                          (call-with-values
                                                            (lambda ()
                                                              (#{cvt*\ 3649}#
                                                                #{ys\ 3684}#
                                                                #{n\ 3653}#
                                                                #{ids\ 3654}#))
                                                            (lambda (#{ys\ 3686}#
                                                                     #{ids\ 3687}#)
                                                              (call-with-values
                                                                (lambda ()
                                                                  (#{cvt\ 3651}#
                                                                    #{x\ 3682}#
                                                                    (+ #{n\ 3653}#
                                                                       1)
                                                                    #{ids\ 3687}#))
                                                                (lambda (#{x\ 3690}#
                                                                         #{ids\ 3691}#)
                                                                  (values
                                                                    (list->vector
                                                                      (cons 'each+
                                                                            (cons #{x\ 3690}#
                                                                                  (cons (reverse
                                                                                          #{ys\ 3686}#)
                                                                                        '(())))))
                                                                    #{ids\ 3691}#))))))
                                                        #{tmp\ 3672}#)
                                                 ((lambda (#{tmp\ 3695}#)
                                                    (if #{tmp\ 3695}#
                                                      (apply (lambda (#{x\ 3698}#
                                                                      #{y\ 3699}#)
                                                               (call-with-values
                                                                 (lambda ()
                                                                   (#{cvt\ 3651}#
                                                                     #{y\ 3699}#
                                                                     #{n\ 3653}#
                                                                     #{ids\ 3654}#))
                                                                 (lambda (#{y\ 3700}#
                                                                          #{ids\ 3701}#)
                                                                   (call-with-values
                                                                     (lambda ()
                                                                       (#{cvt\ 3651}#
                                                                         #{x\ 3698}#
                                                                         #{n\ 3653}#
                                                                         #{ids\ 3701}#))
                                                                     (lambda (#{x\ 3704}#
                                                                              #{ids\ 3705}#)
                                                                       (values
                                                                         (cons #{x\ 3704}#
                                                                               #{y\ 3700}#)
                                                                         #{ids\ 3705}#))))))
                                                             #{tmp\ 3695}#)
                                                      ((lambda (#{tmp\ 3708}#)
                                                         (if #{tmp\ 3708}#
                                                           (apply (lambda ()
                                                                    (values
                                                                      '()
                                                                      #{ids\ 3654}#))
                                                                  #{tmp\ 3708}#)
                                                           ((lambda (#{tmp\ 3709}#)
                                                              (if #{tmp\ 3709}#
                                                                (apply (lambda (#{x\ 3711}#)
                                                                         (call-with-values
                                                                           (lambda ()
                                                                             (#{cvt\ 3651}#
                                                                               #{x\ 3711}#
                                                                               #{n\ 3653}#
                                                                               #{ids\ 3654}#))
                                                                           (lambda (#{p\ 3713}#
                                                                                    #{ids\ 3714}#)
                                                                             (values
                                                                               (vector
                                                                                 'vector
                                                                                 #{p\ 3713}#)
                                                                               #{ids\ 3714}#))))
                                                                       #{tmp\ 3709}#)
                                                                ((lambda (#{x\ 3718}#)
                                                                   (values
                                                                     (vector
                                                                       'atom
                                                                       (#{strip\ 418}#
                                                                         #{p\ 3652}#
                                                                         '(())))
                                                                     #{ids\ 3654}#))
                                                                 #{tmp\ 3658}#)))
                                                            ($sc-dispatch
                                                              #{tmp\ 3658}#
                                                              '#(vector
                                                                 each-any)))))
                                                       ($sc-dispatch
                                                         #{tmp\ 3658}#
                                                         '()))))
                                                  ($sc-dispatch
                                                    #{tmp\ 3658}#
                                                    '(any . any)))))
                                             ($sc-dispatch
                                               #{tmp\ 3658}#
                                               '(any any . each-any)))))
                                        ($sc-dispatch
                                          #{tmp\ 3658}#
                                          '(any any))))
                                     #{p\ 3652}#))))
                              (#{cvt*\ 3649}#
                                (lambda (#{p*\ 3720}#
                                         #{n\ 3721}#
                                         #{ids\ 3722}#)
                                  (if (null? #{p*\ 3720}#)
                                    (values (quote ()) #{ids\ 3722}#)
                                    (call-with-values
                                      (lambda ()
                                        (#{cvt*\ 3649}#
                                          (cdr #{p*\ 3720}#)
                                          #{n\ 3721}#
                                          #{ids\ 3722}#))
                                      (lambda (#{y\ 3726}# #{ids\ 3727}#)
                                        (call-with-values
                                          (lambda ()
                                            (#{cvt\ 3651}#
                                              (car #{p*\ 3720}#)
                                              #{n\ 3721}#
                                              #{ids\ 3727}#))
                                          (lambda (#{x\ 3730}# #{ids\ 3731}#)
                                            (values
                                              (cons #{x\ 3730}# #{y\ 3726}#)
                                              #{ids\ 3731}#)))))))))
                       (#{cvt\ 3651}# #{pattern\ 3644}# 0 (quote ()))))))
          (lambda (#{e\ 3734}#
                   #{r\ 3735}#
                   #{w\ 3736}#
                   #{s\ 3737}#
                   #{mod\ 3738}#)
            (let ((#{e\ 3745}#
                    (#{source-wrap\ 378}#
                      #{e\ 3734}#
                      #{w\ 3736}#
                      #{s\ 3737}#
                      #{mod\ 3738}#)))
              ((lambda (#{tmp\ 3746}#)
                 ((lambda (#{tmp\ 3747}#)
                    (if #{tmp\ 3747}#
                      (apply (lambda (#{_\ 3752}#
                                      #{val\ 3753}#
                                      #{key\ 3754}#
                                      #{m\ 3755}#)
                               (if (and-map
                                     (lambda (#{x\ 3756}#)
                                       (if (#{id?\ 307}# #{x\ 3756}#)
                                         (not (#{ellipsis?\ 408}# #{x\ 3756}#))
                                         #f))
                                     #{key\ 3754}#)
                                 (let ((#{x\ 3762}#
                                         (#{gen-var\ 420}# (quote tmp))))
                                   (#{build-application\ 229}#
                                     #{s\ 3737}#
                                     (#{build-simple-lambda\ 249}#
                                       #f
                                       (list (quote tmp))
                                       #f
                                       (list #{x\ 3762}#)
                                       '()
                                       (#{gen-syntax-case\ 3527}#
                                         (#{build-lexical-reference\ 235}#
                                           'value
                                           #f
                                           'tmp
                                           #{x\ 3762}#)
                                         #{key\ 3754}#
                                         #{m\ 3755}#
                                         #{r\ 3735}#
                                         #{mod\ 3738}#))
                                     (list (#{chi\ 392}#
                                             #{val\ 3753}#
                                             #{r\ 3735}#
                                             '(())
                                             #{mod\ 3738}#))))
                                 (syntax-violation
                                   'syntax-case
                                   "invalid literals list"
                                   #{e\ 3745}#)))
                             #{tmp\ 3747}#)
                      (syntax-violation
                        #f
                        "source expression failed to match any pattern"
                        #{tmp\ 3746}#)))
                  ($sc-dispatch
                    #{tmp\ 3746}#
                    '(any any each-any . each-any))))
               #{e\ 3745}#)))))
      (set! macroexpand
        (lambda*
          (#{x\ 3768}#
            #:optional
            (#{m\ 3770}# (quote e))
            (#{esew\ 3772}# (quote (eval))))
          (#{chi-top\ 390}#
            #{x\ 3768}#
            '()
            '((top))
            #{m\ 3770}#
            #{esew\ 3772}#
            (cons 'hygiene
                  (module-name (current-module))))))
      (set! identifier?
        (lambda (#{x\ 3776}#)
          (#{nonsymbol-id?\ 305}# #{x\ 3776}#)))
      (set! datum->syntax
        (lambda (#{id\ 3778}# #{datum\ 3779}#)
          (#{make-syntax-object\ 269}#
            #{datum\ 3779}#
            (#{syntax-object-wrap\ 275}# #{id\ 3778}#)
            #f)))
      (set! syntax->datum
        (lambda (#{x\ 3782}#)
          (#{strip\ 418}# #{x\ 3782}# (quote (())))))
      (set! generate-temporaries
        (lambda (#{ls\ 3785}#)
          (begin
            (let ((#{x\ 3789}# #{ls\ 3785}#))
              (if (not (list? #{x\ 3789}#))
                (syntax-violation
                  'generate-temporaries
                  "invalid argument"
                  #{x\ 3789}#)))
            (map (lambda (#{x\ 3790}#)
                   (#{wrap\ 376}# (gensym) (quote ((top))) #f))
                 #{ls\ 3785}#))))
      (set! free-identifier=?
        (lambda (#{x\ 3794}# #{y\ 3795}#)
          (begin
            (let ((#{x\ 3800}# #{x\ 3794}#))
              (if (not (#{nonsymbol-id?\ 305}# #{x\ 3800}#))
                (syntax-violation
                  'free-identifier=?
                  "invalid argument"
                  #{x\ 3800}#)))
            (let ((#{x\ 3803}# #{y\ 3795}#))
              (if (not (#{nonsymbol-id?\ 305}# #{x\ 3803}#))
                (syntax-violation
                  'free-identifier=?
                  "invalid argument"
                  #{x\ 3803}#)))
            (#{free-id=?\ 366}# #{x\ 3794}# #{y\ 3795}#))))
      (set! bound-identifier=?
        (lambda (#{x\ 3804}# #{y\ 3805}#)
          (begin
            (let ((#{x\ 3810}# #{x\ 3804}#))
              (if (not (#{nonsymbol-id?\ 305}# #{x\ 3810}#))
                (syntax-violation
                  'bound-identifier=?
                  "invalid argument"
                  #{x\ 3810}#)))
            (let ((#{x\ 3813}# #{y\ 3805}#))
              (if (not (#{nonsymbol-id?\ 305}# #{x\ 3813}#))
                (syntax-violation
                  'bound-identifier=?
                  "invalid argument"
                  #{x\ 3813}#)))
            (#{bound-id=?\ 368}# #{x\ 3804}# #{y\ 3805}#))))
      (set! syntax-violation
        (lambda (#{who\ 3814}#
                 #{message\ 3815}#
                 #{form\ 3816}#
                 .
                 #{subform\ 3817}#)
          (begin
            (let ((#{x\ 3824}# #{who\ 3814}#))
              (if (not ((lambda (#{x\ 3825}#)
                          (let ((#{t\ 3829}# (not #{x\ 3825}#)))
                            (if #{t\ 3829}#
                              #{t\ 3829}#
                              (let ((#{t\ 3832}# (string? #{x\ 3825}#)))
                                (if #{t\ 3832}#
                                  #{t\ 3832}#
                                  (symbol? #{x\ 3825}#))))))
                        #{x\ 3824}#))
                (syntax-violation
                  'syntax-violation
                  "invalid argument"
                  #{x\ 3824}#)))
            (let ((#{x\ 3836}# #{message\ 3815}#))
              (if (not (string? #{x\ 3836}#))
                (syntax-violation
                  'syntax-violation
                  "invalid argument"
                  #{x\ 3836}#)))
            (scm-error
              'syntax-error
              'macroexpand
              (string-append
                (if #{who\ 3814}# "~a: " "")
                "~a "
                (if (null? #{subform\ 3817}#)
                  "in ~a"
                  "in subform `~s' of `~s'"))
              (let ((#{tail\ 3838}#
                      (cons #{message\ 3815}#
                            (map (lambda (#{x\ 3839}#)
                                   (#{strip\ 418}# #{x\ 3839}# (quote (()))))
                                 (append
                                   #{subform\ 3817}#
                                   (list #{form\ 3816}#))))))
                (if #{who\ 3814}#
                  (cons #{who\ 3814}# #{tail\ 3838}#)
                  #{tail\ 3838}#))
              #f))))
      (letrec ((#{match\ 3855}#
                 (lambda (#{e\ 3856}#
                          #{p\ 3857}#
                          #{w\ 3858}#
                          #{r\ 3859}#
                          #{mod\ 3860}#)
                   (if (not #{r\ 3859}#)
                     #f
                     (if (eq? #{p\ 3857}# (quote any))
                       (cons (#{wrap\ 376}#
                               #{e\ 3856}#
                               #{w\ 3858}#
                               #{mod\ 3860}#)
                             #{r\ 3859}#)
                       (if (#{syntax-object?\ 271}# #{e\ 3856}#)
                         (#{match*\ 3853}#
                           (#{syntax-object-expression\ 273}# #{e\ 3856}#)
                           #{p\ 3857}#
                           (#{join-wraps\ 358}#
                             #{w\ 3858}#
                             (#{syntax-object-wrap\ 275}# #{e\ 3856}#))
                           #{r\ 3859}#
                           (#{syntax-object-module\ 277}# #{e\ 3856}#))
                         (#{match*\ 3853}#
                           #{e\ 3856}#
                           #{p\ 3857}#
                           #{w\ 3858}#
                           #{r\ 3859}#
                           #{mod\ 3860}#))))))
               (#{match*\ 3853}#
                 (lambda (#{e\ 3873}#
                          #{p\ 3874}#
                          #{w\ 3875}#
                          #{r\ 3876}#
                          #{mod\ 3877}#)
                   (if (null? #{p\ 3874}#)
                     (if (null? #{e\ 3873}#) #{r\ 3876}# #f)
                     (if (pair? #{p\ 3874}#)
                       (if (pair? #{e\ 3873}#)
                         (#{match\ 3855}#
                           (car #{e\ 3873}#)
                           (car #{p\ 3874}#)
                           #{w\ 3875}#
                           (#{match\ 3855}#
                             (cdr #{e\ 3873}#)
                             (cdr #{p\ 3874}#)
                             #{w\ 3875}#
                             #{r\ 3876}#
                             #{mod\ 3877}#)
                           #{mod\ 3877}#)
                         #f)
                       (if (eq? #{p\ 3874}# (quote each-any))
                         (let ((#{l\ 3894}#
                                 (#{match-each-any\ 3847}#
                                   #{e\ 3873}#
                                   #{w\ 3875}#
                                   #{mod\ 3877}#)))
                           (if #{l\ 3894}#
                             (cons #{l\ 3894}# #{r\ 3876}#)
                             #f))
                         (let ((#{atom-key\ 3900}# (vector-ref #{p\ 3874}# 0)))
                           (if (memv #{atom-key\ 3900}# (quote (each)))
                             (if (null? #{e\ 3873}#)
                               (#{match-empty\ 3849}#
                                 (vector-ref #{p\ 3874}# 1)
                                 #{r\ 3876}#)
                               (let ((#{l\ 3903}#
                                       (#{match-each\ 3843}#
                                         #{e\ 3873}#
                                         (vector-ref #{p\ 3874}# 1)
                                         #{w\ 3875}#
                                         #{mod\ 3877}#)))
                                 (if #{l\ 3903}#
                                   (letrec ((#{collect\ 3908}#
                                              (lambda (#{l\ 3909}#)
                                                (if (null? (car #{l\ 3909}#))
                                                  #{r\ 3876}#
                                                  (cons (map car #{l\ 3909}#)
                                                        (#{collect\ 3908}#
                                                          (map cdr
                                                               #{l\ 3909}#)))))))
                                     (#{collect\ 3908}# #{l\ 3903}#))
                                   #f)))
                             (if (memv #{atom-key\ 3900}# (quote (each+)))
                               (call-with-values
                                 (lambda ()
                                   (#{match-each+\ 3845}#
                                     #{e\ 3873}#
                                     (vector-ref #{p\ 3874}# 1)
                                     (vector-ref #{p\ 3874}# 2)
                                     (vector-ref #{p\ 3874}# 3)
                                     #{w\ 3875}#
                                     #{r\ 3876}#
                                     #{mod\ 3877}#))
                                 (lambda (#{xr*\ 3911}#
                                          #{y-pat\ 3912}#
                                          #{r\ 3913}#)
                                   (if #{r\ 3913}#
                                     (if (null? #{y-pat\ 3912}#)
                                       (if (null? #{xr*\ 3911}#)
                                         (#{match-empty\ 3849}#
                                           (vector-ref #{p\ 3874}# 1)
                                           #{r\ 3913}#)
                                         (#{combine\ 3851}#
                                           #{xr*\ 3911}#
                                           #{r\ 3913}#))
                                       #f)
                                     #f)))
                               (if (memv #{atom-key\ 3900}# (quote (free-id)))
                                 (if (#{id?\ 307}# #{e\ 3873}#)
                                   (if (#{free-id=?\ 366}#
                                         (#{wrap\ 376}#
                                           #{e\ 3873}#
                                           #{w\ 3875}#
                                           #{mod\ 3877}#)
                                         (vector-ref #{p\ 3874}# 1))
                                     #{r\ 3876}#
                                     #f)
                                   #f)
                                 (if (memv #{atom-key\ 3900}# (quote (atom)))
                                   (if (equal?
                                         (vector-ref #{p\ 3874}# 1)
                                         (#{strip\ 418}#
                                           #{e\ 3873}#
                                           #{w\ 3875}#))
                                     #{r\ 3876}#
                                     #f)
                                   (if (memv #{atom-key\ 3900}#
                                             '(vector))
                                     (if (vector? #{e\ 3873}#)
                                       (#{match\ 3855}#
                                         (vector->list #{e\ 3873}#)
                                         (vector-ref #{p\ 3874}# 1)
                                         #{w\ 3875}#
                                         #{r\ 3876}#
                                         #{mod\ 3877}#)
                                       #f))))))))))))
               (#{combine\ 3851}#
                 (lambda (#{r*\ 3930}# #{r\ 3931}#)
                   (if (null? (car #{r*\ 3930}#))
                     #{r\ 3931}#
                     (cons (map car #{r*\ 3930}#)
                           (#{combine\ 3851}#
                             (map cdr #{r*\ 3930}#)
                             #{r\ 3931}#)))))
               (#{match-empty\ 3849}#
                 (lambda (#{p\ 3934}# #{r\ 3935}#)
                   (if (null? #{p\ 3934}#)
                     #{r\ 3935}#
                     (if (eq? #{p\ 3934}# (quote any))
                       (cons (quote ()) #{r\ 3935}#)
                       (if (pair? #{p\ 3934}#)
                         (#{match-empty\ 3849}#
                           (car #{p\ 3934}#)
                           (#{match-empty\ 3849}#
                             (cdr #{p\ 3934}#)
                             #{r\ 3935}#))
                         (if (eq? #{p\ 3934}# (quote each-any))
                           (cons (quote ()) #{r\ 3935}#)
                           (let ((#{atom-key\ 3949}#
                                   (vector-ref #{p\ 3934}# 0)))
                             (if (memv #{atom-key\ 3949}# (quote (each)))
                               (#{match-empty\ 3849}#
                                 (vector-ref #{p\ 3934}# 1)
                                 #{r\ 3935}#)
                               (if (memv #{atom-key\ 3949}# (quote (each+)))
                                 (#{match-empty\ 3849}#
                                   (vector-ref #{p\ 3934}# 1)
                                   (#{match-empty\ 3849}#
                                     (reverse (vector-ref #{p\ 3934}# 2))
                                     (#{match-empty\ 3849}#
                                       (vector-ref #{p\ 3934}# 3)
                                       #{r\ 3935}#)))
                                 (if (memv #{atom-key\ 3949}#
                                           '(free-id atom))
                                   #{r\ 3935}#
                                   (if (memv #{atom-key\ 3949}#
                                             '(vector))
                                     (#{match-empty\ 3849}#
                                       (vector-ref #{p\ 3934}# 1)
                                       #{r\ 3935}#))))))))))))
               (#{match-each-any\ 3847}#
                 (lambda (#{e\ 3954}# #{w\ 3955}# #{mod\ 3956}#)
                   (if (pair? #{e\ 3954}#)
                     (let ((#{l\ 3963}#
                             (#{match-each-any\ 3847}#
                               (cdr #{e\ 3954}#)
                               #{w\ 3955}#
                               #{mod\ 3956}#)))
                       (if #{l\ 3963}#
                         (cons (#{wrap\ 376}#
                                 (car #{e\ 3954}#)
                                 #{w\ 3955}#
                                 #{mod\ 3956}#)
                               #{l\ 3963}#)
                         #f))
                     (if (null? #{e\ 3954}#)
                       '()
                       (if (#{syntax-object?\ 271}# #{e\ 3954}#)
                         (#{match-each-any\ 3847}#
                           (#{syntax-object-expression\ 273}# #{e\ 3954}#)
                           (#{join-wraps\ 358}#
                             #{w\ 3955}#
                             (#{syntax-object-wrap\ 275}# #{e\ 3954}#))
                           #{mod\ 3956}#)
                         #f)))))
               (#{match-each+\ 3845}#
                 (lambda (#{e\ 3971}#
                          #{x-pat\ 3972}#
                          #{y-pat\ 3973}#
                          #{z-pat\ 3974}#
                          #{w\ 3975}#
                          #{r\ 3976}#
                          #{mod\ 3977}#)
                   (letrec ((#{f\ 3988}#
                              (lambda (#{e\ 3989}# #{w\ 3990}#)
                                (if (pair? #{e\ 3989}#)
                                  (call-with-values
                                    (lambda ()
                                      (#{f\ 3988}#
                                        (cdr #{e\ 3989}#)
                                        #{w\ 3990}#))
                                    (lambda (#{xr*\ 3993}#
                                             #{y-pat\ 3994}#
                                             #{r\ 3995}#)
                                      (if #{r\ 3995}#
                                        (if (null? #{y-pat\ 3994}#)
                                          (let ((#{xr\ 4000}#
                                                  (#{match\ 3855}#
                                                    (car #{e\ 3989}#)
                                                    #{x-pat\ 3972}#
                                                    #{w\ 3990}#
                                                    '()
                                                    #{mod\ 3977}#)))
                                            (if #{xr\ 4000}#
                                              (values
                                                (cons #{xr\ 4000}#
                                                      #{xr*\ 3993}#)
                                                #{y-pat\ 3994}#
                                                #{r\ 3995}#)
                                              (values #f #f #f)))
                                          (values
                                            '()
                                            (cdr #{y-pat\ 3994}#)
                                            (#{match\ 3855}#
                                              (car #{e\ 3989}#)
                                              (car #{y-pat\ 3994}#)
                                              #{w\ 3990}#
                                              #{r\ 3995}#
                                              #{mod\ 3977}#)))
                                        (values #f #f #f))))
                                  (if (#{syntax-object?\ 271}# #{e\ 3989}#)
                                    (#{f\ 3988}#
                                      (#{syntax-object-expression\ 273}#
                                        #{e\ 3989}#)
                                      (#{join-wraps\ 358}#
                                        #{w\ 3990}#
                                        #{e\ 3989}#))
                                    (values
                                      '()
                                      #{y-pat\ 3973}#
                                      (#{match\ 3855}#
                                        #{e\ 3989}#
                                        #{z-pat\ 3974}#
                                        #{w\ 3990}#
                                        #{r\ 3976}#
                                        #{mod\ 3977}#)))))))
                     (#{f\ 3988}# #{e\ 3971}# #{w\ 3975}#))))
               (#{match-each\ 3843}#
                 (lambda (#{e\ 4004}#
                          #{p\ 4005}#
                          #{w\ 4006}#
                          #{mod\ 4007}#)
                   (if (pair? #{e\ 4004}#)
                     (let ((#{first\ 4015}#
                             (#{match\ 3855}#
                               (car #{e\ 4004}#)
                               #{p\ 4005}#
                               #{w\ 4006}#
                               '()
                               #{mod\ 4007}#)))
                       (if #{first\ 4015}#
                         (let ((#{rest\ 4019}#
                                 (#{match-each\ 3843}#
                                   (cdr #{e\ 4004}#)
                                   #{p\ 4005}#
                                   #{w\ 4006}#
                                   #{mod\ 4007}#)))
                           (if #{rest\ 4019}#
                             (cons #{first\ 4015}# #{rest\ 4019}#)
                             #f))
                         #f))
                     (if (null? #{e\ 4004}#)
                       '()
                       (if (#{syntax-object?\ 271}# #{e\ 4004}#)
                         (#{match-each\ 3843}#
                           (#{syntax-object-expression\ 273}# #{e\ 4004}#)
                           #{p\ 4005}#
                           (#{join-wraps\ 358}#
                             #{w\ 4006}#
                             (#{syntax-object-wrap\ 275}# #{e\ 4004}#))
                           (#{syntax-object-module\ 277}# #{e\ 4004}#))
                         #f))))))
        (set! $sc-dispatch
          (lambda (#{e\ 4027}# #{p\ 4028}#)
            (if (eq? #{p\ 4028}# (quote any))
              (list #{e\ 4027}#)
              (if (#{syntax-object?\ 271}# #{e\ 4027}#)
                (#{match*\ 3853}#
                  (#{syntax-object-expression\ 273}# #{e\ 4027}#)
                  #{p\ 4028}#
                  (#{syntax-object-wrap\ 275}# #{e\ 4027}#)
                  '()
                  (#{syntax-object-module\ 277}# #{e\ 4027}#))
                (#{match*\ 3853}#
                  #{e\ 4027}#
                  #{p\ 4028}#
                  '(())
                  '()
                  #f)))))))))

(define with-syntax
  (make-syntax-transformer
    'with-syntax
    'macro
    (cons (lambda (#{x\ 4037}#)
            ((lambda (#{tmp\ 4039}#)
               ((lambda (#{tmp\ 4040}#)
                  (if #{tmp\ 4040}#
                    (apply (lambda (#{_\ 4044}# #{e1\ 4045}# #{e2\ 4046}#)
                             (cons '#(syntax-object
                                      begin
                                      ((top)
                                       #(ribcage
                                         #(_ e1 e2)
                                         #((top) (top) (top))
                                         #("i4041" "i4042" "i4043"))
                                       #(ribcage () () ())
                                       #(ribcage #(x) #((top)) #("i4038")))
                                      (hygiene guile))
                                   (cons #{e1\ 4045}# #{e2\ 4046}#)))
                           #{tmp\ 4040}#)
                    ((lambda (#{tmp\ 4048}#)
                       (if #{tmp\ 4048}#
                         (apply (lambda (#{_\ 4054}#
                                         #{out\ 4055}#
                                         #{in\ 4056}#
                                         #{e1\ 4057}#
                                         #{e2\ 4058}#)
                                  (list '#(syntax-object
                                           syntax-case
                                           ((top)
                                            #(ribcage
                                              #(_ out in e1 e2)
                                              #((top) (top) (top) (top) (top))
                                              #("i4049"
                                                "i4050"
                                                "i4051"
                                                "i4052"
                                                "i4053"))
                                            #(ribcage () () ())
                                            #(ribcage
                                              #(x)
                                              #((top))
                                              #("i4038")))
                                           (hygiene guile))
                                        #{in\ 4056}#
                                        '()
                                        (list #{out\ 4055}#
                                              (cons '#(syntax-object
                                                       begin
                                                       ((top)
                                                        #(ribcage
                                                          #(_ out in e1 e2)
                                                          #((top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top))
                                                          #("i4049"
                                                            "i4050"
                                                            "i4051"
                                                            "i4052"
                                                            "i4053"))
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(x)
                                                          #((top))
                                                          #("i4038")))
                                                       (hygiene guile))
                                                    (cons #{e1\ 4057}#
                                                          #{e2\ 4058}#)))))
                                #{tmp\ 4048}#)
                         ((lambda (#{tmp\ 4060}#)
                            (if #{tmp\ 4060}#
                              (apply (lambda (#{_\ 4066}#
                                              #{out\ 4067}#
                                              #{in\ 4068}#
                                              #{e1\ 4069}#
                                              #{e2\ 4070}#)
                                       (list '#(syntax-object
                                                syntax-case
                                                ((top)
                                                 #(ribcage
                                                   #(_ out in e1 e2)
                                                   #((top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top))
                                                   #("i4061"
                                                     "i4062"
                                                     "i4063"
                                                     "i4064"
                                                     "i4065"))
                                                 #(ribcage () () ())
                                                 #(ribcage
                                                   #(x)
                                                   #((top))
                                                   #("i4038")))
                                                (hygiene guile))
                                             (cons '#(syntax-object
                                                      list
                                                      ((top)
                                                       #(ribcage
                                                         #(_ out in e1 e2)
                                                         #((top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top))
                                                         #("i4061"
                                                           "i4062"
                                                           "i4063"
                                                           "i4064"
                                                           "i4065"))
                                                       #(ribcage () () ())
                                                       #(ribcage
                                                         #(x)
                                                         #((top))
                                                         #("i4038")))
                                                      (hygiene guile))
                                                   #{in\ 4068}#)
                                             '()
                                             (list #{out\ 4067}#
                                                   (cons '#(syntax-object
                                                            begin
                                                            ((top)
                                                             #(ribcage
                                                               #(_
                                                                 out
                                                                 in
                                                                 e1
                                                                 e2)
                                                               #((top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top))
                                                               #("i4061"
                                                                 "i4062"
                                                                 "i4063"
                                                                 "i4064"
                                                                 "i4065"))
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               #(x)
                                                               #((top))
                                                               #("i4038")))
                                                            (hygiene guile))
                                                         (cons #{e1\ 4069}#
                                                               #{e2\ 4070}#)))))
                                     #{tmp\ 4060}#)
                              (syntax-violation
                                #f
                                "source expression failed to match any pattern"
                                #{tmp\ 4039}#)))
                          ($sc-dispatch
                            #{tmp\ 4039}#
                            '(any #(each (any any)) any . each-any)))))
                     ($sc-dispatch
                       #{tmp\ 4039}#
                       '(any ((any any)) any . each-any)))))
                ($sc-dispatch
                  #{tmp\ 4039}#
                  '(any () any . each-any))))
             #{x\ 4037}#))
          (module-name (current-module)))))

(define syntax-rules
  (make-syntax-transformer
    'syntax-rules
    'macro
    (cons (lambda (#{x\ 4074}#)
            ((lambda (#{tmp\ 4076}#)
               ((lambda (#{tmp\ 4077}#)
                  (if #{tmp\ 4077}#
                    (apply (lambda (#{_\ 4083}#
                                    #{k\ 4084}#
                                    #{keyword\ 4085}#
                                    #{pattern\ 4086}#
                                    #{template\ 4087}#)
                             (list '#(syntax-object
                                      lambda
                                      ((top)
                                       #(ribcage
                                         #(_ k keyword pattern template)
                                         #((top) (top) (top) (top) (top))
                                         #("i4078"
                                           "i4079"
                                           "i4080"
                                           "i4081"
                                           "i4082"))
                                       #(ribcage () () ())
                                       #(ribcage #(x) #((top)) #("i4075")))
                                      (hygiene guile))
                                   '(#(syntax-object
                                       x
                                       ((top)
                                        #(ribcage
                                          #(_ k keyword pattern template)
                                          #((top) (top) (top) (top) (top))
                                          #("i4078"
                                            "i4079"
                                            "i4080"
                                            "i4081"
                                            "i4082"))
                                        #(ribcage () () ())
                                        #(ribcage #(x) #((top)) #("i4075")))
                                       (hygiene guile)))
                                   (vector
                                     '(#(syntax-object
                                         macro-type
                                         ((top)
                                          #(ribcage
                                            #(_ k keyword pattern template)
                                            #((top) (top) (top) (top) (top))
                                            #("i4078"
                                              "i4079"
                                              "i4080"
                                              "i4081"
                                              "i4082"))
                                          #(ribcage () () ())
                                          #(ribcage #(x) #((top)) #("i4075")))
                                         (hygiene guile))
                                       .
                                       #(syntax-object
                                         syntax-rules
                                         ((top)
                                          #(ribcage
                                            #(_ k keyword pattern template)
                                            #((top) (top) (top) (top) (top))
                                            #("i4078"
                                              "i4079"
                                              "i4080"
                                              "i4081"
                                              "i4082"))
                                          #(ribcage () () ())
                                          #(ribcage #(x) #((top)) #("i4075")))
                                         (hygiene guile)))
                                     (cons '#(syntax-object
                                              patterns
                                              ((top)
                                               #(ribcage
                                                 #(_
                                                   k
                                                   keyword
                                                   pattern
                                                   template)
                                                 #((top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top))
                                                 #("i4078"
                                                   "i4079"
                                                   "i4080"
                                                   "i4081"
                                                   "i4082"))
                                               #(ribcage () () ())
                                               #(ribcage
                                                 #(x)
                                                 #((top))
                                                 #("i4075")))
                                              (hygiene guile))
                                           #{pattern\ 4086}#))
                                   (cons '#(syntax-object
                                            syntax-case
                                            ((top)
                                             #(ribcage
                                               #(_ k keyword pattern template)
                                               #((top) (top) (top) (top) (top))
                                               #("i4078"
                                                 "i4079"
                                                 "i4080"
                                                 "i4081"
                                                 "i4082"))
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(x)
                                               #((top))
                                               #("i4075")))
                                            (hygiene guile))
                                         (cons '#(syntax-object
                                                  x
                                                  ((top)
                                                   #(ribcage
                                                     #(_
                                                       k
                                                       keyword
                                                       pattern
                                                       template)
                                                     #((top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top))
                                                     #("i4078"
                                                       "i4079"
                                                       "i4080"
                                                       "i4081"
                                                       "i4082"))
                                                   #(ribcage () () ())
                                                   #(ribcage
                                                     #(x)
                                                     #((top))
                                                     #("i4075")))
                                                  (hygiene guile))
                                               (cons #{k\ 4084}#
                                                     (map (lambda (#{tmp\ 4091}#
                                                                   #{tmp\ 4090}#)
                                                            (list (cons '#(syntax-object
                                                                           dummy
                                                                           ((top)
                                                                            #(ribcage
                                                                              #(_
                                                                                k
                                                                                keyword
                                                                                pattern
                                                                                template)
                                                                              #((top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top))
                                                                              #("i4078"
                                                                                "i4079"
                                                                                "i4080"
                                                                                "i4081"
                                                                                "i4082"))
                                                                            #(ribcage
                                                                              ()
                                                                              ()
                                                                              ())
                                                                            #(ribcage
                                                                              #(x)
                                                                              #((top))
                                                                              #("i4075")))
                                                                           (hygiene
                                                                             guile))
                                                                        #{tmp\ 4090}#)
                                                                  (list '#(syntax-object
                                                                           syntax
                                                                           ((top)
                                                                            #(ribcage
                                                                              #(_
                                                                                k
                                                                                keyword
                                                                                pattern
                                                                                template)
                                                                              #((top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top))
                                                                              #("i4078"
                                                                                "i4079"
                                                                                "i4080"
                                                                                "i4081"
                                                                                "i4082"))
                                                                            #(ribcage
                                                                              ()
                                                                              ()
                                                                              ())
                                                                            #(ribcage
                                                                              #(x)
                                                                              #((top))
                                                                              #("i4075")))
                                                                           (hygiene
                                                                             guile))
                                                                        #{tmp\ 4091}#)))
                                                          #{template\ 4087}#
                                                          #{pattern\ 4086}#))))))
                           #{tmp\ 4077}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 4076}#)))
                ($sc-dispatch
                  #{tmp\ 4076}#
                  '(any each-any . #(each ((any . any) any))))))
             #{x\ 4074}#))
          (module-name (current-module)))))

(define let*
  (make-syntax-transformer
    'let*
    'macro
    (cons (lambda (#{x\ 4092}#)
            ((lambda (#{tmp\ 4094}#)
               ((lambda (#{tmp\ 4095}#)
                  (if (if #{tmp\ 4095}#
                        (apply (lambda (#{let*\ 4101}#
                                        #{x\ 4102}#
                                        #{v\ 4103}#
                                        #{e1\ 4104}#
                                        #{e2\ 4105}#)
                                 (and-map identifier? #{x\ 4102}#))
                               #{tmp\ 4095}#)
                        #f)
                    (apply (lambda (#{let*\ 4112}#
                                    #{x\ 4113}#
                                    #{v\ 4114}#
                                    #{e1\ 4115}#
                                    #{e2\ 4116}#)
                             (letrec ((#{f\ 4119}#
                                        (lambda (#{bindings\ 4120}#)
                                          (if (null? #{bindings\ 4120}#)
                                            (cons '#(syntax-object
                                                     let
                                                     ((top)
                                                      #(ribcage () () ())
                                                      #(ribcage
                                                        #(f bindings)
                                                        #((top) (top))
                                                        #("i4117" "i4118"))
                                                      #(ribcage
                                                        #(let* x v e1 e2)
                                                        #((top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top))
                                                        #("i4107"
                                                          "i4108"
                                                          "i4109"
                                                          "i4110"
                                                          "i4111"))
                                                      #(ribcage () () ())
                                                      #(ribcage
                                                        #(x)
                                                        #((top))
                                                        #("i4093")))
                                                     (hygiene guile))
                                                  (cons '()
                                                        (cons #{e1\ 4115}#
                                                              #{e2\ 4116}#)))
                                            ((lambda (#{tmp\ 4125}#)
                                               ((lambda (#{tmp\ 4126}#)
                                                  (if #{tmp\ 4126}#
                                                    (apply (lambda (#{body\ 4129}#
                                                                    #{binding\ 4130}#)
                                                             (list '#(syntax-object
                                                                      let
                                                                      ((top)
                                                                       #(ribcage
                                                                         #(body
                                                                           binding)
                                                                         #((top)
                                                                           (top))
                                                                         #("i4127"
                                                                           "i4128"))
                                                                       #(ribcage
                                                                         ()
                                                                         ()
                                                                         ())
                                                                       #(ribcage
                                                                         #(f
                                                                           bindings)
                                                                         #((top)
                                                                           (top))
                                                                         #("i4117"
                                                                           "i4118"))
                                                                       #(ribcage
                                                                         #(let*
                                                                           x
                                                                           v
                                                                           e1
                                                                           e2)
                                                                         #((top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top))
                                                                         #("i4107"
                                                                           "i4108"
                                                                           "i4109"
                                                                           "i4110"
                                                                           "i4111"))
                                                                       #(ribcage
                                                                         ()
                                                                         ()
                                                                         ())
                                                                       #(ribcage
                                                                         #(x)
                                                                         #((top))
                                                                         #("i4093")))
                                                                      (hygiene
                                                                        guile))
                                                                   (list #{binding\ 4130}#)
                                                                   #{body\ 4129}#))
                                                           #{tmp\ 4126}#)
                                                    (syntax-violation
                                                      #f
                                                      "source expression failed to match any pattern"
                                                      #{tmp\ 4125}#)))
                                                ($sc-dispatch
                                                  #{tmp\ 4125}#
                                                  '(any any))))
                                             (list (#{f\ 4119}#
                                                     (cdr #{bindings\ 4120}#))
                                                   (car #{bindings\ 4120}#)))))))
                               (#{f\ 4119}#
                                 (map list #{x\ 4113}# #{v\ 4114}#))))
                           #{tmp\ 4095}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 4094}#)))
                ($sc-dispatch
                  #{tmp\ 4094}#
                  '(any #(each (any any)) any . each-any))))
             #{x\ 4092}#))
          (module-name (current-module)))))

(define do
  (make-syntax-transformer
    'do
    'macro
    (cons (lambda (#{orig-x\ 4131}#)
            ((lambda (#{tmp\ 4133}#)
               ((lambda (#{tmp\ 4134}#)
                  (if #{tmp\ 4134}#
                    (apply (lambda (#{_\ 4142}#
                                    #{var\ 4143}#
                                    #{init\ 4144}#
                                    #{step\ 4145}#
                                    #{e0\ 4146}#
                                    #{e1\ 4147}#
                                    #{c\ 4148}#)
                             ((lambda (#{tmp\ 4150}#)
                                ((lambda (#{tmp\ 4151}#)
                                   (if #{tmp\ 4151}#
                                     (apply (lambda (#{step\ 4153}#)
                                              ((lambda (#{tmp\ 4154}#)
                                                 ((lambda (#{tmp\ 4155}#)
                                                    (if #{tmp\ 4155}#
                                                      (apply (lambda ()
                                                               (list '#(syntax-object
                                                                        let
                                                                        ((top)
                                                                         #(ribcage
                                                                           #(step)
                                                                           #((top))
                                                                           #("i4152"))
                                                                         #(ribcage
                                                                           #(_
                                                                             var
                                                                             init
                                                                             step
                                                                             e0
                                                                             e1
                                                                             c)
                                                                           #((top)
                                                                             (top)
                                                                             (top)
                                                                             (top)
                                                                             (top)
                                                                             (top)
                                                                             (top))
                                                                           #("i4135"
                                                                             "i4136"
                                                                             "i4137"
                                                                             "i4138"
                                                                             "i4139"
                                                                             "i4140"
                                                                             "i4141"))
                                                                         #(ribcage
                                                                           ()
                                                                           ()
                                                                           ())
                                                                         #(ribcage
                                                                           #(orig-x)
                                                                           #((top))
                                                                           #("i4132")))
                                                                        (hygiene
                                                                          guile))
                                                                     '#(syntax-object
                                                                        doloop
                                                                        ((top)
                                                                         #(ribcage
                                                                           #(step)
                                                                           #((top))
                                                                           #("i4152"))
                                                                         #(ribcage
                                                                           #(_
                                                                             var
                                                                             init
                                                                             step
                                                                             e0
                                                                             e1
                                                                             c)
                                                                           #((top)
                                                                             (top)
                                                                             (top)
                                                                             (top)
                                                                             (top)
                                                                             (top)
                                                                             (top))
                                                                           #("i4135"
                                                                             "i4136"
                                                                             "i4137"
                                                                             "i4138"
                                                                             "i4139"
                                                                             "i4140"
                                                                             "i4141"))
                                                                         #(ribcage
                                                                           ()
                                                                           ()
                                                                           ())
                                                                         #(ribcage
                                                                           #(orig-x)
                                                                           #((top))
                                                                           #("i4132")))
                                                                        (hygiene
                                                                          guile))
                                                                     (map list
                                                                          #{var\ 4143}#
                                                                          #{init\ 4144}#)
                                                                     (list '#(syntax-object
                                                                              if
                                                                              ((top)
                                                                               #(ribcage
                                                                                 #(step)
                                                                                 #((top))
                                                                                 #("i4152"))
                                                                               #(ribcage
                                                                                 #(_
                                                                                   var
                                                                                   init
                                                                                   step
                                                                                   e0
                                                                                   e1
                                                                                   c)
                                                                                 #((top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top))
                                                                                 #("i4135"
                                                                                   "i4136"
                                                                                   "i4137"
                                                                                   "i4138"
                                                                                   "i4139"
                                                                                   "i4140"
                                                                                   "i4141"))
                                                                               #(ribcage
                                                                                 ()
                                                                                 ()
                                                                                 ())
                                                                               #(ribcage
                                                                                 #(orig-x)
                                                                                 #((top))
                                                                                 #("i4132")))
                                                                              (hygiene
                                                                                guile))
                                                                           (list '#(syntax-object
                                                                                    not
                                                                                    ((top)
                                                                                     #(ribcage
                                                                                       #(step)
                                                                                       #((top))
                                                                                       #("i4152"))
                                                                                     #(ribcage
                                                                                       #(_
                                                                                         var
                                                                                         init
                                                                                         step
                                                                                         e0
                                                                                         e1
                                                                                         c)
                                                                                       #((top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top))
                                                                                       #("i4135"
                                                                                         "i4136"
                                                                                         "i4137"
                                                                                         "i4138"
                                                                                         "i4139"
                                                                                         "i4140"
                                                                                         "i4141"))
                                                                                     #(ribcage
                                                                                       ()
                                                                                       ()
                                                                                       ())
                                                                                     #(ribcage
                                                                                       #(orig-x)
                                                                                       #((top))
                                                                                       #("i4132")))
                                                                                    (hygiene
                                                                                      guile))
                                                                                 #{e0\ 4146}#)
                                                                           (cons '#(syntax-object
                                                                                    begin
                                                                                    ((top)
                                                                                     #(ribcage
                                                                                       #(step)
                                                                                       #((top))
                                                                                       #("i4152"))
                                                                                     #(ribcage
                                                                                       #(_
                                                                                         var
                                                                                         init
                                                                                         step
                                                                                         e0
                                                                                         e1
                                                                                         c)
                                                                                       #((top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top))
                                                                                       #("i4135"
                                                                                         "i4136"
                                                                                         "i4137"
                                                                                         "i4138"
                                                                                         "i4139"
                                                                                         "i4140"
                                                                                         "i4141"))
                                                                                     #(ribcage
                                                                                       ()
                                                                                       ()
                                                                                       ())
                                                                                     #(ribcage
                                                                                       #(orig-x)
                                                                                       #((top))
                                                                                       #("i4132")))
                                                                                    (hygiene
                                                                                      guile))
                                                                                 (append
                                                                                   #{c\ 4148}#
                                                                                   (list (cons '#(syntax-object
                                                                                                  doloop
                                                                                                  ((top)
                                                                                                   #(ribcage
                                                                                                     #(step)
                                                                                                     #((top))
                                                                                                     #("i4152"))
                                                                                                   #(ribcage
                                                                                                     #(_
                                                                                                       var
                                                                                                       init
                                                                                                       step
                                                                                                       e0
                                                                                                       e1
                                                                                                       c)
                                                                                                     #((top)
                                                                                                       (top)
                                                                                                       (top)
                                                                                                       (top)
                                                                                                       (top)
                                                                                                       (top)
                                                                                                       (top))
                                                                                                     #("i4135"
                                                                                                       "i4136"
                                                                                                       "i4137"
                                                                                                       "i4138"
                                                                                                       "i4139"
                                                                                                       "i4140"
                                                                                                       "i4141"))
                                                                                                   #(ribcage
                                                                                                     ()
                                                                                                     ()
                                                                                                     ())
                                                                                                   #(ribcage
                                                                                                     #(orig-x)
                                                                                                     #((top))
                                                                                                     #("i4132")))
                                                                                                  (hygiene
                                                                                                    guile))
                                                                                               #{step\ 4153}#)))))))
                                                             #{tmp\ 4155}#)
                                                      ((lambda (#{tmp\ 4160}#)
                                                         (if #{tmp\ 4160}#
                                                           (apply (lambda (#{e1\ 4163}#
                                                                           #{e2\ 4164}#)
                                                                    (list '#(syntax-object
                                                                             let
                                                                             ((top)
                                                                              #(ribcage
                                                                                #(e1
                                                                                  e2)
                                                                                #((top)
                                                                                  (top))
                                                                                #("i4161"
                                                                                  "i4162"))
                                                                              #(ribcage
                                                                                #(step)
                                                                                #((top))
                                                                                #("i4152"))
                                                                              #(ribcage
                                                                                #(_
                                                                                  var
                                                                                  init
                                                                                  step
                                                                                  e0
                                                                                  e1
                                                                                  c)
                                                                                #((top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top))
                                                                                #("i4135"
                                                                                  "i4136"
                                                                                  "i4137"
                                                                                  "i4138"
                                                                                  "i4139"
                                                                                  "i4140"
                                                                                  "i4141"))
                                                                              #(ribcage
                                                                                ()
                                                                                ()
                                                                                ())
                                                                              #(ribcage
                                                                                #(orig-x)
                                                                                #((top))
                                                                                #("i4132")))
                                                                             (hygiene
                                                                               guile))
                                                                          '#(syntax-object
                                                                             doloop
                                                                             ((top)
                                                                              #(ribcage
                                                                                #(e1
                                                                                  e2)
                                                                                #((top)
                                                                                  (top))
                                                                                #("i4161"
                                                                                  "i4162"))
                                                                              #(ribcage
                                                                                #(step)
                                                                                #((top))
                                                                                #("i4152"))
                                                                              #(ribcage
                                                                                #(_
                                                                                  var
                                                                                  init
                                                                                  step
                                                                                  e0
                                                                                  e1
                                                                                  c)
                                                                                #((top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top))
                                                                                #("i4135"
                                                                                  "i4136"
                                                                                  "i4137"
                                                                                  "i4138"
                                                                                  "i4139"
                                                                                  "i4140"
                                                                                  "i4141"))
                                                                              #(ribcage
                                                                                ()
                                                                                ()
                                                                                ())
                                                                              #(ribcage
                                                                                #(orig-x)
                                                                                #((top))
                                                                                #("i4132")))
                                                                             (hygiene
                                                                               guile))
                                                                          (map list
                                                                               #{var\ 4143}#
                                                                               #{init\ 4144}#)
                                                                          (list '#(syntax-object
                                                                                   if
                                                                                   ((top)
                                                                                    #(ribcage
                                                                                      #(e1
                                                                                        e2)
                                                                                      #((top)
                                                                                        (top))
                                                                                      #("i4161"
                                                                                        "i4162"))
                                                                                    #(ribcage
                                                                                      #(step)
                                                                                      #((top))
                                                                                      #("i4152"))
                                                                                    #(ribcage
                                                                                      #(_
                                                                                        var
                                                                                        init
                                                                                        step
                                                                                        e0
                                                                                        e1
                                                                                        c)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i4135"
                                                                                        "i4136"
                                                                                        "i4137"
                                                                                        "i4138"
                                                                                        "i4139"
                                                                                        "i4140"
                                                                                        "i4141"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(orig-x)
                                                                                      #((top))
                                                                                      #("i4132")))
                                                                                   (hygiene
                                                                                     guile))
                                                                                #{e0\ 4146}#
                                                                                (cons '#(syntax-object
                                                                                         begin
                                                                                         ((top)
                                                                                          #(ribcage
                                                                                            #(e1
                                                                                              e2)
                                                                                            #((top)
                                                                                              (top))
                                                                                            #("i4161"
                                                                                              "i4162"))
                                                                                          #(ribcage
                                                                                            #(step)
                                                                                            #((top))
                                                                                            #("i4152"))
                                                                                          #(ribcage
                                                                                            #(_
                                                                                              var
                                                                                              init
                                                                                              step
                                                                                              e0
                                                                                              e1
                                                                                              c)
                                                                                            #((top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top))
                                                                                            #("i4135"
                                                                                              "i4136"
                                                                                              "i4137"
                                                                                              "i4138"
                                                                                              "i4139"
                                                                                              "i4140"
                                                                                              "i4141"))
                                                                                          #(ribcage
                                                                                            ()
                                                                                            ()
                                                                                            ())
                                                                                          #(ribcage
                                                                                            #(orig-x)
                                                                                            #((top))
                                                                                            #("i4132")))
                                                                                         (hygiene
                                                                                           guile))
                                                                                      (cons #{e1\ 4163}#
                                                                                            #{e2\ 4164}#))
                                                                                (cons '#(syntax-object
                                                                                         begin
                                                                                         ((top)
                                                                                          #(ribcage
                                                                                            #(e1
                                                                                              e2)
                                                                                            #((top)
                                                                                              (top))
                                                                                            #("i4161"
                                                                                              "i4162"))
                                                                                          #(ribcage
                                                                                            #(step)
                                                                                            #((top))
                                                                                            #("i4152"))
                                                                                          #(ribcage
                                                                                            #(_
                                                                                              var
                                                                                              init
                                                                                              step
                                                                                              e0
                                                                                              e1
                                                                                              c)
                                                                                            #((top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top))
                                                                                            #("i4135"
                                                                                              "i4136"
                                                                                              "i4137"
                                                                                              "i4138"
                                                                                              "i4139"
                                                                                              "i4140"
                                                                                              "i4141"))
                                                                                          #(ribcage
                                                                                            ()
                                                                                            ()
                                                                                            ())
                                                                                          #(ribcage
                                                                                            #(orig-x)
                                                                                            #((top))
                                                                                            #("i4132")))
                                                                                         (hygiene
                                                                                           guile))
                                                                                      (append
                                                                                        #{c\ 4148}#
                                                                                        (list (cons '#(syntax-object
                                                                                                       doloop
                                                                                                       ((top)
                                                                                                        #(ribcage
                                                                                                          #(e1
                                                                                                            e2)
                                                                                                          #((top)
                                                                                                            (top))
                                                                                                          #("i4161"
                                                                                                            "i4162"))
                                                                                                        #(ribcage
                                                                                                          #(step)
                                                                                                          #((top))
                                                                                                          #("i4152"))
                                                                                                        #(ribcage
                                                                                                          #(_
                                                                                                            var
                                                                                                            init
                                                                                                            step
                                                                                                            e0
                                                                                                            e1
                                                                                                            c)
                                                                                                          #((top)
                                                                                                            (top)
                                                                                                            (top)
                                                                                                            (top)
                                                                                                            (top)
                                                                                                            (top)
                                                                                                            (top))
                                                                                                          #("i4135"
                                                                                                            "i4136"
                                                                                                            "i4137"
                                                                                                            "i4138"
                                                                                                            "i4139"
                                                                                                            "i4140"
                                                                                                            "i4141"))
                                                                                                        #(ribcage
                                                                                                          ()
                                                                                                          ()
                                                                                                          ())
                                                                                                        #(ribcage
                                                                                                          #(orig-x)
                                                                                                          #((top))
                                                                                                          #("i4132")))
                                                                                                       (hygiene
                                                                                                         guile))
                                                                                                    #{step\ 4153}#)))))))
                                                                  #{tmp\ 4160}#)
                                                           (syntax-violation
                                                             #f
                                                             "source expression failed to match any pattern"
                                                             #{tmp\ 4154}#)))
                                                       ($sc-dispatch
                                                         #{tmp\ 4154}#
                                                         '(any . each-any)))))
                                                  ($sc-dispatch
                                                    #{tmp\ 4154}#
                                                    '())))
                                               #{e1\ 4147}#))
                                            #{tmp\ 4151}#)
                                     (syntax-violation
                                       #f
                                       "source expression failed to match any pattern"
                                       #{tmp\ 4150}#)))
                                 ($sc-dispatch
                                   #{tmp\ 4150}#
                                   'each-any)))
                              (map (lambda (#{v\ 4171}# #{s\ 4172}#)
                                     ((lambda (#{tmp\ 4175}#)
                                        ((lambda (#{tmp\ 4176}#)
                                           (if #{tmp\ 4176}#
                                             (apply (lambda () #{v\ 4171}#)
                                                    #{tmp\ 4176}#)
                                             ((lambda (#{tmp\ 4177}#)
                                                (if #{tmp\ 4177}#
                                                  (apply (lambda (#{e\ 4179}#)
                                                           #{e\ 4179}#)
                                                         #{tmp\ 4177}#)
                                                  ((lambda (#{_\ 4181}#)
                                                     (syntax-violation
                                                       'do
                                                       "bad step expression"
                                                       #{orig-x\ 4131}#
                                                       #{s\ 4172}#))
                                                   #{tmp\ 4175}#)))
                                              ($sc-dispatch
                                                #{tmp\ 4175}#
                                                '(any)))))
                                         ($sc-dispatch
                                           #{tmp\ 4175}#
                                           '())))
                                      #{s\ 4172}#))
                                   #{var\ 4143}#
                                   #{step\ 4145}#)))
                           #{tmp\ 4134}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 4133}#)))
                ($sc-dispatch
                  #{tmp\ 4133}#
                  '(any #(each (any any . any))
                        (any . each-any)
                        .
                        each-any))))
             #{orig-x\ 4131}#))
          (module-name (current-module)))))

(define quasiquote
  (make-syntax-transformer
    'quasiquote
    'macro
    (cons (letrec ((#{quasicons\ 4188}#
                     (lambda (#{x\ 4192}# #{y\ 4193}#)
                       ((lambda (#{tmp\ 4197}#)
                          ((lambda (#{tmp\ 4198}#)
                             (if #{tmp\ 4198}#
                               (apply (lambda (#{x\ 4201}# #{y\ 4202}#)
                                        ((lambda (#{tmp\ 4203}#)
                                           ((lambda (#{tmp\ 4204}#)
                                              (if #{tmp\ 4204}#
                                                (apply (lambda (#{dy\ 4206}#)
                                                         ((lambda (#{tmp\ 4207}#)
                                                            ((lambda (#{tmp\ 4208}#)
                                                               (if #{tmp\ 4208}#
                                                                 (apply (lambda (#{dx\ 4210}#)
                                                                          (list '#(syntax-object
                                                                                   quote
                                                                                   ((top)
                                                                                    #(ribcage
                                                                                      #(dx)
                                                                                      #((top))
                                                                                      #("i4209"))
                                                                                    #(ribcage
                                                                                      #(dy)
                                                                                      #((top))
                                                                                      #("i4205"))
                                                                                    #(ribcage
                                                                                      #(x
                                                                                        y)
                                                                                      #((top)
                                                                                        (top))
                                                                                      #("i4199"
                                                                                        "i4200"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(x
                                                                                        y)
                                                                                      #((top)
                                                                                        (top))
                                                                                      #("i4194"
                                                                                        "i4195"))
                                                                                    #(ribcage
                                                                                      #(quasicons
                                                                                        quasiappend
                                                                                        quasivector
                                                                                        quasi)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i4184"
                                                                                        "i4185"
                                                                                        "i4186"
                                                                                        "i4187")))
                                                                                   (hygiene
                                                                                     guile))
                                                                                (cons #{dx\ 4210}#
                                                                                      #{dy\ 4206}#)))
                                                                        #{tmp\ 4208}#)
                                                                 ((lambda (#{_\ 4212}#)
                                                                    (if (null? #{dy\ 4206}#)
                                                                      (list '#(syntax-object
                                                                               list
                                                                               ((top)
                                                                                #(ribcage
                                                                                  #(_)
                                                                                  #((top))
                                                                                  #("i4211"))
                                                                                #(ribcage
                                                                                  #(dy)
                                                                                  #((top))
                                                                                  #("i4205"))
                                                                                #(ribcage
                                                                                  #(x
                                                                                    y)
                                                                                  #((top)
                                                                                    (top))
                                                                                  #("i4199"
                                                                                    "i4200"))
                                                                                #(ribcage
                                                                                  ()
                                                                                  ()
                                                                                  ())
                                                                                #(ribcage
                                                                                  ()
                                                                                  ()
                                                                                  ())
                                                                                #(ribcage
                                                                                  #(x
                                                                                    y)
                                                                                  #((top)
                                                                                    (top))
                                                                                  #("i4194"
                                                                                    "i4195"))
                                                                                #(ribcage
                                                                                  #(quasicons
                                                                                    quasiappend
                                                                                    quasivector
                                                                                    quasi)
                                                                                  #((top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top))
                                                                                  #("i4184"
                                                                                    "i4185"
                                                                                    "i4186"
                                                                                    "i4187")))
                                                                               (hygiene
                                                                                 guile))
                                                                            #{x\ 4201}#)
                                                                      (list '#(syntax-object
                                                                               cons
                                                                               ((top)
                                                                                #(ribcage
                                                                                  #(_)
                                                                                  #((top))
                                                                                  #("i4211"))
                                                                                #(ribcage
                                                                                  #(dy)
                                                                                  #((top))
                                                                                  #("i4205"))
                                                                                #(ribcage
                                                                                  #(x
                                                                                    y)
                                                                                  #((top)
                                                                                    (top))
                                                                                  #("i4199"
                                                                                    "i4200"))
                                                                                #(ribcage
                                                                                  ()
                                                                                  ()
                                                                                  ())
                                                                                #(ribcage
                                                                                  ()
                                                                                  ()
                                                                                  ())
                                                                                #(ribcage
                                                                                  #(x
                                                                                    y)
                                                                                  #((top)
                                                                                    (top))
                                                                                  #("i4194"
                                                                                    "i4195"))
                                                                                #(ribcage
                                                                                  #(quasicons
                                                                                    quasiappend
                                                                                    quasivector
                                                                                    quasi)
                                                                                  #((top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top))
                                                                                  #("i4184"
                                                                                    "i4185"
                                                                                    "i4186"
                                                                                    "i4187")))
                                                                               (hygiene
                                                                                 guile))
                                                                            #{x\ 4201}#
                                                                            #{y\ 4202}#)))
                                                                  #{tmp\ 4207}#)))
                                                             ($sc-dispatch
                                                               #{tmp\ 4207}#
                                                               '(#(free-id
                                                                   #(syntax-object
                                                                     quote
                                                                     ((top)
                                                                      #(ribcage
                                                                        #(dy)
                                                                        #((top))
                                                                        #("i4205"))
                                                                      #(ribcage
                                                                        #(x y)
                                                                        #((top)
                                                                          (top))
                                                                        #("i4199"
                                                                          "i4200"))
                                                                      #(ribcage
                                                                        ()
                                                                        ()
                                                                        ())
                                                                      #(ribcage
                                                                        ()
                                                                        ()
                                                                        ())
                                                                      #(ribcage
                                                                        #(x y)
                                                                        #((top)
                                                                          (top))
                                                                        #("i4194"
                                                                          "i4195"))
                                                                      #(ribcage
                                                                        #(quasicons
                                                                          quasiappend
                                                                          quasivector
                                                                          quasi)
                                                                        #((top)
                                                                          (top)
                                                                          (top)
                                                                          (top))
                                                                        #("i4184"
                                                                          "i4185"
                                                                          "i4186"
                                                                          "i4187")))
                                                                     (hygiene
                                                                       guile)))
                                                                 any))))
                                                          #{x\ 4201}#))
                                                       #{tmp\ 4204}#)
                                                ((lambda (#{tmp\ 4213}#)
                                                   (if #{tmp\ 4213}#
                                                     (apply (lambda (#{stuff\ 4215}#)
                                                              (cons '#(syntax-object
                                                                       list
                                                                       ((top)
                                                                        #(ribcage
                                                                          #(stuff)
                                                                          #((top))
                                                                          #("i4214"))
                                                                        #(ribcage
                                                                          #(x
                                                                            y)
                                                                          #((top)
                                                                            (top))
                                                                          #("i4199"
                                                                            "i4200"))
                                                                        #(ribcage
                                                                          ()
                                                                          ()
                                                                          ())
                                                                        #(ribcage
                                                                          ()
                                                                          ()
                                                                          ())
                                                                        #(ribcage
                                                                          #(x
                                                                            y)
                                                                          #((top)
                                                                            (top))
                                                                          #("i4194"
                                                                            "i4195"))
                                                                        #(ribcage
                                                                          #(quasicons
                                                                            quasiappend
                                                                            quasivector
                                                                            quasi)
                                                                          #((top)
                                                                            (top)
                                                                            (top)
                                                                            (top))
                                                                          #("i4184"
                                                                            "i4185"
                                                                            "i4186"
                                                                            "i4187")))
                                                                       (hygiene
                                                                         guile))
                                                                    (cons #{x\ 4201}#
                                                                          #{stuff\ 4215}#)))
                                                            #{tmp\ 4213}#)
                                                     ((lambda (#{else\ 4217}#)
                                                        (list '#(syntax-object
                                                                 cons
                                                                 ((top)
                                                                  #(ribcage
                                                                    #(else)
                                                                    #((top))
                                                                    #("i4216"))
                                                                  #(ribcage
                                                                    #(x y)
                                                                    #((top)
                                                                      (top))
                                                                    #("i4199"
                                                                      "i4200"))
                                                                  #(ribcage
                                                                    ()
                                                                    ()
                                                                    ())
                                                                  #(ribcage
                                                                    ()
                                                                    ()
                                                                    ())
                                                                  #(ribcage
                                                                    #(x y)
                                                                    #((top)
                                                                      (top))
                                                                    #("i4194"
                                                                      "i4195"))
                                                                  #(ribcage
                                                                    #(quasicons
                                                                      quasiappend
                                                                      quasivector
                                                                      quasi)
                                                                    #((top)
                                                                      (top)
                                                                      (top)
                                                                      (top))
                                                                    #("i4184"
                                                                      "i4185"
                                                                      "i4186"
                                                                      "i4187")))
                                                                 (hygiene
                                                                   guile))
                                                              #{x\ 4201}#
                                                              #{y\ 4202}#))
                                                      #{tmp\ 4203}#)))
                                                 ($sc-dispatch
                                                   #{tmp\ 4203}#
                                                   '(#(free-id
                                                       #(syntax-object
                                                         list
                                                         ((top)
                                                          #(ribcage
                                                            #(x y)
                                                            #((top) (top))
                                                            #("i4199" "i4200"))
                                                          #(ribcage () () ())
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(x y)
                                                            #((top) (top))
                                                            #("i4194" "i4195"))
                                                          #(ribcage
                                                            #(quasicons
                                                              quasiappend
                                                              quasivector
                                                              quasi)
                                                            #((top)
                                                              (top)
                                                              (top)
                                                              (top))
                                                            #("i4184"
                                                              "i4185"
                                                              "i4186"
                                                              "i4187")))
                                                         (hygiene guile)))
                                                     .
                                                     any)))))
                                            ($sc-dispatch
                                              #{tmp\ 4203}#
                                              '(#(free-id
                                                  #(syntax-object
                                                    quote
                                                    ((top)
                                                     #(ribcage
                                                       #(x y)
                                                       #((top) (top))
                                                       #("i4199" "i4200"))
                                                     #(ribcage () () ())
                                                     #(ribcage () () ())
                                                     #(ribcage
                                                       #(x y)
                                                       #((top) (top))
                                                       #("i4194" "i4195"))
                                                     #(ribcage
                                                       #(quasicons
                                                         quasiappend
                                                         quasivector
                                                         quasi)
                                                       #((top)
                                                         (top)
                                                         (top)
                                                         (top))
                                                       #("i4184"
                                                         "i4185"
                                                         "i4186"
                                                         "i4187")))
                                                    (hygiene guile)))
                                                any))))
                                         #{y\ 4202}#))
                                      #{tmp\ 4198}#)
                               (syntax-violation
                                 #f
                                 "source expression failed to match any pattern"
                                 #{tmp\ 4197}#)))
                           ($sc-dispatch #{tmp\ 4197}# (quote (any any)))))
                        (list #{x\ 4192}# #{y\ 4193}#))))
                   (#{quasiappend\ 4189}#
                     (lambda (#{x\ 4218}# #{y\ 4219}#)
                       ((lambda (#{tmp\ 4223}#)
                          ((lambda (#{tmp\ 4224}#)
                             (if #{tmp\ 4224}#
                               (apply (lambda (#{x\ 4227}# #{y\ 4228}#)
                                        ((lambda (#{tmp\ 4229}#)
                                           ((lambda (#{tmp\ 4230}#)
                                              (if #{tmp\ 4230}#
                                                (apply (lambda () #{x\ 4227}#)
                                                       #{tmp\ 4230}#)
                                                ((lambda (#{_\ 4232}#)
                                                   (list '#(syntax-object
                                                            append
                                                            ((top)
                                                             #(ribcage
                                                               #(_)
                                                               #((top))
                                                               #("i4231"))
                                                             #(ribcage
                                                               #(x y)
                                                               #((top) (top))
                                                               #("i4225"
                                                                 "i4226"))
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               #(x y)
                                                               #((top) (top))
                                                               #("i4220"
                                                                 "i4221"))
                                                             #(ribcage
                                                               #(quasicons
                                                                 quasiappend
                                                                 quasivector
                                                                 quasi)
                                                               #((top)
                                                                 (top)
                                                                 (top)
                                                                 (top))
                                                               #("i4184"
                                                                 "i4185"
                                                                 "i4186"
                                                                 "i4187")))
                                                            (hygiene guile))
                                                         #{x\ 4227}#
                                                         #{y\ 4228}#))
                                                 #{tmp\ 4229}#)))
                                            ($sc-dispatch
                                              #{tmp\ 4229}#
                                              '(#(free-id
                                                  #(syntax-object
                                                    quote
                                                    ((top)
                                                     #(ribcage
                                                       #(x y)
                                                       #((top) (top))
                                                       #("i4225" "i4226"))
                                                     #(ribcage () () ())
                                                     #(ribcage () () ())
                                                     #(ribcage
                                                       #(x y)
                                                       #((top) (top))
                                                       #("i4220" "i4221"))
                                                     #(ribcage
                                                       #(quasicons
                                                         quasiappend
                                                         quasivector
                                                         quasi)
                                                       #((top)
                                                         (top)
                                                         (top)
                                                         (top))
                                                       #("i4184"
                                                         "i4185"
                                                         "i4186"
                                                         "i4187")))
                                                    (hygiene guile)))
                                                ()))))
                                         #{y\ 4228}#))
                                      #{tmp\ 4224}#)
                               (syntax-violation
                                 #f
                                 "source expression failed to match any pattern"
                                 #{tmp\ 4223}#)))
                           ($sc-dispatch #{tmp\ 4223}# (quote (any any)))))
                        (list #{x\ 4218}# #{y\ 4219}#))))
                   (#{quasivector\ 4190}#
                     (lambda (#{x\ 4233}#)
                       ((lambda (#{tmp\ 4236}#)
                          ((lambda (#{x\ 4238}#)
                             ((lambda (#{tmp\ 4239}#)
                                ((lambda (#{tmp\ 4240}#)
                                   (if #{tmp\ 4240}#
                                     (apply (lambda (#{x\ 4242}#)
                                              (list '#(syntax-object
                                                       quote
                                                       ((top)
                                                        #(ribcage
                                                          #(x)
                                                          #((top))
                                                          #("i4241"))
                                                        #(ribcage
                                                          #(x)
                                                          #((top))
                                                          #("i4237"))
                                                        #(ribcage () () ())
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(x)
                                                          #((top))
                                                          #("i4234"))
                                                        #(ribcage
                                                          #(quasicons
                                                            quasiappend
                                                            quasivector
                                                            quasi)
                                                          #((top)
                                                            (top)
                                                            (top)
                                                            (top))
                                                          #("i4184"
                                                            "i4185"
                                                            "i4186"
                                                            "i4187")))
                                                       (hygiene guile))
                                                    (list->vector
                                                      #{x\ 4242}#)))
                                            #{tmp\ 4240}#)
                                     ((lambda (#{tmp\ 4244}#)
                                        (if #{tmp\ 4244}#
                                          (apply (lambda (#{x\ 4246}#)
                                                   (cons '#(syntax-object
                                                            vector
                                                            ((top)
                                                             #(ribcage
                                                               #(x)
                                                               #((top))
                                                               #("i4245"))
                                                             #(ribcage
                                                               #(x)
                                                               #((top))
                                                               #("i4237"))
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               #(x)
                                                               #((top))
                                                               #("i4234"))
                                                             #(ribcage
                                                               #(quasicons
                                                                 quasiappend
                                                                 quasivector
                                                                 quasi)
                                                               #((top)
                                                                 (top)
                                                                 (top)
                                                                 (top))
                                                               #("i4184"
                                                                 "i4185"
                                                                 "i4186"
                                                                 "i4187")))
                                                            (hygiene guile))
                                                         #{x\ 4246}#))
                                                 #{tmp\ 4244}#)
                                          ((lambda (#{_\ 4249}#)
                                             (list '#(syntax-object
                                                      list->vector
                                                      ((top)
                                                       #(ribcage
                                                         #(_)
                                                         #((top))
                                                         #("i4248"))
                                                       #(ribcage
                                                         #(x)
                                                         #((top))
                                                         #("i4237"))
                                                       #(ribcage () () ())
                                                       #(ribcage () () ())
                                                       #(ribcage
                                                         #(x)
                                                         #((top))
                                                         #("i4234"))
                                                       #(ribcage
                                                         #(quasicons
                                                           quasiappend
                                                           quasivector
                                                           quasi)
                                                         #((top)
                                                           (top)
                                                           (top)
                                                           (top))
                                                         #("i4184"
                                                           "i4185"
                                                           "i4186"
                                                           "i4187")))
                                                      (hygiene guile))
                                                   #{x\ 4238}#))
                                           #{tmp\ 4239}#)))
                                      ($sc-dispatch
                                        #{tmp\ 4239}#
                                        '(#(free-id
                                            #(syntax-object
                                              list
                                              ((top)
                                               #(ribcage
                                                 #(x)
                                                 #((top))
                                                 #("i4237"))
                                               #(ribcage () () ())
                                               #(ribcage () () ())
                                               #(ribcage
                                                 #(x)
                                                 #((top))
                                                 #("i4234"))
                                               #(ribcage
                                                 #(quasicons
                                                   quasiappend
                                                   quasivector
                                                   quasi)
                                                 #((top) (top) (top) (top))
                                                 #("i4184"
                                                   "i4185"
                                                   "i4186"
                                                   "i4187")))
                                              (hygiene guile)))
                                          .
                                          each-any)))))
                                 ($sc-dispatch
                                   #{tmp\ 4239}#
                                   '(#(free-id
                                       #(syntax-object
                                         quote
                                         ((top)
                                          #(ribcage #(x) #((top)) #("i4237"))
                                          #(ribcage () () ())
                                          #(ribcage () () ())
                                          #(ribcage #(x) #((top)) #("i4234"))
                                          #(ribcage
                                            #(quasicons
                                              quasiappend
                                              quasivector
                                              quasi)
                                            #((top) (top) (top) (top))
                                            #("i4184"
                                              "i4185"
                                              "i4186"
                                              "i4187")))
                                         (hygiene guile)))
                                     each-any))))
                              #{x\ 4238}#))
                           #{tmp\ 4236}#))
                        #{x\ 4233}#)))
                   (#{quasi\ 4191}#
                     (lambda (#{p\ 4250}# #{lev\ 4251}#)
                       ((lambda (#{tmp\ 4254}#)
                          ((lambda (#{tmp\ 4255}#)
                             (if #{tmp\ 4255}#
                               (apply (lambda (#{p\ 4257}#)
                                        (if (= #{lev\ 4251}# 0)
                                          #{p\ 4257}#
                                          (#{quasicons\ 4188}#
                                            '(#(syntax-object
                                                quote
                                                ((top)
                                                 #(ribcage
                                                   #(p)
                                                   #((top))
                                                   #("i4256"))
                                                 #(ribcage () () ())
                                                 #(ribcage
                                                   #(p lev)
                                                   #((top) (top))
                                                   #("i4252" "i4253"))
                                                 #(ribcage
                                                   #(quasicons
                                                     quasiappend
                                                     quasivector
                                                     quasi)
                                                   #((top) (top) (top) (top))
                                                   #("i4184"
                                                     "i4185"
                                                     "i4186"
                                                     "i4187")))
                                                (hygiene guile))
                                              #(syntax-object
                                                unquote
                                                ((top)
                                                 #(ribcage
                                                   #(p)
                                                   #((top))
                                                   #("i4256"))
                                                 #(ribcage () () ())
                                                 #(ribcage
                                                   #(p lev)
                                                   #((top) (top))
                                                   #("i4252" "i4253"))
                                                 #(ribcage
                                                   #(quasicons
                                                     quasiappend
                                                     quasivector
                                                     quasi)
                                                   #((top) (top) (top) (top))
                                                   #("i4184"
                                                     "i4185"
                                                     "i4186"
                                                     "i4187")))
                                                (hygiene guile)))
                                            (#{quasi\ 4191}#
                                              (list #{p\ 4257}#)
                                              (- #{lev\ 4251}# 1)))))
                                      #{tmp\ 4255}#)
                               ((lambda (#{tmp\ 4258}#)
                                  (if (if #{tmp\ 4258}#
                                        (apply (lambda (#{args\ 4260}#)
                                                 (= #{lev\ 4251}# 0))
                                               #{tmp\ 4258}#)
                                        #f)
                                    (apply (lambda (#{args\ 4262}#)
                                             (syntax-violation
                                               'unquote
                                               "unquote takes exactly one argument"
                                               #{p\ 4250}#
                                               (cons '#(syntax-object
                                                        unquote
                                                        ((top)
                                                         #(ribcage
                                                           #(args)
                                                           #((top))
                                                           #("i4261"))
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(p lev)
                                                           #((top) (top))
                                                           #("i4252" "i4253"))
                                                         #(ribcage
                                                           #(quasicons
                                                             quasiappend
                                                             quasivector
                                                             quasi)
                                                           #((top)
                                                             (top)
                                                             (top)
                                                             (top))
                                                           #("i4184"
                                                             "i4185"
                                                             "i4186"
                                                             "i4187")))
                                                        (hygiene guile))
                                                     #{args\ 4262}#)))
                                           #{tmp\ 4258}#)
                                    ((lambda (#{tmp\ 4263}#)
                                       (if #{tmp\ 4263}#
                                         (apply (lambda (#{p\ 4266}#
                                                         #{q\ 4267}#)
                                                  (if (= #{lev\ 4251}# 0)
                                                    (#{quasiappend\ 4189}#
                                                      #{p\ 4266}#
                                                      (#{quasi\ 4191}#
                                                        #{q\ 4267}#
                                                        #{lev\ 4251}#))
                                                    (#{quasicons\ 4188}#
                                                      (#{quasicons\ 4188}#
                                                        '(#(syntax-object
                                                            quote
                                                            ((top)
                                                             #(ribcage
                                                               #(p q)
                                                               #((top) (top))
                                                               #("i4264"
                                                                 "i4265"))
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               #(p lev)
                                                               #((top) (top))
                                                               #("i4252"
                                                                 "i4253"))
                                                             #(ribcage
                                                               #(quasicons
                                                                 quasiappend
                                                                 quasivector
                                                                 quasi)
                                                               #((top)
                                                                 (top)
                                                                 (top)
                                                                 (top))
                                                               #("i4184"
                                                                 "i4185"
                                                                 "i4186"
                                                                 "i4187")))
                                                            (hygiene guile))
                                                          #(syntax-object
                                                            unquote-splicing
                                                            ((top)
                                                             #(ribcage
                                                               #(p q)
                                                               #((top) (top))
                                                               #("i4264"
                                                                 "i4265"))
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               #(p lev)
                                                               #((top) (top))
                                                               #("i4252"
                                                                 "i4253"))
                                                             #(ribcage
                                                               #(quasicons
                                                                 quasiappend
                                                                 quasivector
                                                                 quasi)
                                                               #((top)
                                                                 (top)
                                                                 (top)
                                                                 (top))
                                                               #("i4184"
                                                                 "i4185"
                                                                 "i4186"
                                                                 "i4187")))
                                                            (hygiene guile)))
                                                        (#{quasi\ 4191}#
                                                          (list #{p\ 4266}#)
                                                          (- #{lev\ 4251}# 1)))
                                                      (#{quasi\ 4191}#
                                                        #{q\ 4267}#
                                                        #{lev\ 4251}#))))
                                                #{tmp\ 4263}#)
                                         ((lambda (#{tmp\ 4268}#)
                                            (if (if #{tmp\ 4268}#
                                                  (apply (lambda (#{args\ 4271}#
                                                                  #{q\ 4272}#)
                                                           (= #{lev\ 4251}# 0))
                                                         #{tmp\ 4268}#)
                                                  #f)
                                              (apply (lambda (#{args\ 4275}#
                                                              #{q\ 4276}#)
                                                       (syntax-violation
                                                         'unquote-splicing
                                                         "unquote-splicing takes exactly one argument"
                                                         #{p\ 4250}#
                                                         (cons '#(syntax-object
                                                                  unquote-splicing
                                                                  ((top)
                                                                   #(ribcage
                                                                     #(args q)
                                                                     #((top)
                                                                       (top))
                                                                     #("i4273"
                                                                       "i4274"))
                                                                   #(ribcage
                                                                     ()
                                                                     ()
                                                                     ())
                                                                   #(ribcage
                                                                     #(p lev)
                                                                     #((top)
                                                                       (top))
                                                                     #("i4252"
                                                                       "i4253"))
                                                                   #(ribcage
                                                                     #(quasicons
                                                                       quasiappend
                                                                       quasivector
                                                                       quasi)
                                                                     #((top)
                                                                       (top)
                                                                       (top)
                                                                       (top))
                                                                     #("i4184"
                                                                       "i4185"
                                                                       "i4186"
                                                                       "i4187")))
                                                                  (hygiene
                                                                    guile))
                                                               #{args\ 4275}#)))
                                                     #{tmp\ 4268}#)
                                              ((lambda (#{tmp\ 4277}#)
                                                 (if #{tmp\ 4277}#
                                                   (apply (lambda (#{p\ 4279}#)
                                                            (#{quasicons\ 4188}#
                                                              '(#(syntax-object
                                                                  quote
                                                                  ((top)
                                                                   #(ribcage
                                                                     #(p)
                                                                     #((top))
                                                                     #("i4278"))
                                                                   #(ribcage
                                                                     ()
                                                                     ()
                                                                     ())
                                                                   #(ribcage
                                                                     #(p lev)
                                                                     #((top)
                                                                       (top))
                                                                     #("i4252"
                                                                       "i4253"))
                                                                   #(ribcage
                                                                     #(quasicons
                                                                       quasiappend
                                                                       quasivector
                                                                       quasi)
                                                                     #((top)
                                                                       (top)
                                                                       (top)
                                                                       (top))
                                                                     #("i4184"
                                                                       "i4185"
                                                                       "i4186"
                                                                       "i4187")))
                                                                  (hygiene
                                                                    guile))
                                                                #(syntax-object
                                                                  quasiquote
                                                                  ((top)
                                                                   #(ribcage
                                                                     #(p)
                                                                     #((top))
                                                                     #("i4278"))
                                                                   #(ribcage
                                                                     ()
                                                                     ()
                                                                     ())
                                                                   #(ribcage
                                                                     #(p lev)
                                                                     #((top)
                                                                       (top))
                                                                     #("i4252"
                                                                       "i4253"))
                                                                   #(ribcage
                                                                     #(quasicons
                                                                       quasiappend
                                                                       quasivector
                                                                       quasi)
                                                                     #((top)
                                                                       (top)
                                                                       (top)
                                                                       (top))
                                                                     #("i4184"
                                                                       "i4185"
                                                                       "i4186"
                                                                       "i4187")))
                                                                  (hygiene
                                                                    guile)))
                                                              (#{quasi\ 4191}#
                                                                (list #{p\ 4279}#)
                                                                (+ #{lev\ 4251}#
                                                                   1))))
                                                          #{tmp\ 4277}#)
                                                   ((lambda (#{tmp\ 4280}#)
                                                      (if #{tmp\ 4280}#
                                                        (apply (lambda (#{p\ 4283}#
                                                                        #{q\ 4284}#)
                                                                 (#{quasicons\ 4188}#
                                                                   (#{quasi\ 4191}#
                                                                     #{p\ 4283}#
                                                                     #{lev\ 4251}#)
                                                                   (#{quasi\ 4191}#
                                                                     #{q\ 4284}#
                                                                     #{lev\ 4251}#)))
                                                               #{tmp\ 4280}#)
                                                        ((lambda (#{tmp\ 4285}#)
                                                           (if #{tmp\ 4285}#
                                                             (apply (lambda (#{x\ 4287}#)
                                                                      (#{quasivector\ 4190}#
                                                                        (#{quasi\ 4191}#
                                                                          #{x\ 4287}#
                                                                          #{lev\ 4251}#)))
                                                                    #{tmp\ 4285}#)
                                                             ((lambda (#{p\ 4290}#)
                                                                (list '#(syntax-object
                                                                         quote
                                                                         ((top)
                                                                          #(ribcage
                                                                            #(p)
                                                                            #((top))
                                                                            #("i4289"))
                                                                          #(ribcage
                                                                            ()
                                                                            ()
                                                                            ())
                                                                          #(ribcage
                                                                            #(p
                                                                              lev)
                                                                            #((top)
                                                                              (top))
                                                                            #("i4252"
                                                                              "i4253"))
                                                                          #(ribcage
                                                                            #(quasicons
                                                                              quasiappend
                                                                              quasivector
                                                                              quasi)
                                                                            #((top)
                                                                              (top)
                                                                              (top)
                                                                              (top))
                                                                            #("i4184"
                                                                              "i4185"
                                                                              "i4186"
                                                                              "i4187")))
                                                                         (hygiene
                                                                           guile))
                                                                      #{p\ 4290}#))
                                                              #{tmp\ 4254}#)))
                                                         ($sc-dispatch
                                                           #{tmp\ 4254}#
                                                           '#(vector
                                                              each-any)))))
                                                    ($sc-dispatch
                                                      #{tmp\ 4254}#
                                                      '(any . any)))))
                                               ($sc-dispatch
                                                 #{tmp\ 4254}#
                                                 '(#(free-id
                                                     #(syntax-object
                                                       quasiquote
                                                       ((top)
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(p lev)
                                                          #((top) (top))
                                                          #("i4252" "i4253"))
                                                        #(ribcage
                                                          #(quasicons
                                                            quasiappend
                                                            quasivector
                                                            quasi)
                                                          #((top)
                                                            (top)
                                                            (top)
                                                            (top))
                                                          #("i4184"
                                                            "i4185"
                                                            "i4186"
                                                            "i4187")))
                                                       (hygiene guile)))
                                                   any)))))
                                          ($sc-dispatch
                                            #{tmp\ 4254}#
                                            '((#(free-id
                                                 #(syntax-object
                                                   unquote-splicing
                                                   ((top)
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(p lev)
                                                      #((top) (top))
                                                      #("i4252" "i4253"))
                                                    #(ribcage
                                                      #(quasicons
                                                        quasiappend
                                                        quasivector
                                                        quasi)
                                                      #((top)
                                                        (top)
                                                        (top)
                                                        (top))
                                                      #("i4184"
                                                        "i4185"
                                                        "i4186"
                                                        "i4187")))
                                                   (hygiene guile)))
                                               .
                                               any)
                                              .
                                              any)))))
                                     ($sc-dispatch
                                       #{tmp\ 4254}#
                                       '((#(free-id
                                            #(syntax-object
                                              unquote-splicing
                                              ((top)
                                               #(ribcage () () ())
                                               #(ribcage
                                                 #(p lev)
                                                 #((top) (top))
                                                 #("i4252" "i4253"))
                                               #(ribcage
                                                 #(quasicons
                                                   quasiappend
                                                   quasivector
                                                   quasi)
                                                 #((top) (top) (top) (top))
                                                 #("i4184"
                                                   "i4185"
                                                   "i4186"
                                                   "i4187")))
                                              (hygiene guile)))
                                          any)
                                         .
                                         any)))))
                                ($sc-dispatch
                                  #{tmp\ 4254}#
                                  '(#(free-id
                                      #(syntax-object
                                        unquote
                                        ((top)
                                         #(ribcage () () ())
                                         #(ribcage
                                           #(p lev)
                                           #((top) (top))
                                           #("i4252" "i4253"))
                                         #(ribcage
                                           #(quasicons
                                             quasiappend
                                             quasivector
                                             quasi)
                                           #((top) (top) (top) (top))
                                           #("i4184" "i4185" "i4186" "i4187")))
                                        (hygiene guile)))
                                    .
                                    any)))))
                           ($sc-dispatch
                             #{tmp\ 4254}#
                             '(#(free-id
                                 #(syntax-object
                                   unquote
                                   ((top)
                                    #(ribcage () () ())
                                    #(ribcage
                                      #(p lev)
                                      #((top) (top))
                                      #("i4252" "i4253"))
                                    #(ribcage
                                      #(quasicons
                                        quasiappend
                                        quasivector
                                        quasi)
                                      #((top) (top) (top) (top))
                                      #("i4184" "i4185" "i4186" "i4187")))
                                   (hygiene guile)))
                               any))))
                        #{p\ 4250}#))))
            (lambda (#{x\ 4291}#)
              ((lambda (#{tmp\ 4293}#)
                 ((lambda (#{tmp\ 4294}#)
                    (if #{tmp\ 4294}#
                      (apply (lambda (#{_\ 4297}# #{e\ 4298}#)
                               (#{quasi\ 4191}# #{e\ 4298}# 0))
                             #{tmp\ 4294}#)
                      (syntax-violation
                        #f
                        "source expression failed to match any pattern"
                        #{tmp\ 4293}#)))
                  ($sc-dispatch #{tmp\ 4293}# (quote (any any)))))
               #{x\ 4291}#)))
          (module-name (current-module)))))

(define include
  (make-syntax-transformer
    'include
    'macro
    (cons (lambda (#{x\ 4299}#)
            (letrec ((#{read-file\ 4302}#
                       (lambda (#{fn\ 4303}# #{k\ 4304}#)
                         (let ((#{p\ 4308}# (open-input-file #{fn\ 4303}#)))
                           (letrec ((#{f\ 4312}#
                                      (lambda (#{x\ 4313}# #{result\ 4314}#)
                                        (if (eof-object? #{x\ 4313}#)
                                          (begin
                                            (close-input-port #{p\ 4308}#)
                                            (reverse #{result\ 4314}#))
                                          (#{f\ 4312}#
                                            (read #{p\ 4308}#)
                                            (cons (datum->syntax
                                                    #{k\ 4304}#
                                                    #{x\ 4313}#)
                                                  #{result\ 4314}#))))))
                             (#{f\ 4312}# (read #{p\ 4308}#) (quote ())))))))
              ((lambda (#{tmp\ 4315}#)
                 ((lambda (#{tmp\ 4316}#)
                    (if #{tmp\ 4316}#
                      (apply (lambda (#{k\ 4319}# #{filename\ 4320}#)
                               (let ((#{fn\ 4322}#
                                       (syntax->datum #{filename\ 4320}#)))
                                 ((lambda (#{tmp\ 4324}#)
                                    ((lambda (#{tmp\ 4325}#)
                                       (if #{tmp\ 4325}#
                                         (apply (lambda (#{exp\ 4327}#)
                                                  (cons '#(syntax-object
                                                           begin
                                                           ((top)
                                                            #(ribcage
                                                              #(exp)
                                                              #((top))
                                                              #("i4326"))
                                                            #(ribcage () () ())
                                                            #(ribcage () () ())
                                                            #(ribcage
                                                              #(fn)
                                                              #((top))
                                                              #("i4321"))
                                                            #(ribcage
                                                              #(k filename)
                                                              #((top) (top))
                                                              #("i4317"
                                                                "i4318"))
                                                            #(ribcage
                                                              (read-file)
                                                              ((top))
                                                              ("i4301"))
                                                            #(ribcage
                                                              #(x)
                                                              #((top))
                                                              #("i4300")))
                                                           (hygiene guile))
                                                        #{exp\ 4327}#))
                                                #{tmp\ 4325}#)
                                         (syntax-violation
                                           #f
                                           "source expression failed to match any pattern"
                                           #{tmp\ 4324}#)))
                                     ($sc-dispatch
                                       #{tmp\ 4324}#
                                       'each-any)))
                                  (#{read-file\ 4302}#
                                    #{fn\ 4322}#
                                    #{k\ 4319}#))))
                             #{tmp\ 4316}#)
                      (syntax-violation
                        #f
                        "source expression failed to match any pattern"
                        #{tmp\ 4315}#)))
                  ($sc-dispatch #{tmp\ 4315}# (quote (any any)))))
               #{x\ 4299}#)))
          (module-name (current-module)))))

(define include-from-path
  (make-syntax-transformer
    'include-from-path
    'macro
    (cons (lambda (#{x\ 4329}#)
            ((lambda (#{tmp\ 4331}#)
               ((lambda (#{tmp\ 4332}#)
                  (if #{tmp\ 4332}#
                    (apply (lambda (#{k\ 4335}# #{filename\ 4336}#)
                             (let ((#{fn\ 4338}#
                                     (syntax->datum #{filename\ 4336}#)))
                               ((lambda (#{tmp\ 4340}#)
                                  ((lambda (#{fn\ 4342}#)
                                     (list '#(syntax-object
                                              include
                                              ((top)
                                               #(ribcage
                                                 #(fn)
                                                 #((top))
                                                 #("i4341"))
                                               #(ribcage () () ())
                                               #(ribcage () () ())
                                               #(ribcage
                                                 #(fn)
                                                 #((top))
                                                 #("i4337"))
                                               #(ribcage
                                                 #(k filename)
                                                 #((top) (top))
                                                 #("i4333" "i4334"))
                                               #(ribcage () () ())
                                               #(ribcage
                                                 #(x)
                                                 #((top))
                                                 #("i4330")))
                                              (hygiene guile))
                                           #{fn\ 4342}#))
                                   #{tmp\ 4340}#))
                                (let ((#{t\ 4345}#
                                        (%search-load-path #{fn\ 4338}#)))
                                  (if #{t\ 4345}#
                                    #{t\ 4345}#
                                    (syntax-violation
                                      'include-from-path
                                      "file not found in path"
                                      #{x\ 4329}#
                                      #{filename\ 4336}#))))))
                           #{tmp\ 4332}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 4331}#)))
                ($sc-dispatch #{tmp\ 4331}# (quote (any any)))))
             #{x\ 4329}#))
          (module-name (current-module)))))

(define unquote
  (make-syntax-transformer
    'unquote
    'macro
    (cons (lambda (#{x\ 4347}#)
            ((lambda (#{tmp\ 4349}#)
               ((lambda (#{tmp\ 4350}#)
                  (if #{tmp\ 4350}#
                    (apply (lambda (#{_\ 4353}# #{e\ 4354}#)
                             (syntax-violation
                               'unquote
                               "expression not valid outside of quasiquote"
                               #{x\ 4347}#))
                           #{tmp\ 4350}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 4349}#)))
                ($sc-dispatch #{tmp\ 4349}# (quote (any any)))))
             #{x\ 4347}#))
          (module-name (current-module)))))

(define unquote-splicing
  (make-syntax-transformer
    'unquote-splicing
    'macro
    (cons (lambda (#{x\ 4355}#)
            ((lambda (#{tmp\ 4357}#)
               ((lambda (#{tmp\ 4358}#)
                  (if #{tmp\ 4358}#
                    (apply (lambda (#{_\ 4361}# #{e\ 4362}#)
                             (syntax-violation
                               'unquote-splicing
                               "expression not valid outside of quasiquote"
                               #{x\ 4355}#))
                           #{tmp\ 4358}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 4357}#)))
                ($sc-dispatch #{tmp\ 4357}# (quote (any any)))))
             #{x\ 4355}#))
          (module-name (current-module)))))

(define case
  (make-syntax-transformer
    'case
    'macro
    (cons (lambda (#{x\ 4363}#)
            ((lambda (#{tmp\ 4365}#)
               ((lambda (#{tmp\ 4366}#)
                  (if #{tmp\ 4366}#
                    (apply (lambda (#{_\ 4371}#
                                    #{e\ 4372}#
                                    #{m1\ 4373}#
                                    #{m2\ 4374}#)
                             ((lambda (#{tmp\ 4376}#)
                                ((lambda (#{body\ 4378}#)
                                   (list '#(syntax-object
                                            let
                                            ((top)
                                             #(ribcage
                                               #(body)
                                               #((top))
                                               #("i4377"))
                                             #(ribcage
                                               #(_ e m1 m2)
                                               #((top) (top) (top) (top))
                                               #("i4367"
                                                 "i4368"
                                                 "i4369"
                                                 "i4370"))
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(x)
                                               #((top))
                                               #("i4364")))
                                            (hygiene guile))
                                         (list (list '#(syntax-object
                                                        t
                                                        ((top)
                                                         #(ribcage
                                                           #(body)
                                                           #((top))
                                                           #("i4377"))
                                                         #(ribcage
                                                           #(_ e m1 m2)
                                                           #((top)
                                                             (top)
                                                             (top)
                                                             (top))
                                                           #("i4367"
                                                             "i4368"
                                                             "i4369"
                                                             "i4370"))
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(x)
                                                           #((top))
                                                           #("i4364")))
                                                        (hygiene guile))
                                                     #{e\ 4372}#))
                                         #{body\ 4378}#))
                                 #{tmp\ 4376}#))
                              (letrec ((#{f\ 4382}#
                                         (lambda (#{clause\ 4383}#
                                                  #{clauses\ 4384}#)
                                           (if (null? #{clauses\ 4384}#)
                                             ((lambda (#{tmp\ 4386}#)
                                                ((lambda (#{tmp\ 4387}#)
                                                   (if #{tmp\ 4387}#
                                                     (apply (lambda (#{e1\ 4390}#
                                                                     #{e2\ 4391}#)
                                                              (cons '#(syntax-object
                                                                       begin
                                                                       ((top)
                                                                        #(ribcage
                                                                          #(e1
                                                                            e2)
                                                                          #((top)
                                                                            (top))
                                                                          #("i4388"
                                                                            "i4389"))
                                                                        #(ribcage
                                                                          ()
                                                                          ()
                                                                          ())
                                                                        #(ribcage
                                                                          #(f
                                                                            clause
                                                                            clauses)
                                                                          #((top)
                                                                            (top)
                                                                            (top))
                                                                          #("i4379"
                                                                            "i4380"
                                                                            "i4381"))
                                                                        #(ribcage
                                                                          #(_
                                                                            e
                                                                            m1
                                                                            m2)
                                                                          #((top)
                                                                            (top)
                                                                            (top)
                                                                            (top))
                                                                          #("i4367"
                                                                            "i4368"
                                                                            "i4369"
                                                                            "i4370"))
                                                                        #(ribcage
                                                                          ()
                                                                          ()
                                                                          ())
                                                                        #(ribcage
                                                                          #(x)
                                                                          #((top))
                                                                          #("i4364")))
                                                                       (hygiene
                                                                         guile))
                                                                    (cons #{e1\ 4390}#
                                                                          #{e2\ 4391}#)))
                                                            #{tmp\ 4387}#)
                                                     ((lambda (#{tmp\ 4393}#)
                                                        (if #{tmp\ 4393}#
                                                          (apply (lambda (#{k\ 4397}#
                                                                          #{e1\ 4398}#
                                                                          #{e2\ 4399}#)
                                                                   (list '#(syntax-object
                                                                            if
                                                                            ((top)
                                                                             #(ribcage
                                                                               #(k
                                                                                 e1
                                                                                 e2)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i4394"
                                                                                 "i4395"
                                                                                 "i4396"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(f
                                                                                 clause
                                                                                 clauses)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i4379"
                                                                                 "i4380"
                                                                                 "i4381"))
                                                                             #(ribcage
                                                                               #(_
                                                                                 e
                                                                                 m1
                                                                                 m2)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i4367"
                                                                                 "i4368"
                                                                                 "i4369"
                                                                                 "i4370"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(x)
                                                                               #((top))
                                                                               #("i4364")))
                                                                            (hygiene
                                                                              guile))
                                                                         (list '#(syntax-object
                                                                                  memv
                                                                                  ((top)
                                                                                   #(ribcage
                                                                                     #(k
                                                                                       e1
                                                                                       e2)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i4394"
                                                                                       "i4395"
                                                                                       "i4396"))
                                                                                   #(ribcage
                                                                                     ()
                                                                                     ()
                                                                                     ())
                                                                                   #(ribcage
                                                                                     #(f
                                                                                       clause
                                                                                       clauses)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i4379"
                                                                                       "i4380"
                                                                                       "i4381"))
                                                                                   #(ribcage
                                                                                     #(_
                                                                                       e
                                                                                       m1
                                                                                       m2)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i4367"
                                                                                       "i4368"
                                                                                       "i4369"
                                                                                       "i4370"))
                                                                                   #(ribcage
                                                                                     ()
                                                                                     ()
                                                                                     ())
                                                                                   #(ribcage
                                                                                     #(x)
                                                                                     #((top))
                                                                                     #("i4364")))
                                                                                  (hygiene
                                                                                    guile))
                                                                               '#(syntax-object
                                                                                  t
                                                                                  ((top)
                                                                                   #(ribcage
                                                                                     #(k
                                                                                       e1
                                                                                       e2)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i4394"
                                                                                       "i4395"
                                                                                       "i4396"))
                                                                                   #(ribcage
                                                                                     ()
                                                                                     ()
                                                                                     ())
                                                                                   #(ribcage
                                                                                     #(f
                                                                                       clause
                                                                                       clauses)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i4379"
                                                                                       "i4380"
                                                                                       "i4381"))
                                                                                   #(ribcage
                                                                                     #(_
                                                                                       e
                                                                                       m1
                                                                                       m2)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i4367"
                                                                                       "i4368"
                                                                                       "i4369"
                                                                                       "i4370"))
                                                                                   #(ribcage
                                                                                     ()
                                                                                     ()
                                                                                     ())
                                                                                   #(ribcage
                                                                                     #(x)
                                                                                     #((top))
                                                                                     #("i4364")))
                                                                                  (hygiene
                                                                                    guile))
                                                                               (list '#(syntax-object
                                                                                        quote
                                                                                        ((top)
                                                                                         #(ribcage
                                                                                           #(k
                                                                                             e1
                                                                                             e2)
                                                                                           #((top)
                                                                                             (top)
                                                                                             (top))
                                                                                           #("i4394"
                                                                                             "i4395"
                                                                                             "i4396"))
                                                                                         #(ribcage
                                                                                           ()
                                                                                           ()
                                                                                           ())
                                                                                         #(ribcage
                                                                                           #(f
                                                                                             clause
                                                                                             clauses)
                                                                                           #((top)
                                                                                             (top)
                                                                                             (top))
                                                                                           #("i4379"
                                                                                             "i4380"
                                                                                             "i4381"))
                                                                                         #(ribcage
                                                                                           #(_
                                                                                             e
                                                                                             m1
                                                                                             m2)
                                                                                           #((top)
                                                                                             (top)
                                                                                             (top)
                                                                                             (top))
                                                                                           #("i4367"
                                                                                             "i4368"
                                                                                             "i4369"
                                                                                             "i4370"))
                                                                                         #(ribcage
                                                                                           ()
                                                                                           ()
                                                                                           ())
                                                                                         #(ribcage
                                                                                           #(x)
                                                                                           #((top))
                                                                                           #("i4364")))
                                                                                        (hygiene
                                                                                          guile))
                                                                                     #{k\ 4397}#))
                                                                         (cons '#(syntax-object
                                                                                  begin
                                                                                  ((top)
                                                                                   #(ribcage
                                                                                     #(k
                                                                                       e1
                                                                                       e2)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i4394"
                                                                                       "i4395"
                                                                                       "i4396"))
                                                                                   #(ribcage
                                                                                     ()
                                                                                     ()
                                                                                     ())
                                                                                   #(ribcage
                                                                                     #(f
                                                                                       clause
                                                                                       clauses)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i4379"
                                                                                       "i4380"
                                                                                       "i4381"))
                                                                                   #(ribcage
                                                                                     #(_
                                                                                       e
                                                                                       m1
                                                                                       m2)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i4367"
                                                                                       "i4368"
                                                                                       "i4369"
                                                                                       "i4370"))
                                                                                   #(ribcage
                                                                                     ()
                                                                                     ()
                                                                                     ())
                                                                                   #(ribcage
                                                                                     #(x)
                                                                                     #((top))
                                                                                     #("i4364")))
                                                                                  (hygiene
                                                                                    guile))
                                                                               (cons #{e1\ 4398}#
                                                                                     #{e2\ 4399}#))))
                                                                 #{tmp\ 4393}#)
                                                          ((lambda (#{_\ 4403}#)
                                                             (syntax-violation
                                                               'case
                                                               "bad clause"
                                                               #{x\ 4363}#
                                                               #{clause\ 4383}#))
                                                           #{tmp\ 4386}#)))
                                                      ($sc-dispatch
                                                        #{tmp\ 4386}#
                                                        '(each-any
                                                           any
                                                           .
                                                           each-any)))))
                                                 ($sc-dispatch
                                                   #{tmp\ 4386}#
                                                   '(#(free-id
                                                       #(syntax-object
                                                         else
                                                         ((top)
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(f clause clauses)
                                                            #((top)
                                                              (top)
                                                              (top))
                                                            #("i4379"
                                                              "i4380"
                                                              "i4381"))
                                                          #(ribcage
                                                            #(_ e m1 m2)
                                                            #((top)
                                                              (top)
                                                              (top)
                                                              (top))
                                                            #("i4367"
                                                              "i4368"
                                                              "i4369"
                                                              "i4370"))
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(x)
                                                            #((top))
                                                            #("i4364")))
                                                         (hygiene guile)))
                                                     any
                                                     .
                                                     each-any))))
                                              #{clause\ 4383}#)
                                             ((lambda (#{tmp\ 4405}#)
                                                ((lambda (#{rest\ 4407}#)
                                                   ((lambda (#{tmp\ 4408}#)
                                                      ((lambda (#{tmp\ 4409}#)
                                                         (if #{tmp\ 4409}#
                                                           (apply (lambda (#{k\ 4413}#
                                                                           #{e1\ 4414}#
                                                                           #{e2\ 4415}#)
                                                                    (list '#(syntax-object
                                                                             if
                                                                             ((top)
                                                                              #(ribcage
                                                                                #(k
                                                                                  e1
                                                                                  e2)
                                                                                #((top)
                                                                                  (top)
                                                                                  (top))
                                                                                #("i4410"
                                                                                  "i4411"
                                                                                  "i4412"))
                                                                              #(ribcage
                                                                                #(rest)
                                                                                #((top))
                                                                                #("i4406"))
                                                                              #(ribcage
                                                                                ()
                                                                                ()
                                                                                ())
                                                                              #(ribcage
                                                                                #(f
                                                                                  clause
                                                                                  clauses)
                                                                                #((top)
                                                                                  (top)
                                                                                  (top))
                                                                                #("i4379"
                                                                                  "i4380"
                                                                                  "i4381"))
                                                                              #(ribcage
                                                                                #(_
                                                                                  e
                                                                                  m1
                                                                                  m2)
                                                                                #((top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top))
                                                                                #("i4367"
                                                                                  "i4368"
                                                                                  "i4369"
                                                                                  "i4370"))
                                                                              #(ribcage
                                                                                ()
                                                                                ()
                                                                                ())
                                                                              #(ribcage
                                                                                #(x)
                                                                                #((top))
                                                                                #("i4364")))
                                                                             (hygiene
                                                                               guile))
                                                                          (list '#(syntax-object
                                                                                   memv
                                                                                   ((top)
                                                                                    #(ribcage
                                                                                      #(k
                                                                                        e1
                                                                                        e2)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i4410"
                                                                                        "i4411"
                                                                                        "i4412"))
                                                                                    #(ribcage
                                                                                      #(rest)
                                                                                      #((top))
                                                                                      #("i4406"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(f
                                                                                        clause
                                                                                        clauses)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i4379"
                                                                                        "i4380"
                                                                                        "i4381"))
                                                                                    #(ribcage
                                                                                      #(_
                                                                                        e
                                                                                        m1
                                                                                        m2)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i4367"
                                                                                        "i4368"
                                                                                        "i4369"
                                                                                        "i4370"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(x)
                                                                                      #((top))
                                                                                      #("i4364")))
                                                                                   (hygiene
                                                                                     guile))
                                                                                '#(syntax-object
                                                                                   t
                                                                                   ((top)
                                                                                    #(ribcage
                                                                                      #(k
                                                                                        e1
                                                                                        e2)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i4410"
                                                                                        "i4411"
                                                                                        "i4412"))
                                                                                    #(ribcage
                                                                                      #(rest)
                                                                                      #((top))
                                                                                      #("i4406"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(f
                                                                                        clause
                                                                                        clauses)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i4379"
                                                                                        "i4380"
                                                                                        "i4381"))
                                                                                    #(ribcage
                                                                                      #(_
                                                                                        e
                                                                                        m1
                                                                                        m2)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i4367"
                                                                                        "i4368"
                                                                                        "i4369"
                                                                                        "i4370"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(x)
                                                                                      #((top))
                                                                                      #("i4364")))
                                                                                   (hygiene
                                                                                     guile))
                                                                                (list '#(syntax-object
                                                                                         quote
                                                                                         ((top)
                                                                                          #(ribcage
                                                                                            #(k
                                                                                              e1
                                                                                              e2)
                                                                                            #((top)
                                                                                              (top)
                                                                                              (top))
                                                                                            #("i4410"
                                                                                              "i4411"
                                                                                              "i4412"))
                                                                                          #(ribcage
                                                                                            #(rest)
                                                                                            #((top))
                                                                                            #("i4406"))
                                                                                          #(ribcage
                                                                                            ()
                                                                                            ()
                                                                                            ())
                                                                                          #(ribcage
                                                                                            #(f
                                                                                              clause
                                                                                              clauses)
                                                                                            #((top)
                                                                                              (top)
                                                                                              (top))
                                                                                            #("i4379"
                                                                                              "i4380"
                                                                                              "i4381"))
                                                                                          #(ribcage
                                                                                            #(_
                                                                                              e
                                                                                              m1
                                                                                              m2)
                                                                                            #((top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top))
                                                                                            #("i4367"
                                                                                              "i4368"
                                                                                              "i4369"
                                                                                              "i4370"))
                                                                                          #(ribcage
                                                                                            ()
                                                                                            ()
                                                                                            ())
                                                                                          #(ribcage
                                                                                            #(x)
                                                                                            #((top))
                                                                                            #("i4364")))
                                                                                         (hygiene
                                                                                           guile))
                                                                                      #{k\ 4413}#))
                                                                          (cons '#(syntax-object
                                                                                   begin
                                                                                   ((top)
                                                                                    #(ribcage
                                                                                      #(k
                                                                                        e1
                                                                                        e2)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i4410"
                                                                                        "i4411"
                                                                                        "i4412"))
                                                                                    #(ribcage
                                                                                      #(rest)
                                                                                      #((top))
                                                                                      #("i4406"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(f
                                                                                        clause
                                                                                        clauses)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i4379"
                                                                                        "i4380"
                                                                                        "i4381"))
                                                                                    #(ribcage
                                                                                      #(_
                                                                                        e
                                                                                        m1
                                                                                        m2)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i4367"
                                                                                        "i4368"
                                                                                        "i4369"
                                                                                        "i4370"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(x)
                                                                                      #((top))
                                                                                      #("i4364")))
                                                                                   (hygiene
                                                                                     guile))
                                                                                (cons #{e1\ 4414}#
                                                                                      #{e2\ 4415}#))
                                                                          #{rest\ 4407}#))
                                                                  #{tmp\ 4409}#)
                                                           ((lambda (#{_\ 4419}#)
                                                              (syntax-violation
                                                                'case
                                                                "bad clause"
                                                                #{x\ 4363}#
                                                                #{clause\ 4383}#))
                                                            #{tmp\ 4408}#)))
                                                       ($sc-dispatch
                                                         #{tmp\ 4408}#
                                                         '(each-any
                                                            any
                                                            .
                                                            each-any))))
                                                    #{clause\ 4383}#))
                                                 #{tmp\ 4405}#))
                                              (#{f\ 4382}#
                                                (car #{clauses\ 4384}#)
                                                (cdr #{clauses\ 4384}#)))))))
                                (#{f\ 4382}# #{m1\ 4373}# #{m2\ 4374}#))))
                           #{tmp\ 4366}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 4365}#)))
                ($sc-dispatch
                  #{tmp\ 4365}#
                  '(any any any . each-any))))
             #{x\ 4363}#))
          (module-name (current-module)))))

(define identifier-syntax
  (make-syntax-transformer
    'identifier-syntax
    'macro
    (cons (lambda (#{x\ 4420}#)
            ((lambda (#{tmp\ 4422}#)
               ((lambda (#{tmp\ 4423}#)
                  (if #{tmp\ 4423}#
                    (apply (lambda (#{_\ 4426}# #{e\ 4427}#)
                             (list '#(syntax-object
                                      lambda
                                      ((top)
                                       #(ribcage
                                         #(_ e)
                                         #((top) (top))
                                         #("i4424" "i4425"))
                                       #(ribcage () () ())
                                       #(ribcage #(x) #((top)) #("i4421")))
                                      (hygiene guile))
                                   '(#(syntax-object
                                       x
                                       ((top)
                                        #(ribcage
                                          #(_ e)
                                          #((top) (top))
                                          #("i4424" "i4425"))
                                        #(ribcage () () ())
                                        #(ribcage #(x) #((top)) #("i4421")))
                                       (hygiene guile)))
                                   '#((#(syntax-object
                                         macro-type
                                         ((top)
                                          #(ribcage
                                            #(_ e)
                                            #((top) (top))
                                            #("i4424" "i4425"))
                                          #(ribcage () () ())
                                          #(ribcage #(x) #((top)) #("i4421")))
                                         (hygiene guile))
                                       .
                                       #(syntax-object
                                         identifier-syntax
                                         ((top)
                                          #(ribcage
                                            #(_ e)
                                            #((top) (top))
                                            #("i4424" "i4425"))
                                          #(ribcage () () ())
                                          #(ribcage #(x) #((top)) #("i4421")))
                                         (hygiene guile))))
                                   (list '#(syntax-object
                                            syntax-case
                                            ((top)
                                             #(ribcage
                                               #(_ e)
                                               #((top) (top))
                                               #("i4424" "i4425"))
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(x)
                                               #((top))
                                               #("i4421")))
                                            (hygiene guile))
                                         '#(syntax-object
                                            x
                                            ((top)
                                             #(ribcage
                                               #(_ e)
                                               #((top) (top))
                                               #("i4424" "i4425"))
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(x)
                                               #((top))
                                               #("i4421")))
                                            (hygiene guile))
                                         '()
                                         (list '#(syntax-object
                                                  id
                                                  ((top)
                                                   #(ribcage
                                                     #(_ e)
                                                     #((top) (top))
                                                     #("i4424" "i4425"))
                                                   #(ribcage () () ())
                                                   #(ribcage
                                                     #(x)
                                                     #((top))
                                                     #("i4421")))
                                                  (hygiene guile))
                                               '(#(syntax-object
                                                   identifier?
                                                   ((top)
                                                    #(ribcage
                                                      #(_ e)
                                                      #((top) (top))
                                                      #("i4424" "i4425"))
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(x)
                                                      #((top))
                                                      #("i4421")))
                                                   (hygiene guile))
                                                 (#(syntax-object
                                                    syntax
                                                    ((top)
                                                     #(ribcage
                                                       #(_ e)
                                                       #((top) (top))
                                                       #("i4424" "i4425"))
                                                     #(ribcage () () ())
                                                     #(ribcage
                                                       #(x)
                                                       #((top))
                                                       #("i4421")))
                                                    (hygiene guile))
                                                  #(syntax-object
                                                    id
                                                    ((top)
                                                     #(ribcage
                                                       #(_ e)
                                                       #((top) (top))
                                                       #("i4424" "i4425"))
                                                     #(ribcage () () ())
                                                     #(ribcage
                                                       #(x)
                                                       #((top))
                                                       #("i4421")))
                                                    (hygiene guile))))
                                               (list '#(syntax-object
                                                        syntax
                                                        ((top)
                                                         #(ribcage
                                                           #(_ e)
                                                           #((top) (top))
                                                           #("i4424" "i4425"))
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(x)
                                                           #((top))
                                                           #("i4421")))
                                                        (hygiene guile))
                                                     #{e\ 4427}#))
                                         (list (cons #{_\ 4426}#
                                                     '(#(syntax-object
                                                         x
                                                         ((top)
                                                          #(ribcage
                                                            #(_ e)
                                                            #((top) (top))
                                                            #("i4424" "i4425"))
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(x)
                                                            #((top))
                                                            #("i4421")))
                                                         (hygiene guile))
                                                       #(syntax-object
                                                         ...
                                                         ((top)
                                                          #(ribcage
                                                            #(_ e)
                                                            #((top) (top))
                                                            #("i4424" "i4425"))
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(x)
                                                            #((top))
                                                            #("i4421")))
                                                         (hygiene guile))))
                                               (list '#(syntax-object
                                                        syntax
                                                        ((top)
                                                         #(ribcage
                                                           #(_ e)
                                                           #((top) (top))
                                                           #("i4424" "i4425"))
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(x)
                                                           #((top))
                                                           #("i4421")))
                                                        (hygiene guile))
                                                     (cons #{e\ 4427}#
                                                           '(#(syntax-object
                                                               x
                                                               ((top)
                                                                #(ribcage
                                                                  #(_ e)
                                                                  #((top)
                                                                    (top))
                                                                  #("i4424"
                                                                    "i4425"))
                                                                #(ribcage
                                                                  ()
                                                                  ()
                                                                  ())
                                                                #(ribcage
                                                                  #(x)
                                                                  #((top))
                                                                  #("i4421")))
                                                               (hygiene guile))
                                                             #(syntax-object
                                                               ...
                                                               ((top)
                                                                #(ribcage
                                                                  #(_ e)
                                                                  #((top)
                                                                    (top))
                                                                  #("i4424"
                                                                    "i4425"))
                                                                #(ribcage
                                                                  ()
                                                                  ()
                                                                  ())
                                                                #(ribcage
                                                                  #(x)
                                                                  #((top))
                                                                  #("i4421")))
                                                               (hygiene
                                                                 guile)))))))))
                           #{tmp\ 4423}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 4422}#)))
                ($sc-dispatch #{tmp\ 4422}# (quote (any any)))))
             #{x\ 4420}#))
          (module-name (current-module)))))

(define define*
  (make-syntax-transformer
    'define*
    'macro
    (cons (lambda (#{x\ 4428}#)
            ((lambda (#{tmp\ 4430}#)
               ((lambda (#{tmp\ 4431}#)
                  (if #{tmp\ 4431}#
                    (apply (lambda (#{_\ 4437}#
                                    #{id\ 4438}#
                                    #{args\ 4439}#
                                    #{b0\ 4440}#
                                    #{b1\ 4441}#)
                             (list '#(syntax-object
                                      define
                                      ((top)
                                       #(ribcage
                                         #(_ id args b0 b1)
                                         #((top) (top) (top) (top) (top))
                                         #("i4432"
                                           "i4433"
                                           "i4434"
                                           "i4435"
                                           "i4436"))
                                       #(ribcage () () ())
                                       #(ribcage #(x) #((top)) #("i4429")))
                                      (hygiene guile))
                                   #{id\ 4438}#
                                   (cons '#(syntax-object
                                            lambda*
                                            ((top)
                                             #(ribcage
                                               #(_ id args b0 b1)
                                               #((top) (top) (top) (top) (top))
                                               #("i4432"
                                                 "i4433"
                                                 "i4434"
                                                 "i4435"
                                                 "i4436"))
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(x)
                                               #((top))
                                               #("i4429")))
                                            (hygiene guile))
                                         (cons #{args\ 4439}#
                                               (cons #{b0\ 4440}#
                                                     #{b1\ 4441}#)))))
                           #{tmp\ 4431}#)
                    ((lambda (#{tmp\ 4443}#)
                       (if (if #{tmp\ 4443}#
                             (apply (lambda (#{_\ 4447}#
                                             #{id\ 4448}#
                                             #{val\ 4449}#)
                                      (identifier?
                                        '#(syntax-object
                                           x
                                           ((top)
                                            #(ribcage
                                              #(_ id val)
                                              #((top) (top) (top))
                                              #("i4444" "i4445" "i4446"))
                                            #(ribcage () () ())
                                            #(ribcage
                                              #(x)
                                              #((top))
                                              #("i4429")))
                                           (hygiene guile))))
                                    #{tmp\ 4443}#)
                             #f)
                         (apply (lambda (#{_\ 4453}#
                                         #{id\ 4454}#
                                         #{val\ 4455}#)
                                  (list '#(syntax-object
                                           define
                                           ((top)
                                            #(ribcage
                                              #(_ id val)
                                              #((top) (top) (top))
                                              #("i4450" "i4451" "i4452"))
                                            #(ribcage () () ())
                                            #(ribcage
                                              #(x)
                                              #((top))
                                              #("i4429")))
                                           (hygiene guile))
                                        #{id\ 4454}#
                                        #{val\ 4455}#))
                                #{tmp\ 4443}#)
                         (syntax-violation
                           #f
                           "source expression failed to match any pattern"
                           #{tmp\ 4430}#)))
                     ($sc-dispatch
                       #{tmp\ 4430}#
                       '(any any any)))))
                ($sc-dispatch
                  #{tmp\ 4430}#
                  '(any (any . any) any . each-any))))
             #{x\ 4428}#))
          (module-name (current-module)))))

