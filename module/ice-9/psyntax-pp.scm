(eval-when (compile) (set-current-module (resolve-module (quote (guile)))))
(if #f #f)

(letrec ((#{and-map*\ 10951}#
           (lambda (#{f\ 11013}# #{first\ 11014}# . #{rest\ 11015}#)
             (let ((#{t\ 11021}# (null? #{first\ 11014}#)))
               (if #{t\ 11021}#
                 #{t\ 11021}#
                 (if (null? #{rest\ 11015}#)
                   (letrec ((#{andmap\ 11025}#
                              (lambda (#{first\ 11026}#)
                                (let ((#{x\ 11029}# (car #{first\ 11026}#))
                                      (#{first\ 11030}#
                                        (cdr #{first\ 11026}#)))
                                  (if (null? #{first\ 11030}#)
                                    (#{f\ 11013}# #{x\ 11029}#)
                                    (if (#{f\ 11013}# #{x\ 11029}#)
                                      (#{andmap\ 11025}# #{first\ 11030}#)
                                      #f))))))
                     (#{andmap\ 11025}# #{first\ 11014}#))
                   (letrec ((#{andmap\ 11036}#
                              (lambda (#{first\ 11037}# #{rest\ 11038}#)
                                (let ((#{x\ 11043}# (car #{first\ 11037}#))
                                      (#{xr\ 11044}# (map car #{rest\ 11038}#))
                                      (#{first\ 11045}# (cdr #{first\ 11037}#))
                                      (#{rest\ 11046}#
                                        (map cdr #{rest\ 11038}#)))
                                  (if (null? #{first\ 11045}#)
                                    (apply #{f\ 11013}#
                                           (cons #{x\ 11043}# #{xr\ 11044}#))
                                    (if (apply #{f\ 11013}#
                                               (cons #{x\ 11043}#
                                                     #{xr\ 11044}#))
                                      (#{andmap\ 11036}#
                                        #{first\ 11045}#
                                        #{rest\ 11046}#)
                                      #f))))))
                     (#{andmap\ 11036}#
                       #{first\ 11014}#
                       #{rest\ 11015}#))))))))
  (letrec ((#{lambda-var-list\ 11266}#
             (lambda (#{vars\ 11481}#)
               (letrec ((#{lvl\ 11487}#
                          (lambda (#{vars\ 11488}# #{ls\ 11489}# #{w\ 11490}#)
                            (if (pair? #{vars\ 11488}#)
                              (#{lvl\ 11487}#
                                (cdr #{vars\ 11488}#)
                                (cons (#{wrap\ 11220}#
                                        (car #{vars\ 11488}#)
                                        #{w\ 11490}#
                                        #f)
                                      #{ls\ 11489}#)
                                #{w\ 11490}#)
                              (if (#{id?\ 11151}# #{vars\ 11488}#)
                                (cons (#{wrap\ 11220}#
                                        #{vars\ 11488}#
                                        #{w\ 11490}#
                                        #f)
                                      #{ls\ 11489}#)
                                (if (null? #{vars\ 11488}#)
                                  #{ls\ 11489}#
                                  (if (#{syntax-object?\ 11115}#
                                        #{vars\ 11488}#)
                                    (#{lvl\ 11487}#
                                      (#{syntax-object-expression\ 11117}#
                                        #{vars\ 11488}#)
                                      #{ls\ 11489}#
                                      (#{join-wraps\ 11202}#
                                        #{w\ 11490}#
                                        (#{syntax-object-wrap\ 11119}#
                                          #{vars\ 11488}#)))
                                    (cons #{vars\ 11488}# #{ls\ 11489}#))))))))
                 (#{lvl\ 11487}#
                   #{vars\ 11481}#
                   '()
                   '(())))))
           (#{gen-var\ 11264}#
             (lambda (#{id\ 11501}#)
               (let ((#{id\ 11504}#
                       (if (#{syntax-object?\ 11115}# #{id\ 11501}#)
                         (#{syntax-object-expression\ 11117}#
                           #{id\ 11501}#)
                         #{id\ 11501}#)))
                 (gensym
                   (string-append
                     (symbol->string #{id\ 11504}#)
                     " ")))))
           (#{strip\ 11262}#
             (lambda (#{x\ 11506}# #{w\ 11507}#)
               (if (memq 'top
                         (#{wrap-marks\ 11158}# #{w\ 11507}#))
                 #{x\ 11506}#
                 (letrec ((#{f\ 11513}#
                            (lambda (#{x\ 11514}#)
                              (if (#{syntax-object?\ 11115}# #{x\ 11514}#)
                                (#{strip\ 11262}#
                                  (#{syntax-object-expression\ 11117}#
                                    #{x\ 11514}#)
                                  (#{syntax-object-wrap\ 11119}# #{x\ 11514}#))
                                (if (pair? #{x\ 11514}#)
                                  (let ((#{a\ 11521}#
                                          (#{f\ 11513}# (car #{x\ 11514}#)))
                                        (#{d\ 11522}#
                                          (#{f\ 11513}# (cdr #{x\ 11514}#))))
                                    (if (if (eq? #{a\ 11521}#
                                                 (car #{x\ 11514}#))
                                          (eq? #{d\ 11522}# (cdr #{x\ 11514}#))
                                          #f)
                                      #{x\ 11514}#
                                      (cons #{a\ 11521}# #{d\ 11522}#)))
                                  (if (vector? #{x\ 11514}#)
                                    (let ((#{old\ 11528}#
                                            (vector->list #{x\ 11514}#)))
                                      (let ((#{new\ 11530}#
                                              (map #{f\ 11513}#
                                                   #{old\ 11528}#)))
                                        (if (#{and-map*\ 10951}#
                                              eq?
                                              #{old\ 11528}#
                                              #{new\ 11530}#)
                                          #{x\ 11514}#
                                          (list->vector #{new\ 11530}#))))
                                    #{x\ 11514}#))))))
                   (#{f\ 11513}# #{x\ 11506}#)))))
           (#{chi-lambda-case\ 11260}#
             (lambda (#{e\ 11532}#
                      #{r\ 11533}#
                      #{w\ 11534}#
                      #{s\ 11535}#
                      #{mod\ 11536}#
                      #{get-formals\ 11537}#
                      #{clauses\ 11538}#)
               (letrec ((#{expand-body\ 11553}#
                          (lambda (#{req\ 11554}#
                                   #{opt\ 11555}#
                                   #{rest\ 11556}#
                                   #{kw\ 11557}#
                                   #{body\ 11558}#
                                   #{vars\ 11559}#
                                   #{r*\ 11560}#
                                   #{w*\ 11561}#
                                   #{inits\ 11562}#
                                   #{meta\ 11563}#)
                            ((lambda (#{tmp\ 11574}#)
                               ((lambda (#{tmp\ 11575}#)
                                  (if (if #{tmp\ 11575}#
                                        (apply (lambda (#{docstring\ 11579}#
                                                        #{e1\ 11580}#
                                                        #{e2\ 11581}#)
                                                 (string?
                                                   (syntax->datum
                                                     #{docstring\ 11579}#)))
                                               #{tmp\ 11575}#)
                                        #f)
                                    (apply (lambda (#{docstring\ 11585}#
                                                    #{e1\ 11586}#
                                                    #{e2\ 11587}#)
                                             (#{expand-body\ 11553}#
                                               #{req\ 11554}#
                                               #{opt\ 11555}#
                                               #{rest\ 11556}#
                                               #{kw\ 11557}#
                                               (cons #{e1\ 11586}#
                                                     #{e2\ 11587}#)
                                               #{vars\ 11559}#
                                               #{r*\ 11560}#
                                               #{w*\ 11561}#
                                               #{inits\ 11562}#
                                               (append
                                                 #{meta\ 11563}#
                                                 (list (cons 'documentation
                                                             (syntax->datum
                                                               #{docstring\ 11585}#))))))
                                           #{tmp\ 11575}#)
                                    ((lambda (#{tmp\ 11590}#)
                                       (if #{tmp\ 11590}#
                                         (apply (lambda (#{k\ 11595}#
                                                         #{v\ 11596}#
                                                         #{e1\ 11597}#
                                                         #{e2\ 11598}#)
                                                  (#{expand-body\ 11553}#
                                                    #{req\ 11554}#
                                                    #{opt\ 11555}#
                                                    #{rest\ 11556}#
                                                    #{kw\ 11557}#
                                                    (cons #{e1\ 11597}#
                                                          #{e2\ 11598}#)
                                                    #{vars\ 11559}#
                                                    #{r*\ 11560}#
                                                    #{w*\ 11561}#
                                                    #{inits\ 11562}#
                                                    (append
                                                      #{meta\ 11563}#
                                                      (syntax->datum
                                                        (map cons
                                                             #{k\ 11595}#
                                                             #{v\ 11596}#)))))
                                                #{tmp\ 11590}#)
                                         ((lambda (#{tmp\ 11602}#)
                                            (if #{tmp\ 11602}#
                                              (apply (lambda (#{e1\ 11605}#
                                                              #{e2\ 11606}#)
                                                       (values
                                                         #{meta\ 11563}#
                                                         #{req\ 11554}#
                                                         #{opt\ 11555}#
                                                         #{rest\ 11556}#
                                                         #{kw\ 11557}#
                                                         #{inits\ 11562}#
                                                         #{vars\ 11559}#
                                                         (#{chi-body\ 11244}#
                                                           (cons #{e1\ 11605}#
                                                                 #{e2\ 11606}#)
                                                           (#{source-wrap\ 11222}#
                                                             #{e\ 11532}#
                                                             #{w\ 11534}#
                                                             #{s\ 11535}#
                                                             #{mod\ 11536}#)
                                                           #{r*\ 11560}#
                                                           #{w*\ 11561}#
                                                           #{mod\ 11536}#)))
                                                     #{tmp\ 11602}#)
                                              (syntax-violation
                                                #f
                                                "source expression failed to match any pattern"
                                                #{tmp\ 11574}#)))
                                          ($sc-dispatch
                                            #{tmp\ 11574}#
                                            '(any . each-any)))))
                                     ($sc-dispatch
                                       #{tmp\ 11574}#
                                       '(#(vector #(each (any . any)))
                                         any
                                         .
                                         each-any)))))
                                ($sc-dispatch
                                  #{tmp\ 11574}#
                                  '(any any . each-any))))
                             #{body\ 11558}#)))
                        (#{expand-kw\ 11551}#
                          (lambda (#{req\ 11608}#
                                   #{opt\ 11609}#
                                   #{rest\ 11610}#
                                   #{kw\ 11611}#
                                   #{body\ 11612}#
                                   #{vars\ 11613}#
                                   #{r*\ 11614}#
                                   #{w*\ 11615}#
                                   #{aok\ 11616}#
                                   #{out\ 11617}#
                                   #{inits\ 11618}#)
                            (if (pair? #{kw\ 11611}#)
                              ((lambda (#{tmp\ 11632}#)
                                 ((lambda (#{tmp\ 11633}#)
                                    (if #{tmp\ 11633}#
                                      (apply (lambda (#{k\ 11637}#
                                                      #{id\ 11638}#
                                                      #{i\ 11639}#)
                                               (let ((#{v\ 11642}#
                                                       (#{gen-var\ 11264}#
                                                         #{id\ 11638}#)))
                                                 (let ((#{l\ 11644}#
                                                         (#{gen-labels\ 11169}#
                                                           (list #{v\ 11642}#))))
                                                   (let ((#{r**\ 11646}#
                                                           (#{extend-var-env\ 11141}#
                                                             #{l\ 11644}#
                                                             (list #{v\ 11642}#)
                                                             #{r*\ 11614}#)))
                                                     (let ((#{w**\ 11648}#
                                                             (#{make-binding-wrap\ 11198}#
                                                               (list #{id\ 11638}#)
                                                               #{l\ 11644}#
                                                               #{w*\ 11615}#)))
                                                       (#{expand-kw\ 11551}#
                                                         #{req\ 11608}#
                                                         #{opt\ 11609}#
                                                         #{rest\ 11610}#
                                                         (cdr #{kw\ 11611}#)
                                                         #{body\ 11612}#
                                                         (cons #{v\ 11642}#
                                                               #{vars\ 11613}#)
                                                         #{r**\ 11646}#
                                                         #{w**\ 11648}#
                                                         #{aok\ 11616}#
                                                         (cons (list (syntax->datum
                                                                       #{k\ 11637}#)
                                                                     (syntax->datum
                                                                       #{id\ 11638}#)
                                                                     #{v\ 11642}#)
                                                               #{out\ 11617}#)
                                                         (cons (#{chi\ 11236}#
                                                                 #{i\ 11639}#
                                                                 #{r*\ 11614}#
                                                                 #{w*\ 11615}#
                                                                 #{mod\ 11536}#)
                                                               #{inits\ 11618}#)))))))
                                             #{tmp\ 11633}#)
                                      (syntax-violation
                                        #f
                                        "source expression failed to match any pattern"
                                        #{tmp\ 11632}#)))
                                  ($sc-dispatch
                                    #{tmp\ 11632}#
                                    '(any any any))))
                               (car #{kw\ 11611}#))
                              (#{expand-body\ 11553}#
                                #{req\ 11608}#
                                #{opt\ 11609}#
                                #{rest\ 11610}#
                                (if (let ((#{t\ 11652}# #{aok\ 11616}#))
                                      (if #{t\ 11652}#
                                        #{t\ 11652}#
                                        (pair? #{out\ 11617}#)))
                                  (cons #{aok\ 11616}#
                                        (reverse #{out\ 11617}#))
                                  #f)
                                #{body\ 11612}#
                                (reverse #{vars\ 11613}#)
                                #{r*\ 11614}#
                                #{w*\ 11615}#
                                (reverse #{inits\ 11618}#)
                                '()))))
                        (#{expand-opt\ 11549}#
                          (lambda (#{req\ 11654}#
                                   #{opt\ 11655}#
                                   #{rest\ 11656}#
                                   #{kw\ 11657}#
                                   #{body\ 11658}#
                                   #{vars\ 11659}#
                                   #{r*\ 11660}#
                                   #{w*\ 11661}#
                                   #{out\ 11662}#
                                   #{inits\ 11663}#)
                            (if (pair? #{opt\ 11655}#)
                              ((lambda (#{tmp\ 11676}#)
                                 ((lambda (#{tmp\ 11677}#)
                                    (if #{tmp\ 11677}#
                                      (apply (lambda (#{id\ 11680}#
                                                      #{i\ 11681}#)
                                               (let ((#{v\ 11684}#
                                                       (#{gen-var\ 11264}#
                                                         #{id\ 11680}#)))
                                                 (let ((#{l\ 11686}#
                                                         (#{gen-labels\ 11169}#
                                                           (list #{v\ 11684}#))))
                                                   (let ((#{r**\ 11688}#
                                                           (#{extend-var-env\ 11141}#
                                                             #{l\ 11686}#
                                                             (list #{v\ 11684}#)
                                                             #{r*\ 11660}#)))
                                                     (let ((#{w**\ 11690}#
                                                             (#{make-binding-wrap\ 11198}#
                                                               (list #{id\ 11680}#)
                                                               #{l\ 11686}#
                                                               #{w*\ 11661}#)))
                                                       (#{expand-opt\ 11549}#
                                                         #{req\ 11654}#
                                                         (cdr #{opt\ 11655}#)
                                                         #{rest\ 11656}#
                                                         #{kw\ 11657}#
                                                         #{body\ 11658}#
                                                         (cons #{v\ 11684}#
                                                               #{vars\ 11659}#)
                                                         #{r**\ 11688}#
                                                         #{w**\ 11690}#
                                                         (cons (syntax->datum
                                                                 #{id\ 11680}#)
                                                               #{out\ 11662}#)
                                                         (cons (#{chi\ 11236}#
                                                                 #{i\ 11681}#
                                                                 #{r*\ 11660}#
                                                                 #{w*\ 11661}#
                                                                 #{mod\ 11536}#)
                                                               #{inits\ 11663}#)))))))
                                             #{tmp\ 11677}#)
                                      (syntax-violation
                                        #f
                                        "source expression failed to match any pattern"
                                        #{tmp\ 11676}#)))
                                  ($sc-dispatch
                                    #{tmp\ 11676}#
                                    '(any any))))
                               (car #{opt\ 11655}#))
                              (if #{rest\ 11656}#
                                (let ((#{v\ 11695}#
                                        (#{gen-var\ 11264}# #{rest\ 11656}#)))
                                  (let ((#{l\ 11697}#
                                          (#{gen-labels\ 11169}#
                                            (list #{v\ 11695}#))))
                                    (let ((#{r*\ 11699}#
                                            (#{extend-var-env\ 11141}#
                                              #{l\ 11697}#
                                              (list #{v\ 11695}#)
                                              #{r*\ 11660}#)))
                                      (let ((#{w*\ 11701}#
                                              (#{make-binding-wrap\ 11198}#
                                                (list #{rest\ 11656}#)
                                                #{l\ 11697}#
                                                #{w*\ 11661}#)))
                                        (#{expand-kw\ 11551}#
                                          #{req\ 11654}#
                                          (if (pair? #{out\ 11662}#)
                                            (reverse #{out\ 11662}#)
                                            #f)
                                          (syntax->datum #{rest\ 11656}#)
                                          (if (pair? #{kw\ 11657}#)
                                            (cdr #{kw\ 11657}#)
                                            #{kw\ 11657}#)
                                          #{body\ 11658}#
                                          (cons #{v\ 11695}# #{vars\ 11659}#)
                                          #{r*\ 11699}#
                                          #{w*\ 11701}#
                                          (if (pair? #{kw\ 11657}#)
                                            (car #{kw\ 11657}#)
                                            #f)
                                          '()
                                          #{inits\ 11663}#)))))
                                (#{expand-kw\ 11551}#
                                  #{req\ 11654}#
                                  (if (pair? #{out\ 11662}#)
                                    (reverse #{out\ 11662}#)
                                    #f)
                                  #f
                                  (if (pair? #{kw\ 11657}#)
                                    (cdr #{kw\ 11657}#)
                                    #{kw\ 11657}#)
                                  #{body\ 11658}#
                                  #{vars\ 11659}#
                                  #{r*\ 11660}#
                                  #{w*\ 11661}#
                                  (if (pair? #{kw\ 11657}#)
                                    (car #{kw\ 11657}#)
                                    #f)
                                  '()
                                  #{inits\ 11663}#)))))
                        (#{expand-req\ 11547}#
                          (lambda (#{req\ 11703}#
                                   #{opt\ 11704}#
                                   #{rest\ 11705}#
                                   #{kw\ 11706}#
                                   #{body\ 11707}#)
                            (let ((#{vars\ 11715}#
                                    (map #{gen-var\ 11264}# #{req\ 11703}#))
                                  (#{labels\ 11716}#
                                    (#{gen-labels\ 11169}# #{req\ 11703}#)))
                              (let ((#{r*\ 11719}#
                                      (#{extend-var-env\ 11141}#
                                        #{labels\ 11716}#
                                        #{vars\ 11715}#
                                        #{r\ 11533}#))
                                    (#{w*\ 11720}#
                                      (#{make-binding-wrap\ 11198}#
                                        #{req\ 11703}#
                                        #{labels\ 11716}#
                                        #{w\ 11534}#)))
                                (#{expand-opt\ 11549}#
                                  (map syntax->datum #{req\ 11703}#)
                                  #{opt\ 11704}#
                                  #{rest\ 11705}#
                                  #{kw\ 11706}#
                                  #{body\ 11707}#
                                  (reverse #{vars\ 11715}#)
                                  #{r*\ 11719}#
                                  #{w*\ 11720}#
                                  '()
                                  '()))))))
                 ((lambda (#{tmp\ 11721}#)
                    ((lambda (#{tmp\ 11722}#)
                       (if #{tmp\ 11722}#
                         (apply (lambda () (values (quote ()) #f))
                                #{tmp\ 11722}#)
                         ((lambda (#{tmp\ 11723}#)
                            (if #{tmp\ 11723}#
                              (apply (lambda (#{args\ 11730}#
                                              #{e1\ 11731}#
                                              #{e2\ 11732}#
                                              #{args*\ 11733}#
                                              #{e1*\ 11734}#
                                              #{e2*\ 11735}#)
                                       (call-with-values
                                         (lambda ()
                                           (#{get-formals\ 11537}#
                                             #{args\ 11730}#))
                                         (lambda (#{req\ 11736}#
                                                  #{opt\ 11737}#
                                                  #{rest\ 11738}#
                                                  #{kw\ 11739}#)
                                           (call-with-values
                                             (lambda ()
                                               (#{expand-req\ 11547}#
                                                 #{req\ 11736}#
                                                 #{opt\ 11737}#
                                                 #{rest\ 11738}#
                                                 #{kw\ 11739}#
                                                 (cons #{e1\ 11731}#
                                                       #{e2\ 11732}#)))
                                             (lambda (#{meta\ 11745}#
                                                      #{req\ 11746}#
                                                      #{opt\ 11747}#
                                                      #{rest\ 11748}#
                                                      #{kw\ 11749}#
                                                      #{inits\ 11750}#
                                                      #{vars\ 11751}#
                                                      #{body\ 11752}#)
                                               (call-with-values
                                                 (lambda ()
                                                   (#{chi-lambda-case\ 11260}#
                                                     #{e\ 11532}#
                                                     #{r\ 11533}#
                                                     #{w\ 11534}#
                                                     #{s\ 11535}#
                                                     #{mod\ 11536}#
                                                     #{get-formals\ 11537}#
                                                     (map (lambda (#{tmp\ 11763}#
                                                                   #{tmp\ 11762}#
                                                                   #{tmp\ 11761}#)
                                                            (cons #{tmp\ 11761}#
                                                                  (cons #{tmp\ 11762}#
                                                                        #{tmp\ 11763}#)))
                                                          #{e2*\ 11735}#
                                                          #{e1*\ 11734}#
                                                          #{args*\ 11733}#)))
                                                 (lambda (#{meta*\ 11765}#
                                                          #{else*\ 11766}#)
                                                   (values
                                                     (append
                                                       #{meta\ 11745}#
                                                       #{meta*\ 11765}#)
                                                     (#{build-lambda-case\ 11097}#
                                                       #{s\ 11535}#
                                                       #{req\ 11746}#
                                                       #{opt\ 11747}#
                                                       #{rest\ 11748}#
                                                       #{kw\ 11749}#
                                                       #{inits\ 11750}#
                                                       #{vars\ 11751}#
                                                       #{body\ 11752}#
                                                       #{else*\ 11766}#)))))))))
                                     #{tmp\ 11723}#)
                              (syntax-violation
                                #f
                                "source expression failed to match any pattern"
                                #{tmp\ 11721}#)))
                          ($sc-dispatch
                            #{tmp\ 11721}#
                            '((any any . each-any)
                              .
                              #(each (any any . each-any)))))))
                     ($sc-dispatch #{tmp\ 11721}# (quote ()))))
                  #{clauses\ 11538}#))))
           (#{lambda*-formals\ 11258}#
             (lambda (#{orig-args\ 11769}#)
               (letrec ((#{check\ 11780}#
                          (lambda (#{req\ 11781}#
                                   #{opt\ 11782}#
                                   #{rest\ 11783}#
                                   #{kw\ 11784}#)
                            (if (#{distinct-bound-ids?\ 11216}#
                                  (append
                                    #{req\ 11781}#
                                    (map car #{opt\ 11782}#)
                                    (if #{rest\ 11783}#
                                      (list #{rest\ 11783}#)
                                      '())
                                    (if (pair? #{kw\ 11784}#)
                                      (map cadr (cdr #{kw\ 11784}#))
                                      '())))
                              (values
                                #{req\ 11781}#
                                #{opt\ 11782}#
                                #{rest\ 11783}#
                                #{kw\ 11784}#)
                              (syntax-violation
                                'lambda*
                                "duplicate identifier in argument list"
                                #{orig-args\ 11769}#))))
                        (#{rest\ 11778}#
                          (lambda (#{args\ 11792}#
                                   #{req\ 11793}#
                                   #{opt\ 11794}#
                                   #{kw\ 11795}#)
                            ((lambda (#{tmp\ 11800}#)
                               ((lambda (#{tmp\ 11801}#)
                                  (if (if #{tmp\ 11801}#
                                        (apply (lambda (#{r\ 11803}#)
                                                 (#{id?\ 11151}# #{r\ 11803}#))
                                               #{tmp\ 11801}#)
                                        #f)
                                    (apply (lambda (#{r\ 11805}#)
                                             (#{check\ 11780}#
                                               #{req\ 11793}#
                                               #{opt\ 11794}#
                                               #{r\ 11805}#
                                               #{kw\ 11795}#))
                                           #{tmp\ 11801}#)
                                    ((lambda (#{else\ 11807}#)
                                       (syntax-violation
                                         'lambda*
                                         "invalid rest argument"
                                         #{orig-args\ 11769}#
                                         #{args\ 11792}#))
                                     #{tmp\ 11800}#)))
                                (list #{tmp\ 11800}#)))
                             #{args\ 11792}#)))
                        (#{key\ 11776}#
                          (lambda (#{args\ 11808}#
                                   #{req\ 11809}#
                                   #{opt\ 11810}#
                                   #{rkey\ 11811}#)
                            ((lambda (#{tmp\ 11816}#)
                               ((lambda (#{tmp\ 11817}#)
                                  (if #{tmp\ 11817}#
                                    (apply (lambda ()
                                             (#{check\ 11780}#
                                               #{req\ 11809}#
                                               #{opt\ 11810}#
                                               #f
                                               (cons #f
                                                     (reverse
                                                       #{rkey\ 11811}#))))
                                           #{tmp\ 11817}#)
                                    ((lambda (#{tmp\ 11818}#)
                                       (if (if #{tmp\ 11818}#
                                             (apply (lambda (#{a\ 11821}#
                                                             #{b\ 11822}#)
                                                      (#{id?\ 11151}#
                                                        #{a\ 11821}#))
                                                    #{tmp\ 11818}#)
                                             #f)
                                         (apply (lambda (#{a\ 11825}#
                                                         #{b\ 11826}#)
                                                  ((lambda (#{tmp\ 11828}#)
                                                     ((lambda (#{k\ 11830}#)
                                                        (#{key\ 11776}#
                                                          #{b\ 11826}#
                                                          #{req\ 11809}#
                                                          #{opt\ 11810}#
                                                          (cons (cons #{k\ 11830}#
                                                                      (cons #{a\ 11825}#
                                                                            '(#(syntax-object
                                                                                #f
                                                                                ((top)
                                                                                 #(ribcage
                                                                                   #(k)
                                                                                   #((top))
                                                                                   #("i11829"))
                                                                                 #(ribcage
                                                                                   #(a
                                                                                     b)
                                                                                   #((top)
                                                                                     (top))
                                                                                   #("i11823"
                                                                                     "i11824"))
                                                                                 #(ribcage
                                                                                   ()
                                                                                   ()
                                                                                   ())
                                                                                 #(ribcage
                                                                                   #(args
                                                                                     req
                                                                                     opt
                                                                                     rkey)
                                                                                   #((top)
                                                                                     (top)
                                                                                     (top)
                                                                                     (top))
                                                                                   #("i11812"
                                                                                     "i11813"
                                                                                     "i11814"
                                                                                     "i11815"))
                                                                                 #(ribcage
                                                                                   (check rest
                                                                                          key
                                                                                          opt
                                                                                          req)
                                                                                   ((top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top))
                                                                                   ("i11779"
                                                                                    "i11777"
                                                                                    "i11775"
                                                                                    "i11773"
                                                                                    "i11771"))
                                                                                 #(ribcage
                                                                                   #(orig-args)
                                                                                   #((top))
                                                                                   #("i11770"))
                                                                                 #(ribcage
                                                                                   (lambda-var-list
                                                                                     gen-var
                                                                                     strip
                                                                                     chi-lambda-case
                                                                                     lambda*-formals
                                                                                     chi-simple-lambda
                                                                                     lambda-formals
                                                                                     ellipsis?
                                                                                     chi-void
                                                                                     eval-local-transformer
                                                                                     chi-local-syntax
                                                                                     chi-body
                                                                                     chi-macro
                                                                                     chi-application
                                                                                     chi-expr
                                                                                     chi
                                                                                     chi-top
                                                                                     syntax-type
                                                                                     chi-when-list
                                                                                     chi-install-global
                                                                                     chi-top-sequence
                                                                                     chi-sequence
                                                                                     source-wrap
                                                                                     wrap
                                                                                     bound-id-member?
                                                                                     distinct-bound-ids?
                                                                                     valid-bound-ids?
                                                                                     bound-id=?
                                                                                     free-id=?
                                                                                     id-var-name
                                                                                     same-marks?
                                                                                     join-marks
                                                                                     join-wraps
                                                                                     smart-append
                                                                                     make-binding-wrap
                                                                                     extend-ribcage!
                                                                                     make-empty-ribcage
                                                                                     new-mark
                                                                                     anti-mark
                                                                                     the-anti-mark
                                                                                     top-marked?
                                                                                     top-wrap
                                                                                     empty-wrap
                                                                                     set-ribcage-labels!
                                                                                     set-ribcage-marks!
                                                                                     set-ribcage-symnames!
                                                                                     ribcage-labels
                                                                                     ribcage-marks
                                                                                     ribcage-symnames
                                                                                     ribcage?
                                                                                     make-ribcage
                                                                                     gen-labels
                                                                                     gen-label
                                                                                     make-rename
                                                                                     rename-marks
                                                                                     rename-new
                                                                                     rename-old
                                                                                     subst-rename?
                                                                                     wrap-subst
                                                                                     wrap-marks
                                                                                     make-wrap
                                                                                     id-sym-name&marks
                                                                                     id-sym-name
                                                                                     id?
                                                                                     nonsymbol-id?
                                                                                     global-extend
                                                                                     lookup
                                                                                     macros-only-env
                                                                                     extend-var-env
                                                                                     extend-env
                                                                                     null-env
                                                                                     binding-value
                                                                                     binding-type
                                                                                     make-binding
                                                                                     arg-check
                                                                                     source-annotation
                                                                                     no-source
                                                                                     set-syntax-object-module!
                                                                                     set-syntax-object-wrap!
                                                                                     set-syntax-object-expression!
                                                                                     syntax-object-module
                                                                                     syntax-object-wrap
                                                                                     syntax-object-expression
                                                                                     syntax-object?
                                                                                     make-syntax-object
                                                                                     build-lexical-var
                                                                                     build-letrec
                                                                                     build-named-let
                                                                                     build-let
                                                                                     build-sequence
                                                                                     build-data
                                                                                     build-primref
                                                                                     build-lambda-case
                                                                                     build-case-lambda
                                                                                     build-simple-lambda
                                                                                     build-global-definition
                                                                                     maybe-name-value!
                                                                                     build-global-assignment
                                                                                     build-global-reference
                                                                                     analyze-variable
                                                                                     build-lexical-assignment
                                                                                     build-lexical-reference
                                                                                     build-dynlet
                                                                                     build-conditional
                                                                                     build-application
                                                                                     build-void
                                                                                     decorate-source
                                                                                     get-global-definition-hook
                                                                                     put-global-definition-hook
                                                                                     gensym-hook
                                                                                     local-eval-hook
                                                                                     top-level-eval-hook
                                                                                     fx<
                                                                                     fx=
                                                                                     fx-
                                                                                     fx+
                                                                                     *mode*)
                                                                                   ((top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top))
                                                                                   ("i11265"
                                                                                    "i11263"
                                                                                    "i11261"
                                                                                    "i11259"
                                                                                    "i11257"
                                                                                    "i11255"
                                                                                    "i11253"
                                                                                    "i11251"
                                                                                    "i11249"
                                                                                    "i11247"
                                                                                    "i11245"
                                                                                    "i11243"
                                                                                    "i11241"
                                                                                    "i11239"
                                                                                    "i11237"
                                                                                    "i11235"
                                                                                    "i11233"
                                                                                    "i11231"
                                                                                    "i11229"
                                                                                    "i11227"
                                                                                    "i11225"
                                                                                    "i11223"
                                                                                    "i11221"
                                                                                    "i11219"
                                                                                    "i11217"
                                                                                    "i11215"
                                                                                    "i11213"
                                                                                    "i11211"
                                                                                    "i11209"
                                                                                    "i11207"
                                                                                    "i11205"
                                                                                    "i11203"
                                                                                    "i11201"
                                                                                    "i11199"
                                                                                    "i11197"
                                                                                    "i11195"
                                                                                    "i11194"
                                                                                    "i11193"
                                                                                    "i11191"
                                                                                    "i11190"
                                                                                    "i11189"
                                                                                    "i11188"
                                                                                    "i11187"
                                                                                    "i11185"
                                                                                    "i11183"
                                                                                    "i11181"
                                                                                    "i11179"
                                                                                    "i11177"
                                                                                    "i11175"
                                                                                    "i11173"
                                                                                    "i11171"
                                                                                    "i11168"
                                                                                    "i11166"
                                                                                    "i11165"
                                                                                    "i11164"
                                                                                    "i11163"
                                                                                    "i11162"
                                                                                    "i11161"
                                                                                    "i11159"
                                                                                    "i11157"
                                                                                    "i11155"
                                                                                    "i11153"
                                                                                    "i11152"
                                                                                    "i11150"
                                                                                    "i11148"
                                                                                    "i11146"
                                                                                    "i11144"
                                                                                    "i11142"
                                                                                    "i11140"
                                                                                    "i11138"
                                                                                    "i11137"
                                                                                    "i11135"
                                                                                    "i11133"
                                                                                    "i11132"
                                                                                    "i11131"
                                                                                    "i11129"
                                                                                    "i11128"
                                                                                    "i11126"
                                                                                    "i11124"
                                                                                    "i11122"
                                                                                    "i11120"
                                                                                    "i11118"
                                                                                    "i11116"
                                                                                    "i11114"
                                                                                    "i11112"
                                                                                    "i11110"
                                                                                    "i11108"
                                                                                    "i11106"
                                                                                    "i11104"
                                                                                    "i11102"
                                                                                    "i11100"
                                                                                    "i11098"
                                                                                    "i11096"
                                                                                    "i11094"
                                                                                    "i11092"
                                                                                    "i11090"
                                                                                    "i11088"
                                                                                    "i11086"
                                                                                    "i11084"
                                                                                    "i11082"
                                                                                    "i11080"
                                                                                    "i11078"
                                                                                    "i11076"
                                                                                    "i11074"
                                                                                    "i11072"
                                                                                    "i11070"
                                                                                    "i11068"
                                                                                    "i11066"
                                                                                    "i11064"
                                                                                    "i11063"
                                                                                    "i11061"
                                                                                    "i11059"
                                                                                    "i11057"
                                                                                    "i11055"
                                                                                    "i11053"
                                                                                    "i11051"
                                                                                    "i11049"))
                                                                                 #(ribcage
                                                                                   (define-structure
                                                                                     and-map*)
                                                                                   ((top)
                                                                                    (top))
                                                                                   ("i10952"
                                                                                    "i10950")))
                                                                                (hygiene
                                                                                  guile)))))
                                                                #{rkey\ 11811}#)))
                                                      #{tmp\ 11828}#))
                                                   (symbol->keyword
                                                     (syntax->datum
                                                       #{a\ 11825}#))))
                                                #{tmp\ 11818}#)
                                         ((lambda (#{tmp\ 11831}#)
                                            (if (if #{tmp\ 11831}#
                                                  (apply (lambda (#{a\ 11835}#
                                                                  #{init\ 11836}#
                                                                  #{b\ 11837}#)
                                                           (#{id?\ 11151}#
                                                             #{a\ 11835}#))
                                                         #{tmp\ 11831}#)
                                                  #f)
                                              (apply (lambda (#{a\ 11841}#
                                                              #{init\ 11842}#
                                                              #{b\ 11843}#)
                                                       ((lambda (#{tmp\ 11845}#)
                                                          ((lambda (#{k\ 11847}#)
                                                             (#{key\ 11776}#
                                                               #{b\ 11843}#
                                                               #{req\ 11809}#
                                                               #{opt\ 11810}#
                                                               (cons (list #{k\ 11847}#
                                                                           #{a\ 11841}#
                                                                           #{init\ 11842}#)
                                                                     #{rkey\ 11811}#)))
                                                           #{tmp\ 11845}#))
                                                        (symbol->keyword
                                                          (syntax->datum
                                                            #{a\ 11841}#))))
                                                     #{tmp\ 11831}#)
                                              ((lambda (#{tmp\ 11848}#)
                                                 (if (if #{tmp\ 11848}#
                                                       (apply (lambda (#{a\ 11853}#
                                                                       #{init\ 11854}#
                                                                       #{k\ 11855}#
                                                                       #{b\ 11856}#)
                                                                (if (#{id?\ 11151}#
                                                                      #{a\ 11853}#)
                                                                  (keyword?
                                                                    (syntax->datum
                                                                      #{k\ 11855}#))
                                                                  #f))
                                                              #{tmp\ 11848}#)
                                                       #f)
                                                   (apply (lambda (#{a\ 11863}#
                                                                   #{init\ 11864}#
                                                                   #{k\ 11865}#
                                                                   #{b\ 11866}#)
                                                            (#{key\ 11776}#
                                                              #{b\ 11866}#
                                                              #{req\ 11809}#
                                                              #{opt\ 11810}#
                                                              (cons (list #{k\ 11865}#
                                                                          #{a\ 11863}#
                                                                          #{init\ 11864}#)
                                                                    #{rkey\ 11811}#)))
                                                          #{tmp\ 11848}#)
                                                   ((lambda (#{tmp\ 11867}#)
                                                      (if (if #{tmp\ 11867}#
                                                            (apply (lambda (#{aok\ 11869}#)
                                                                     (eq? (syntax->datum
                                                                            #{aok\ 11869}#)
                                                                          #:allow-other-keys))
                                                                   #{tmp\ 11867}#)
                                                            #f)
                                                        (apply (lambda (#{aok\ 11871}#)
                                                                 (#{check\ 11780}#
                                                                   #{req\ 11809}#
                                                                   #{opt\ 11810}#
                                                                   #f
                                                                   (cons #t
                                                                         (reverse
                                                                           #{rkey\ 11811}#))))
                                                               #{tmp\ 11867}#)
                                                        ((lambda (#{tmp\ 11872}#)
                                                           (if (if #{tmp\ 11872}#
                                                                 (apply (lambda (#{aok\ 11876}#
                                                                                 #{a\ 11877}#
                                                                                 #{b\ 11878}#)
                                                                          (if (eq? (syntax->datum
                                                                                     #{aok\ 11876}#)
                                                                                   #:allow-other-keys)
                                                                            (eq? (syntax->datum
                                                                                   #{a\ 11877}#)
                                                                                 #:rest)
                                                                            #f))
                                                                        #{tmp\ 11872}#)
                                                                 #f)
                                                             (apply (lambda (#{aok\ 11884}#
                                                                             #{a\ 11885}#
                                                                             #{b\ 11886}#)
                                                                      (#{rest\ 11778}#
                                                                        #{b\ 11886}#
                                                                        #{req\ 11809}#
                                                                        #{opt\ 11810}#
                                                                        (cons #t
                                                                              (reverse
                                                                                #{rkey\ 11811}#))))
                                                                    #{tmp\ 11872}#)
                                                             ((lambda (#{tmp\ 11887}#)
                                                                (if (if #{tmp\ 11887}#
                                                                      (apply (lambda (#{aok\ 11890}#
                                                                                      #{r\ 11891}#)
                                                                               (if (eq? (syntax->datum
                                                                                          #{aok\ 11890}#)
                                                                                        #:allow-other-keys)
                                                                                 (#{id?\ 11151}#
                                                                                   #{r\ 11891}#)
                                                                                 #f))
                                                                             #{tmp\ 11887}#)
                                                                      #f)
                                                                  (apply (lambda (#{aok\ 11896}#
                                                                                  #{r\ 11897}#)
                                                                           (#{rest\ 11778}#
                                                                             #{r\ 11897}#
                                                                             #{req\ 11809}#
                                                                             #{opt\ 11810}#
                                                                             (cons #t
                                                                                   (reverse
                                                                                     #{rkey\ 11811}#))))
                                                                         #{tmp\ 11887}#)
                                                                  ((lambda (#{tmp\ 11898}#)
                                                                     (if (if #{tmp\ 11898}#
                                                                           (apply (lambda (#{a\ 11901}#
                                                                                           #{b\ 11902}#)
                                                                                    (eq? (syntax->datum
                                                                                           #{a\ 11901}#)
                                                                                         #:rest))
                                                                                  #{tmp\ 11898}#)
                                                                           #f)
                                                                       (apply (lambda (#{a\ 11905}#
                                                                                       #{b\ 11906}#)
                                                                                (#{rest\ 11778}#
                                                                                  #{b\ 11906}#
                                                                                  #{req\ 11809}#
                                                                                  #{opt\ 11810}#
                                                                                  (cons #f
                                                                                        (reverse
                                                                                          #{rkey\ 11811}#))))
                                                                              #{tmp\ 11898}#)
                                                                       ((lambda (#{tmp\ 11907}#)
                                                                          (if (if #{tmp\ 11907}#
                                                                                (apply (lambda (#{r\ 11909}#)
                                                                                         (#{id?\ 11151}#
                                                                                           #{r\ 11909}#))
                                                                                       #{tmp\ 11907}#)
                                                                                #f)
                                                                            (apply (lambda (#{r\ 11911}#)
                                                                                     (#{rest\ 11778}#
                                                                                       #{r\ 11911}#
                                                                                       #{req\ 11809}#
                                                                                       #{opt\ 11810}#
                                                                                       (cons #f
                                                                                             (reverse
                                                                                               #{rkey\ 11811}#))))
                                                                                   #{tmp\ 11907}#)
                                                                            ((lambda (#{else\ 11913}#)
                                                                               (syntax-violation
                                                                                 'lambda*
                                                                                 "invalid keyword argument list"
                                                                                 #{orig-args\ 11769}#
                                                                                 #{args\ 11808}#))
                                                                             #{tmp\ 11816}#)))
                                                                        (list #{tmp\ 11816}#))))
                                                                   ($sc-dispatch
                                                                     #{tmp\ 11816}#
                                                                     '(any any)))))
                                                              ($sc-dispatch
                                                                #{tmp\ 11816}#
                                                                '(any .
                                                                      any)))))
                                                         ($sc-dispatch
                                                           #{tmp\ 11816}#
                                                           '(any any any)))))
                                                    ($sc-dispatch
                                                      #{tmp\ 11816}#
                                                      '(any)))))
                                               ($sc-dispatch
                                                 #{tmp\ 11816}#
                                                 '((any any any) . any)))))
                                          ($sc-dispatch
                                            #{tmp\ 11816}#
                                            '((any any) . any)))))
                                     ($sc-dispatch
                                       #{tmp\ 11816}#
                                       '(any . any)))))
                                ($sc-dispatch #{tmp\ 11816}# (quote ()))))
                             #{args\ 11808}#)))
                        (#{opt\ 11774}#
                          (lambda (#{args\ 11914}#
                                   #{req\ 11915}#
                                   #{ropt\ 11916}#)
                            ((lambda (#{tmp\ 11920}#)
                               ((lambda (#{tmp\ 11921}#)
                                  (if #{tmp\ 11921}#
                                    (apply (lambda ()
                                             (#{check\ 11780}#
                                               #{req\ 11915}#
                                               (reverse #{ropt\ 11916}#)
                                               #f
                                               '()))
                                           #{tmp\ 11921}#)
                                    ((lambda (#{tmp\ 11922}#)
                                       (if (if #{tmp\ 11922}#
                                             (apply (lambda (#{a\ 11925}#
                                                             #{b\ 11926}#)
                                                      (#{id?\ 11151}#
                                                        #{a\ 11925}#))
                                                    #{tmp\ 11922}#)
                                             #f)
                                         (apply (lambda (#{a\ 11929}#
                                                         #{b\ 11930}#)
                                                  (#{opt\ 11774}#
                                                    #{b\ 11930}#
                                                    #{req\ 11915}#
                                                    (cons (cons #{a\ 11929}#
                                                                '(#(syntax-object
                                                                    #f
                                                                    ((top)
                                                                     #(ribcage
                                                                       #(a b)
                                                                       #((top)
                                                                         (top))
                                                                       #("i11927"
                                                                         "i11928"))
                                                                     #(ribcage
                                                                       ()
                                                                       ()
                                                                       ())
                                                                     #(ribcage
                                                                       #(args
                                                                         req
                                                                         ropt)
                                                                       #((top)
                                                                         (top)
                                                                         (top))
                                                                       #("i11917"
                                                                         "i11918"
                                                                         "i11919"))
                                                                     #(ribcage
                                                                       (check rest
                                                                              key
                                                                              opt
                                                                              req)
                                                                       ((top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top))
                                                                       ("i11779"
                                                                        "i11777"
                                                                        "i11775"
                                                                        "i11773"
                                                                        "i11771"))
                                                                     #(ribcage
                                                                       #(orig-args)
                                                                       #((top))
                                                                       #("i11770"))
                                                                     #(ribcage
                                                                       (lambda-var-list
                                                                         gen-var
                                                                         strip
                                                                         chi-lambda-case
                                                                         lambda*-formals
                                                                         chi-simple-lambda
                                                                         lambda-formals
                                                                         ellipsis?
                                                                         chi-void
                                                                         eval-local-transformer
                                                                         chi-local-syntax
                                                                         chi-body
                                                                         chi-macro
                                                                         chi-application
                                                                         chi-expr
                                                                         chi
                                                                         chi-top
                                                                         syntax-type
                                                                         chi-when-list
                                                                         chi-install-global
                                                                         chi-top-sequence
                                                                         chi-sequence
                                                                         source-wrap
                                                                         wrap
                                                                         bound-id-member?
                                                                         distinct-bound-ids?
                                                                         valid-bound-ids?
                                                                         bound-id=?
                                                                         free-id=?
                                                                         id-var-name
                                                                         same-marks?
                                                                         join-marks
                                                                         join-wraps
                                                                         smart-append
                                                                         make-binding-wrap
                                                                         extend-ribcage!
                                                                         make-empty-ribcage
                                                                         new-mark
                                                                         anti-mark
                                                                         the-anti-mark
                                                                         top-marked?
                                                                         top-wrap
                                                                         empty-wrap
                                                                         set-ribcage-labels!
                                                                         set-ribcage-marks!
                                                                         set-ribcage-symnames!
                                                                         ribcage-labels
                                                                         ribcage-marks
                                                                         ribcage-symnames
                                                                         ribcage?
                                                                         make-ribcage
                                                                         gen-labels
                                                                         gen-label
                                                                         make-rename
                                                                         rename-marks
                                                                         rename-new
                                                                         rename-old
                                                                         subst-rename?
                                                                         wrap-subst
                                                                         wrap-marks
                                                                         make-wrap
                                                                         id-sym-name&marks
                                                                         id-sym-name
                                                                         id?
                                                                         nonsymbol-id?
                                                                         global-extend
                                                                         lookup
                                                                         macros-only-env
                                                                         extend-var-env
                                                                         extend-env
                                                                         null-env
                                                                         binding-value
                                                                         binding-type
                                                                         make-binding
                                                                         arg-check
                                                                         source-annotation
                                                                         no-source
                                                                         set-syntax-object-module!
                                                                         set-syntax-object-wrap!
                                                                         set-syntax-object-expression!
                                                                         syntax-object-module
                                                                         syntax-object-wrap
                                                                         syntax-object-expression
                                                                         syntax-object?
                                                                         make-syntax-object
                                                                         build-lexical-var
                                                                         build-letrec
                                                                         build-named-let
                                                                         build-let
                                                                         build-sequence
                                                                         build-data
                                                                         build-primref
                                                                         build-lambda-case
                                                                         build-case-lambda
                                                                         build-simple-lambda
                                                                         build-global-definition
                                                                         maybe-name-value!
                                                                         build-global-assignment
                                                                         build-global-reference
                                                                         analyze-variable
                                                                         build-lexical-assignment
                                                                         build-lexical-reference
                                                                         build-dynlet
                                                                         build-conditional
                                                                         build-application
                                                                         build-void
                                                                         decorate-source
                                                                         get-global-definition-hook
                                                                         put-global-definition-hook
                                                                         gensym-hook
                                                                         local-eval-hook
                                                                         top-level-eval-hook
                                                                         fx<
                                                                         fx=
                                                                         fx-
                                                                         fx+
                                                                         *mode*)
                                                                       ((top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top))
                                                                       ("i11265"
                                                                        "i11263"
                                                                        "i11261"
                                                                        "i11259"
                                                                        "i11257"
                                                                        "i11255"
                                                                        "i11253"
                                                                        "i11251"
                                                                        "i11249"
                                                                        "i11247"
                                                                        "i11245"
                                                                        "i11243"
                                                                        "i11241"
                                                                        "i11239"
                                                                        "i11237"
                                                                        "i11235"
                                                                        "i11233"
                                                                        "i11231"
                                                                        "i11229"
                                                                        "i11227"
                                                                        "i11225"
                                                                        "i11223"
                                                                        "i11221"
                                                                        "i11219"
                                                                        "i11217"
                                                                        "i11215"
                                                                        "i11213"
                                                                        "i11211"
                                                                        "i11209"
                                                                        "i11207"
                                                                        "i11205"
                                                                        "i11203"
                                                                        "i11201"
                                                                        "i11199"
                                                                        "i11197"
                                                                        "i11195"
                                                                        "i11194"
                                                                        "i11193"
                                                                        "i11191"
                                                                        "i11190"
                                                                        "i11189"
                                                                        "i11188"
                                                                        "i11187"
                                                                        "i11185"
                                                                        "i11183"
                                                                        "i11181"
                                                                        "i11179"
                                                                        "i11177"
                                                                        "i11175"
                                                                        "i11173"
                                                                        "i11171"
                                                                        "i11168"
                                                                        "i11166"
                                                                        "i11165"
                                                                        "i11164"
                                                                        "i11163"
                                                                        "i11162"
                                                                        "i11161"
                                                                        "i11159"
                                                                        "i11157"
                                                                        "i11155"
                                                                        "i11153"
                                                                        "i11152"
                                                                        "i11150"
                                                                        "i11148"
                                                                        "i11146"
                                                                        "i11144"
                                                                        "i11142"
                                                                        "i11140"
                                                                        "i11138"
                                                                        "i11137"
                                                                        "i11135"
                                                                        "i11133"
                                                                        "i11132"
                                                                        "i11131"
                                                                        "i11129"
                                                                        "i11128"
                                                                        "i11126"
                                                                        "i11124"
                                                                        "i11122"
                                                                        "i11120"
                                                                        "i11118"
                                                                        "i11116"
                                                                        "i11114"
                                                                        "i11112"
                                                                        "i11110"
                                                                        "i11108"
                                                                        "i11106"
                                                                        "i11104"
                                                                        "i11102"
                                                                        "i11100"
                                                                        "i11098"
                                                                        "i11096"
                                                                        "i11094"
                                                                        "i11092"
                                                                        "i11090"
                                                                        "i11088"
                                                                        "i11086"
                                                                        "i11084"
                                                                        "i11082"
                                                                        "i11080"
                                                                        "i11078"
                                                                        "i11076"
                                                                        "i11074"
                                                                        "i11072"
                                                                        "i11070"
                                                                        "i11068"
                                                                        "i11066"
                                                                        "i11064"
                                                                        "i11063"
                                                                        "i11061"
                                                                        "i11059"
                                                                        "i11057"
                                                                        "i11055"
                                                                        "i11053"
                                                                        "i11051"
                                                                        "i11049"))
                                                                     #(ribcage
                                                                       (define-structure
                                                                         and-map*)
                                                                       ((top)
                                                                        (top))
                                                                       ("i10952"
                                                                        "i10950")))
                                                                    (hygiene
                                                                      guile))))
                                                          #{ropt\ 11916}#)))
                                                #{tmp\ 11922}#)
                                         ((lambda (#{tmp\ 11931}#)
                                            (if (if #{tmp\ 11931}#
                                                  (apply (lambda (#{a\ 11935}#
                                                                  #{init\ 11936}#
                                                                  #{b\ 11937}#)
                                                           (#{id?\ 11151}#
                                                             #{a\ 11935}#))
                                                         #{tmp\ 11931}#)
                                                  #f)
                                              (apply (lambda (#{a\ 11941}#
                                                              #{init\ 11942}#
                                                              #{b\ 11943}#)
                                                       (#{opt\ 11774}#
                                                         #{b\ 11943}#
                                                         #{req\ 11915}#
                                                         (cons (list #{a\ 11941}#
                                                                     #{init\ 11942}#)
                                                               #{ropt\ 11916}#)))
                                                     #{tmp\ 11931}#)
                                              ((lambda (#{tmp\ 11944}#)
                                                 (if (if #{tmp\ 11944}#
                                                       (apply (lambda (#{a\ 11947}#
                                                                       #{b\ 11948}#)
                                                                (eq? (syntax->datum
                                                                       #{a\ 11947}#)
                                                                     #:key))
                                                              #{tmp\ 11944}#)
                                                       #f)
                                                   (apply (lambda (#{a\ 11951}#
                                                                   #{b\ 11952}#)
                                                            (#{key\ 11776}#
                                                              #{b\ 11952}#
                                                              #{req\ 11915}#
                                                              (reverse
                                                                #{ropt\ 11916}#)
                                                              '()))
                                                          #{tmp\ 11944}#)
                                                   ((lambda (#{tmp\ 11953}#)
                                                      (if (if #{tmp\ 11953}#
                                                            (apply (lambda (#{a\ 11956}#
                                                                            #{b\ 11957}#)
                                                                     (eq? (syntax->datum
                                                                            #{a\ 11956}#)
                                                                          #:rest))
                                                                   #{tmp\ 11953}#)
                                                            #f)
                                                        (apply (lambda (#{a\ 11960}#
                                                                        #{b\ 11961}#)
                                                                 (#{rest\ 11778}#
                                                                   #{b\ 11961}#
                                                                   #{req\ 11915}#
                                                                   (reverse
                                                                     #{ropt\ 11916}#)
                                                                   '()))
                                                               #{tmp\ 11953}#)
                                                        ((lambda (#{tmp\ 11962}#)
                                                           (if (if #{tmp\ 11962}#
                                                                 (apply (lambda (#{r\ 11964}#)
                                                                          (#{id?\ 11151}#
                                                                            #{r\ 11964}#))
                                                                        #{tmp\ 11962}#)
                                                                 #f)
                                                             (apply (lambda (#{r\ 11966}#)
                                                                      (#{rest\ 11778}#
                                                                        #{r\ 11966}#
                                                                        #{req\ 11915}#
                                                                        (reverse
                                                                          #{ropt\ 11916}#)
                                                                        '()))
                                                                    #{tmp\ 11962}#)
                                                             ((lambda (#{else\ 11968}#)
                                                                (syntax-violation
                                                                  'lambda*
                                                                  "invalid optional argument list"
                                                                  #{orig-args\ 11769}#
                                                                  #{args\ 11914}#))
                                                              #{tmp\ 11920}#)))
                                                         (list #{tmp\ 11920}#))))
                                                    ($sc-dispatch
                                                      #{tmp\ 11920}#
                                                      '(any any)))))
                                               ($sc-dispatch
                                                 #{tmp\ 11920}#
                                                 '(any . any)))))
                                          ($sc-dispatch
                                            #{tmp\ 11920}#
                                            '((any any) . any)))))
                                     ($sc-dispatch
                                       #{tmp\ 11920}#
                                       '(any . any)))))
                                ($sc-dispatch #{tmp\ 11920}# (quote ()))))
                             #{args\ 11914}#)))
                        (#{req\ 11772}#
                          (lambda (#{args\ 11969}# #{rreq\ 11970}#)
                            ((lambda (#{tmp\ 11973}#)
                               ((lambda (#{tmp\ 11974}#)
                                  (if #{tmp\ 11974}#
                                    (apply (lambda ()
                                             (#{check\ 11780}#
                                               (reverse #{rreq\ 11970}#)
                                               '()
                                               #f
                                               '()))
                                           #{tmp\ 11974}#)
                                    ((lambda (#{tmp\ 11975}#)
                                       (if (if #{tmp\ 11975}#
                                             (apply (lambda (#{a\ 11978}#
                                                             #{b\ 11979}#)
                                                      (#{id?\ 11151}#
                                                        #{a\ 11978}#))
                                                    #{tmp\ 11975}#)
                                             #f)
                                         (apply (lambda (#{a\ 11982}#
                                                         #{b\ 11983}#)
                                                  (#{req\ 11772}#
                                                    #{b\ 11983}#
                                                    (cons #{a\ 11982}#
                                                          #{rreq\ 11970}#)))
                                                #{tmp\ 11975}#)
                                         ((lambda (#{tmp\ 11984}#)
                                            (if (if #{tmp\ 11984}#
                                                  (apply (lambda (#{a\ 11987}#
                                                                  #{b\ 11988}#)
                                                           (eq? (syntax->datum
                                                                  #{a\ 11987}#)
                                                                #:optional))
                                                         #{tmp\ 11984}#)
                                                  #f)
                                              (apply (lambda (#{a\ 11991}#
                                                              #{b\ 11992}#)
                                                       (#{opt\ 11774}#
                                                         #{b\ 11992}#
                                                         (reverse
                                                           #{rreq\ 11970}#)
                                                         '()))
                                                     #{tmp\ 11984}#)
                                              ((lambda (#{tmp\ 11993}#)
                                                 (if (if #{tmp\ 11993}#
                                                       (apply (lambda (#{a\ 11996}#
                                                                       #{b\ 11997}#)
                                                                (eq? (syntax->datum
                                                                       #{a\ 11996}#)
                                                                     #:key))
                                                              #{tmp\ 11993}#)
                                                       #f)
                                                   (apply (lambda (#{a\ 12000}#
                                                                   #{b\ 12001}#)
                                                            (#{key\ 11776}#
                                                              #{b\ 12001}#
                                                              (reverse
                                                                #{rreq\ 11970}#)
                                                              '()
                                                              '()))
                                                          #{tmp\ 11993}#)
                                                   ((lambda (#{tmp\ 12002}#)
                                                      (if (if #{tmp\ 12002}#
                                                            (apply (lambda (#{a\ 12005}#
                                                                            #{b\ 12006}#)
                                                                     (eq? (syntax->datum
                                                                            #{a\ 12005}#)
                                                                          #:rest))
                                                                   #{tmp\ 12002}#)
                                                            #f)
                                                        (apply (lambda (#{a\ 12009}#
                                                                        #{b\ 12010}#)
                                                                 (#{rest\ 11778}#
                                                                   #{b\ 12010}#
                                                                   (reverse
                                                                     #{rreq\ 11970}#)
                                                                   '()
                                                                   '()))
                                                               #{tmp\ 12002}#)
                                                        ((lambda (#{tmp\ 12011}#)
                                                           (if (if #{tmp\ 12011}#
                                                                 (apply (lambda (#{r\ 12013}#)
                                                                          (#{id?\ 11151}#
                                                                            #{r\ 12013}#))
                                                                        #{tmp\ 12011}#)
                                                                 #f)
                                                             (apply (lambda (#{r\ 12015}#)
                                                                      (#{rest\ 11778}#
                                                                        #{r\ 12015}#
                                                                        (reverse
                                                                          #{rreq\ 11970}#)
                                                                        '()
                                                                        '()))
                                                                    #{tmp\ 12011}#)
                                                             ((lambda (#{else\ 12017}#)
                                                                (syntax-violation
                                                                  'lambda*
                                                                  "invalid argument list"
                                                                  #{orig-args\ 11769}#
                                                                  #{args\ 11969}#))
                                                              #{tmp\ 11973}#)))
                                                         (list #{tmp\ 11973}#))))
                                                    ($sc-dispatch
                                                      #{tmp\ 11973}#
                                                      '(any any)))))
                                               ($sc-dispatch
                                                 #{tmp\ 11973}#
                                                 '(any . any)))))
                                          ($sc-dispatch
                                            #{tmp\ 11973}#
                                            '(any . any)))))
                                     ($sc-dispatch
                                       #{tmp\ 11973}#
                                       '(any . any)))))
                                ($sc-dispatch #{tmp\ 11973}# (quote ()))))
                             #{args\ 11969}#))))
                 (#{req\ 11772}# #{orig-args\ 11769}# (quote ())))))
           (#{chi-simple-lambda\ 11256}#
             (lambda (#{e\ 12018}#
                      #{r\ 12019}#
                      #{w\ 12020}#
                      #{s\ 12021}#
                      #{mod\ 12022}#
                      #{req\ 12023}#
                      #{rest\ 12024}#
                      #{meta\ 12025}#
                      #{body\ 12026}#)
               (let ((#{ids\ 12038}#
                       (if #{rest\ 12024}#
                         (append #{req\ 12023}# (list #{rest\ 12024}#))
                         #{req\ 12023}#)))
                 (let ((#{vars\ 12040}#
                         (map #{gen-var\ 11264}# #{ids\ 12038}#)))
                   (let ((#{labels\ 12042}#
                           (#{gen-labels\ 11169}# #{ids\ 12038}#)))
                     (#{build-simple-lambda\ 11093}#
                       #{s\ 12021}#
                       (map syntax->datum #{req\ 12023}#)
                       (if #{rest\ 12024}#
                         (syntax->datum #{rest\ 12024}#)
                         #f)
                       #{vars\ 12040}#
                       #{meta\ 12025}#
                       (#{chi-body\ 11244}#
                         #{body\ 12026}#
                         (#{source-wrap\ 11222}#
                           #{e\ 12018}#
                           #{w\ 12020}#
                           #{s\ 12021}#
                           #{mod\ 12022}#)
                         (#{extend-var-env\ 11141}#
                           #{labels\ 12042}#
                           #{vars\ 12040}#
                           #{r\ 12019}#)
                         (#{make-binding-wrap\ 11198}#
                           #{ids\ 12038}#
                           #{labels\ 12042}#
                           #{w\ 12020}#)
                         #{mod\ 12022}#)))))))
           (#{lambda-formals\ 11254}#
             (lambda (#{orig-args\ 12045}#)
               (letrec ((#{check\ 12050}#
                          (lambda (#{req\ 12051}# #{rest\ 12052}#)
                            (if (#{distinct-bound-ids?\ 11216}#
                                  (if #{rest\ 12052}#
                                    (cons #{rest\ 12052}# #{req\ 12051}#)
                                    #{req\ 12051}#))
                              (values #{req\ 12051}# #f #{rest\ 12052}# #f)
                              (syntax-violation
                                'lambda
                                "duplicate identifier in argument list"
                                #{orig-args\ 12045}#))))
                        (#{req\ 12048}#
                          (lambda (#{args\ 12058}# #{rreq\ 12059}#)
                            ((lambda (#{tmp\ 12062}#)
                               ((lambda (#{tmp\ 12063}#)
                                  (if #{tmp\ 12063}#
                                    (apply (lambda ()
                                             (#{check\ 12050}#
                                               (reverse #{rreq\ 12059}#)
                                               #f))
                                           #{tmp\ 12063}#)
                                    ((lambda (#{tmp\ 12064}#)
                                       (if (if #{tmp\ 12064}#
                                             (apply (lambda (#{a\ 12067}#
                                                             #{b\ 12068}#)
                                                      (#{id?\ 11151}#
                                                        #{a\ 12067}#))
                                                    #{tmp\ 12064}#)
                                             #f)
                                         (apply (lambda (#{a\ 12071}#
                                                         #{b\ 12072}#)
                                                  (#{req\ 12048}#
                                                    #{b\ 12072}#
                                                    (cons #{a\ 12071}#
                                                          #{rreq\ 12059}#)))
                                                #{tmp\ 12064}#)
                                         ((lambda (#{tmp\ 12073}#)
                                            (if (if #{tmp\ 12073}#
                                                  (apply (lambda (#{r\ 12075}#)
                                                           (#{id?\ 11151}#
                                                             #{r\ 12075}#))
                                                         #{tmp\ 12073}#)
                                                  #f)
                                              (apply (lambda (#{r\ 12077}#)
                                                       (#{check\ 12050}#
                                                         (reverse
                                                           #{rreq\ 12059}#)
                                                         #{r\ 12077}#))
                                                     #{tmp\ 12073}#)
                                              ((lambda (#{else\ 12079}#)
                                                 (syntax-violation
                                                   'lambda
                                                   "invalid argument list"
                                                   #{orig-args\ 12045}#
                                                   #{args\ 12058}#))
                                               #{tmp\ 12062}#)))
                                          (list #{tmp\ 12062}#))))
                                     ($sc-dispatch
                                       #{tmp\ 12062}#
                                       '(any . any)))))
                                ($sc-dispatch #{tmp\ 12062}# (quote ()))))
                             #{args\ 12058}#))))
                 (#{req\ 12048}# #{orig-args\ 12045}# (quote ())))))
           (#{ellipsis?\ 11252}#
             (lambda (#{x\ 12080}#)
               (if (#{nonsymbol-id?\ 11149}# #{x\ 12080}#)
                 (#{free-id=?\ 11210}#
                   #{x\ 12080}#
                   '#(syntax-object
                      ...
                      ((top)
                       #(ribcage () () ())
                       #(ribcage () () ())
                       #(ribcage #(x) #((top)) #("i12081"))
                       #(ribcage
                         (lambda-var-list
                           gen-var
                           strip
                           chi-lambda-case
                           lambda*-formals
                           chi-simple-lambda
                           lambda-formals
                           ellipsis?
                           chi-void
                           eval-local-transformer
                           chi-local-syntax
                           chi-body
                           chi-macro
                           chi-application
                           chi-expr
                           chi
                           chi-top
                           syntax-type
                           chi-when-list
                           chi-install-global
                           chi-top-sequence
                           chi-sequence
                           source-wrap
                           wrap
                           bound-id-member?
                           distinct-bound-ids?
                           valid-bound-ids?
                           bound-id=?
                           free-id=?
                           id-var-name
                           same-marks?
                           join-marks
                           join-wraps
                           smart-append
                           make-binding-wrap
                           extend-ribcage!
                           make-empty-ribcage
                           new-mark
                           anti-mark
                           the-anti-mark
                           top-marked?
                           top-wrap
                           empty-wrap
                           set-ribcage-labels!
                           set-ribcage-marks!
                           set-ribcage-symnames!
                           ribcage-labels
                           ribcage-marks
                           ribcage-symnames
                           ribcage?
                           make-ribcage
                           gen-labels
                           gen-label
                           make-rename
                           rename-marks
                           rename-new
                           rename-old
                           subst-rename?
                           wrap-subst
                           wrap-marks
                           make-wrap
                           id-sym-name&marks
                           id-sym-name
                           id?
                           nonsymbol-id?
                           global-extend
                           lookup
                           macros-only-env
                           extend-var-env
                           extend-env
                           null-env
                           binding-value
                           binding-type
                           make-binding
                           arg-check
                           source-annotation
                           no-source
                           set-syntax-object-module!
                           set-syntax-object-wrap!
                           set-syntax-object-expression!
                           syntax-object-module
                           syntax-object-wrap
                           syntax-object-expression
                           syntax-object?
                           make-syntax-object
                           build-lexical-var
                           build-letrec
                           build-named-let
                           build-let
                           build-sequence
                           build-data
                           build-primref
                           build-lambda-case
                           build-case-lambda
                           build-simple-lambda
                           build-global-definition
                           maybe-name-value!
                           build-global-assignment
                           build-global-reference
                           analyze-variable
                           build-lexical-assignment
                           build-lexical-reference
                           build-dynlet
                           build-conditional
                           build-application
                           build-void
                           decorate-source
                           get-global-definition-hook
                           put-global-definition-hook
                           gensym-hook
                           local-eval-hook
                           top-level-eval-hook
                           fx<
                           fx=
                           fx-
                           fx+
                           *mode*)
                         ((top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top))
                         ("i11265"
                          "i11263"
                          "i11261"
                          "i11259"
                          "i11257"
                          "i11255"
                          "i11253"
                          "i11251"
                          "i11249"
                          "i11247"
                          "i11245"
                          "i11243"
                          "i11241"
                          "i11239"
                          "i11237"
                          "i11235"
                          "i11233"
                          "i11231"
                          "i11229"
                          "i11227"
                          "i11225"
                          "i11223"
                          "i11221"
                          "i11219"
                          "i11217"
                          "i11215"
                          "i11213"
                          "i11211"
                          "i11209"
                          "i11207"
                          "i11205"
                          "i11203"
                          "i11201"
                          "i11199"
                          "i11197"
                          "i11195"
                          "i11194"
                          "i11193"
                          "i11191"
                          "i11190"
                          "i11189"
                          "i11188"
                          "i11187"
                          "i11185"
                          "i11183"
                          "i11181"
                          "i11179"
                          "i11177"
                          "i11175"
                          "i11173"
                          "i11171"
                          "i11168"
                          "i11166"
                          "i11165"
                          "i11164"
                          "i11163"
                          "i11162"
                          "i11161"
                          "i11159"
                          "i11157"
                          "i11155"
                          "i11153"
                          "i11152"
                          "i11150"
                          "i11148"
                          "i11146"
                          "i11144"
                          "i11142"
                          "i11140"
                          "i11138"
                          "i11137"
                          "i11135"
                          "i11133"
                          "i11132"
                          "i11131"
                          "i11129"
                          "i11128"
                          "i11126"
                          "i11124"
                          "i11122"
                          "i11120"
                          "i11118"
                          "i11116"
                          "i11114"
                          "i11112"
                          "i11110"
                          "i11108"
                          "i11106"
                          "i11104"
                          "i11102"
                          "i11100"
                          "i11098"
                          "i11096"
                          "i11094"
                          "i11092"
                          "i11090"
                          "i11088"
                          "i11086"
                          "i11084"
                          "i11082"
                          "i11080"
                          "i11078"
                          "i11076"
                          "i11074"
                          "i11072"
                          "i11070"
                          "i11068"
                          "i11066"
                          "i11064"
                          "i11063"
                          "i11061"
                          "i11059"
                          "i11057"
                          "i11055"
                          "i11053"
                          "i11051"
                          "i11049"))
                       #(ribcage
                         (define-structure and-map*)
                         ((top) (top))
                         ("i10952" "i10950")))
                      (hygiene guile)))
                 #f)))
           (#{chi-void\ 11250}#
             (lambda () (#{build-void\ 11071}# #f)))
           (#{eval-local-transformer\ 11248}#
             (lambda (#{expanded\ 12085}# #{mod\ 12086}#)
               (let ((#{p\ 12090}#
                       (#{local-eval-hook\ 11062}#
                         #{expanded\ 12085}#
                         #{mod\ 12086}#)))
                 (if (procedure? #{p\ 12090}#)
                   (cons #{p\ 12090}#
                         (module-name (current-module)))
                   (syntax-violation
                     #f
                     "nonprocedure transformer"
                     #{p\ 12090}#)))))
           (#{chi-local-syntax\ 11246}#
             (lambda (#{rec?\ 12091}#
                      #{e\ 12092}#
                      #{r\ 12093}#
                      #{w\ 12094}#
                      #{s\ 12095}#
                      #{mod\ 12096}#
                      #{k\ 12097}#)
               ((lambda (#{tmp\ 12105}#)
                  ((lambda (#{tmp\ 12106}#)
                     (if #{tmp\ 12106}#
                       (apply (lambda (#{_\ 12112}#
                                       #{id\ 12113}#
                                       #{val\ 12114}#
                                       #{e1\ 12115}#
                                       #{e2\ 12116}#)
                                (let ((#{ids\ 12118}# #{id\ 12113}#))
                                  (if (not (#{valid-bound-ids?\ 11214}#
                                             #{ids\ 12118}#))
                                    (syntax-violation
                                      #f
                                      "duplicate bound keyword"
                                      #{e\ 12092}#)
                                    (let ((#{labels\ 12121}#
                                            (#{gen-labels\ 11169}#
                                              #{ids\ 12118}#)))
                                      (let ((#{new-w\ 12123}#
                                              (#{make-binding-wrap\ 11198}#
                                                #{ids\ 12118}#
                                                #{labels\ 12121}#
                                                #{w\ 12094}#)))
                                        (#{k\ 12097}#
                                          (cons #{e1\ 12115}# #{e2\ 12116}#)
                                          (#{extend-env\ 11139}#
                                            #{labels\ 12121}#
                                            (let ((#{w\ 12127}#
                                                    (if #{rec?\ 12091}#
                                                      #{new-w\ 12123}#
                                                      #{w\ 12094}#))
                                                  (#{trans-r\ 12128}#
                                                    (#{macros-only-env\ 11143}#
                                                      #{r\ 12093}#)))
                                              (map (lambda (#{x\ 12129}#)
                                                     (cons 'macro
                                                           (#{eval-local-transformer\ 11248}#
                                                             (#{chi\ 11236}#
                                                               #{x\ 12129}#
                                                               #{trans-r\ 12128}#
                                                               #{w\ 12127}#
                                                               #{mod\ 12096}#)
                                                             #{mod\ 12096}#)))
                                                   #{val\ 12114}#))
                                            #{r\ 12093}#)
                                          #{new-w\ 12123}#
                                          #{s\ 12095}#
                                          #{mod\ 12096}#))))))
                              #{tmp\ 12106}#)
                       ((lambda (#{_\ 12134}#)
                          (syntax-violation
                            #f
                            "bad local syntax definition"
                            (#{source-wrap\ 11222}#
                              #{e\ 12092}#
                              #{w\ 12094}#
                              #{s\ 12095}#
                              #{mod\ 12096}#)))
                        #{tmp\ 12105}#)))
                   ($sc-dispatch
                     #{tmp\ 12105}#
                     '(any #(each (any any)) any . each-any))))
                #{e\ 12092}#)))
           (#{chi-body\ 11244}#
             (lambda (#{body\ 12135}#
                      #{outer-form\ 12136}#
                      #{r\ 12137}#
                      #{w\ 12138}#
                      #{mod\ 12139}#)
               (let ((#{r\ 12147}#
                       (cons '("placeholder" placeholder)
                             #{r\ 12137}#)))
                 (let ((#{ribcage\ 12149}#
                         (#{make-ribcage\ 11172}#
                           '()
                           '()
                           '())))
                   (let ((#{w\ 12152}#
                           (#{make-wrap\ 11156}#
                             (#{wrap-marks\ 11158}# #{w\ 12138}#)
                             (cons #{ribcage\ 12149}#
                                   (#{wrap-subst\ 11160}# #{w\ 12138}#)))))
                     (letrec ((#{parse\ 12161}#
                                (lambda (#{body\ 12162}#
                                         #{ids\ 12163}#
                                         #{labels\ 12164}#
                                         #{var-ids\ 12165}#
                                         #{vars\ 12166}#
                                         #{vals\ 12167}#
                                         #{bindings\ 12168}#)
                                  (if (null? #{body\ 12162}#)
                                    (syntax-violation
                                      #f
                                      "no expressions in body"
                                      #{outer-form\ 12136}#)
                                    (let ((#{e\ 12173}# (cdar #{body\ 12162}#))
                                          (#{er\ 12174}#
                                            (caar #{body\ 12162}#)))
                                      (call-with-values
                                        (lambda ()
                                          (#{syntax-type\ 11232}#
                                            #{e\ 12173}#
                                            #{er\ 12174}#
                                            '(())
                                            (#{source-annotation\ 11130}#
                                              #{er\ 12174}#)
                                            #{ribcage\ 12149}#
                                            #{mod\ 12139}#
                                            #f))
                                        (lambda (#{type\ 12176}#
                                                 #{value\ 12177}#
                                                 #{e\ 12178}#
                                                 #{w\ 12179}#
                                                 #{s\ 12180}#
                                                 #{mod\ 12181}#)
                                          (if (memv #{type\ 12176}#
                                                    '(define-form))
                                            (let ((#{id\ 12191}#
                                                    (#{wrap\ 11220}#
                                                      #{value\ 12177}#
                                                      #{w\ 12179}#
                                                      #{mod\ 12181}#))
                                                  (#{label\ 12192}#
                                                    (#{gen-label\ 11167}#)))
                                              (let ((#{var\ 12194}#
                                                      (#{gen-var\ 11264}#
                                                        #{id\ 12191}#)))
                                                (begin
                                                  (#{extend-ribcage!\ 11196}#
                                                    #{ribcage\ 12149}#
                                                    #{id\ 12191}#
                                                    #{label\ 12192}#)
                                                  (#{parse\ 12161}#
                                                    (cdr #{body\ 12162}#)
                                                    (cons #{id\ 12191}#
                                                          #{ids\ 12163}#)
                                                    (cons #{label\ 12192}#
                                                          #{labels\ 12164}#)
                                                    (cons #{id\ 12191}#
                                                          #{var-ids\ 12165}#)
                                                    (cons #{var\ 12194}#
                                                          #{vars\ 12166}#)
                                                    (cons (cons #{er\ 12174}#
                                                                (#{wrap\ 11220}#
                                                                  #{e\ 12178}#
                                                                  #{w\ 12179}#
                                                                  #{mod\ 12181}#))
                                                          #{vals\ 12167}#)
                                                    (cons (cons 'lexical
                                                                #{var\ 12194}#)
                                                          #{bindings\ 12168}#)))))
                                            (if (memv #{type\ 12176}#
                                                      '(define-syntax-form))
                                              (let ((#{id\ 12199}#
                                                      (#{wrap\ 11220}#
                                                        #{value\ 12177}#
                                                        #{w\ 12179}#
                                                        #{mod\ 12181}#))
                                                    (#{label\ 12200}#
                                                      (#{gen-label\ 11167}#)))
                                                (begin
                                                  (#{extend-ribcage!\ 11196}#
                                                    #{ribcage\ 12149}#
                                                    #{id\ 12199}#
                                                    #{label\ 12200}#)
                                                  (#{parse\ 12161}#
                                                    (cdr #{body\ 12162}#)
                                                    (cons #{id\ 12199}#
                                                          #{ids\ 12163}#)
                                                    (cons #{label\ 12200}#
                                                          #{labels\ 12164}#)
                                                    #{var-ids\ 12165}#
                                                    #{vars\ 12166}#
                                                    #{vals\ 12167}#
                                                    (cons (cons 'macro
                                                                (cons #{er\ 12174}#
                                                                      (#{wrap\ 11220}#
                                                                        #{e\ 12178}#
                                                                        #{w\ 12179}#
                                                                        #{mod\ 12181}#)))
                                                          #{bindings\ 12168}#))))
                                              (if (memv #{type\ 12176}#
                                                        '(begin-form))
                                                ((lambda (#{tmp\ 12203}#)
                                                   ((lambda (#{tmp\ 12204}#)
                                                      (if #{tmp\ 12204}#
                                                        (apply (lambda (#{_\ 12207}#
                                                                        #{e1\ 12208}#)
                                                                 (#{parse\ 12161}#
                                                                   (letrec ((#{f\ 12211}#
                                                                              (lambda (#{forms\ 12212}#)
                                                                                (if (null? #{forms\ 12212}#)
                                                                                  (cdr #{body\ 12162}#)
                                                                                  (cons (cons #{er\ 12174}#
                                                                                              (#{wrap\ 11220}#
                                                                                                (car #{forms\ 12212}#)
                                                                                                #{w\ 12179}#
                                                                                                #{mod\ 12181}#))
                                                                                        (#{f\ 12211}#
                                                                                          (cdr #{forms\ 12212}#)))))))
                                                                     (#{f\ 12211}#
                                                                       #{e1\ 12208}#))
                                                                   #{ids\ 12163}#
                                                                   #{labels\ 12164}#
                                                                   #{var-ids\ 12165}#
                                                                   #{vars\ 12166}#
                                                                   #{vals\ 12167}#
                                                                   #{bindings\ 12168}#))
                                                               #{tmp\ 12204}#)
                                                        (syntax-violation
                                                          #f
                                                          "source expression failed to match any pattern"
                                                          #{tmp\ 12203}#)))
                                                    ($sc-dispatch
                                                      #{tmp\ 12203}#
                                                      '(any . each-any))))
                                                 #{e\ 12178}#)
                                                (if (memv #{type\ 12176}#
                                                          '(local-syntax-form))
                                                  (#{chi-local-syntax\ 11246}#
                                                    #{value\ 12177}#
                                                    #{e\ 12178}#
                                                    #{er\ 12174}#
                                                    #{w\ 12179}#
                                                    #{s\ 12180}#
                                                    #{mod\ 12181}#
                                                    (lambda (#{forms\ 12215}#
                                                             #{er\ 12216}#
                                                             #{w\ 12217}#
                                                             #{s\ 12218}#
                                                             #{mod\ 12219}#)
                                                      (#{parse\ 12161}#
                                                        (letrec ((#{f\ 12227}#
                                                                   (lambda (#{forms\ 12228}#)
                                                                     (if (null? #{forms\ 12228}#)
                                                                       (cdr #{body\ 12162}#)
                                                                       (cons (cons #{er\ 12216}#
                                                                                   (#{wrap\ 11220}#
                                                                                     (car #{forms\ 12228}#)
                                                                                     #{w\ 12217}#
                                                                                     #{mod\ 12219}#))
                                                                             (#{f\ 12227}#
                                                                               (cdr #{forms\ 12228}#)))))))
                                                          (#{f\ 12227}#
                                                            #{forms\ 12215}#))
                                                        #{ids\ 12163}#
                                                        #{labels\ 12164}#
                                                        #{var-ids\ 12165}#
                                                        #{vars\ 12166}#
                                                        #{vals\ 12167}#
                                                        #{bindings\ 12168}#)))
                                                  (if (null? #{ids\ 12163}#)
                                                    (#{build-sequence\ 11103}#
                                                      #f
                                                      (map (lambda (#{x\ 12231}#)
                                                             (#{chi\ 11236}#
                                                               (cdr #{x\ 12231}#)
                                                               (car #{x\ 12231}#)
                                                               '(())
                                                               #{mod\ 12181}#))
                                                           (cons (cons #{er\ 12174}#
                                                                       (#{source-wrap\ 11222}#
                                                                         #{e\ 12178}#
                                                                         #{w\ 12179}#
                                                                         #{s\ 12180}#
                                                                         #{mod\ 12181}#))
                                                                 (cdr #{body\ 12162}#))))
                                                    (begin
                                                      (if (not (#{valid-bound-ids?\ 11214}#
                                                                 #{ids\ 12163}#))
                                                        (syntax-violation
                                                          #f
                                                          "invalid or duplicate identifier in definition"
                                                          #{outer-form\ 12136}#))
                                                      (letrec ((#{loop\ 12238}#
                                                                 (lambda (#{bs\ 12239}#
                                                                          #{er-cache\ 12240}#
                                                                          #{r-cache\ 12241}#)
                                                                   (if (not (null? #{bs\ 12239}#))
                                                                     (let ((#{b\ 12244}#
                                                                             (car #{bs\ 12239}#)))
                                                                       (if (eq? (car #{b\ 12244}#)
                                                                                'macro)
                                                                         (let ((#{er\ 12247}#
                                                                                 (cadr #{b\ 12244}#)))
                                                                           (let ((#{r-cache\ 12249}#
                                                                                   (if (eq? #{er\ 12247}#
                                                                                            #{er-cache\ 12240}#)
                                                                                     #{r-cache\ 12241}#
                                                                                     (#{macros-only-env\ 11143}#
                                                                                       #{er\ 12247}#))))
                                                                             (begin
                                                                               (set-cdr!
                                                                                 #{b\ 12244}#
                                                                                 (#{eval-local-transformer\ 11248}#
                                                                                   (#{chi\ 11236}#
                                                                                     (cddr #{b\ 12244}#)
                                                                                     #{r-cache\ 12249}#
                                                                                     '(())
                                                                                     #{mod\ 12181}#)
                                                                                   #{mod\ 12181}#))
                                                                               (#{loop\ 12238}#
                                                                                 (cdr #{bs\ 12239}#)
                                                                                 #{er\ 12247}#
                                                                                 #{r-cache\ 12249}#))))
                                                                         (#{loop\ 12238}#
                                                                           (cdr #{bs\ 12239}#)
                                                                           #{er-cache\ 12240}#
                                                                           #{r-cache\ 12241}#)))))))
                                                        (#{loop\ 12238}#
                                                          #{bindings\ 12168}#
                                                          #f
                                                          #f))
                                                      (set-cdr!
                                                        #{r\ 12147}#
                                                        (#{extend-env\ 11139}#
                                                          #{labels\ 12164}#
                                                          #{bindings\ 12168}#
                                                          (cdr #{r\ 12147}#)))
                                                      (#{build-letrec\ 11109}#
                                                        #f
                                                        (map syntax->datum
                                                             #{var-ids\ 12165}#)
                                                        #{vars\ 12166}#
                                                        (map (lambda (#{x\ 12252}#)
                                                               (#{chi\ 11236}#
                                                                 (cdr #{x\ 12252}#)
                                                                 (car #{x\ 12252}#)
                                                                 '(())
                                                                 #{mod\ 12181}#))
                                                             #{vals\ 12167}#)
                                                        (#{build-sequence\ 11103}#
                                                          #f
                                                          (map (lambda (#{x\ 12256}#)
                                                                 (#{chi\ 11236}#
                                                                   (cdr #{x\ 12256}#)
                                                                   (car #{x\ 12256}#)
                                                                   '(())
                                                                   #{mod\ 12181}#))
                                                               (cons (cons #{er\ 12174}#
                                                                           (#{source-wrap\ 11222}#
                                                                             #{e\ 12178}#
                                                                             #{w\ 12179}#
                                                                             #{s\ 12180}#
                                                                             #{mod\ 12181}#))
                                                                     (cdr #{body\ 12162}#))))))))))))))))))
                       (#{parse\ 12161}#
                         (map (lambda (#{x\ 12169}#)
                                (cons #{r\ 12147}#
                                      (#{wrap\ 11220}#
                                        #{x\ 12169}#
                                        #{w\ 12152}#
                                        #{mod\ 12139}#)))
                              #{body\ 12135}#)
                         '()
                         '()
                         '()
                         '()
                         '()
                         '())))))))
           (#{chi-macro\ 11242}#
             (lambda (#{p\ 12259}#
                      #{e\ 12260}#
                      #{r\ 12261}#
                      #{w\ 12262}#
                      #{rib\ 12263}#
                      #{mod\ 12264}#)
               (letrec ((#{rebuild-macro-output\ 12272}#
                          (lambda (#{x\ 12273}# #{m\ 12274}#)
                            (if (pair? #{x\ 12273}#)
                              (cons (#{rebuild-macro-output\ 12272}#
                                      (car #{x\ 12273}#)
                                      #{m\ 12274}#)
                                    (#{rebuild-macro-output\ 12272}#
                                      (cdr #{x\ 12273}#)
                                      #{m\ 12274}#))
                              (if (#{syntax-object?\ 11115}# #{x\ 12273}#)
                                (let ((#{w\ 12282}#
                                        (#{syntax-object-wrap\ 11119}#
                                          #{x\ 12273}#)))
                                  (let ((#{ms\ 12285}#
                                          (#{wrap-marks\ 11158}# #{w\ 12282}#))
                                        (#{s\ 12286}#
                                          (#{wrap-subst\ 11160}#
                                            #{w\ 12282}#)))
                                    (if (if (pair? #{ms\ 12285}#)
                                          (eq? (car #{ms\ 12285}#) #f)
                                          #f)
                                      (#{make-syntax-object\ 11113}#
                                        (#{syntax-object-expression\ 11117}#
                                          #{x\ 12273}#)
                                        (#{make-wrap\ 11156}#
                                          (cdr #{ms\ 12285}#)
                                          (if #{rib\ 12263}#
                                            (cons #{rib\ 12263}#
                                                  (cdr #{s\ 12286}#))
                                            (cdr #{s\ 12286}#)))
                                        (#{syntax-object-module\ 11121}#
                                          #{x\ 12273}#))
                                      (#{make-syntax-object\ 11113}#
                                        (#{syntax-object-expression\ 11117}#
                                          #{x\ 12273}#)
                                        (#{make-wrap\ 11156}#
                                          (cons #{m\ 12274}# #{ms\ 12285}#)
                                          (if #{rib\ 12263}#
                                            (cons #{rib\ 12263}#
                                                  (cons 'shift
                                                        #{s\ 12286}#))
                                            (cons (quote shift) #{s\ 12286}#)))
                                        (cons 'hygiene
                                              (cdr #{p\ 12259}#))))))
                                (if (vector? #{x\ 12273}#)
                                  (let ((#{n\ 12294}#
                                          (vector-length #{x\ 12273}#)))
                                    (let ((#{v\ 12296}#
                                            (make-vector #{n\ 12294}#)))
                                      (letrec ((#{loop\ 12299}#
                                                 (lambda (#{i\ 12300}#)
                                                   (if (#{fx=\ 11056}#
                                                         #{i\ 12300}#
                                                         #{n\ 12294}#)
                                                     (begin
                                                       (if #f #f)
                                                       #{v\ 12296}#)
                                                     (begin
                                                       (vector-set!
                                                         #{v\ 12296}#
                                                         #{i\ 12300}#
                                                         (#{rebuild-macro-output\ 12272}#
                                                           (vector-ref
                                                             #{x\ 12273}#
                                                             #{i\ 12300}#)
                                                           #{m\ 12274}#))
                                                       (#{loop\ 12299}#
                                                         (#{fx+\ 11052}#
                                                           #{i\ 12300}#
                                                           1)))))))
                                        (#{loop\ 12299}# 0))))
                                  (if (symbol? #{x\ 12273}#)
                                    (syntax-violation
                                      #f
                                      "encountered raw symbol in macro output"
                                      (#{source-wrap\ 11222}#
                                        #{e\ 12260}#
                                        #{w\ 12262}#
                                        (#{wrap-subst\ 11160}# #{w\ 12262}#)
                                        #{mod\ 12264}#)
                                      #{x\ 12273}#)
                                    #{x\ 12273}#)))))))
                 (#{rebuild-macro-output\ 12272}#
                   ((car #{p\ 12259}#)
                    (#{wrap\ 11220}#
                      #{e\ 12260}#
                      (#{anti-mark\ 11192}# #{w\ 12262}#)
                      #{mod\ 12264}#))
                   (gensym "m")))))
           (#{chi-application\ 11240}#
             (lambda (#{x\ 12307}#
                      #{e\ 12308}#
                      #{r\ 12309}#
                      #{w\ 12310}#
                      #{s\ 12311}#
                      #{mod\ 12312}#)
               ((lambda (#{tmp\ 12319}#)
                  ((lambda (#{tmp\ 12320}#)
                     (if #{tmp\ 12320}#
                       (apply (lambda (#{e0\ 12323}# #{e1\ 12324}#)
                                (#{build-application\ 11073}#
                                  #{s\ 12311}#
                                  #{x\ 12307}#
                                  (map (lambda (#{e\ 12325}#)
                                         (#{chi\ 11236}#
                                           #{e\ 12325}#
                                           #{r\ 12309}#
                                           #{w\ 12310}#
                                           #{mod\ 12312}#))
                                       #{e1\ 12324}#)))
                              #{tmp\ 12320}#)
                       (syntax-violation
                         #f
                         "source expression failed to match any pattern"
                         #{tmp\ 12319}#)))
                   ($sc-dispatch
                     #{tmp\ 12319}#
                     '(any . each-any))))
                #{e\ 12308}#)))
           (#{chi-expr\ 11238}#
             (lambda (#{type\ 12328}#
                      #{value\ 12329}#
                      #{e\ 12330}#
                      #{r\ 12331}#
                      #{w\ 12332}#
                      #{s\ 12333}#
                      #{mod\ 12334}#)
               (if (memv #{type\ 12328}# (quote (lexical)))
                 (#{build-lexical-reference\ 11079}#
                   'value
                   #{s\ 12333}#
                   #{e\ 12330}#
                   #{value\ 12329}#)
                 (if (memv #{type\ 12328}# (quote (core core-form)))
                   (#{value\ 12329}#
                     #{e\ 12330}#
                     #{r\ 12331}#
                     #{w\ 12332}#
                     #{s\ 12333}#
                     #{mod\ 12334}#)
                   (if (memv #{type\ 12328}# (quote (module-ref)))
                     (call-with-values
                       (lambda ()
                         (#{value\ 12329}#
                           #{e\ 12330}#
                           #{r\ 12331}#
                           #{w\ 12332}#))
                       (lambda (#{e\ 12345}#
                                #{r\ 12346}#
                                #{w\ 12347}#
                                #{s\ 12348}#
                                #{mod\ 12349}#)
                         (#{chi\ 11236}#
                           #{e\ 12345}#
                           #{r\ 12346}#
                           #{w\ 12347}#
                           #{mod\ 12349}#)))
                     (if (memv #{type\ 12328}# (quote (lexical-call)))
                       (#{chi-application\ 11240}#
                         (#{build-lexical-reference\ 11079}#
                           'fun
                           (#{source-annotation\ 11130}# (car #{e\ 12330}#))
                           (car #{e\ 12330}#)
                           #{value\ 12329}#)
                         #{e\ 12330}#
                         #{r\ 12331}#
                         #{w\ 12332}#
                         #{s\ 12333}#
                         #{mod\ 12334}#)
                       (if (memv #{type\ 12328}# (quote (global-call)))
                         (#{chi-application\ 11240}#
                           (#{build-global-reference\ 11085}#
                             (#{source-annotation\ 11130}# (car #{e\ 12330}#))
                             (if (#{syntax-object?\ 11115}# #{value\ 12329}#)
                               (#{syntax-object-expression\ 11117}#
                                 #{value\ 12329}#)
                               #{value\ 12329}#)
                             (if (#{syntax-object?\ 11115}# #{value\ 12329}#)
                               (#{syntax-object-module\ 11121}#
                                 #{value\ 12329}#)
                               #{mod\ 12334}#))
                           #{e\ 12330}#
                           #{r\ 12331}#
                           #{w\ 12332}#
                           #{s\ 12333}#
                           #{mod\ 12334}#)
                         (if (memv #{type\ 12328}# (quote (constant)))
                           (#{build-data\ 11101}#
                             #{s\ 12333}#
                             (#{strip\ 11262}#
                               (#{source-wrap\ 11222}#
                                 #{e\ 12330}#
                                 #{w\ 12332}#
                                 #{s\ 12333}#
                                 #{mod\ 12334}#)
                               '(())))
                           (if (memv #{type\ 12328}# (quote (global)))
                             (#{build-global-reference\ 11085}#
                               #{s\ 12333}#
                               #{value\ 12329}#
                               #{mod\ 12334}#)
                             (if (memv #{type\ 12328}# (quote (call)))
                               (#{chi-application\ 11240}#
                                 (#{chi\ 11236}#
                                   (car #{e\ 12330}#)
                                   #{r\ 12331}#
                                   #{w\ 12332}#
                                   #{mod\ 12334}#)
                                 #{e\ 12330}#
                                 #{r\ 12331}#
                                 #{w\ 12332}#
                                 #{s\ 12333}#
                                 #{mod\ 12334}#)
                               (if (memv #{type\ 12328}# (quote (begin-form)))
                                 ((lambda (#{tmp\ 12362}#)
                                    ((lambda (#{tmp\ 12363}#)
                                       (if #{tmp\ 12363}#
                                         (apply (lambda (#{_\ 12367}#
                                                         #{e1\ 12368}#
                                                         #{e2\ 12369}#)
                                                  (#{chi-sequence\ 11224}#
                                                    (cons #{e1\ 12368}#
                                                          #{e2\ 12369}#)
                                                    #{r\ 12331}#
                                                    #{w\ 12332}#
                                                    #{s\ 12333}#
                                                    #{mod\ 12334}#))
                                                #{tmp\ 12363}#)
                                         (syntax-violation
                                           #f
                                           "source expression failed to match any pattern"
                                           #{tmp\ 12362}#)))
                                     ($sc-dispatch
                                       #{tmp\ 12362}#
                                       '(any any . each-any))))
                                  #{e\ 12330}#)
                                 (if (memv #{type\ 12328}#
                                           '(local-syntax-form))
                                   (#{chi-local-syntax\ 11246}#
                                     #{value\ 12329}#
                                     #{e\ 12330}#
                                     #{r\ 12331}#
                                     #{w\ 12332}#
                                     #{s\ 12333}#
                                     #{mod\ 12334}#
                                     #{chi-sequence\ 11224}#)
                                   (if (memv #{type\ 12328}#
                                             '(eval-when-form))
                                     ((lambda (#{tmp\ 12373}#)
                                        ((lambda (#{tmp\ 12374}#)
                                           (if #{tmp\ 12374}#
                                             (apply (lambda (#{_\ 12379}#
                                                             #{x\ 12380}#
                                                             #{e1\ 12381}#
                                                             #{e2\ 12382}#)
                                                      (let ((#{when-list\ 12384}#
                                                              (#{chi-when-list\ 11230}#
                                                                #{e\ 12330}#
                                                                #{x\ 12380}#
                                                                #{w\ 12332}#)))
                                                        (if (memq 'eval
                                                                  #{when-list\ 12384}#)
                                                          (#{chi-sequence\ 11224}#
                                                            (cons #{e1\ 12381}#
                                                                  #{e2\ 12382}#)
                                                            #{r\ 12331}#
                                                            #{w\ 12332}#
                                                            #{s\ 12333}#
                                                            #{mod\ 12334}#)
                                                          (#{chi-void\ 11250}#))))
                                                    #{tmp\ 12374}#)
                                             (syntax-violation
                                               #f
                                               "source expression failed to match any pattern"
                                               #{tmp\ 12373}#)))
                                         ($sc-dispatch
                                           #{tmp\ 12373}#
                                           '(any each-any any . each-any))))
                                      #{e\ 12330}#)
                                     (if (memv #{type\ 12328}#
                                               '(define-form
                                                  define-syntax-form))
                                       (syntax-violation
                                         #f
                                         "definition in expression context"
                                         #{e\ 12330}#
                                         (#{wrap\ 11220}#
                                           #{value\ 12329}#
                                           #{w\ 12332}#
                                           #{mod\ 12334}#))
                                       (if (memv #{type\ 12328}#
                                                 '(syntax))
                                         (syntax-violation
                                           #f
                                           "reference to pattern variable outside syntax form"
                                           (#{source-wrap\ 11222}#
                                             #{e\ 12330}#
                                             #{w\ 12332}#
                                             #{s\ 12333}#
                                             #{mod\ 12334}#))
                                         (if (memv #{type\ 12328}#
                                                   '(displaced-lexical))
                                           (syntax-violation
                                             #f
                                             "reference to identifier outside its scope"
                                             (#{source-wrap\ 11222}#
                                               #{e\ 12330}#
                                               #{w\ 12332}#
                                               #{s\ 12333}#
                                               #{mod\ 12334}#))
                                           (syntax-violation
                                             #f
                                             "unexpected syntax"
                                             (#{source-wrap\ 11222}#
                                               #{e\ 12330}#
                                               #{w\ 12332}#
                                               #{s\ 12333}#
                                               #{mod\ 12334}#))))))))))))))))))
           (#{chi\ 11236}#
             (lambda (#{e\ 12391}#
                      #{r\ 12392}#
                      #{w\ 12393}#
                      #{mod\ 12394}#)
               (call-with-values
                 (lambda ()
                   (#{syntax-type\ 11232}#
                     #{e\ 12391}#
                     #{r\ 12392}#
                     #{w\ 12393}#
                     (#{source-annotation\ 11130}# #{e\ 12391}#)
                     #f
                     #{mod\ 12394}#
                     #f))
                 (lambda (#{type\ 12399}#
                          #{value\ 12400}#
                          #{e\ 12401}#
                          #{w\ 12402}#
                          #{s\ 12403}#
                          #{mod\ 12404}#)
                   (#{chi-expr\ 11238}#
                     #{type\ 12399}#
                     #{value\ 12400}#
                     #{e\ 12401}#
                     #{r\ 12392}#
                     #{w\ 12402}#
                     #{s\ 12403}#
                     #{mod\ 12404}#)))))
           (#{chi-top\ 11234}#
             (lambda (#{e\ 12411}#
                      #{r\ 12412}#
                      #{w\ 12413}#
                      #{m\ 12414}#
                      #{esew\ 12415}#
                      #{mod\ 12416}#)
               (call-with-values
                 (lambda ()
                   (#{syntax-type\ 11232}#
                     #{e\ 12411}#
                     #{r\ 12412}#
                     #{w\ 12413}#
                     (#{source-annotation\ 11130}# #{e\ 12411}#)
                     #f
                     #{mod\ 12416}#
                     #f))
                 (lambda (#{type\ 12437}#
                          #{value\ 12438}#
                          #{e\ 12439}#
                          #{w\ 12440}#
                          #{s\ 12441}#
                          #{mod\ 12442}#)
                   (if (memv #{type\ 12437}# (quote (begin-form)))
                     ((lambda (#{tmp\ 12450}#)
                        ((lambda (#{tmp\ 12451}#)
                           (if #{tmp\ 12451}#
                             (apply (lambda (#{_\ 12453}#)
                                      (#{chi-void\ 11250}#))
                                    #{tmp\ 12451}#)
                             ((lambda (#{tmp\ 12454}#)
                                (if #{tmp\ 12454}#
                                  (apply (lambda (#{_\ 12458}#
                                                  #{e1\ 12459}#
                                                  #{e2\ 12460}#)
                                           (#{chi-top-sequence\ 11226}#
                                             (cons #{e1\ 12459}# #{e2\ 12460}#)
                                             #{r\ 12412}#
                                             #{w\ 12440}#
                                             #{s\ 12441}#
                                             #{m\ 12414}#
                                             #{esew\ 12415}#
                                             #{mod\ 12442}#))
                                         #{tmp\ 12454}#)
                                  (syntax-violation
                                    #f
                                    "source expression failed to match any pattern"
                                    #{tmp\ 12450}#)))
                              ($sc-dispatch
                                #{tmp\ 12450}#
                                '(any any . each-any)))))
                         ($sc-dispatch #{tmp\ 12450}# (quote (any)))))
                      #{e\ 12439}#)
                     (if (memv #{type\ 12437}#
                               '(local-syntax-form))
                       (#{chi-local-syntax\ 11246}#
                         #{value\ 12438}#
                         #{e\ 12439}#
                         #{r\ 12412}#
                         #{w\ 12440}#
                         #{s\ 12441}#
                         #{mod\ 12442}#
                         (lambda (#{body\ 12463}#
                                  #{r\ 12464}#
                                  #{w\ 12465}#
                                  #{s\ 12466}#
                                  #{mod\ 12467}#)
                           (#{chi-top-sequence\ 11226}#
                             #{body\ 12463}#
                             #{r\ 12464}#
                             #{w\ 12465}#
                             #{s\ 12466}#
                             #{m\ 12414}#
                             #{esew\ 12415}#
                             #{mod\ 12467}#)))
                       (if (memv #{type\ 12437}# (quote (eval-when-form)))
                         ((lambda (#{tmp\ 12474}#)
                            ((lambda (#{tmp\ 12475}#)
                               (if #{tmp\ 12475}#
                                 (apply (lambda (#{_\ 12480}#
                                                 #{x\ 12481}#
                                                 #{e1\ 12482}#
                                                 #{e2\ 12483}#)
                                          (let ((#{when-list\ 12486}#
                                                  (#{chi-when-list\ 11230}#
                                                    #{e\ 12439}#
                                                    #{x\ 12481}#
                                                    #{w\ 12440}#))
                                                (#{body\ 12487}#
                                                  (cons #{e1\ 12482}#
                                                        #{e2\ 12483}#)))
                                            (if (eq? #{m\ 12414}# (quote e))
                                              (if (memq 'eval
                                                        #{when-list\ 12486}#)
                                                (#{chi-top-sequence\ 11226}#
                                                  #{body\ 12487}#
                                                  #{r\ 12412}#
                                                  #{w\ 12440}#
                                                  #{s\ 12441}#
                                                  (if (memq 'expand
                                                            #{when-list\ 12486}#)
                                                    'c&e
                                                    'e)
                                                  '(eval)
                                                  #{mod\ 12442}#)
                                                (begin
                                                  (if (memq 'expand
                                                            #{when-list\ 12486}#)
                                                    (#{top-level-eval-hook\ 11060}#
                                                      (#{chi-top-sequence\ 11226}#
                                                        #{body\ 12487}#
                                                        #{r\ 12412}#
                                                        #{w\ 12440}#
                                                        #{s\ 12441}#
                                                        'e
                                                        '(eval)
                                                        #{mod\ 12442}#)
                                                      #{mod\ 12442}#))
                                                  (#{chi-void\ 11250}#)))
                                              (if (memq 'load
                                                        #{when-list\ 12486}#)
                                                (if (let ((#{t\ 12496}#
                                                            (memq 'compile
                                                                  #{when-list\ 12486}#)))
                                                      (if #{t\ 12496}#
                                                        #{t\ 12496}#
                                                        (let ((#{t\ 12499}#
                                                                (memq 'expand
                                                                      #{when-list\ 12486}#)))
                                                          (if #{t\ 12499}#
                                                            #{t\ 12499}#
                                                            (if (eq? #{m\ 12414}#
                                                                     'c&e)
                                                              (memq 'eval
                                                                    #{when-list\ 12486}#)
                                                              #f)))))
                                                  (#{chi-top-sequence\ 11226}#
                                                    #{body\ 12487}#
                                                    #{r\ 12412}#
                                                    #{w\ 12440}#
                                                    #{s\ 12441}#
                                                    'c&e
                                                    '(compile load)
                                                    #{mod\ 12442}#)
                                                  (if (memq #{m\ 12414}#
                                                            '(c c&e))
                                                    (#{chi-top-sequence\ 11226}#
                                                      #{body\ 12487}#
                                                      #{r\ 12412}#
                                                      #{w\ 12440}#
                                                      #{s\ 12441}#
                                                      'c
                                                      '(load)
                                                      #{mod\ 12442}#)
                                                    (#{chi-void\ 11250}#)))
                                                (if (let ((#{t\ 12507}#
                                                            (memq 'compile
                                                                  #{when-list\ 12486}#)))
                                                      (if #{t\ 12507}#
                                                        #{t\ 12507}#
                                                        (let ((#{t\ 12510}#
                                                                (memq 'expand
                                                                      #{when-list\ 12486}#)))
                                                          (if #{t\ 12510}#
                                                            #{t\ 12510}#
                                                            (if (eq? #{m\ 12414}#
                                                                     'c&e)
                                                              (memq 'eval
                                                                    #{when-list\ 12486}#)
                                                              #f)))))
                                                  (begin
                                                    (#{top-level-eval-hook\ 11060}#
                                                      (#{chi-top-sequence\ 11226}#
                                                        #{body\ 12487}#
                                                        #{r\ 12412}#
                                                        #{w\ 12440}#
                                                        #{s\ 12441}#
                                                        'e
                                                        '(eval)
                                                        #{mod\ 12442}#)
                                                      #{mod\ 12442}#)
                                                    (#{chi-void\ 11250}#))
                                                  (#{chi-void\ 11250}#))))))
                                        #{tmp\ 12475}#)
                                 (syntax-violation
                                   #f
                                   "source expression failed to match any pattern"
                                   #{tmp\ 12474}#)))
                             ($sc-dispatch
                               #{tmp\ 12474}#
                               '(any each-any any . each-any))))
                          #{e\ 12439}#)
                         (if (memv #{type\ 12437}#
                                   '(define-syntax-form))
                           (let ((#{n\ 12518}#
                                   (#{id-var-name\ 11208}#
                                     #{value\ 12438}#
                                     #{w\ 12440}#))
                                 (#{r\ 12519}#
                                   (#{macros-only-env\ 11143}# #{r\ 12412}#)))
                             (if (memv #{m\ 12414}# (quote (c)))
                               (if (memq (quote compile) #{esew\ 12415}#)
                                 (let ((#{e\ 12522}#
                                         (#{chi-install-global\ 11228}#
                                           #{n\ 12518}#
                                           (#{chi\ 11236}#
                                             #{e\ 12439}#
                                             #{r\ 12519}#
                                             #{w\ 12440}#
                                             #{mod\ 12442}#))))
                                   (begin
                                     (#{top-level-eval-hook\ 11060}#
                                       #{e\ 12522}#
                                       #{mod\ 12442}#)
                                     (if (memq (quote load) #{esew\ 12415}#)
                                       #{e\ 12522}#
                                       (#{chi-void\ 11250}#))))
                                 (if (memq (quote load) #{esew\ 12415}#)
                                   (#{chi-install-global\ 11228}#
                                     #{n\ 12518}#
                                     (#{chi\ 11236}#
                                       #{e\ 12439}#
                                       #{r\ 12519}#
                                       #{w\ 12440}#
                                       #{mod\ 12442}#))
                                   (#{chi-void\ 11250}#)))
                               (if (memv #{m\ 12414}# (quote (c&e)))
                                 (let ((#{e\ 12525}#
                                         (#{chi-install-global\ 11228}#
                                           #{n\ 12518}#
                                           (#{chi\ 11236}#
                                             #{e\ 12439}#
                                             #{r\ 12519}#
                                             #{w\ 12440}#
                                             #{mod\ 12442}#))))
                                   (begin
                                     (#{top-level-eval-hook\ 11060}#
                                       #{e\ 12525}#
                                       #{mod\ 12442}#)
                                     #{e\ 12525}#))
                                 (begin
                                   (if (memq (quote eval) #{esew\ 12415}#)
                                     (#{top-level-eval-hook\ 11060}#
                                       (#{chi-install-global\ 11228}#
                                         #{n\ 12518}#
                                         (#{chi\ 11236}#
                                           #{e\ 12439}#
                                           #{r\ 12519}#
                                           #{w\ 12440}#
                                           #{mod\ 12442}#))
                                       #{mod\ 12442}#))
                                   (#{chi-void\ 11250}#)))))
                           (if (memv #{type\ 12437}# (quote (define-form)))
                             (let ((#{n\ 12530}#
                                     (#{id-var-name\ 11208}#
                                       #{value\ 12438}#
                                       #{w\ 12440}#)))
                               (let ((#{type\ 12532}#
                                       (#{binding-type\ 11134}#
                                         (#{lookup\ 11145}#
                                           #{n\ 12530}#
                                           #{r\ 12412}#
                                           #{mod\ 12442}#))))
                                 (if (memv #{type\ 12532}#
                                           '(global core macro module-ref))
                                   (begin
                                     (if (if (memq #{m\ 12414}#
                                                   '(c c&e))
                                           (if (not (module-local-variable
                                                      (current-module)
                                                      #{n\ 12530}#))
                                             (current-module)
                                             #f)
                                           #f)
                                       (let ((#{old\ 12538}#
                                               (module-variable
                                                 (current-module)
                                                 #{n\ 12530}#)))
                                         (module-define!
                                           (current-module)
                                           #{n\ 12530}#
                                           (if (variable? #{old\ 12538}#)
                                             (variable-ref #{old\ 12538}#)
                                             #f))))
                                     (let ((#{x\ 12541}#
                                             (#{build-global-definition\ 11091}#
                                               #{s\ 12441}#
                                               #{n\ 12530}#
                                               (#{chi\ 11236}#
                                                 #{e\ 12439}#
                                                 #{r\ 12412}#
                                                 #{w\ 12440}#
                                                 #{mod\ 12442}#))))
                                       (begin
                                         (if (eq? #{m\ 12414}# (quote c&e))
                                           (#{top-level-eval-hook\ 11060}#
                                             #{x\ 12541}#
                                             #{mod\ 12442}#))
                                         #{x\ 12541}#)))
                                   (if (memv #{type\ 12532}#
                                             '(displaced-lexical))
                                     (syntax-violation
                                       #f
                                       "identifier out of context"
                                       #{e\ 12439}#
                                       (#{wrap\ 11220}#
                                         #{value\ 12438}#
                                         #{w\ 12440}#
                                         #{mod\ 12442}#))
                                     (syntax-violation
                                       #f
                                       "cannot define keyword at top level"
                                       #{e\ 12439}#
                                       (#{wrap\ 11220}#
                                         #{value\ 12438}#
                                         #{w\ 12440}#
                                         #{mod\ 12442}#))))))
                             (let ((#{x\ 12547}#
                                     (#{chi-expr\ 11238}#
                                       #{type\ 12437}#
                                       #{value\ 12438}#
                                       #{e\ 12439}#
                                       #{r\ 12412}#
                                       #{w\ 12440}#
                                       #{s\ 12441}#
                                       #{mod\ 12442}#)))
                               (begin
                                 (if (eq? #{m\ 12414}# (quote c&e))
                                   (#{top-level-eval-hook\ 11060}#
                                     #{x\ 12547}#
                                     #{mod\ 12442}#))
                                 #{x\ 12547}#)))))))))))
           (#{syntax-type\ 11232}#
             (lambda (#{e\ 12548}#
                      #{r\ 12549}#
                      #{w\ 12550}#
                      #{s\ 12551}#
                      #{rib\ 12552}#
                      #{mod\ 12553}#
                      #{for-car?\ 12554}#)
               (if (symbol? #{e\ 12548}#)
                 (let ((#{n\ 12566}#
                         (#{id-var-name\ 11208}#
                           #{e\ 12548}#
                           #{w\ 12550}#)))
                   (let ((#{b\ 12568}#
                           (#{lookup\ 11145}#
                             #{n\ 12566}#
                             #{r\ 12549}#
                             #{mod\ 12553}#)))
                     (let ((#{type\ 12570}#
                             (#{binding-type\ 11134}# #{b\ 12568}#)))
                       (if (memv #{type\ 12570}# (quote (lexical)))
                         (values
                           #{type\ 12570}#
                           (#{binding-value\ 11136}# #{b\ 12568}#)
                           #{e\ 12548}#
                           #{w\ 12550}#
                           #{s\ 12551}#
                           #{mod\ 12553}#)
                         (if (memv #{type\ 12570}# (quote (global)))
                           (values
                             #{type\ 12570}#
                             #{n\ 12566}#
                             #{e\ 12548}#
                             #{w\ 12550}#
                             #{s\ 12551}#
                             #{mod\ 12553}#)
                           (if (memv #{type\ 12570}# (quote (macro)))
                             (if #{for-car?\ 12554}#
                               (values
                                 #{type\ 12570}#
                                 (#{binding-value\ 11136}# #{b\ 12568}#)
                                 #{e\ 12548}#
                                 #{w\ 12550}#
                                 #{s\ 12551}#
                                 #{mod\ 12553}#)
                               (#{syntax-type\ 11232}#
                                 (#{chi-macro\ 11242}#
                                   (#{binding-value\ 11136}# #{b\ 12568}#)
                                   #{e\ 12548}#
                                   #{r\ 12549}#
                                   #{w\ 12550}#
                                   #{rib\ 12552}#
                                   #{mod\ 12553}#)
                                 #{r\ 12549}#
                                 '(())
                                 #{s\ 12551}#
                                 #{rib\ 12552}#
                                 #{mod\ 12553}#
                                 #f))
                             (values
                               #{type\ 12570}#
                               (#{binding-value\ 11136}# #{b\ 12568}#)
                               #{e\ 12548}#
                               #{w\ 12550}#
                               #{s\ 12551}#
                               #{mod\ 12553}#)))))))
                 (if (pair? #{e\ 12548}#)
                   (let ((#{first\ 12579}# (car #{e\ 12548}#)))
                     (call-with-values
                       (lambda ()
                         (#{syntax-type\ 11232}#
                           #{first\ 12579}#
                           #{r\ 12549}#
                           #{w\ 12550}#
                           #{s\ 12551}#
                           #{rib\ 12552}#
                           #{mod\ 12553}#
                           #t))
                       (lambda (#{ftype\ 12580}#
                                #{fval\ 12581}#
                                #{fe\ 12582}#
                                #{fw\ 12583}#
                                #{fs\ 12584}#
                                #{fmod\ 12585}#)
                         (if (memv #{ftype\ 12580}# (quote (lexical)))
                           (values
                             'lexical-call
                             #{fval\ 12581}#
                             #{e\ 12548}#
                             #{w\ 12550}#
                             #{s\ 12551}#
                             #{mod\ 12553}#)
                           (if (memv #{ftype\ 12580}# (quote (global)))
                             (values
                               'global-call
                               (#{make-syntax-object\ 11113}#
                                 #{fval\ 12581}#
                                 #{w\ 12550}#
                                 #{fmod\ 12585}#)
                               #{e\ 12548}#
                               #{w\ 12550}#
                               #{s\ 12551}#
                               #{mod\ 12553}#)
                             (if (memv #{ftype\ 12580}# (quote (macro)))
                               (#{syntax-type\ 11232}#
                                 (#{chi-macro\ 11242}#
                                   #{fval\ 12581}#
                                   #{e\ 12548}#
                                   #{r\ 12549}#
                                   #{w\ 12550}#
                                   #{rib\ 12552}#
                                   #{mod\ 12553}#)
                                 #{r\ 12549}#
                                 '(())
                                 #{s\ 12551}#
                                 #{rib\ 12552}#
                                 #{mod\ 12553}#
                                 #{for-car?\ 12554}#)
                               (if (memv #{ftype\ 12580}# (quote (module-ref)))
                                 (call-with-values
                                   (lambda ()
                                     (#{fval\ 12581}#
                                       #{e\ 12548}#
                                       #{r\ 12549}#
                                       #{w\ 12550}#))
                                   (lambda (#{e\ 12597}#
                                            #{r\ 12598}#
                                            #{w\ 12599}#
                                            #{s\ 12600}#
                                            #{mod\ 12601}#)
                                     (#{syntax-type\ 11232}#
                                       #{e\ 12597}#
                                       #{r\ 12598}#
                                       #{w\ 12599}#
                                       #{s\ 12600}#
                                       #{rib\ 12552}#
                                       #{mod\ 12601}#
                                       #{for-car?\ 12554}#)))
                                 (if (memv #{ftype\ 12580}# (quote (core)))
                                   (values
                                     'core-form
                                     #{fval\ 12581}#
                                     #{e\ 12548}#
                                     #{w\ 12550}#
                                     #{s\ 12551}#
                                     #{mod\ 12553}#)
                                   (if (memv #{ftype\ 12580}#
                                             '(local-syntax))
                                     (values
                                       'local-syntax-form
                                       #{fval\ 12581}#
                                       #{e\ 12548}#
                                       #{w\ 12550}#
                                       #{s\ 12551}#
                                       #{mod\ 12553}#)
                                     (if (memv #{ftype\ 12580}#
                                               '(begin))
                                       (values
                                         'begin-form
                                         #f
                                         #{e\ 12548}#
                                         #{w\ 12550}#
                                         #{s\ 12551}#
                                         #{mod\ 12553}#)
                                       (if (memv #{ftype\ 12580}#
                                                 '(eval-when))
                                         (values
                                           'eval-when-form
                                           #f
                                           #{e\ 12548}#
                                           #{w\ 12550}#
                                           #{s\ 12551}#
                                           #{mod\ 12553}#)
                                         (if (memv #{ftype\ 12580}#
                                                   '(define))
                                           ((lambda (#{tmp\ 12612}#)
                                              ((lambda (#{tmp\ 12613}#)
                                                 (if (if #{tmp\ 12613}#
                                                       (apply (lambda (#{_\ 12617}#
                                                                       #{name\ 12618}#
                                                                       #{val\ 12619}#)
                                                                (#{id?\ 11151}#
                                                                  #{name\ 12618}#))
                                                              #{tmp\ 12613}#)
                                                       #f)
                                                   (apply (lambda (#{_\ 12623}#
                                                                   #{name\ 12624}#
                                                                   #{val\ 12625}#)
                                                            (values
                                                              'define-form
                                                              #{name\ 12624}#
                                                              #{val\ 12625}#
                                                              #{w\ 12550}#
                                                              #{s\ 12551}#
                                                              #{mod\ 12553}#))
                                                          #{tmp\ 12613}#)
                                                   ((lambda (#{tmp\ 12626}#)
                                                      (if (if #{tmp\ 12626}#
                                                            (apply (lambda (#{_\ 12632}#
                                                                            #{name\ 12633}#
                                                                            #{args\ 12634}#
                                                                            #{e1\ 12635}#
                                                                            #{e2\ 12636}#)
                                                                     (if (#{id?\ 11151}#
                                                                           #{name\ 12633}#)
                                                                       (#{valid-bound-ids?\ 11214}#
                                                                         (#{lambda-var-list\ 11266}#
                                                                           #{args\ 12634}#))
                                                                       #f))
                                                                   #{tmp\ 12626}#)
                                                            #f)
                                                        (apply (lambda (#{_\ 12644}#
                                                                        #{name\ 12645}#
                                                                        #{args\ 12646}#
                                                                        #{e1\ 12647}#
                                                                        #{e2\ 12648}#)
                                                                 (values
                                                                   'define-form
                                                                   (#{wrap\ 11220}#
                                                                     #{name\ 12645}#
                                                                     #{w\ 12550}#
                                                                     #{mod\ 12553}#)
                                                                   (#{decorate-source\ 11069}#
                                                                     (cons '#(syntax-object
                                                                              lambda
                                                                              ((top)
                                                                               #(ribcage
                                                                                 #(_
                                                                                   name
                                                                                   args
                                                                                   e1
                                                                                   e2)
                                                                                 #((top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top))
                                                                                 #("i12639"
                                                                                   "i12640"
                                                                                   "i12641"
                                                                                   "i12642"
                                                                                   "i12643"))
                                                                               #(ribcage
                                                                                 ()
                                                                                 ()
                                                                                 ())
                                                                               #(ribcage
                                                                                 ()
                                                                                 ()
                                                                                 ())
                                                                               #(ribcage
                                                                                 #(ftype
                                                                                   fval
                                                                                   fe
                                                                                   fw
                                                                                   fs
                                                                                   fmod)
                                                                                 #((top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top))
                                                                                 #("i12586"
                                                                                   "i12587"
                                                                                   "i12588"
                                                                                   "i12589"
                                                                                   "i12590"
                                                                                   "i12591"))
                                                                               #(ribcage
                                                                                 ()
                                                                                 ()
                                                                                 ())
                                                                               #(ribcage
                                                                                 #(first)
                                                                                 #((top))
                                                                                 #("i12578"))
                                                                               #(ribcage
                                                                                 ()
                                                                                 ()
                                                                                 ())
                                                                               #(ribcage
                                                                                 ()
                                                                                 ()
                                                                                 ())
                                                                               #(ribcage
                                                                                 ()
                                                                                 ()
                                                                                 ())
                                                                               #(ribcage
                                                                                 #(e
                                                                                   r
                                                                                   w
                                                                                   s
                                                                                   rib
                                                                                   mod
                                                                                   for-car?)
                                                                                 #((top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top))
                                                                                 #("i12555"
                                                                                   "i12556"
                                                                                   "i12557"
                                                                                   "i12558"
                                                                                   "i12559"
                                                                                   "i12560"
                                                                                   "i12561"))
                                                                               #(ribcage
                                                                                 (lambda-var-list
                                                                                   gen-var
                                                                                   strip
                                                                                   chi-lambda-case
                                                                                   lambda*-formals
                                                                                   chi-simple-lambda
                                                                                   lambda-formals
                                                                                   ellipsis?
                                                                                   chi-void
                                                                                   eval-local-transformer
                                                                                   chi-local-syntax
                                                                                   chi-body
                                                                                   chi-macro
                                                                                   chi-application
                                                                                   chi-expr
                                                                                   chi
                                                                                   chi-top
                                                                                   syntax-type
                                                                                   chi-when-list
                                                                                   chi-install-global
                                                                                   chi-top-sequence
                                                                                   chi-sequence
                                                                                   source-wrap
                                                                                   wrap
                                                                                   bound-id-member?
                                                                                   distinct-bound-ids?
                                                                                   valid-bound-ids?
                                                                                   bound-id=?
                                                                                   free-id=?
                                                                                   id-var-name
                                                                                   same-marks?
                                                                                   join-marks
                                                                                   join-wraps
                                                                                   smart-append
                                                                                   make-binding-wrap
                                                                                   extend-ribcage!
                                                                                   make-empty-ribcage
                                                                                   new-mark
                                                                                   anti-mark
                                                                                   the-anti-mark
                                                                                   top-marked?
                                                                                   top-wrap
                                                                                   empty-wrap
                                                                                   set-ribcage-labels!
                                                                                   set-ribcage-marks!
                                                                                   set-ribcage-symnames!
                                                                                   ribcage-labels
                                                                                   ribcage-marks
                                                                                   ribcage-symnames
                                                                                   ribcage?
                                                                                   make-ribcage
                                                                                   gen-labels
                                                                                   gen-label
                                                                                   make-rename
                                                                                   rename-marks
                                                                                   rename-new
                                                                                   rename-old
                                                                                   subst-rename?
                                                                                   wrap-subst
                                                                                   wrap-marks
                                                                                   make-wrap
                                                                                   id-sym-name&marks
                                                                                   id-sym-name
                                                                                   id?
                                                                                   nonsymbol-id?
                                                                                   global-extend
                                                                                   lookup
                                                                                   macros-only-env
                                                                                   extend-var-env
                                                                                   extend-env
                                                                                   null-env
                                                                                   binding-value
                                                                                   binding-type
                                                                                   make-binding
                                                                                   arg-check
                                                                                   source-annotation
                                                                                   no-source
                                                                                   set-syntax-object-module!
                                                                                   set-syntax-object-wrap!
                                                                                   set-syntax-object-expression!
                                                                                   syntax-object-module
                                                                                   syntax-object-wrap
                                                                                   syntax-object-expression
                                                                                   syntax-object?
                                                                                   make-syntax-object
                                                                                   build-lexical-var
                                                                                   build-letrec
                                                                                   build-named-let
                                                                                   build-let
                                                                                   build-sequence
                                                                                   build-data
                                                                                   build-primref
                                                                                   build-lambda-case
                                                                                   build-case-lambda
                                                                                   build-simple-lambda
                                                                                   build-global-definition
                                                                                   maybe-name-value!
                                                                                   build-global-assignment
                                                                                   build-global-reference
                                                                                   analyze-variable
                                                                                   build-lexical-assignment
                                                                                   build-lexical-reference
                                                                                   build-dynlet
                                                                                   build-conditional
                                                                                   build-application
                                                                                   build-void
                                                                                   decorate-source
                                                                                   get-global-definition-hook
                                                                                   put-global-definition-hook
                                                                                   gensym-hook
                                                                                   local-eval-hook
                                                                                   top-level-eval-hook
                                                                                   fx<
                                                                                   fx=
                                                                                   fx-
                                                                                   fx+
                                                                                   *mode*)
                                                                                 ((top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top))
                                                                                 ("i11265"
                                                                                  "i11263"
                                                                                  "i11261"
                                                                                  "i11259"
                                                                                  "i11257"
                                                                                  "i11255"
                                                                                  "i11253"
                                                                                  "i11251"
                                                                                  "i11249"
                                                                                  "i11247"
                                                                                  "i11245"
                                                                                  "i11243"
                                                                                  "i11241"
                                                                                  "i11239"
                                                                                  "i11237"
                                                                                  "i11235"
                                                                                  "i11233"
                                                                                  "i11231"
                                                                                  "i11229"
                                                                                  "i11227"
                                                                                  "i11225"
                                                                                  "i11223"
                                                                                  "i11221"
                                                                                  "i11219"
                                                                                  "i11217"
                                                                                  "i11215"
                                                                                  "i11213"
                                                                                  "i11211"
                                                                                  "i11209"
                                                                                  "i11207"
                                                                                  "i11205"
                                                                                  "i11203"
                                                                                  "i11201"
                                                                                  "i11199"
                                                                                  "i11197"
                                                                                  "i11195"
                                                                                  "i11194"
                                                                                  "i11193"
                                                                                  "i11191"
                                                                                  "i11190"
                                                                                  "i11189"
                                                                                  "i11188"
                                                                                  "i11187"
                                                                                  "i11185"
                                                                                  "i11183"
                                                                                  "i11181"
                                                                                  "i11179"
                                                                                  "i11177"
                                                                                  "i11175"
                                                                                  "i11173"
                                                                                  "i11171"
                                                                                  "i11168"
                                                                                  "i11166"
                                                                                  "i11165"
                                                                                  "i11164"
                                                                                  "i11163"
                                                                                  "i11162"
                                                                                  "i11161"
                                                                                  "i11159"
                                                                                  "i11157"
                                                                                  "i11155"
                                                                                  "i11153"
                                                                                  "i11152"
                                                                                  "i11150"
                                                                                  "i11148"
                                                                                  "i11146"
                                                                                  "i11144"
                                                                                  "i11142"
                                                                                  "i11140"
                                                                                  "i11138"
                                                                                  "i11137"
                                                                                  "i11135"
                                                                                  "i11133"
                                                                                  "i11132"
                                                                                  "i11131"
                                                                                  "i11129"
                                                                                  "i11128"
                                                                                  "i11126"
                                                                                  "i11124"
                                                                                  "i11122"
                                                                                  "i11120"
                                                                                  "i11118"
                                                                                  "i11116"
                                                                                  "i11114"
                                                                                  "i11112"
                                                                                  "i11110"
                                                                                  "i11108"
                                                                                  "i11106"
                                                                                  "i11104"
                                                                                  "i11102"
                                                                                  "i11100"
                                                                                  "i11098"
                                                                                  "i11096"
                                                                                  "i11094"
                                                                                  "i11092"
                                                                                  "i11090"
                                                                                  "i11088"
                                                                                  "i11086"
                                                                                  "i11084"
                                                                                  "i11082"
                                                                                  "i11080"
                                                                                  "i11078"
                                                                                  "i11076"
                                                                                  "i11074"
                                                                                  "i11072"
                                                                                  "i11070"
                                                                                  "i11068"
                                                                                  "i11066"
                                                                                  "i11064"
                                                                                  "i11063"
                                                                                  "i11061"
                                                                                  "i11059"
                                                                                  "i11057"
                                                                                  "i11055"
                                                                                  "i11053"
                                                                                  "i11051"
                                                                                  "i11049"))
                                                                               #(ribcage
                                                                                 (define-structure
                                                                                   and-map*)
                                                                                 ((top)
                                                                                  (top))
                                                                                 ("i10952"
                                                                                  "i10950")))
                                                                              (hygiene
                                                                                guile))
                                                                           (#{wrap\ 11220}#
                                                                             (cons #{args\ 12646}#
                                                                                   (cons #{e1\ 12647}#
                                                                                         #{e2\ 12648}#))
                                                                             #{w\ 12550}#
                                                                             #{mod\ 12553}#))
                                                                     #{s\ 12551}#)
                                                                   '(())
                                                                   #{s\ 12551}#
                                                                   #{mod\ 12553}#))
                                                               #{tmp\ 12626}#)
                                                        ((lambda (#{tmp\ 12651}#)
                                                           (if (if #{tmp\ 12651}#
                                                                 (apply (lambda (#{_\ 12654}#
                                                                                 #{name\ 12655}#)
                                                                          (#{id?\ 11151}#
                                                                            #{name\ 12655}#))
                                                                        #{tmp\ 12651}#)
                                                                 #f)
                                                             (apply (lambda (#{_\ 12658}#
                                                                             #{name\ 12659}#)
                                                                      (values
                                                                        'define-form
                                                                        (#{wrap\ 11220}#
                                                                          #{name\ 12659}#
                                                                          #{w\ 12550}#
                                                                          #{mod\ 12553}#)
                                                                        '(#(syntax-object
                                                                            if
                                                                            ((top)
                                                                             #(ribcage
                                                                               #(_
                                                                                 name)
                                                                               #((top)
                                                                                 (top))
                                                                               #("i12656"
                                                                                 "i12657"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(ftype
                                                                                 fval
                                                                                 fe
                                                                                 fw
                                                                                 fs
                                                                                 fmod)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i12586"
                                                                                 "i12587"
                                                                                 "i12588"
                                                                                 "i12589"
                                                                                 "i12590"
                                                                                 "i12591"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(first)
                                                                               #((top))
                                                                               #("i12578"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(e
                                                                                 r
                                                                                 w
                                                                                 s
                                                                                 rib
                                                                                 mod
                                                                                 for-car?)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i12555"
                                                                                 "i12556"
                                                                                 "i12557"
                                                                                 "i12558"
                                                                                 "i12559"
                                                                                 "i12560"
                                                                                 "i12561"))
                                                                             #(ribcage
                                                                               (lambda-var-list
                                                                                 gen-var
                                                                                 strip
                                                                                 chi-lambda-case
                                                                                 lambda*-formals
                                                                                 chi-simple-lambda
                                                                                 lambda-formals
                                                                                 ellipsis?
                                                                                 chi-void
                                                                                 eval-local-transformer
                                                                                 chi-local-syntax
                                                                                 chi-body
                                                                                 chi-macro
                                                                                 chi-application
                                                                                 chi-expr
                                                                                 chi
                                                                                 chi-top
                                                                                 syntax-type
                                                                                 chi-when-list
                                                                                 chi-install-global
                                                                                 chi-top-sequence
                                                                                 chi-sequence
                                                                                 source-wrap
                                                                                 wrap
                                                                                 bound-id-member?
                                                                                 distinct-bound-ids?
                                                                                 valid-bound-ids?
                                                                                 bound-id=?
                                                                                 free-id=?
                                                                                 id-var-name
                                                                                 same-marks?
                                                                                 join-marks
                                                                                 join-wraps
                                                                                 smart-append
                                                                                 make-binding-wrap
                                                                                 extend-ribcage!
                                                                                 make-empty-ribcage
                                                                                 new-mark
                                                                                 anti-mark
                                                                                 the-anti-mark
                                                                                 top-marked?
                                                                                 top-wrap
                                                                                 empty-wrap
                                                                                 set-ribcage-labels!
                                                                                 set-ribcage-marks!
                                                                                 set-ribcage-symnames!
                                                                                 ribcage-labels
                                                                                 ribcage-marks
                                                                                 ribcage-symnames
                                                                                 ribcage?
                                                                                 make-ribcage
                                                                                 gen-labels
                                                                                 gen-label
                                                                                 make-rename
                                                                                 rename-marks
                                                                                 rename-new
                                                                                 rename-old
                                                                                 subst-rename?
                                                                                 wrap-subst
                                                                                 wrap-marks
                                                                                 make-wrap
                                                                                 id-sym-name&marks
                                                                                 id-sym-name
                                                                                 id?
                                                                                 nonsymbol-id?
                                                                                 global-extend
                                                                                 lookup
                                                                                 macros-only-env
                                                                                 extend-var-env
                                                                                 extend-env
                                                                                 null-env
                                                                                 binding-value
                                                                                 binding-type
                                                                                 make-binding
                                                                                 arg-check
                                                                                 source-annotation
                                                                                 no-source
                                                                                 set-syntax-object-module!
                                                                                 set-syntax-object-wrap!
                                                                                 set-syntax-object-expression!
                                                                                 syntax-object-module
                                                                                 syntax-object-wrap
                                                                                 syntax-object-expression
                                                                                 syntax-object?
                                                                                 make-syntax-object
                                                                                 build-lexical-var
                                                                                 build-letrec
                                                                                 build-named-let
                                                                                 build-let
                                                                                 build-sequence
                                                                                 build-data
                                                                                 build-primref
                                                                                 build-lambda-case
                                                                                 build-case-lambda
                                                                                 build-simple-lambda
                                                                                 build-global-definition
                                                                                 maybe-name-value!
                                                                                 build-global-assignment
                                                                                 build-global-reference
                                                                                 analyze-variable
                                                                                 build-lexical-assignment
                                                                                 build-lexical-reference
                                                                                 build-dynlet
                                                                                 build-conditional
                                                                                 build-application
                                                                                 build-void
                                                                                 decorate-source
                                                                                 get-global-definition-hook
                                                                                 put-global-definition-hook
                                                                                 gensym-hook
                                                                                 local-eval-hook
                                                                                 top-level-eval-hook
                                                                                 fx<
                                                                                 fx=
                                                                                 fx-
                                                                                 fx+
                                                                                 *mode*)
                                                                               ((top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top))
                                                                               ("i11265"
                                                                                "i11263"
                                                                                "i11261"
                                                                                "i11259"
                                                                                "i11257"
                                                                                "i11255"
                                                                                "i11253"
                                                                                "i11251"
                                                                                "i11249"
                                                                                "i11247"
                                                                                "i11245"
                                                                                "i11243"
                                                                                "i11241"
                                                                                "i11239"
                                                                                "i11237"
                                                                                "i11235"
                                                                                "i11233"
                                                                                "i11231"
                                                                                "i11229"
                                                                                "i11227"
                                                                                "i11225"
                                                                                "i11223"
                                                                                "i11221"
                                                                                "i11219"
                                                                                "i11217"
                                                                                "i11215"
                                                                                "i11213"
                                                                                "i11211"
                                                                                "i11209"
                                                                                "i11207"
                                                                                "i11205"
                                                                                "i11203"
                                                                                "i11201"
                                                                                "i11199"
                                                                                "i11197"
                                                                                "i11195"
                                                                                "i11194"
                                                                                "i11193"
                                                                                "i11191"
                                                                                "i11190"
                                                                                "i11189"
                                                                                "i11188"
                                                                                "i11187"
                                                                                "i11185"
                                                                                "i11183"
                                                                                "i11181"
                                                                                "i11179"
                                                                                "i11177"
                                                                                "i11175"
                                                                                "i11173"
                                                                                "i11171"
                                                                                "i11168"
                                                                                "i11166"
                                                                                "i11165"
                                                                                "i11164"
                                                                                "i11163"
                                                                                "i11162"
                                                                                "i11161"
                                                                                "i11159"
                                                                                "i11157"
                                                                                "i11155"
                                                                                "i11153"
                                                                                "i11152"
                                                                                "i11150"
                                                                                "i11148"
                                                                                "i11146"
                                                                                "i11144"
                                                                                "i11142"
                                                                                "i11140"
                                                                                "i11138"
                                                                                "i11137"
                                                                                "i11135"
                                                                                "i11133"
                                                                                "i11132"
                                                                                "i11131"
                                                                                "i11129"
                                                                                "i11128"
                                                                                "i11126"
                                                                                "i11124"
                                                                                "i11122"
                                                                                "i11120"
                                                                                "i11118"
                                                                                "i11116"
                                                                                "i11114"
                                                                                "i11112"
                                                                                "i11110"
                                                                                "i11108"
                                                                                "i11106"
                                                                                "i11104"
                                                                                "i11102"
                                                                                "i11100"
                                                                                "i11098"
                                                                                "i11096"
                                                                                "i11094"
                                                                                "i11092"
                                                                                "i11090"
                                                                                "i11088"
                                                                                "i11086"
                                                                                "i11084"
                                                                                "i11082"
                                                                                "i11080"
                                                                                "i11078"
                                                                                "i11076"
                                                                                "i11074"
                                                                                "i11072"
                                                                                "i11070"
                                                                                "i11068"
                                                                                "i11066"
                                                                                "i11064"
                                                                                "i11063"
                                                                                "i11061"
                                                                                "i11059"
                                                                                "i11057"
                                                                                "i11055"
                                                                                "i11053"
                                                                                "i11051"
                                                                                "i11049"))
                                                                             #(ribcage
                                                                               (define-structure
                                                                                 and-map*)
                                                                               ((top)
                                                                                (top))
                                                                               ("i10952"
                                                                                "i10950")))
                                                                            (hygiene
                                                                              guile))
                                                                          #(syntax-object
                                                                            #f
                                                                            ((top)
                                                                             #(ribcage
                                                                               #(_
                                                                                 name)
                                                                               #((top)
                                                                                 (top))
                                                                               #("i12656"
                                                                                 "i12657"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(ftype
                                                                                 fval
                                                                                 fe
                                                                                 fw
                                                                                 fs
                                                                                 fmod)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i12586"
                                                                                 "i12587"
                                                                                 "i12588"
                                                                                 "i12589"
                                                                                 "i12590"
                                                                                 "i12591"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(first)
                                                                               #((top))
                                                                               #("i12578"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(e
                                                                                 r
                                                                                 w
                                                                                 s
                                                                                 rib
                                                                                 mod
                                                                                 for-car?)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i12555"
                                                                                 "i12556"
                                                                                 "i12557"
                                                                                 "i12558"
                                                                                 "i12559"
                                                                                 "i12560"
                                                                                 "i12561"))
                                                                             #(ribcage
                                                                               (lambda-var-list
                                                                                 gen-var
                                                                                 strip
                                                                                 chi-lambda-case
                                                                                 lambda*-formals
                                                                                 chi-simple-lambda
                                                                                 lambda-formals
                                                                                 ellipsis?
                                                                                 chi-void
                                                                                 eval-local-transformer
                                                                                 chi-local-syntax
                                                                                 chi-body
                                                                                 chi-macro
                                                                                 chi-application
                                                                                 chi-expr
                                                                                 chi
                                                                                 chi-top
                                                                                 syntax-type
                                                                                 chi-when-list
                                                                                 chi-install-global
                                                                                 chi-top-sequence
                                                                                 chi-sequence
                                                                                 source-wrap
                                                                                 wrap
                                                                                 bound-id-member?
                                                                                 distinct-bound-ids?
                                                                                 valid-bound-ids?
                                                                                 bound-id=?
                                                                                 free-id=?
                                                                                 id-var-name
                                                                                 same-marks?
                                                                                 join-marks
                                                                                 join-wraps
                                                                                 smart-append
                                                                                 make-binding-wrap
                                                                                 extend-ribcage!
                                                                                 make-empty-ribcage
                                                                                 new-mark
                                                                                 anti-mark
                                                                                 the-anti-mark
                                                                                 top-marked?
                                                                                 top-wrap
                                                                                 empty-wrap
                                                                                 set-ribcage-labels!
                                                                                 set-ribcage-marks!
                                                                                 set-ribcage-symnames!
                                                                                 ribcage-labels
                                                                                 ribcage-marks
                                                                                 ribcage-symnames
                                                                                 ribcage?
                                                                                 make-ribcage
                                                                                 gen-labels
                                                                                 gen-label
                                                                                 make-rename
                                                                                 rename-marks
                                                                                 rename-new
                                                                                 rename-old
                                                                                 subst-rename?
                                                                                 wrap-subst
                                                                                 wrap-marks
                                                                                 make-wrap
                                                                                 id-sym-name&marks
                                                                                 id-sym-name
                                                                                 id?
                                                                                 nonsymbol-id?
                                                                                 global-extend
                                                                                 lookup
                                                                                 macros-only-env
                                                                                 extend-var-env
                                                                                 extend-env
                                                                                 null-env
                                                                                 binding-value
                                                                                 binding-type
                                                                                 make-binding
                                                                                 arg-check
                                                                                 source-annotation
                                                                                 no-source
                                                                                 set-syntax-object-module!
                                                                                 set-syntax-object-wrap!
                                                                                 set-syntax-object-expression!
                                                                                 syntax-object-module
                                                                                 syntax-object-wrap
                                                                                 syntax-object-expression
                                                                                 syntax-object?
                                                                                 make-syntax-object
                                                                                 build-lexical-var
                                                                                 build-letrec
                                                                                 build-named-let
                                                                                 build-let
                                                                                 build-sequence
                                                                                 build-data
                                                                                 build-primref
                                                                                 build-lambda-case
                                                                                 build-case-lambda
                                                                                 build-simple-lambda
                                                                                 build-global-definition
                                                                                 maybe-name-value!
                                                                                 build-global-assignment
                                                                                 build-global-reference
                                                                                 analyze-variable
                                                                                 build-lexical-assignment
                                                                                 build-lexical-reference
                                                                                 build-dynlet
                                                                                 build-conditional
                                                                                 build-application
                                                                                 build-void
                                                                                 decorate-source
                                                                                 get-global-definition-hook
                                                                                 put-global-definition-hook
                                                                                 gensym-hook
                                                                                 local-eval-hook
                                                                                 top-level-eval-hook
                                                                                 fx<
                                                                                 fx=
                                                                                 fx-
                                                                                 fx+
                                                                                 *mode*)
                                                                               ((top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top))
                                                                               ("i11265"
                                                                                "i11263"
                                                                                "i11261"
                                                                                "i11259"
                                                                                "i11257"
                                                                                "i11255"
                                                                                "i11253"
                                                                                "i11251"
                                                                                "i11249"
                                                                                "i11247"
                                                                                "i11245"
                                                                                "i11243"
                                                                                "i11241"
                                                                                "i11239"
                                                                                "i11237"
                                                                                "i11235"
                                                                                "i11233"
                                                                                "i11231"
                                                                                "i11229"
                                                                                "i11227"
                                                                                "i11225"
                                                                                "i11223"
                                                                                "i11221"
                                                                                "i11219"
                                                                                "i11217"
                                                                                "i11215"
                                                                                "i11213"
                                                                                "i11211"
                                                                                "i11209"
                                                                                "i11207"
                                                                                "i11205"
                                                                                "i11203"
                                                                                "i11201"
                                                                                "i11199"
                                                                                "i11197"
                                                                                "i11195"
                                                                                "i11194"
                                                                                "i11193"
                                                                                "i11191"
                                                                                "i11190"
                                                                                "i11189"
                                                                                "i11188"
                                                                                "i11187"
                                                                                "i11185"
                                                                                "i11183"
                                                                                "i11181"
                                                                                "i11179"
                                                                                "i11177"
                                                                                "i11175"
                                                                                "i11173"
                                                                                "i11171"
                                                                                "i11168"
                                                                                "i11166"
                                                                                "i11165"
                                                                                "i11164"
                                                                                "i11163"
                                                                                "i11162"
                                                                                "i11161"
                                                                                "i11159"
                                                                                "i11157"
                                                                                "i11155"
                                                                                "i11153"
                                                                                "i11152"
                                                                                "i11150"
                                                                                "i11148"
                                                                                "i11146"
                                                                                "i11144"
                                                                                "i11142"
                                                                                "i11140"
                                                                                "i11138"
                                                                                "i11137"
                                                                                "i11135"
                                                                                "i11133"
                                                                                "i11132"
                                                                                "i11131"
                                                                                "i11129"
                                                                                "i11128"
                                                                                "i11126"
                                                                                "i11124"
                                                                                "i11122"
                                                                                "i11120"
                                                                                "i11118"
                                                                                "i11116"
                                                                                "i11114"
                                                                                "i11112"
                                                                                "i11110"
                                                                                "i11108"
                                                                                "i11106"
                                                                                "i11104"
                                                                                "i11102"
                                                                                "i11100"
                                                                                "i11098"
                                                                                "i11096"
                                                                                "i11094"
                                                                                "i11092"
                                                                                "i11090"
                                                                                "i11088"
                                                                                "i11086"
                                                                                "i11084"
                                                                                "i11082"
                                                                                "i11080"
                                                                                "i11078"
                                                                                "i11076"
                                                                                "i11074"
                                                                                "i11072"
                                                                                "i11070"
                                                                                "i11068"
                                                                                "i11066"
                                                                                "i11064"
                                                                                "i11063"
                                                                                "i11061"
                                                                                "i11059"
                                                                                "i11057"
                                                                                "i11055"
                                                                                "i11053"
                                                                                "i11051"
                                                                                "i11049"))
                                                                             #(ribcage
                                                                               (define-structure
                                                                                 and-map*)
                                                                               ((top)
                                                                                (top))
                                                                               ("i10952"
                                                                                "i10950")))
                                                                            (hygiene
                                                                              guile))
                                                                          #(syntax-object
                                                                            #f
                                                                            ((top)
                                                                             #(ribcage
                                                                               #(_
                                                                                 name)
                                                                               #((top)
                                                                                 (top))
                                                                               #("i12656"
                                                                                 "i12657"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(ftype
                                                                                 fval
                                                                                 fe
                                                                                 fw
                                                                                 fs
                                                                                 fmod)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i12586"
                                                                                 "i12587"
                                                                                 "i12588"
                                                                                 "i12589"
                                                                                 "i12590"
                                                                                 "i12591"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(first)
                                                                               #((top))
                                                                               #("i12578"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(e
                                                                                 r
                                                                                 w
                                                                                 s
                                                                                 rib
                                                                                 mod
                                                                                 for-car?)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i12555"
                                                                                 "i12556"
                                                                                 "i12557"
                                                                                 "i12558"
                                                                                 "i12559"
                                                                                 "i12560"
                                                                                 "i12561"))
                                                                             #(ribcage
                                                                               (lambda-var-list
                                                                                 gen-var
                                                                                 strip
                                                                                 chi-lambda-case
                                                                                 lambda*-formals
                                                                                 chi-simple-lambda
                                                                                 lambda-formals
                                                                                 ellipsis?
                                                                                 chi-void
                                                                                 eval-local-transformer
                                                                                 chi-local-syntax
                                                                                 chi-body
                                                                                 chi-macro
                                                                                 chi-application
                                                                                 chi-expr
                                                                                 chi
                                                                                 chi-top
                                                                                 syntax-type
                                                                                 chi-when-list
                                                                                 chi-install-global
                                                                                 chi-top-sequence
                                                                                 chi-sequence
                                                                                 source-wrap
                                                                                 wrap
                                                                                 bound-id-member?
                                                                                 distinct-bound-ids?
                                                                                 valid-bound-ids?
                                                                                 bound-id=?
                                                                                 free-id=?
                                                                                 id-var-name
                                                                                 same-marks?
                                                                                 join-marks
                                                                                 join-wraps
                                                                                 smart-append
                                                                                 make-binding-wrap
                                                                                 extend-ribcage!
                                                                                 make-empty-ribcage
                                                                                 new-mark
                                                                                 anti-mark
                                                                                 the-anti-mark
                                                                                 top-marked?
                                                                                 top-wrap
                                                                                 empty-wrap
                                                                                 set-ribcage-labels!
                                                                                 set-ribcage-marks!
                                                                                 set-ribcage-symnames!
                                                                                 ribcage-labels
                                                                                 ribcage-marks
                                                                                 ribcage-symnames
                                                                                 ribcage?
                                                                                 make-ribcage
                                                                                 gen-labels
                                                                                 gen-label
                                                                                 make-rename
                                                                                 rename-marks
                                                                                 rename-new
                                                                                 rename-old
                                                                                 subst-rename?
                                                                                 wrap-subst
                                                                                 wrap-marks
                                                                                 make-wrap
                                                                                 id-sym-name&marks
                                                                                 id-sym-name
                                                                                 id?
                                                                                 nonsymbol-id?
                                                                                 global-extend
                                                                                 lookup
                                                                                 macros-only-env
                                                                                 extend-var-env
                                                                                 extend-env
                                                                                 null-env
                                                                                 binding-value
                                                                                 binding-type
                                                                                 make-binding
                                                                                 arg-check
                                                                                 source-annotation
                                                                                 no-source
                                                                                 set-syntax-object-module!
                                                                                 set-syntax-object-wrap!
                                                                                 set-syntax-object-expression!
                                                                                 syntax-object-module
                                                                                 syntax-object-wrap
                                                                                 syntax-object-expression
                                                                                 syntax-object?
                                                                                 make-syntax-object
                                                                                 build-lexical-var
                                                                                 build-letrec
                                                                                 build-named-let
                                                                                 build-let
                                                                                 build-sequence
                                                                                 build-data
                                                                                 build-primref
                                                                                 build-lambda-case
                                                                                 build-case-lambda
                                                                                 build-simple-lambda
                                                                                 build-global-definition
                                                                                 maybe-name-value!
                                                                                 build-global-assignment
                                                                                 build-global-reference
                                                                                 analyze-variable
                                                                                 build-lexical-assignment
                                                                                 build-lexical-reference
                                                                                 build-dynlet
                                                                                 build-conditional
                                                                                 build-application
                                                                                 build-void
                                                                                 decorate-source
                                                                                 get-global-definition-hook
                                                                                 put-global-definition-hook
                                                                                 gensym-hook
                                                                                 local-eval-hook
                                                                                 top-level-eval-hook
                                                                                 fx<
                                                                                 fx=
                                                                                 fx-
                                                                                 fx+
                                                                                 *mode*)
                                                                               ((top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top))
                                                                               ("i11265"
                                                                                "i11263"
                                                                                "i11261"
                                                                                "i11259"
                                                                                "i11257"
                                                                                "i11255"
                                                                                "i11253"
                                                                                "i11251"
                                                                                "i11249"
                                                                                "i11247"
                                                                                "i11245"
                                                                                "i11243"
                                                                                "i11241"
                                                                                "i11239"
                                                                                "i11237"
                                                                                "i11235"
                                                                                "i11233"
                                                                                "i11231"
                                                                                "i11229"
                                                                                "i11227"
                                                                                "i11225"
                                                                                "i11223"
                                                                                "i11221"
                                                                                "i11219"
                                                                                "i11217"
                                                                                "i11215"
                                                                                "i11213"
                                                                                "i11211"
                                                                                "i11209"
                                                                                "i11207"
                                                                                "i11205"
                                                                                "i11203"
                                                                                "i11201"
                                                                                "i11199"
                                                                                "i11197"
                                                                                "i11195"
                                                                                "i11194"
                                                                                "i11193"
                                                                                "i11191"
                                                                                "i11190"
                                                                                "i11189"
                                                                                "i11188"
                                                                                "i11187"
                                                                                "i11185"
                                                                                "i11183"
                                                                                "i11181"
                                                                                "i11179"
                                                                                "i11177"
                                                                                "i11175"
                                                                                "i11173"
                                                                                "i11171"
                                                                                "i11168"
                                                                                "i11166"
                                                                                "i11165"
                                                                                "i11164"
                                                                                "i11163"
                                                                                "i11162"
                                                                                "i11161"
                                                                                "i11159"
                                                                                "i11157"
                                                                                "i11155"
                                                                                "i11153"
                                                                                "i11152"
                                                                                "i11150"
                                                                                "i11148"
                                                                                "i11146"
                                                                                "i11144"
                                                                                "i11142"
                                                                                "i11140"
                                                                                "i11138"
                                                                                "i11137"
                                                                                "i11135"
                                                                                "i11133"
                                                                                "i11132"
                                                                                "i11131"
                                                                                "i11129"
                                                                                "i11128"
                                                                                "i11126"
                                                                                "i11124"
                                                                                "i11122"
                                                                                "i11120"
                                                                                "i11118"
                                                                                "i11116"
                                                                                "i11114"
                                                                                "i11112"
                                                                                "i11110"
                                                                                "i11108"
                                                                                "i11106"
                                                                                "i11104"
                                                                                "i11102"
                                                                                "i11100"
                                                                                "i11098"
                                                                                "i11096"
                                                                                "i11094"
                                                                                "i11092"
                                                                                "i11090"
                                                                                "i11088"
                                                                                "i11086"
                                                                                "i11084"
                                                                                "i11082"
                                                                                "i11080"
                                                                                "i11078"
                                                                                "i11076"
                                                                                "i11074"
                                                                                "i11072"
                                                                                "i11070"
                                                                                "i11068"
                                                                                "i11066"
                                                                                "i11064"
                                                                                "i11063"
                                                                                "i11061"
                                                                                "i11059"
                                                                                "i11057"
                                                                                "i11055"
                                                                                "i11053"
                                                                                "i11051"
                                                                                "i11049"))
                                                                             #(ribcage
                                                                               (define-structure
                                                                                 and-map*)
                                                                               ((top)
                                                                                (top))
                                                                               ("i10952"
                                                                                "i10950")))
                                                                            (hygiene
                                                                              guile)))
                                                                        '(())
                                                                        #{s\ 12551}#
                                                                        #{mod\ 12553}#))
                                                                    #{tmp\ 12651}#)
                                                             (syntax-violation
                                                               #f
                                                               "source expression failed to match any pattern"
                                                               #{tmp\ 12612}#)))
                                                         ($sc-dispatch
                                                           #{tmp\ 12612}#
                                                           '(any any)))))
                                                    ($sc-dispatch
                                                      #{tmp\ 12612}#
                                                      '(any (any . any)
                                                            any
                                                            .
                                                            each-any)))))
                                               ($sc-dispatch
                                                 #{tmp\ 12612}#
                                                 '(any any any))))
                                            #{e\ 12548}#)
                                           (if (memv #{ftype\ 12580}#
                                                     '(define-syntax))
                                             ((lambda (#{tmp\ 12662}#)
                                                ((lambda (#{tmp\ 12663}#)
                                                   (if (if #{tmp\ 12663}#
                                                         (apply (lambda (#{_\ 12667}#
                                                                         #{name\ 12668}#
                                                                         #{val\ 12669}#)
                                                                  (#{id?\ 11151}#
                                                                    #{name\ 12668}#))
                                                                #{tmp\ 12663}#)
                                                         #f)
                                                     (apply (lambda (#{_\ 12673}#
                                                                     #{name\ 12674}#
                                                                     #{val\ 12675}#)
                                                              (values
                                                                'define-syntax-form
                                                                #{name\ 12674}#
                                                                #{val\ 12675}#
                                                                #{w\ 12550}#
                                                                #{s\ 12551}#
                                                                #{mod\ 12553}#))
                                                            #{tmp\ 12663}#)
                                                     (syntax-violation
                                                       #f
                                                       "source expression failed to match any pattern"
                                                       #{tmp\ 12662}#)))
                                                 ($sc-dispatch
                                                   #{tmp\ 12662}#
                                                   '(any any any))))
                                              #{e\ 12548}#)
                                             (values
                                               'call
                                               #f
                                               #{e\ 12548}#
                                               #{w\ 12550}#
                                               #{s\ 12551}#
                                               #{mod\ 12553}#))))))))))))))
                   (if (#{syntax-object?\ 11115}# #{e\ 12548}#)
                     (#{syntax-type\ 11232}#
                       (#{syntax-object-expression\ 11117}#
                         #{e\ 12548}#)
                       #{r\ 12549}#
                       (#{join-wraps\ 11202}#
                         #{w\ 12550}#
                         (#{syntax-object-wrap\ 11119}# #{e\ 12548}#))
                       #{s\ 12551}#
                       #{rib\ 12552}#
                       (let ((#{t\ 12681}#
                               (#{syntax-object-module\ 11121}# #{e\ 12548}#)))
                         (if #{t\ 12681}# #{t\ 12681}# #{mod\ 12553}#))
                       #{for-car?\ 12554}#)
                     (if (self-evaluating? #{e\ 12548}#)
                       (values
                         'constant
                         #f
                         #{e\ 12548}#
                         #{w\ 12550}#
                         #{s\ 12551}#
                         #{mod\ 12553}#)
                       (values
                         'other
                         #f
                         #{e\ 12548}#
                         #{w\ 12550}#
                         #{s\ 12551}#
                         #{mod\ 12553}#)))))))
           (#{chi-when-list\ 11230}#
             (lambda (#{e\ 12686}# #{when-list\ 12687}# #{w\ 12688}#)
               (letrec ((#{f\ 12695}#
                          (lambda (#{when-list\ 12696}# #{situations\ 12697}#)
                            (if (null? #{when-list\ 12696}#)
                              #{situations\ 12697}#
                              (#{f\ 12695}#
                                (cdr #{when-list\ 12696}#)
                                (cons (let ((#{x\ 12699}#
                                              (car #{when-list\ 12696}#)))
                                        (if (#{free-id=?\ 11210}#
                                              #{x\ 12699}#
                                              '#(syntax-object
                                                 compile
                                                 ((top)
                                                  #(ribcage () () ())
                                                  #(ribcage () () ())
                                                  #(ribcage () () ())
                                                  #(ribcage
                                                    #(x)
                                                    #((top))
                                                    #("i12698"))
                                                  #(ribcage () () ())
                                                  #(ribcage
                                                    #(f when-list situations)
                                                    #((top) (top) (top))
                                                    #("i12692"
                                                      "i12693"
                                                      "i12694"))
                                                  #(ribcage () () ())
                                                  #(ribcage
                                                    #(e when-list w)
                                                    #((top) (top) (top))
                                                    #("i12689"
                                                      "i12690"
                                                      "i12691"))
                                                  #(ribcage
                                                    (lambda-var-list
                                                      gen-var
                                                      strip
                                                      chi-lambda-case
                                                      lambda*-formals
                                                      chi-simple-lambda
                                                      lambda-formals
                                                      ellipsis?
                                                      chi-void
                                                      eval-local-transformer
                                                      chi-local-syntax
                                                      chi-body
                                                      chi-macro
                                                      chi-application
                                                      chi-expr
                                                      chi
                                                      chi-top
                                                      syntax-type
                                                      chi-when-list
                                                      chi-install-global
                                                      chi-top-sequence
                                                      chi-sequence
                                                      source-wrap
                                                      wrap
                                                      bound-id-member?
                                                      distinct-bound-ids?
                                                      valid-bound-ids?
                                                      bound-id=?
                                                      free-id=?
                                                      id-var-name
                                                      same-marks?
                                                      join-marks
                                                      join-wraps
                                                      smart-append
                                                      make-binding-wrap
                                                      extend-ribcage!
                                                      make-empty-ribcage
                                                      new-mark
                                                      anti-mark
                                                      the-anti-mark
                                                      top-marked?
                                                      top-wrap
                                                      empty-wrap
                                                      set-ribcage-labels!
                                                      set-ribcage-marks!
                                                      set-ribcage-symnames!
                                                      ribcage-labels
                                                      ribcage-marks
                                                      ribcage-symnames
                                                      ribcage?
                                                      make-ribcage
                                                      gen-labels
                                                      gen-label
                                                      make-rename
                                                      rename-marks
                                                      rename-new
                                                      rename-old
                                                      subst-rename?
                                                      wrap-subst
                                                      wrap-marks
                                                      make-wrap
                                                      id-sym-name&marks
                                                      id-sym-name
                                                      id?
                                                      nonsymbol-id?
                                                      global-extend
                                                      lookup
                                                      macros-only-env
                                                      extend-var-env
                                                      extend-env
                                                      null-env
                                                      binding-value
                                                      binding-type
                                                      make-binding
                                                      arg-check
                                                      source-annotation
                                                      no-source
                                                      set-syntax-object-module!
                                                      set-syntax-object-wrap!
                                                      set-syntax-object-expression!
                                                      syntax-object-module
                                                      syntax-object-wrap
                                                      syntax-object-expression
                                                      syntax-object?
                                                      make-syntax-object
                                                      build-lexical-var
                                                      build-letrec
                                                      build-named-let
                                                      build-let
                                                      build-sequence
                                                      build-data
                                                      build-primref
                                                      build-lambda-case
                                                      build-case-lambda
                                                      build-simple-lambda
                                                      build-global-definition
                                                      maybe-name-value!
                                                      build-global-assignment
                                                      build-global-reference
                                                      analyze-variable
                                                      build-lexical-assignment
                                                      build-lexical-reference
                                                      build-dynlet
                                                      build-conditional
                                                      build-application
                                                      build-void
                                                      decorate-source
                                                      get-global-definition-hook
                                                      put-global-definition-hook
                                                      gensym-hook
                                                      local-eval-hook
                                                      top-level-eval-hook
                                                      fx<
                                                      fx=
                                                      fx-
                                                      fx+
                                                      *mode*)
                                                    ((top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top))
                                                    ("i11265"
                                                     "i11263"
                                                     "i11261"
                                                     "i11259"
                                                     "i11257"
                                                     "i11255"
                                                     "i11253"
                                                     "i11251"
                                                     "i11249"
                                                     "i11247"
                                                     "i11245"
                                                     "i11243"
                                                     "i11241"
                                                     "i11239"
                                                     "i11237"
                                                     "i11235"
                                                     "i11233"
                                                     "i11231"
                                                     "i11229"
                                                     "i11227"
                                                     "i11225"
                                                     "i11223"
                                                     "i11221"
                                                     "i11219"
                                                     "i11217"
                                                     "i11215"
                                                     "i11213"
                                                     "i11211"
                                                     "i11209"
                                                     "i11207"
                                                     "i11205"
                                                     "i11203"
                                                     "i11201"
                                                     "i11199"
                                                     "i11197"
                                                     "i11195"
                                                     "i11194"
                                                     "i11193"
                                                     "i11191"
                                                     "i11190"
                                                     "i11189"
                                                     "i11188"
                                                     "i11187"
                                                     "i11185"
                                                     "i11183"
                                                     "i11181"
                                                     "i11179"
                                                     "i11177"
                                                     "i11175"
                                                     "i11173"
                                                     "i11171"
                                                     "i11168"
                                                     "i11166"
                                                     "i11165"
                                                     "i11164"
                                                     "i11163"
                                                     "i11162"
                                                     "i11161"
                                                     "i11159"
                                                     "i11157"
                                                     "i11155"
                                                     "i11153"
                                                     "i11152"
                                                     "i11150"
                                                     "i11148"
                                                     "i11146"
                                                     "i11144"
                                                     "i11142"
                                                     "i11140"
                                                     "i11138"
                                                     "i11137"
                                                     "i11135"
                                                     "i11133"
                                                     "i11132"
                                                     "i11131"
                                                     "i11129"
                                                     "i11128"
                                                     "i11126"
                                                     "i11124"
                                                     "i11122"
                                                     "i11120"
                                                     "i11118"
                                                     "i11116"
                                                     "i11114"
                                                     "i11112"
                                                     "i11110"
                                                     "i11108"
                                                     "i11106"
                                                     "i11104"
                                                     "i11102"
                                                     "i11100"
                                                     "i11098"
                                                     "i11096"
                                                     "i11094"
                                                     "i11092"
                                                     "i11090"
                                                     "i11088"
                                                     "i11086"
                                                     "i11084"
                                                     "i11082"
                                                     "i11080"
                                                     "i11078"
                                                     "i11076"
                                                     "i11074"
                                                     "i11072"
                                                     "i11070"
                                                     "i11068"
                                                     "i11066"
                                                     "i11064"
                                                     "i11063"
                                                     "i11061"
                                                     "i11059"
                                                     "i11057"
                                                     "i11055"
                                                     "i11053"
                                                     "i11051"
                                                     "i11049"))
                                                  #(ribcage
                                                    (define-structure and-map*)
                                                    ((top) (top))
                                                    ("i10952" "i10950")))
                                                 (hygiene guile)))
                                          'compile
                                          (if (#{free-id=?\ 11210}#
                                                #{x\ 12699}#
                                                '#(syntax-object
                                                   load
                                                   ((top)
                                                    #(ribcage () () ())
                                                    #(ribcage () () ())
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(x)
                                                      #((top))
                                                      #("i12698"))
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(f when-list situations)
                                                      #((top) (top) (top))
                                                      #("i12692"
                                                        "i12693"
                                                        "i12694"))
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(e when-list w)
                                                      #((top) (top) (top))
                                                      #("i12689"
                                                        "i12690"
                                                        "i12691"))
                                                    #(ribcage
                                                      (lambda-var-list
                                                        gen-var
                                                        strip
                                                        chi-lambda-case
                                                        lambda*-formals
                                                        chi-simple-lambda
                                                        lambda-formals
                                                        ellipsis?
                                                        chi-void
                                                        eval-local-transformer
                                                        chi-local-syntax
                                                        chi-body
                                                        chi-macro
                                                        chi-application
                                                        chi-expr
                                                        chi
                                                        chi-top
                                                        syntax-type
                                                        chi-when-list
                                                        chi-install-global
                                                        chi-top-sequence
                                                        chi-sequence
                                                        source-wrap
                                                        wrap
                                                        bound-id-member?
                                                        distinct-bound-ids?
                                                        valid-bound-ids?
                                                        bound-id=?
                                                        free-id=?
                                                        id-var-name
                                                        same-marks?
                                                        join-marks
                                                        join-wraps
                                                        smart-append
                                                        make-binding-wrap
                                                        extend-ribcage!
                                                        make-empty-ribcage
                                                        new-mark
                                                        anti-mark
                                                        the-anti-mark
                                                        top-marked?
                                                        top-wrap
                                                        empty-wrap
                                                        set-ribcage-labels!
                                                        set-ribcage-marks!
                                                        set-ribcage-symnames!
                                                        ribcage-labels
                                                        ribcage-marks
                                                        ribcage-symnames
                                                        ribcage?
                                                        make-ribcage
                                                        gen-labels
                                                        gen-label
                                                        make-rename
                                                        rename-marks
                                                        rename-new
                                                        rename-old
                                                        subst-rename?
                                                        wrap-subst
                                                        wrap-marks
                                                        make-wrap
                                                        id-sym-name&marks
                                                        id-sym-name
                                                        id?
                                                        nonsymbol-id?
                                                        global-extend
                                                        lookup
                                                        macros-only-env
                                                        extend-var-env
                                                        extend-env
                                                        null-env
                                                        binding-value
                                                        binding-type
                                                        make-binding
                                                        arg-check
                                                        source-annotation
                                                        no-source
                                                        set-syntax-object-module!
                                                        set-syntax-object-wrap!
                                                        set-syntax-object-expression!
                                                        syntax-object-module
                                                        syntax-object-wrap
                                                        syntax-object-expression
                                                        syntax-object?
                                                        make-syntax-object
                                                        build-lexical-var
                                                        build-letrec
                                                        build-named-let
                                                        build-let
                                                        build-sequence
                                                        build-data
                                                        build-primref
                                                        build-lambda-case
                                                        build-case-lambda
                                                        build-simple-lambda
                                                        build-global-definition
                                                        maybe-name-value!
                                                        build-global-assignment
                                                        build-global-reference
                                                        analyze-variable
                                                        build-lexical-assignment
                                                        build-lexical-reference
                                                        build-dynlet
                                                        build-conditional
                                                        build-application
                                                        build-void
                                                        decorate-source
                                                        get-global-definition-hook
                                                        put-global-definition-hook
                                                        gensym-hook
                                                        local-eval-hook
                                                        top-level-eval-hook
                                                        fx<
                                                        fx=
                                                        fx-
                                                        fx+
                                                        *mode*)
                                                      ((top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top))
                                                      ("i11265"
                                                       "i11263"
                                                       "i11261"
                                                       "i11259"
                                                       "i11257"
                                                       "i11255"
                                                       "i11253"
                                                       "i11251"
                                                       "i11249"
                                                       "i11247"
                                                       "i11245"
                                                       "i11243"
                                                       "i11241"
                                                       "i11239"
                                                       "i11237"
                                                       "i11235"
                                                       "i11233"
                                                       "i11231"
                                                       "i11229"
                                                       "i11227"
                                                       "i11225"
                                                       "i11223"
                                                       "i11221"
                                                       "i11219"
                                                       "i11217"
                                                       "i11215"
                                                       "i11213"
                                                       "i11211"
                                                       "i11209"
                                                       "i11207"
                                                       "i11205"
                                                       "i11203"
                                                       "i11201"
                                                       "i11199"
                                                       "i11197"
                                                       "i11195"
                                                       "i11194"
                                                       "i11193"
                                                       "i11191"
                                                       "i11190"
                                                       "i11189"
                                                       "i11188"
                                                       "i11187"
                                                       "i11185"
                                                       "i11183"
                                                       "i11181"
                                                       "i11179"
                                                       "i11177"
                                                       "i11175"
                                                       "i11173"
                                                       "i11171"
                                                       "i11168"
                                                       "i11166"
                                                       "i11165"
                                                       "i11164"
                                                       "i11163"
                                                       "i11162"
                                                       "i11161"
                                                       "i11159"
                                                       "i11157"
                                                       "i11155"
                                                       "i11153"
                                                       "i11152"
                                                       "i11150"
                                                       "i11148"
                                                       "i11146"
                                                       "i11144"
                                                       "i11142"
                                                       "i11140"
                                                       "i11138"
                                                       "i11137"
                                                       "i11135"
                                                       "i11133"
                                                       "i11132"
                                                       "i11131"
                                                       "i11129"
                                                       "i11128"
                                                       "i11126"
                                                       "i11124"
                                                       "i11122"
                                                       "i11120"
                                                       "i11118"
                                                       "i11116"
                                                       "i11114"
                                                       "i11112"
                                                       "i11110"
                                                       "i11108"
                                                       "i11106"
                                                       "i11104"
                                                       "i11102"
                                                       "i11100"
                                                       "i11098"
                                                       "i11096"
                                                       "i11094"
                                                       "i11092"
                                                       "i11090"
                                                       "i11088"
                                                       "i11086"
                                                       "i11084"
                                                       "i11082"
                                                       "i11080"
                                                       "i11078"
                                                       "i11076"
                                                       "i11074"
                                                       "i11072"
                                                       "i11070"
                                                       "i11068"
                                                       "i11066"
                                                       "i11064"
                                                       "i11063"
                                                       "i11061"
                                                       "i11059"
                                                       "i11057"
                                                       "i11055"
                                                       "i11053"
                                                       "i11051"
                                                       "i11049"))
                                                    #(ribcage
                                                      (define-structure
                                                        and-map*)
                                                      ((top) (top))
                                                      ("i10952" "i10950")))
                                                   (hygiene guile)))
                                            'load
                                            (if (#{free-id=?\ 11210}#
                                                  #{x\ 12699}#
                                                  '#(syntax-object
                                                     eval
                                                     ((top)
                                                      #(ribcage () () ())
                                                      #(ribcage () () ())
                                                      #(ribcage () () ())
                                                      #(ribcage
                                                        #(x)
                                                        #((top))
                                                        #("i12698"))
                                                      #(ribcage () () ())
                                                      #(ribcage
                                                        #(f
                                                          when-list
                                                          situations)
                                                        #((top) (top) (top))
                                                        #("i12692"
                                                          "i12693"
                                                          "i12694"))
                                                      #(ribcage () () ())
                                                      #(ribcage
                                                        #(e when-list w)
                                                        #((top) (top) (top))
                                                        #("i12689"
                                                          "i12690"
                                                          "i12691"))
                                                      #(ribcage
                                                        (lambda-var-list
                                                          gen-var
                                                          strip
                                                          chi-lambda-case
                                                          lambda*-formals
                                                          chi-simple-lambda
                                                          lambda-formals
                                                          ellipsis?
                                                          chi-void
                                                          eval-local-transformer
                                                          chi-local-syntax
                                                          chi-body
                                                          chi-macro
                                                          chi-application
                                                          chi-expr
                                                          chi
                                                          chi-top
                                                          syntax-type
                                                          chi-when-list
                                                          chi-install-global
                                                          chi-top-sequence
                                                          chi-sequence
                                                          source-wrap
                                                          wrap
                                                          bound-id-member?
                                                          distinct-bound-ids?
                                                          valid-bound-ids?
                                                          bound-id=?
                                                          free-id=?
                                                          id-var-name
                                                          same-marks?
                                                          join-marks
                                                          join-wraps
                                                          smart-append
                                                          make-binding-wrap
                                                          extend-ribcage!
                                                          make-empty-ribcage
                                                          new-mark
                                                          anti-mark
                                                          the-anti-mark
                                                          top-marked?
                                                          top-wrap
                                                          empty-wrap
                                                          set-ribcage-labels!
                                                          set-ribcage-marks!
                                                          set-ribcage-symnames!
                                                          ribcage-labels
                                                          ribcage-marks
                                                          ribcage-symnames
                                                          ribcage?
                                                          make-ribcage
                                                          gen-labels
                                                          gen-label
                                                          make-rename
                                                          rename-marks
                                                          rename-new
                                                          rename-old
                                                          subst-rename?
                                                          wrap-subst
                                                          wrap-marks
                                                          make-wrap
                                                          id-sym-name&marks
                                                          id-sym-name
                                                          id?
                                                          nonsymbol-id?
                                                          global-extend
                                                          lookup
                                                          macros-only-env
                                                          extend-var-env
                                                          extend-env
                                                          null-env
                                                          binding-value
                                                          binding-type
                                                          make-binding
                                                          arg-check
                                                          source-annotation
                                                          no-source
                                                          set-syntax-object-module!
                                                          set-syntax-object-wrap!
                                                          set-syntax-object-expression!
                                                          syntax-object-module
                                                          syntax-object-wrap
                                                          syntax-object-expression
                                                          syntax-object?
                                                          make-syntax-object
                                                          build-lexical-var
                                                          build-letrec
                                                          build-named-let
                                                          build-let
                                                          build-sequence
                                                          build-data
                                                          build-primref
                                                          build-lambda-case
                                                          build-case-lambda
                                                          build-simple-lambda
                                                          build-global-definition
                                                          maybe-name-value!
                                                          build-global-assignment
                                                          build-global-reference
                                                          analyze-variable
                                                          build-lexical-assignment
                                                          build-lexical-reference
                                                          build-dynlet
                                                          build-conditional
                                                          build-application
                                                          build-void
                                                          decorate-source
                                                          get-global-definition-hook
                                                          put-global-definition-hook
                                                          gensym-hook
                                                          local-eval-hook
                                                          top-level-eval-hook
                                                          fx<
                                                          fx=
                                                          fx-
                                                          fx+
                                                          *mode*)
                                                        ((top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top))
                                                        ("i11265"
                                                         "i11263"
                                                         "i11261"
                                                         "i11259"
                                                         "i11257"
                                                         "i11255"
                                                         "i11253"
                                                         "i11251"
                                                         "i11249"
                                                         "i11247"
                                                         "i11245"
                                                         "i11243"
                                                         "i11241"
                                                         "i11239"
                                                         "i11237"
                                                         "i11235"
                                                         "i11233"
                                                         "i11231"
                                                         "i11229"
                                                         "i11227"
                                                         "i11225"
                                                         "i11223"
                                                         "i11221"
                                                         "i11219"
                                                         "i11217"
                                                         "i11215"
                                                         "i11213"
                                                         "i11211"
                                                         "i11209"
                                                         "i11207"
                                                         "i11205"
                                                         "i11203"
                                                         "i11201"
                                                         "i11199"
                                                         "i11197"
                                                         "i11195"
                                                         "i11194"
                                                         "i11193"
                                                         "i11191"
                                                         "i11190"
                                                         "i11189"
                                                         "i11188"
                                                         "i11187"
                                                         "i11185"
                                                         "i11183"
                                                         "i11181"
                                                         "i11179"
                                                         "i11177"
                                                         "i11175"
                                                         "i11173"
                                                         "i11171"
                                                         "i11168"
                                                         "i11166"
                                                         "i11165"
                                                         "i11164"
                                                         "i11163"
                                                         "i11162"
                                                         "i11161"
                                                         "i11159"
                                                         "i11157"
                                                         "i11155"
                                                         "i11153"
                                                         "i11152"
                                                         "i11150"
                                                         "i11148"
                                                         "i11146"
                                                         "i11144"
                                                         "i11142"
                                                         "i11140"
                                                         "i11138"
                                                         "i11137"
                                                         "i11135"
                                                         "i11133"
                                                         "i11132"
                                                         "i11131"
                                                         "i11129"
                                                         "i11128"
                                                         "i11126"
                                                         "i11124"
                                                         "i11122"
                                                         "i11120"
                                                         "i11118"
                                                         "i11116"
                                                         "i11114"
                                                         "i11112"
                                                         "i11110"
                                                         "i11108"
                                                         "i11106"
                                                         "i11104"
                                                         "i11102"
                                                         "i11100"
                                                         "i11098"
                                                         "i11096"
                                                         "i11094"
                                                         "i11092"
                                                         "i11090"
                                                         "i11088"
                                                         "i11086"
                                                         "i11084"
                                                         "i11082"
                                                         "i11080"
                                                         "i11078"
                                                         "i11076"
                                                         "i11074"
                                                         "i11072"
                                                         "i11070"
                                                         "i11068"
                                                         "i11066"
                                                         "i11064"
                                                         "i11063"
                                                         "i11061"
                                                         "i11059"
                                                         "i11057"
                                                         "i11055"
                                                         "i11053"
                                                         "i11051"
                                                         "i11049"))
                                                      #(ribcage
                                                        (define-structure
                                                          and-map*)
                                                        ((top) (top))
                                                        ("i10952" "i10950")))
                                                     (hygiene guile)))
                                              'eval
                                              (if (#{free-id=?\ 11210}#
                                                    #{x\ 12699}#
                                                    '#(syntax-object
                                                       expand
                                                       ((top)
                                                        #(ribcage () () ())
                                                        #(ribcage () () ())
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(x)
                                                          #((top))
                                                          #("i12698"))
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(f
                                                            when-list
                                                            situations)
                                                          #((top) (top) (top))
                                                          #("i12692"
                                                            "i12693"
                                                            "i12694"))
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(e when-list w)
                                                          #((top) (top) (top))
                                                          #("i12689"
                                                            "i12690"
                                                            "i12691"))
                                                        #(ribcage
                                                          (lambda-var-list
                                                            gen-var
                                                            strip
                                                            chi-lambda-case
                                                            lambda*-formals
                                                            chi-simple-lambda
                                                            lambda-formals
                                                            ellipsis?
                                                            chi-void
                                                            eval-local-transformer
                                                            chi-local-syntax
                                                            chi-body
                                                            chi-macro
                                                            chi-application
                                                            chi-expr
                                                            chi
                                                            chi-top
                                                            syntax-type
                                                            chi-when-list
                                                            chi-install-global
                                                            chi-top-sequence
                                                            chi-sequence
                                                            source-wrap
                                                            wrap
                                                            bound-id-member?
                                                            distinct-bound-ids?
                                                            valid-bound-ids?
                                                            bound-id=?
                                                            free-id=?
                                                            id-var-name
                                                            same-marks?
                                                            join-marks
                                                            join-wraps
                                                            smart-append
                                                            make-binding-wrap
                                                            extend-ribcage!
                                                            make-empty-ribcage
                                                            new-mark
                                                            anti-mark
                                                            the-anti-mark
                                                            top-marked?
                                                            top-wrap
                                                            empty-wrap
                                                            set-ribcage-labels!
                                                            set-ribcage-marks!
                                                            set-ribcage-symnames!
                                                            ribcage-labels
                                                            ribcage-marks
                                                            ribcage-symnames
                                                            ribcage?
                                                            make-ribcage
                                                            gen-labels
                                                            gen-label
                                                            make-rename
                                                            rename-marks
                                                            rename-new
                                                            rename-old
                                                            subst-rename?
                                                            wrap-subst
                                                            wrap-marks
                                                            make-wrap
                                                            id-sym-name&marks
                                                            id-sym-name
                                                            id?
                                                            nonsymbol-id?
                                                            global-extend
                                                            lookup
                                                            macros-only-env
                                                            extend-var-env
                                                            extend-env
                                                            null-env
                                                            binding-value
                                                            binding-type
                                                            make-binding
                                                            arg-check
                                                            source-annotation
                                                            no-source
                                                            set-syntax-object-module!
                                                            set-syntax-object-wrap!
                                                            set-syntax-object-expression!
                                                            syntax-object-module
                                                            syntax-object-wrap
                                                            syntax-object-expression
                                                            syntax-object?
                                                            make-syntax-object
                                                            build-lexical-var
                                                            build-letrec
                                                            build-named-let
                                                            build-let
                                                            build-sequence
                                                            build-data
                                                            build-primref
                                                            build-lambda-case
                                                            build-case-lambda
                                                            build-simple-lambda
                                                            build-global-definition
                                                            maybe-name-value!
                                                            build-global-assignment
                                                            build-global-reference
                                                            analyze-variable
                                                            build-lexical-assignment
                                                            build-lexical-reference
                                                            build-dynlet
                                                            build-conditional
                                                            build-application
                                                            build-void
                                                            decorate-source
                                                            get-global-definition-hook
                                                            put-global-definition-hook
                                                            gensym-hook
                                                            local-eval-hook
                                                            top-level-eval-hook
                                                            fx<
                                                            fx=
                                                            fx-
                                                            fx+
                                                            *mode*)
                                                          ((top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top))
                                                          ("i11265"
                                                           "i11263"
                                                           "i11261"
                                                           "i11259"
                                                           "i11257"
                                                           "i11255"
                                                           "i11253"
                                                           "i11251"
                                                           "i11249"
                                                           "i11247"
                                                           "i11245"
                                                           "i11243"
                                                           "i11241"
                                                           "i11239"
                                                           "i11237"
                                                           "i11235"
                                                           "i11233"
                                                           "i11231"
                                                           "i11229"
                                                           "i11227"
                                                           "i11225"
                                                           "i11223"
                                                           "i11221"
                                                           "i11219"
                                                           "i11217"
                                                           "i11215"
                                                           "i11213"
                                                           "i11211"
                                                           "i11209"
                                                           "i11207"
                                                           "i11205"
                                                           "i11203"
                                                           "i11201"
                                                           "i11199"
                                                           "i11197"
                                                           "i11195"
                                                           "i11194"
                                                           "i11193"
                                                           "i11191"
                                                           "i11190"
                                                           "i11189"
                                                           "i11188"
                                                           "i11187"
                                                           "i11185"
                                                           "i11183"
                                                           "i11181"
                                                           "i11179"
                                                           "i11177"
                                                           "i11175"
                                                           "i11173"
                                                           "i11171"
                                                           "i11168"
                                                           "i11166"
                                                           "i11165"
                                                           "i11164"
                                                           "i11163"
                                                           "i11162"
                                                           "i11161"
                                                           "i11159"
                                                           "i11157"
                                                           "i11155"
                                                           "i11153"
                                                           "i11152"
                                                           "i11150"
                                                           "i11148"
                                                           "i11146"
                                                           "i11144"
                                                           "i11142"
                                                           "i11140"
                                                           "i11138"
                                                           "i11137"
                                                           "i11135"
                                                           "i11133"
                                                           "i11132"
                                                           "i11131"
                                                           "i11129"
                                                           "i11128"
                                                           "i11126"
                                                           "i11124"
                                                           "i11122"
                                                           "i11120"
                                                           "i11118"
                                                           "i11116"
                                                           "i11114"
                                                           "i11112"
                                                           "i11110"
                                                           "i11108"
                                                           "i11106"
                                                           "i11104"
                                                           "i11102"
                                                           "i11100"
                                                           "i11098"
                                                           "i11096"
                                                           "i11094"
                                                           "i11092"
                                                           "i11090"
                                                           "i11088"
                                                           "i11086"
                                                           "i11084"
                                                           "i11082"
                                                           "i11080"
                                                           "i11078"
                                                           "i11076"
                                                           "i11074"
                                                           "i11072"
                                                           "i11070"
                                                           "i11068"
                                                           "i11066"
                                                           "i11064"
                                                           "i11063"
                                                           "i11061"
                                                           "i11059"
                                                           "i11057"
                                                           "i11055"
                                                           "i11053"
                                                           "i11051"
                                                           "i11049"))
                                                        #(ribcage
                                                          (define-structure
                                                            and-map*)
                                                          ((top) (top))
                                                          ("i10952" "i10950")))
                                                       (hygiene guile)))
                                                'expand
                                                (syntax-violation
                                                  'eval-when
                                                  "invalid situation"
                                                  #{e\ 12686}#
                                                  (#{wrap\ 11220}#
                                                    #{x\ 12699}#
                                                    #{w\ 12688}#
                                                    #f)))))))
                                      #{situations\ 12697}#))))))
                 (#{f\ 12695}# #{when-list\ 12687}# (quote ())))))
           (#{chi-install-global\ 11228}#
             (lambda (#{name\ 12709}# #{e\ 12710}#)
               (#{build-global-definition\ 11091}#
                 #f
                 #{name\ 12709}#
                 (#{build-application\ 11073}#
                   #f
                   (#{build-primref\ 11099}#
                     #f
                     'make-syntax-transformer)
                   (list (#{build-data\ 11101}# #f #{name\ 12709}#)
                         (#{build-data\ 11101}# #f (quote macro))
                         (#{build-application\ 11073}#
                           #f
                           (#{build-primref\ 11099}# #f (quote cons))
                           (list #{e\ 12710}#
                                 (#{build-application\ 11073}#
                                   #f
                                   (#{build-primref\ 11099}#
                                     #f
                                     'module-name)
                                   (list (#{build-application\ 11073}#
                                           #f
                                           (#{build-primref\ 11099}#
                                             #f
                                             'current-module)
                                           '()))))))))))
           (#{chi-top-sequence\ 11226}#
             (lambda (#{body\ 12724}#
                      #{r\ 12725}#
                      #{w\ 12726}#
                      #{s\ 12727}#
                      #{m\ 12728}#
                      #{esew\ 12729}#
                      #{mod\ 12730}#)
               (#{build-sequence\ 11103}#
                 #{s\ 12727}#
                 (letrec ((#{dobody\ 12746}#
                            (lambda (#{body\ 12747}#
                                     #{r\ 12748}#
                                     #{w\ 12749}#
                                     #{m\ 12750}#
                                     #{esew\ 12751}#
                                     #{mod\ 12752}#
                                     #{out\ 12753}#)
                              (if (null? #{body\ 12747}#)
                                (reverse #{out\ 12753}#)
                                (#{dobody\ 12746}#
                                  (cdr #{body\ 12747}#)
                                  #{r\ 12748}#
                                  #{w\ 12749}#
                                  #{m\ 12750}#
                                  #{esew\ 12751}#
                                  #{mod\ 12752}#
                                  (cons (#{chi-top\ 11234}#
                                          (car #{body\ 12747}#)
                                          #{r\ 12748}#
                                          #{w\ 12749}#
                                          #{m\ 12750}#
                                          #{esew\ 12751}#
                                          #{mod\ 12752}#)
                                        #{out\ 12753}#))))))
                   (#{dobody\ 12746}#
                     #{body\ 12724}#
                     #{r\ 12725}#
                     #{w\ 12726}#
                     #{m\ 12728}#
                     #{esew\ 12729}#
                     #{mod\ 12730}#
                     '())))))
           (#{chi-sequence\ 11224}#
             (lambda (#{body\ 12754}#
                      #{r\ 12755}#
                      #{w\ 12756}#
                      #{s\ 12757}#
                      #{mod\ 12758}#)
               (#{build-sequence\ 11103}#
                 #{s\ 12757}#
                 (letrec ((#{dobody\ 12769}#
                            (lambda (#{body\ 12770}#
                                     #{r\ 12771}#
                                     #{w\ 12772}#
                                     #{mod\ 12773}#)
                              (if (null? #{body\ 12770}#)
                                '()
                                (let ((#{first\ 12775}#
                                        (#{chi\ 11236}#
                                          (car #{body\ 12770}#)
                                          #{r\ 12771}#
                                          #{w\ 12772}#
                                          #{mod\ 12773}#)))
                                  (cons #{first\ 12775}#
                                        (#{dobody\ 12769}#
                                          (cdr #{body\ 12770}#)
                                          #{r\ 12771}#
                                          #{w\ 12772}#
                                          #{mod\ 12773}#)))))))
                   (#{dobody\ 12769}#
                     #{body\ 12754}#
                     #{r\ 12755}#
                     #{w\ 12756}#
                     #{mod\ 12758}#)))))
           (#{source-wrap\ 11222}#
             (lambda (#{x\ 12776}#
                      #{w\ 12777}#
                      #{s\ 12778}#
                      #{defmod\ 12779}#)
               (#{wrap\ 11220}#
                 (#{decorate-source\ 11069}#
                   #{x\ 12776}#
                   #{s\ 12778}#)
                 #{w\ 12777}#
                 #{defmod\ 12779}#)))
           (#{wrap\ 11220}#
             (lambda (#{x\ 12784}# #{w\ 12785}# #{defmod\ 12786}#)
               (if (if (null? (#{wrap-marks\ 11158}# #{w\ 12785}#))
                     (null? (#{wrap-subst\ 11160}# #{w\ 12785}#))
                     #f)
                 #{x\ 12784}#
                 (if (#{syntax-object?\ 11115}# #{x\ 12784}#)
                   (#{make-syntax-object\ 11113}#
                     (#{syntax-object-expression\ 11117}#
                       #{x\ 12784}#)
                     (#{join-wraps\ 11202}#
                       #{w\ 12785}#
                       (#{syntax-object-wrap\ 11119}# #{x\ 12784}#))
                     (#{syntax-object-module\ 11121}# #{x\ 12784}#))
                   (if (null? #{x\ 12784}#)
                     #{x\ 12784}#
                     (#{make-syntax-object\ 11113}#
                       #{x\ 12784}#
                       #{w\ 12785}#
                       #{defmod\ 12786}#))))))
           (#{bound-id-member?\ 11218}#
             (lambda (#{x\ 12799}# #{list\ 12800}#)
               (if (not (null? #{list\ 12800}#))
                 (let ((#{t\ 12807}#
                         (#{bound-id=?\ 11212}#
                           #{x\ 12799}#
                           (car #{list\ 12800}#))))
                   (if #{t\ 12807}#
                     #{t\ 12807}#
                     (#{bound-id-member?\ 11218}#
                       #{x\ 12799}#
                       (cdr #{list\ 12800}#))))
                 #f)))
           (#{distinct-bound-ids?\ 11216}#
             (lambda (#{ids\ 12809}#)
               (letrec ((#{distinct?\ 12813}#
                          (lambda (#{ids\ 12814}#)
                            (let ((#{t\ 12817}# (null? #{ids\ 12814}#)))
                              (if #{t\ 12817}#
                                #{t\ 12817}#
                                (if (not (#{bound-id-member?\ 11218}#
                                           (car #{ids\ 12814}#)
                                           (cdr #{ids\ 12814}#)))
                                  (#{distinct?\ 12813}# (cdr #{ids\ 12814}#))
                                  #f))))))
                 (#{distinct?\ 12813}# #{ids\ 12809}#))))
           (#{valid-bound-ids?\ 11214}#
             (lambda (#{ids\ 12821}#)
               (if (letrec ((#{all-ids?\ 12826}#
                              (lambda (#{ids\ 12827}#)
                                (let ((#{t\ 12830}# (null? #{ids\ 12827}#)))
                                  (if #{t\ 12830}#
                                    #{t\ 12830}#
                                    (if (#{id?\ 11151}# (car #{ids\ 12827}#))
                                      (#{all-ids?\ 12826}#
                                        (cdr #{ids\ 12827}#))
                                      #f))))))
                     (#{all-ids?\ 12826}# #{ids\ 12821}#))
                 (#{distinct-bound-ids?\ 11216}# #{ids\ 12821}#)
                 #f)))
           (#{bound-id=?\ 11212}#
             (lambda (#{i\ 12835}# #{j\ 12836}#)
               (if (if (#{syntax-object?\ 11115}# #{i\ 12835}#)
                     (#{syntax-object?\ 11115}# #{j\ 12836}#)
                     #f)
                 (if (eq? (#{syntax-object-expression\ 11117}#
                            #{i\ 12835}#)
                          (#{syntax-object-expression\ 11117}#
                            #{j\ 12836}#))
                   (#{same-marks?\ 11206}#
                     (#{wrap-marks\ 11158}#
                       (#{syntax-object-wrap\ 11119}# #{i\ 12835}#))
                     (#{wrap-marks\ 11158}#
                       (#{syntax-object-wrap\ 11119}# #{j\ 12836}#)))
                   #f)
                 (eq? #{i\ 12835}# #{j\ 12836}#))))
           (#{free-id=?\ 11210}#
             (lambda (#{i\ 12843}# #{j\ 12844}#)
               (if (eq? (let ((#{x\ 12850}# #{i\ 12843}#))
                          (if (#{syntax-object?\ 11115}# #{x\ 12850}#)
                            (#{syntax-object-expression\ 11117}#
                              #{x\ 12850}#)
                            #{x\ 12850}#))
                        (let ((#{x\ 12853}# #{j\ 12844}#))
                          (if (#{syntax-object?\ 11115}# #{x\ 12853}#)
                            (#{syntax-object-expression\ 11117}#
                              #{x\ 12853}#)
                            #{x\ 12853}#)))
                 (eq? (#{id-var-name\ 11208}#
                        #{i\ 12843}#
                        '(()))
                      (#{id-var-name\ 11208}#
                        #{j\ 12844}#
                        '(())))
                 #f)))
           (#{id-var-name\ 11208}#
             (lambda (#{id\ 12857}# #{w\ 12858}#)
               (letrec ((#{search-vector-rib\ 12867}#
                          (lambda (#{sym\ 12879}#
                                   #{subst\ 12880}#
                                   #{marks\ 12881}#
                                   #{symnames\ 12882}#
                                   #{ribcage\ 12883}#)
                            (let ((#{n\ 12890}#
                                    (vector-length #{symnames\ 12882}#)))
                              (letrec ((#{f\ 12893}#
                                         (lambda (#{i\ 12894}#)
                                           (if (#{fx=\ 11056}#
                                                 #{i\ 12894}#
                                                 #{n\ 12890}#)
                                             (#{search\ 12863}#
                                               #{sym\ 12879}#
                                               (cdr #{subst\ 12880}#)
                                               #{marks\ 12881}#)
                                             (if (if (eq? (vector-ref
                                                            #{symnames\ 12882}#
                                                            #{i\ 12894}#)
                                                          #{sym\ 12879}#)
                                                   (#{same-marks?\ 11206}#
                                                     #{marks\ 12881}#
                                                     (vector-ref
                                                       (#{ribcage-marks\ 11178}#
                                                         #{ribcage\ 12883}#)
                                                       #{i\ 12894}#))
                                                   #f)
                                               (values
                                                 (vector-ref
                                                   (#{ribcage-labels\ 11180}#
                                                     #{ribcage\ 12883}#)
                                                   #{i\ 12894}#)
                                                 #{marks\ 12881}#)
                                               (#{f\ 12893}#
                                                 (#{fx+\ 11052}#
                                                   #{i\ 12894}#
                                                   1)))))))
                                (#{f\ 12893}# 0)))))
                        (#{search-list-rib\ 12865}#
                          (lambda (#{sym\ 12902}#
                                   #{subst\ 12903}#
                                   #{marks\ 12904}#
                                   #{symnames\ 12905}#
                                   #{ribcage\ 12906}#)
                            (letrec ((#{f\ 12915}#
                                       (lambda (#{symnames\ 12916}#
                                                #{i\ 12917}#)
                                         (if (null? #{symnames\ 12916}#)
                                           (#{search\ 12863}#
                                             #{sym\ 12902}#
                                             (cdr #{subst\ 12903}#)
                                             #{marks\ 12904}#)
                                           (if (if (eq? (car #{symnames\ 12916}#)
                                                        #{sym\ 12902}#)
                                                 (#{same-marks?\ 11206}#
                                                   #{marks\ 12904}#
                                                   (list-ref
                                                     (#{ribcage-marks\ 11178}#
                                                       #{ribcage\ 12906}#)
                                                     #{i\ 12917}#))
                                                 #f)
                                             (values
                                               (list-ref
                                                 (#{ribcage-labels\ 11180}#
                                                   #{ribcage\ 12906}#)
                                                 #{i\ 12917}#)
                                               #{marks\ 12904}#)
                                             (#{f\ 12915}#
                                               (cdr #{symnames\ 12916}#)
                                               (#{fx+\ 11052}#
                                                 #{i\ 12917}#
                                                 1)))))))
                              (#{f\ 12915}# #{symnames\ 12905}# 0))))
                        (#{search\ 12863}#
                          (lambda (#{sym\ 12925}#
                                   #{subst\ 12926}#
                                   #{marks\ 12927}#)
                            (if (null? #{subst\ 12926}#)
                              (values #f #{marks\ 12927}#)
                              (let ((#{fst\ 12932}# (car #{subst\ 12926}#)))
                                (if (eq? #{fst\ 12932}# (quote shift))
                                  (#{search\ 12863}#
                                    #{sym\ 12925}#
                                    (cdr #{subst\ 12926}#)
                                    (cdr #{marks\ 12927}#))
                                  (let ((#{symnames\ 12934}#
                                          (#{ribcage-symnames\ 11176}#
                                            #{fst\ 12932}#)))
                                    (if (vector? #{symnames\ 12934}#)
                                      (#{search-vector-rib\ 12867}#
                                        #{sym\ 12925}#
                                        #{subst\ 12926}#
                                        #{marks\ 12927}#
                                        #{symnames\ 12934}#
                                        #{fst\ 12932}#)
                                      (#{search-list-rib\ 12865}#
                                        #{sym\ 12925}#
                                        #{subst\ 12926}#
                                        #{marks\ 12927}#
                                        #{symnames\ 12934}#
                                        #{fst\ 12932}#)))))))))
                 (if (symbol? #{id\ 12857}#)
                   (let ((#{t\ 12937}#
                           (call-with-values
                             (lambda ()
                               (#{search\ 12863}#
                                 #{id\ 12857}#
                                 (#{wrap-subst\ 11160}# #{w\ 12858}#)
                                 (#{wrap-marks\ 11158}# #{w\ 12858}#)))
                             (lambda (#{x\ 12939}# . #{ignore\ 12940}#)
                               #{x\ 12939}#))))
                     (if #{t\ 12937}# #{t\ 12937}# #{id\ 12857}#))
                   (if (#{syntax-object?\ 11115}# #{id\ 12857}#)
                     (let ((#{id\ 12948}#
                             (#{syntax-object-expression\ 11117}#
                               #{id\ 12857}#))
                           (#{w1\ 12949}#
                             (#{syntax-object-wrap\ 11119}# #{id\ 12857}#)))
                       (let ((#{marks\ 12951}#
                               (#{join-marks\ 11204}#
                                 (#{wrap-marks\ 11158}# #{w\ 12858}#)
                                 (#{wrap-marks\ 11158}# #{w1\ 12949}#))))
                         (call-with-values
                           (lambda ()
                             (#{search\ 12863}#
                               #{id\ 12948}#
                               (#{wrap-subst\ 11160}# #{w\ 12858}#)
                               #{marks\ 12951}#))
                           (lambda (#{new-id\ 12952}# #{marks\ 12953}#)
                             (let ((#{t\ 12958}# #{new-id\ 12952}#))
                               (if #{t\ 12958}#
                                 #{t\ 12958}#
                                 (let ((#{t\ 12961}#
                                         (call-with-values
                                           (lambda ()
                                             (#{search\ 12863}#
                                               #{id\ 12948}#
                                               (#{wrap-subst\ 11160}#
                                                 #{w1\ 12949}#)
                                               #{marks\ 12953}#))
                                           (lambda (#{x\ 12963}#
                                                    .
                                                    #{ignore\ 12964}#)
                                             #{x\ 12963}#))))
                                   (if #{t\ 12961}#
                                     #{t\ 12961}#
                                     #{id\ 12948}#))))))))
                     (syntax-violation
                       'id-var-name
                       "invalid id"
                       #{id\ 12857}#))))))
           (#{same-marks?\ 11206}#
             (lambda (#{x\ 12969}# #{y\ 12970}#)
               (let ((#{t\ 12975}# (eq? #{x\ 12969}# #{y\ 12970}#)))
                 (if #{t\ 12975}#
                   #{t\ 12975}#
                   (if (not (null? #{x\ 12969}#))
                     (if (not (null? #{y\ 12970}#))
                       (if (eq? (car #{x\ 12969}#) (car #{y\ 12970}#))
                         (#{same-marks?\ 11206}#
                           (cdr #{x\ 12969}#)
                           (cdr #{y\ 12970}#))
                         #f)
                       #f)
                     #f)))))
           (#{join-marks\ 11204}#
             (lambda (#{m1\ 12981}# #{m2\ 12982}#)
               (#{smart-append\ 11200}#
                 #{m1\ 12981}#
                 #{m2\ 12982}#)))
           (#{join-wraps\ 11202}#
             (lambda (#{w1\ 12985}# #{w2\ 12986}#)
               (let ((#{m1\ 12991}#
                       (#{wrap-marks\ 11158}# #{w1\ 12985}#))
                     (#{s1\ 12992}#
                       (#{wrap-subst\ 11160}# #{w1\ 12985}#)))
                 (if (null? #{m1\ 12991}#)
                   (if (null? #{s1\ 12992}#)
                     #{w2\ 12986}#
                     (#{make-wrap\ 11156}#
                       (#{wrap-marks\ 11158}# #{w2\ 12986}#)
                       (#{smart-append\ 11200}#
                         #{s1\ 12992}#
                         (#{wrap-subst\ 11160}# #{w2\ 12986}#))))
                   (#{make-wrap\ 11156}#
                     (#{smart-append\ 11200}#
                       #{m1\ 12991}#
                       (#{wrap-marks\ 11158}# #{w2\ 12986}#))
                     (#{smart-append\ 11200}#
                       #{s1\ 12992}#
                       (#{wrap-subst\ 11160}# #{w2\ 12986}#)))))))
           (#{smart-append\ 11200}#
             (lambda (#{m1\ 12993}# #{m2\ 12994}#)
               (if (null? #{m2\ 12994}#)
                 #{m1\ 12993}#
                 (append #{m1\ 12993}# #{m2\ 12994}#))))
           (#{make-binding-wrap\ 11198}#
             (lambda (#{ids\ 12997}# #{labels\ 12998}# #{w\ 12999}#)
               (if (null? #{ids\ 12997}#)
                 #{w\ 12999}#
                 (#{make-wrap\ 11156}#
                   (#{wrap-marks\ 11158}# #{w\ 12999}#)
                   (cons (let ((#{labelvec\ 13004}#
                                 (list->vector #{labels\ 12998}#)))
                           (let ((#{n\ 13006}#
                                   (vector-length #{labelvec\ 13004}#)))
                             (let ((#{symnamevec\ 13009}#
                                     (make-vector #{n\ 13006}#))
                                   (#{marksvec\ 13010}#
                                     (make-vector #{n\ 13006}#)))
                               (begin
                                 (letrec ((#{f\ 13014}#
                                            (lambda (#{ids\ 13015}#
                                                     #{i\ 13016}#)
                                              (if (not (null? #{ids\ 13015}#))
                                                (call-with-values
                                                  (lambda ()
                                                    (#{id-sym-name&marks\ 11154}#
                                                      (car #{ids\ 13015}#)
                                                      #{w\ 12999}#))
                                                  (lambda (#{symname\ 13017}#
                                                           #{marks\ 13018}#)
                                                    (begin
                                                      (vector-set!
                                                        #{symnamevec\ 13009}#
                                                        #{i\ 13016}#
                                                        #{symname\ 13017}#)
                                                      (vector-set!
                                                        #{marksvec\ 13010}#
                                                        #{i\ 13016}#
                                                        #{marks\ 13018}#)
                                                      (#{f\ 13014}#
                                                        (cdr #{ids\ 13015}#)
                                                        (#{fx+\ 11052}#
                                                          #{i\ 13016}#
                                                          1)))))))))
                                   (#{f\ 13014}# #{ids\ 12997}# 0))
                                 (#{make-ribcage\ 11172}#
                                   #{symnamevec\ 13009}#
                                   #{marksvec\ 13010}#
                                   #{labelvec\ 13004}#)))))
                         (#{wrap-subst\ 11160}# #{w\ 12999}#))))))
           (#{extend-ribcage!\ 11196}#
             (lambda (#{ribcage\ 13021}#
                      #{id\ 13022}#
                      #{label\ 13023}#)
               (begin
                 (#{set-ribcage-symnames!\ 11182}#
                   #{ribcage\ 13021}#
                   (cons (#{syntax-object-expression\ 11117}#
                           #{id\ 13022}#)
                         (#{ribcage-symnames\ 11176}# #{ribcage\ 13021}#)))
                 (#{set-ribcage-marks!\ 11184}#
                   #{ribcage\ 13021}#
                   (cons (#{wrap-marks\ 11158}#
                           (#{syntax-object-wrap\ 11119}# #{id\ 13022}#))
                         (#{ribcage-marks\ 11178}# #{ribcage\ 13021}#)))
                 (#{set-ribcage-labels!\ 11186}#
                   #{ribcage\ 13021}#
                   (cons #{label\ 13023}#
                         (#{ribcage-labels\ 11180}# #{ribcage\ 13021}#))))))
           (#{anti-mark\ 11192}#
             (lambda (#{w\ 13027}#)
               (#{make-wrap\ 11156}#
                 (cons #f (#{wrap-marks\ 11158}# #{w\ 13027}#))
                 (cons 'shift
                       (#{wrap-subst\ 11160}# #{w\ 13027}#)))))
           (#{set-ribcage-labels!\ 11186}#
             (lambda (#{x\ 13030}# #{update\ 13031}#)
               (vector-set! #{x\ 13030}# 3 #{update\ 13031}#)))
           (#{set-ribcage-marks!\ 11184}#
             (lambda (#{x\ 13034}# #{update\ 13035}#)
               (vector-set! #{x\ 13034}# 2 #{update\ 13035}#)))
           (#{set-ribcage-symnames!\ 11182}#
             (lambda (#{x\ 13038}# #{update\ 13039}#)
               (vector-set! #{x\ 13038}# 1 #{update\ 13039}#)))
           (#{ribcage-labels\ 11180}#
             (lambda (#{x\ 13042}#)
               (vector-ref #{x\ 13042}# 3)))
           (#{ribcage-marks\ 11178}#
             (lambda (#{x\ 13044}#)
               (vector-ref #{x\ 13044}# 2)))
           (#{ribcage-symnames\ 11176}#
             (lambda (#{x\ 13046}#)
               (vector-ref #{x\ 13046}# 1)))
           (#{ribcage?\ 11174}#
             (lambda (#{x\ 13048}#)
               (if (vector? #{x\ 13048}#)
                 (if (= (vector-length #{x\ 13048}#) 4)
                   (eq? (vector-ref #{x\ 13048}# 0) (quote ribcage))
                   #f)
                 #f)))
           (#{make-ribcage\ 11172}#
             (lambda (#{symnames\ 13053}#
                      #{marks\ 13054}#
                      #{labels\ 13055}#)
               (vector
                 'ribcage
                 #{symnames\ 13053}#
                 #{marks\ 13054}#
                 #{labels\ 13055}#)))
           (#{gen-labels\ 11169}#
             (lambda (#{ls\ 13059}#)
               (if (null? #{ls\ 13059}#)
                 '()
                 (cons (#{gen-label\ 11167}#)
                       (#{gen-labels\ 11169}# (cdr #{ls\ 13059}#))))))
           (#{gen-label\ 11167}#
             (lambda () (symbol->string (gensym "i"))))
           (#{wrap-subst\ 11160}# cdr)
           (#{wrap-marks\ 11158}# car)
           (#{make-wrap\ 11156}# cons)
           (#{id-sym-name&marks\ 11154}#
             (lambda (#{x\ 13061}# #{w\ 13062}#)
               (if (#{syntax-object?\ 11115}# #{x\ 13061}#)
                 (values
                   (#{syntax-object-expression\ 11117}#
                     #{x\ 13061}#)
                   (#{join-marks\ 11204}#
                     (#{wrap-marks\ 11158}# #{w\ 13062}#)
                     (#{wrap-marks\ 11158}#
                       (#{syntax-object-wrap\ 11119}# #{x\ 13061}#))))
                 (values
                   #{x\ 13061}#
                   (#{wrap-marks\ 11158}# #{w\ 13062}#)))))
           (#{id?\ 11151}#
             (lambda (#{x\ 13065}#)
               (if (symbol? #{x\ 13065}#)
                 #t
                 (if (#{syntax-object?\ 11115}# #{x\ 13065}#)
                   (symbol?
                     (#{syntax-object-expression\ 11117}#
                       #{x\ 13065}#))
                   #f))))
           (#{nonsymbol-id?\ 11149}#
             (lambda (#{x\ 13072}#)
               (if (#{syntax-object?\ 11115}# #{x\ 13072}#)
                 (symbol?
                   (#{syntax-object-expression\ 11117}#
                     #{x\ 13072}#))
                 #f)))
           (#{global-extend\ 11147}#
             (lambda (#{type\ 13076}# #{sym\ 13077}# #{val\ 13078}#)
               (#{put-global-definition-hook\ 11065}#
                 #{sym\ 13077}#
                 #{type\ 13076}#
                 #{val\ 13078}#)))
           (#{lookup\ 11145}#
             (lambda (#{x\ 13082}# #{r\ 13083}# #{mod\ 13084}#)
               (let ((#{t\ 13090}# (assq #{x\ 13082}# #{r\ 13083}#)))
                 (if #{t\ 13090}#
                   (cdr #{t\ 13090}#)
                   (if (symbol? #{x\ 13082}#)
                     (let ((#{t\ 13096}#
                             (#{get-global-definition-hook\ 11067}#
                               #{x\ 13082}#
                               #{mod\ 13084}#)))
                       (if #{t\ 13096}# #{t\ 13096}# (quote (global))))
                     '(displaced-lexical))))))
           (#{macros-only-env\ 11143}#
             (lambda (#{r\ 13101}#)
               (if (null? #{r\ 13101}#)
                 '()
                 (let ((#{a\ 13104}# (car #{r\ 13101}#)))
                   (if (eq? (cadr #{a\ 13104}#) (quote macro))
                     (cons #{a\ 13104}#
                           (#{macros-only-env\ 11143}# (cdr #{r\ 13101}#)))
                     (#{macros-only-env\ 11143}# (cdr #{r\ 13101}#)))))))
           (#{extend-var-env\ 11141}#
             (lambda (#{labels\ 13105}# #{vars\ 13106}# #{r\ 13107}#)
               (if (null? #{labels\ 13105}#)
                 #{r\ 13107}#
                 (#{extend-var-env\ 11141}#
                   (cdr #{labels\ 13105}#)
                   (cdr #{vars\ 13106}#)
                   (cons (cons (car #{labels\ 13105}#)
                               (cons (quote lexical) (car #{vars\ 13106}#)))
                         #{r\ 13107}#)))))
           (#{extend-env\ 11139}#
             (lambda (#{labels\ 13112}#
                      #{bindings\ 13113}#
                      #{r\ 13114}#)
               (if (null? #{labels\ 13112}#)
                 #{r\ 13114}#
                 (#{extend-env\ 11139}#
                   (cdr #{labels\ 13112}#)
                   (cdr #{bindings\ 13113}#)
                   (cons (cons (car #{labels\ 13112}#)
                               (car #{bindings\ 13113}#))
                         #{r\ 13114}#)))))
           (#{binding-value\ 11136}# cdr)
           (#{binding-type\ 11134}# car)
           (#{source-annotation\ 11130}#
             (lambda (#{x\ 13118}#)
               (if (#{syntax-object?\ 11115}# #{x\ 13118}#)
                 (#{source-annotation\ 11130}#
                   (#{syntax-object-expression\ 11117}#
                     #{x\ 13118}#))
                 (if (pair? #{x\ 13118}#)
                   (let ((#{props\ 13125}#
                           (source-properties #{x\ 13118}#)))
                     (if (pair? #{props\ 13125}#) #{props\ 13125}# #f))
                   #f))))
           (#{set-syntax-object-module!\ 11127}#
             (lambda (#{x\ 13127}# #{update\ 13128}#)
               (vector-set! #{x\ 13127}# 3 #{update\ 13128}#)))
           (#{set-syntax-object-wrap!\ 11125}#
             (lambda (#{x\ 13131}# #{update\ 13132}#)
               (vector-set! #{x\ 13131}# 2 #{update\ 13132}#)))
           (#{set-syntax-object-expression!\ 11123}#
             (lambda (#{x\ 13135}# #{update\ 13136}#)
               (vector-set! #{x\ 13135}# 1 #{update\ 13136}#)))
           (#{syntax-object-module\ 11121}#
             (lambda (#{x\ 13139}#)
               (vector-ref #{x\ 13139}# 3)))
           (#{syntax-object-wrap\ 11119}#
             (lambda (#{x\ 13141}#)
               (vector-ref #{x\ 13141}# 2)))
           (#{syntax-object-expression\ 11117}#
             (lambda (#{x\ 13143}#)
               (vector-ref #{x\ 13143}# 1)))
           (#{syntax-object?\ 11115}#
             (lambda (#{x\ 13145}#)
               (if (vector? #{x\ 13145}#)
                 (if (= (vector-length #{x\ 13145}#) 4)
                   (eq? (vector-ref #{x\ 13145}# 0)
                        'syntax-object)
                   #f)
                 #f)))
           (#{make-syntax-object\ 11113}#
             (lambda (#{expression\ 13150}#
                      #{wrap\ 13151}#
                      #{module\ 13152}#)
               (vector
                 'syntax-object
                 #{expression\ 13150}#
                 #{wrap\ 13151}#
                 #{module\ 13152}#)))
           (#{build-letrec\ 11109}#
             (lambda (#{src\ 13156}#
                      #{ids\ 13157}#
                      #{vars\ 13158}#
                      #{val-exps\ 13159}#
                      #{body-exp\ 13160}#)
               (if (null? #{vars\ 13158}#)
                 #{body-exp\ 13160}#
                 (let ((#{atom-key\ 13168}#
                         (fluid-ref #{*mode*\ 11050}#)))
                   (if (memv #{atom-key\ 13168}# (quote (c)))
                     (begin
                       (for-each
                         #{maybe-name-value!\ 11089}#
                         #{ids\ 13157}#
                         #{val-exps\ 13159}#)
                       ((@ (language tree-il) make-letrec)
                        #{src\ 13156}#
                        #{ids\ 13157}#
                        #{vars\ 13158}#
                        #{val-exps\ 13159}#
                        #{body-exp\ 13160}#))
                     (#{decorate-source\ 11069}#
                       (list 'letrec
                             (map list #{vars\ 13158}# #{val-exps\ 13159}#)
                             #{body-exp\ 13160}#)
                       #{src\ 13156}#))))))
           (#{build-named-let\ 11107}#
             (lambda (#{src\ 13172}#
                      #{ids\ 13173}#
                      #{vars\ 13174}#
                      #{val-exps\ 13175}#
                      #{body-exp\ 13176}#)
               (let ((#{f\ 13186}# (car #{vars\ 13174}#))
                     (#{f-name\ 13187}# (car #{ids\ 13173}#))
                     (#{vars\ 13188}# (cdr #{vars\ 13174}#))
                     (#{ids\ 13189}# (cdr #{ids\ 13173}#)))
                 (let ((#{atom-key\ 13192}#
                         (fluid-ref #{*mode*\ 11050}#)))
                   (if (memv #{atom-key\ 13192}# (quote (c)))
                     (let ((#{proc\ 13195}#
                             (#{build-simple-lambda\ 11093}#
                               #{src\ 13172}#
                               #{ids\ 13189}#
                               #f
                               #{vars\ 13188}#
                               '()
                               #{body-exp\ 13176}#)))
                       (begin
                         (#{maybe-name-value!\ 11089}#
                           #{f-name\ 13187}#
                           #{proc\ 13195}#)
                         (for-each
                           #{maybe-name-value!\ 11089}#
                           #{ids\ 13189}#
                           #{val-exps\ 13175}#)
                         ((@ (language tree-il) make-letrec)
                          #{src\ 13172}#
                          (list #{f-name\ 13187}#)
                          (list #{f\ 13186}#)
                          (list #{proc\ 13195}#)
                          (#{build-application\ 11073}#
                            #{src\ 13172}#
                            (#{build-lexical-reference\ 11079}#
                              'fun
                              #{src\ 13172}#
                              #{f-name\ 13187}#
                              #{f\ 13186}#)
                            #{val-exps\ 13175}#))))
                     (#{decorate-source\ 11069}#
                       (list 'letrec
                             (list (list #{f\ 13186}#
                                         (list 'lambda
                                               #{vars\ 13188}#
                                               #{body-exp\ 13176}#)))
                             (cons #{f\ 13186}# #{val-exps\ 13175}#))
                       #{src\ 13172}#))))))
           (#{build-let\ 11105}#
             (lambda (#{src\ 13198}#
                      #{ids\ 13199}#
                      #{vars\ 13200}#
                      #{val-exps\ 13201}#
                      #{body-exp\ 13202}#)
               (if (null? #{vars\ 13200}#)
                 #{body-exp\ 13202}#
                 (let ((#{atom-key\ 13210}#
                         (fluid-ref #{*mode*\ 11050}#)))
                   (if (memv #{atom-key\ 13210}# (quote (c)))
                     (begin
                       (for-each
                         #{maybe-name-value!\ 11089}#
                         #{ids\ 13199}#
                         #{val-exps\ 13201}#)
                       ((@ (language tree-il) make-let)
                        #{src\ 13198}#
                        #{ids\ 13199}#
                        #{vars\ 13200}#
                        #{val-exps\ 13201}#
                        #{body-exp\ 13202}#))
                     (#{decorate-source\ 11069}#
                       (list 'let
                             (map list #{vars\ 13200}# #{val-exps\ 13201}#)
                             #{body-exp\ 13202}#)
                       #{src\ 13198}#))))))
           (#{build-sequence\ 11103}#
             (lambda (#{src\ 13214}# #{exps\ 13215}#)
               (if (null? (cdr #{exps\ 13215}#))
                 (car #{exps\ 13215}#)
                 (let ((#{atom-key\ 13220}#
                         (fluid-ref #{*mode*\ 11050}#)))
                   (if (memv #{atom-key\ 13220}# (quote (c)))
                     ((@ (language tree-il) make-sequence)
                      #{src\ 13214}#
                      #{exps\ 13215}#)
                     (#{decorate-source\ 11069}#
                       (cons (quote begin) #{exps\ 13215}#)
                       #{src\ 13214}#))))))
           (#{build-data\ 11101}#
             (lambda (#{src\ 13224}# #{exp\ 13225}#)
               (let ((#{atom-key\ 13230}#
                       (fluid-ref #{*mode*\ 11050}#)))
                 (if (memv #{atom-key\ 13230}# (quote (c)))
                   ((@ (language tree-il) make-const)
                    #{src\ 13224}#
                    #{exp\ 13225}#)
                   (#{decorate-source\ 11069}#
                     (if (if (self-evaluating? #{exp\ 13225}#)
                           (not (vector? #{exp\ 13225}#))
                           #f)
                       #{exp\ 13225}#
                       (list (quote quote) #{exp\ 13225}#))
                     #{src\ 13224}#)))))
           (#{build-primref\ 11099}#
             (lambda (#{src\ 13235}# #{name\ 13236}#)
               (if (equal?
                     (module-name (current-module))
                     '(guile))
                 (let ((#{atom-key\ 13241}#
                         (fluid-ref #{*mode*\ 11050}#)))
                   (if (memv #{atom-key\ 13241}# (quote (c)))
                     ((@ (language tree-il) make-toplevel-ref)
                      #{src\ 13235}#
                      #{name\ 13236}#)
                     (#{decorate-source\ 11069}#
                       #{name\ 13236}#
                       #{src\ 13235}#)))
                 (let ((#{atom-key\ 13246}#
                         (fluid-ref #{*mode*\ 11050}#)))
                   (if (memv #{atom-key\ 13246}# (quote (c)))
                     ((@ (language tree-il) make-module-ref)
                      #{src\ 13235}#
                      '(guile)
                      #{name\ 13236}#
                      #f)
                     (#{decorate-source\ 11069}#
                       (list (quote @@) (quote (guile)) #{name\ 13236}#)
                       #{src\ 13235}#))))))
           (#{build-lambda-case\ 11097}#
             (lambda (#{src\ 13250}#
                      #{req\ 13251}#
                      #{opt\ 13252}#
                      #{rest\ 13253}#
                      #{kw\ 13254}#
                      #{inits\ 13255}#
                      #{vars\ 13256}#
                      #{body\ 13257}#
                      #{else-case\ 13258}#)
               (let ((#{atom-key\ 13270}#
                       (fluid-ref #{*mode*\ 11050}#)))
                 (if (memv #{atom-key\ 13270}# (quote (c)))
                   ((@ (language tree-il) make-lambda-case)
                    #{src\ 13250}#
                    #{req\ 13251}#
                    #{opt\ 13252}#
                    #{rest\ 13253}#
                    #{kw\ 13254}#
                    #{inits\ 13255}#
                    #{vars\ 13256}#
                    #{body\ 13257}#
                    #{else-case\ 13258}#)
                   (let ((#{nreq\ 13275}# (length #{req\ 13251}#)))
                     (let ((#{nopt\ 13277}#
                             (if #{opt\ 13252}# (length #{opt\ 13252}#) 0)))
                       (let ((#{rest-idx\ 13279}#
                               (if #{rest\ 13253}#
                                 (+ #{nreq\ 13275}# #{nopt\ 13277}#)
                                 #f)))
                         (let ((#{allow-other-keys?\ 13283}#
                                 (if #{kw\ 13254}# (car #{kw\ 13254}#) #f)))
                           (let ((#{kw-indices\ 13285}#
                                   (map (lambda (#{x\ 13286}#)
                                          (cons (car #{x\ 13286}#)
                                                (list-index
                                                  #{vars\ 13256}#
                                                  (caddr #{x\ 13286}#))))
                                        (if #{kw\ 13254}#
                                          (cdr #{kw\ 13254}#)
                                          '()))))
                             (let ((#{nargs\ 13289}#
                                     (apply max
                                            (+ #{nreq\ 13275}#
                                               #{nopt\ 13277}#
                                               (if #{rest\ 13253}# 1 0))
                                            (map 1+
                                                 (map cdr
                                                      #{kw-indices\ 13285}#)))))
                               (begin
                                 (let ((#{t\ 13292}#
                                         (= #{nargs\ 13289}#
                                            (length #{vars\ 13256}#)
                                            (+ #{nreq\ 13275}#
                                               (length #{inits\ 13255}#)
                                               (if #{rest\ 13253}# 1 0)))))
                                   (if #{t\ 13292}#
                                     #{t\ 13292}#
                                     (error "something went wrong"
                                            #{req\ 13251}#
                                            #{opt\ 13252}#
                                            #{rest\ 13253}#
                                            #{kw\ 13254}#
                                            #{inits\ 13255}#
                                            #{vars\ 13256}#
                                            #{nreq\ 13275}#
                                            #{nopt\ 13277}#
                                            #{kw-indices\ 13285}#
                                            #{nargs\ 13289}#)))
                                 (#{decorate-source\ 11069}#
                                   (cons (list (cons '(@@ (ice-9 optargs)
                                                          parse-lambda-case)
                                                     (cons (list 'quote
                                                                 (list #{nreq\ 13275}#
                                                                       #{nopt\ 13277}#
                                                                       #{rest-idx\ 13279}#
                                                                       #{nargs\ 13289}#
                                                                       #{allow-other-keys?\ 13283}#
                                                                       #{kw-indices\ 13285}#))
                                                           (cons (cons 'list
                                                                       (map (lambda (#{i\ 13295}#)
                                                                              (list 'lambda
                                                                                    #{vars\ 13256}#
                                                                                    #{i\ 13295}#))
                                                                            #{inits\ 13255}#))
                                                                 '(%%args))))
                                               '=>
                                               (list 'lambda
                                                     '(%%args)
                                                     (cons 'apply
                                                           (cons (list 'lambda
                                                                       #{vars\ 13256}#
                                                                       #{body\ 13257}#)
                                                                 '(%%args)))))
                                         (let ((#{t\ 13300}#
                                                 #{else-case\ 13258}#))
                                           (if #{t\ 13300}#
                                             #{t\ 13300}#
                                             '((%%args
                                                 (scm-error
                                                   'wrong-number-of-args
                                                   #f
                                                   "Wrong number of arguments"
                                                   '()
                                                   %%args))))))
                                   #{src\ 13250}#))))))))))))
           (#{build-case-lambda\ 11095}#
             (lambda (#{src\ 13303}# #{meta\ 13304}# #{body\ 13305}#)
               (let ((#{atom-key\ 13311}#
                       (fluid-ref #{*mode*\ 11050}#)))
                 (if (memv #{atom-key\ 13311}# (quote (c)))
                   ((@ (language tree-il) make-lambda)
                    #{src\ 13303}#
                    #{meta\ 13304}#
                    #{body\ 13305}#)
                   (#{decorate-source\ 11069}#
                     (list 'lambda
                           '%%args
                           (cons (quote cond) #{body\ 13305}#))
                     #{src\ 13303}#)))))
           (#{build-simple-lambda\ 11093}#
             (lambda (#{src\ 13315}#
                      #{req\ 13316}#
                      #{rest\ 13317}#
                      #{vars\ 13318}#
                      #{meta\ 13319}#
                      #{exp\ 13320}#)
               (let ((#{atom-key\ 13329}#
                       (fluid-ref #{*mode*\ 11050}#)))
                 (if (memv #{atom-key\ 13329}# (quote (c)))
                   ((@ (language tree-il) make-lambda)
                    #{src\ 13315}#
                    #{meta\ 13319}#
                    ((@ (language tree-il) make-lambda-case)
                     #{src\ 13315}#
                     #{req\ 13316}#
                     #f
                     #{rest\ 13317}#
                     #f
                     '()
                     #{vars\ 13318}#
                     #{exp\ 13320}#
                     #f))
                   (#{decorate-source\ 11069}#
                     (list 'lambda
                           (if #{rest\ 13317}#
                             (apply cons* #{vars\ 13318}#)
                             #{vars\ 13318}#)
                           #{exp\ 13320}#)
                     #{src\ 13315}#)))))
           (#{build-global-definition\ 11091}#
             (lambda (#{source\ 13333}# #{var\ 13334}# #{exp\ 13335}#)
               (let ((#{atom-key\ 13341}#
                       (fluid-ref #{*mode*\ 11050}#)))
                 (if (memv #{atom-key\ 13341}# (quote (c)))
                   (begin
                     (#{maybe-name-value!\ 11089}#
                       #{var\ 13334}#
                       #{exp\ 13335}#)
                     ((@ (language tree-il) make-toplevel-define)
                      #{source\ 13333}#
                      #{var\ 13334}#
                      #{exp\ 13335}#))
                   (#{decorate-source\ 11069}#
                     (list 'define
                           #{var\ 13334}#
                           #{exp\ 13335}#)
                     #{source\ 13333}#)))))
           (#{maybe-name-value!\ 11089}#
             (lambda (#{name\ 13345}# #{val\ 13346}#)
               (if ((@ (language tree-il) lambda?) #{val\ 13346}#)
                 (let ((#{meta\ 13352}#
                         ((@ (language tree-il) lambda-meta)
                          #{val\ 13346}#)))
                   (if (not (assq (quote name) #{meta\ 13352}#))
                     ((setter (@ (language tree-il) lambda-meta))
                      #{val\ 13346}#
                      (acons 'name
                             #{name\ 13345}#
                             #{meta\ 13352}#)))))))
           (#{build-global-assignment\ 11087}#
             (lambda (#{source\ 13353}#
                      #{var\ 13354}#
                      #{exp\ 13355}#
                      #{mod\ 13356}#)
               (#{analyze-variable\ 11083}#
                 #{mod\ 13356}#
                 #{var\ 13354}#
                 (lambda (#{mod\ 13361}#
                          #{var\ 13362}#
                          #{public?\ 13363}#)
                   (let ((#{atom-key\ 13369}#
                           (fluid-ref #{*mode*\ 11050}#)))
                     (if (memv #{atom-key\ 13369}# (quote (c)))
                       ((@ (language tree-il) make-module-set)
                        #{source\ 13353}#
                        #{mod\ 13361}#
                        #{var\ 13362}#
                        #{public?\ 13363}#
                        #{exp\ 13355}#)
                       (#{decorate-source\ 11069}#
                         (list 'set!
                               (list (if #{public?\ 13363}#
                                       '@
                                       '@@)
                                     #{mod\ 13361}#
                                     #{var\ 13362}#)
                               #{exp\ 13355}#)
                         #{source\ 13353}#))))
                 (lambda (#{var\ 13373}#)
                   (let ((#{atom-key\ 13377}#
                           (fluid-ref #{*mode*\ 11050}#)))
                     (if (memv #{atom-key\ 13377}# (quote (c)))
                       ((@ (language tree-il) make-toplevel-set)
                        #{source\ 13353}#
                        #{var\ 13373}#
                        #{exp\ 13355}#)
                       (#{decorate-source\ 11069}#
                         (list (quote set!) #{var\ 13373}# #{exp\ 13355}#)
                         #{source\ 13353}#)))))))
           (#{build-global-reference\ 11085}#
             (lambda (#{source\ 13381}# #{var\ 13382}# #{mod\ 13383}#)
               (#{analyze-variable\ 11083}#
                 #{mod\ 13383}#
                 #{var\ 13382}#
                 (lambda (#{mod\ 13387}#
                          #{var\ 13388}#
                          #{public?\ 13389}#)
                   (let ((#{atom-key\ 13395}#
                           (fluid-ref #{*mode*\ 11050}#)))
                     (if (memv #{atom-key\ 13395}# (quote (c)))
                       ((@ (language tree-il) make-module-ref)
                        #{source\ 13381}#
                        #{mod\ 13387}#
                        #{var\ 13388}#
                        #{public?\ 13389}#)
                       (#{decorate-source\ 11069}#
                         (list (if #{public?\ 13389}# (quote @) (quote @@))
                               #{mod\ 13387}#
                               #{var\ 13388}#)
                         #{source\ 13381}#))))
                 (lambda (#{var\ 13398}#)
                   (let ((#{atom-key\ 13402}#
                           (fluid-ref #{*mode*\ 11050}#)))
                     (if (memv #{atom-key\ 13402}# (quote (c)))
                       ((@ (language tree-il) make-toplevel-ref)
                        #{source\ 13381}#
                        #{var\ 13398}#)
                       (#{decorate-source\ 11069}#
                         #{var\ 13398}#
                         #{source\ 13381}#)))))))
           (#{analyze-variable\ 11083}#
             (lambda (#{mod\ 13405}#
                      #{var\ 13406}#
                      #{modref-cont\ 13407}#
                      #{bare-cont\ 13408}#)
               (if (not #{mod\ 13405}#)
                 (#{bare-cont\ 13408}# #{var\ 13406}#)
                 (let ((#{kind\ 13415}# (car #{mod\ 13405}#))
                       (#{mod\ 13416}# (cdr #{mod\ 13405}#)))
                   (if (memv #{kind\ 13415}# (quote (public)))
                     (#{modref-cont\ 13407}#
                       #{mod\ 13416}#
                       #{var\ 13406}#
                       #t)
                     (if (memv #{kind\ 13415}# (quote (private)))
                       (if (not (equal?
                                  #{mod\ 13416}#
                                  (module-name (current-module))))
                         (#{modref-cont\ 13407}#
                           #{mod\ 13416}#
                           #{var\ 13406}#
                           #f)
                         (#{bare-cont\ 13408}# #{var\ 13406}#))
                       (if (memv #{kind\ 13415}# (quote (bare)))
                         (#{bare-cont\ 13408}# #{var\ 13406}#)
                         (if (memv #{kind\ 13415}# (quote (hygiene)))
                           (if (if (not (equal?
                                          #{mod\ 13416}#
                                          (module-name (current-module))))
                                 (module-variable
                                   (resolve-module #{mod\ 13416}#)
                                   #{var\ 13406}#)
                                 #f)
                             (#{modref-cont\ 13407}#
                               #{mod\ 13416}#
                               #{var\ 13406}#
                               #f)
                             (#{bare-cont\ 13408}# #{var\ 13406}#))
                           (syntax-violation
                             #f
                             "bad module kind"
                             #{var\ 13406}#
                             #{mod\ 13416}#)))))))))
           (#{build-lexical-assignment\ 11081}#
             (lambda (#{source\ 13424}#
                      #{name\ 13425}#
                      #{var\ 13426}#
                      #{exp\ 13427}#)
               (let ((#{atom-key\ 13434}#
                       (fluid-ref #{*mode*\ 11050}#)))
                 (if (memv #{atom-key\ 13434}# (quote (c)))
                   ((@ (language tree-il) make-lexical-set)
                    #{source\ 13424}#
                    #{name\ 13425}#
                    #{var\ 13426}#
                    #{exp\ 13427}#)
                   (#{decorate-source\ 11069}#
                     (list (quote set!) #{var\ 13426}# #{exp\ 13427}#)
                     #{source\ 13424}#)))))
           (#{build-lexical-reference\ 11079}#
             (lambda (#{type\ 13438}#
                      #{source\ 13439}#
                      #{name\ 13440}#
                      #{var\ 13441}#)
               (let ((#{atom-key\ 13448}#
                       (fluid-ref #{*mode*\ 11050}#)))
                 (if (memv #{atom-key\ 13448}# (quote (c)))
                   ((@ (language tree-il) make-lexical-ref)
                    #{source\ 13439}#
                    #{name\ 13440}#
                    #{var\ 13441}#)
                   (#{decorate-source\ 11069}#
                     #{var\ 13441}#
                     #{source\ 13439}#)))))
           (#{build-dynlet\ 11077}#
             (lambda (#{source\ 13451}#
                      #{fluids\ 13452}#
                      #{vals\ 13453}#
                      #{body\ 13454}#)
               (let ((#{atom-key\ 13461}#
                       (fluid-ref #{*mode*\ 11050}#)))
                 (if (memv #{atom-key\ 13461}# (quote (c)))
                   ((@ (language tree-il) make-dynlet)
                    #{source\ 13451}#
                    #{fluids\ 13452}#
                    #{vals\ 13453}#
                    #{body\ 13454}#)
                   (#{decorate-source\ 11069}#
                     (list 'with-fluids
                           (map list #{fluids\ 13452}# #{vals\ 13453}#)
                           #{body\ 13454}#)
                     #{source\ 13451}#)))))
           (#{build-conditional\ 11075}#
             (lambda (#{source\ 13465}#
                      #{test-exp\ 13466}#
                      #{then-exp\ 13467}#
                      #{else-exp\ 13468}#)
               (let ((#{atom-key\ 13475}#
                       (fluid-ref #{*mode*\ 11050}#)))
                 (if (memv #{atom-key\ 13475}# (quote (c)))
                   ((@ (language tree-il) make-conditional)
                    #{source\ 13465}#
                    #{test-exp\ 13466}#
                    #{then-exp\ 13467}#
                    #{else-exp\ 13468}#)
                   (#{decorate-source\ 11069}#
                     (if (equal? #{else-exp\ 13468}# (quote (if #f #f)))
                       (list 'if
                             #{test-exp\ 13466}#
                             #{then-exp\ 13467}#)
                       (list 'if
                             #{test-exp\ 13466}#
                             #{then-exp\ 13467}#
                             #{else-exp\ 13468}#))
                     #{source\ 13465}#)))))
           (#{build-application\ 11073}#
             (lambda (#{source\ 13480}#
                      #{fun-exp\ 13481}#
                      #{arg-exps\ 13482}#)
               (let ((#{atom-key\ 13488}#
                       (fluid-ref #{*mode*\ 11050}#)))
                 (if (memv #{atom-key\ 13488}# (quote (c)))
                   ((@ (language tree-il) make-application)
                    #{source\ 13480}#
                    #{fun-exp\ 13481}#
                    #{arg-exps\ 13482}#)
                   (#{decorate-source\ 11069}#
                     (cons #{fun-exp\ 13481}# #{arg-exps\ 13482}#)
                     #{source\ 13480}#)))))
           (#{build-void\ 11071}#
             (lambda (#{source\ 13492}#)
               (let ((#{atom-key\ 13496}#
                       (fluid-ref #{*mode*\ 11050}#)))
                 (if (memv #{atom-key\ 13496}# (quote (c)))
                   ((@ (language tree-il) make-void)
                    #{source\ 13492}#)
                   (#{decorate-source\ 11069}#
                     '(if #f #f)
                     #{source\ 13492}#)))))
           (#{decorate-source\ 11069}#
             (lambda (#{e\ 13499}# #{s\ 13500}#)
               (begin
                 (if (if (pair? #{e\ 13499}#) #{s\ 13500}# #f)
                   (set-source-properties!
                     #{e\ 13499}#
                     #{s\ 13500}#))
                 #{e\ 13499}#)))
           (#{get-global-definition-hook\ 11067}#
             (lambda (#{symbol\ 13505}# #{module\ 13506}#)
               (begin
                 (if (if (not #{module\ 13506}#) (current-module) #f)
                   (warn "module system is booted, we should have a module"
                         #{symbol\ 13505}#))
                 (let ((#{v\ 13512}#
                         (module-variable
                           (if #{module\ 13506}#
                             (resolve-module (cdr #{module\ 13506}#))
                             (current-module))
                           #{symbol\ 13505}#)))
                   (if #{v\ 13512}#
                     (if (variable-bound? #{v\ 13512}#)
                       (let ((#{val\ 13517}# (variable-ref #{v\ 13512}#)))
                         (if (macro? #{val\ 13517}#)
                           (if (macro-type #{val\ 13517}#)
                             (cons (macro-type #{val\ 13517}#)
                                   (macro-binding #{val\ 13517}#))
                             #f)
                           #f))
                       #f)
                     #f)))))
           (#{put-global-definition-hook\ 11065}#
             (lambda (#{symbol\ 13521}#
                      #{type\ 13522}#
                      #{val\ 13523}#)
               (module-define!
                 (current-module)
                 #{symbol\ 13521}#
                 (make-syntax-transformer
                   #{symbol\ 13521}#
                   #{type\ 13522}#
                   #{val\ 13523}#))))
           (#{local-eval-hook\ 11062}#
             (lambda (#{x\ 13527}# #{mod\ 13528}#)
               (primitive-eval
                 (memoize-expression
                   (let ((#{atom-key\ 13533}#
                           (fluid-ref #{*mode*\ 11050}#)))
                     (if (memv #{atom-key\ 13533}# (quote (c)))
                       ((@ (language tree-il) tree-il->scheme)
                        #{x\ 13527}#)
                       #{x\ 13527}#))))))
           (#{top-level-eval-hook\ 11060}#
             (lambda (#{x\ 13536}# #{mod\ 13537}#)
               (primitive-eval
                 (memoize-expression
                   (let ((#{atom-key\ 13542}#
                           (fluid-ref #{*mode*\ 11050}#)))
                     (if (memv #{atom-key\ 13542}# (quote (c)))
                       ((@ (language tree-il) tree-il->scheme)
                        #{x\ 13536}#)
                       #{x\ 13536}#))))))
           (#{fx<\ 11058}# <)
           (#{fx=\ 11056}# =)
           (#{fx-\ 11054}# -)
           (#{fx+\ 11052}# +)
           (#{*mode*\ 11050}# (make-fluid)))
    (begin
      (#{global-extend\ 11147}#
        'local-syntax
        'letrec-syntax
        #t)
      (#{global-extend\ 11147}#
        'local-syntax
        'let-syntax
        #f)
      (#{global-extend\ 11147}#
        'core
        'fluid-let-syntax
        (lambda (#{e\ 13545}#
                 #{r\ 13546}#
                 #{w\ 13547}#
                 #{s\ 13548}#
                 #{mod\ 13549}#)
          ((lambda (#{tmp\ 13555}#)
             ((lambda (#{tmp\ 13556}#)
                (if (if #{tmp\ 13556}#
                      (apply (lambda (#{_\ 13562}#
                                      #{var\ 13563}#
                                      #{val\ 13564}#
                                      #{e1\ 13565}#
                                      #{e2\ 13566}#)
                               (#{valid-bound-ids?\ 11214}# #{var\ 13563}#))
                             #{tmp\ 13556}#)
                      #f)
                  (apply (lambda (#{_\ 13573}#
                                  #{var\ 13574}#
                                  #{val\ 13575}#
                                  #{e1\ 13576}#
                                  #{e2\ 13577}#)
                           (let ((#{names\ 13579}#
                                   (map (lambda (#{x\ 13580}#)
                                          (#{id-var-name\ 11208}#
                                            #{x\ 13580}#
                                            #{w\ 13547}#))
                                        #{var\ 13574}#)))
                             (begin
                               (for-each
                                 (lambda (#{id\ 13583}# #{n\ 13584}#)
                                   (let ((#{atom-key\ 13589}#
                                           (#{binding-type\ 11134}#
                                             (#{lookup\ 11145}#
                                               #{n\ 13584}#
                                               #{r\ 13546}#
                                               #{mod\ 13549}#))))
                                     (if (memv #{atom-key\ 13589}#
                                               '(displaced-lexical))
                                       (syntax-violation
                                         'fluid-let-syntax
                                         "identifier out of context"
                                         #{e\ 13545}#
                                         (#{source-wrap\ 11222}#
                                           #{id\ 13583}#
                                           #{w\ 13547}#
                                           #{s\ 13548}#
                                           #{mod\ 13549}#)))))
                                 #{var\ 13574}#
                                 #{names\ 13579}#)
                               (#{chi-body\ 11244}#
                                 (cons #{e1\ 13576}# #{e2\ 13577}#)
                                 (#{source-wrap\ 11222}#
                                   #{e\ 13545}#
                                   #{w\ 13547}#
                                   #{s\ 13548}#
                                   #{mod\ 13549}#)
                                 (#{extend-env\ 11139}#
                                   #{names\ 13579}#
                                   (let ((#{trans-r\ 13594}#
                                           (#{macros-only-env\ 11143}#
                                             #{r\ 13546}#)))
                                     (map (lambda (#{x\ 13595}#)
                                            (cons 'macro
                                                  (#{eval-local-transformer\ 11248}#
                                                    (#{chi\ 11236}#
                                                      #{x\ 13595}#
                                                      #{trans-r\ 13594}#
                                                      #{w\ 13547}#
                                                      #{mod\ 13549}#)
                                                    #{mod\ 13549}#)))
                                          #{val\ 13575}#))
                                   #{r\ 13546}#)
                                 #{w\ 13547}#
                                 #{mod\ 13549}#))))
                         #{tmp\ 13556}#)
                  ((lambda (#{_\ 13600}#)
                     (syntax-violation
                       'fluid-let-syntax
                       "bad syntax"
                       (#{source-wrap\ 11222}#
                         #{e\ 13545}#
                         #{w\ 13547}#
                         #{s\ 13548}#
                         #{mod\ 13549}#)))
                   #{tmp\ 13555}#)))
              ($sc-dispatch
                #{tmp\ 13555}#
                '(any #(each (any any)) any . each-any))))
           #{e\ 13545}#)))
      (#{global-extend\ 11147}#
        'core
        'quote
        (lambda (#{e\ 13601}#
                 #{r\ 13602}#
                 #{w\ 13603}#
                 #{s\ 13604}#
                 #{mod\ 13605}#)
          ((lambda (#{tmp\ 13611}#)
             ((lambda (#{tmp\ 13612}#)
                (if #{tmp\ 13612}#
                  (apply (lambda (#{_\ 13615}# #{e\ 13616}#)
                           (#{build-data\ 11101}#
                             #{s\ 13604}#
                             (#{strip\ 11262}# #{e\ 13616}# #{w\ 13603}#)))
                         #{tmp\ 13612}#)
                  ((lambda (#{_\ 13618}#)
                     (syntax-violation
                       'quote
                       "bad syntax"
                       (#{source-wrap\ 11222}#
                         #{e\ 13601}#
                         #{w\ 13603}#
                         #{s\ 13604}#
                         #{mod\ 13605}#)))
                   #{tmp\ 13611}#)))
              ($sc-dispatch #{tmp\ 13611}# (quote (any any)))))
           #{e\ 13601}#)))
      (#{global-extend\ 11147}#
        'core
        'syntax
        (letrec ((#{regen\ 13634}#
                   (lambda (#{x\ 13635}#)
                     (let ((#{atom-key\ 13639}# (car #{x\ 13635}#)))
                       (if (memv #{atom-key\ 13639}# (quote (ref)))
                         (#{build-lexical-reference\ 11079}#
                           'value
                           #f
                           (cadr #{x\ 13635}#)
                           (cadr #{x\ 13635}#))
                         (if (memv #{atom-key\ 13639}# (quote (primitive)))
                           (#{build-primref\ 11099}# #f (cadr #{x\ 13635}#))
                           (if (memv #{atom-key\ 13639}# (quote (quote)))
                             (#{build-data\ 11101}# #f (cadr #{x\ 13635}#))
                             (if (memv #{atom-key\ 13639}# (quote (lambda)))
                               (if (list? (cadr #{x\ 13635}#))
                                 (#{build-simple-lambda\ 11093}#
                                   #f
                                   (cadr #{x\ 13635}#)
                                   #f
                                   (cadr #{x\ 13635}#)
                                   '()
                                   (#{regen\ 13634}# (caddr #{x\ 13635}#)))
                                 (error "how did we get here" #{x\ 13635}#))
                               (#{build-application\ 11073}#
                                 #f
                                 (#{build-primref\ 11099}#
                                   #f
                                   (car #{x\ 13635}#))
                                 (map #{regen\ 13634}#
                                      (cdr #{x\ 13635}#))))))))))
                 (#{gen-vector\ 13632}#
                   (lambda (#{x\ 13651}#)
                     (if (eq? (car #{x\ 13651}#) (quote list))
                       (cons (quote vector) (cdr #{x\ 13651}#))
                       (if (eq? (car #{x\ 13651}#) (quote quote))
                         (list 'quote
                               (list->vector (cadr #{x\ 13651}#)))
                         (list (quote list->vector) #{x\ 13651}#)))))
                 (#{gen-append\ 13630}#
                   (lambda (#{x\ 13661}# #{y\ 13662}#)
                     (if (equal? #{y\ 13662}# (quote (quote ())))
                       #{x\ 13661}#
                       (list (quote append) #{x\ 13661}# #{y\ 13662}#))))
                 (#{gen-cons\ 13628}#
                   (lambda (#{x\ 13666}# #{y\ 13667}#)
                     (let ((#{atom-key\ 13672}# (car #{y\ 13667}#)))
                       (if (memv #{atom-key\ 13672}# (quote (quote)))
                         (if (eq? (car #{x\ 13666}#) (quote quote))
                           (list 'quote
                                 (cons (cadr #{x\ 13666}#)
                                       (cadr #{y\ 13667}#)))
                           (if (eq? (cadr #{y\ 13667}#) (quote ()))
                             (list (quote list) #{x\ 13666}#)
                             (list (quote cons) #{x\ 13666}# #{y\ 13667}#)))
                         (if (memv #{atom-key\ 13672}# (quote (list)))
                           (cons 'list
                                 (cons #{x\ 13666}# (cdr #{y\ 13667}#)))
                           (list (quote cons) #{x\ 13666}# #{y\ 13667}#))))))
                 (#{gen-map\ 13626}#
                   (lambda (#{e\ 13681}# #{map-env\ 13682}#)
                     (let ((#{formals\ 13687}# (map cdr #{map-env\ 13682}#))
                           (#{actuals\ 13688}#
                             (map (lambda (#{x\ 13689}#)
                                    (list (quote ref) (car #{x\ 13689}#)))
                                  #{map-env\ 13682}#)))
                       (if (eq? (car #{e\ 13681}#) (quote ref))
                         (car #{actuals\ 13688}#)
                         (if (and-map
                               (lambda (#{x\ 13696}#)
                                 (if (eq? (car #{x\ 13696}#) (quote ref))
                                   (memq (cadr #{x\ 13696}#)
                                         #{formals\ 13687}#)
                                   #f))
                               (cdr #{e\ 13681}#))
                           (cons 'map
                                 (cons (list 'primitive
                                             (car #{e\ 13681}#))
                                       (map (let ((#{r\ 13702}#
                                                    (map cons
                                                         #{formals\ 13687}#
                                                         #{actuals\ 13688}#)))
                                              (lambda (#{x\ 13703}#)
                                                (cdr (assq (cadr #{x\ 13703}#)
                                                           #{r\ 13702}#))))
                                            (cdr #{e\ 13681}#))))
                           (cons 'map
                                 (cons (list 'lambda
                                             #{formals\ 13687}#
                                             #{e\ 13681}#)
                                       #{actuals\ 13688}#)))))))
                 (#{gen-mappend\ 13624}#
                   (lambda (#{e\ 13707}# #{map-env\ 13708}#)
                     (list 'apply
                           '(primitive append)
                           (#{gen-map\ 13626}#
                             #{e\ 13707}#
                             #{map-env\ 13708}#))))
                 (#{gen-ref\ 13622}#
                   (lambda (#{src\ 13712}#
                            #{var\ 13713}#
                            #{level\ 13714}#
                            #{maps\ 13715}#)
                     (if (#{fx=\ 11056}# #{level\ 13714}# 0)
                       (values #{var\ 13713}# #{maps\ 13715}#)
                       (if (null? #{maps\ 13715}#)
                         (syntax-violation
                           'syntax
                           "missing ellipsis"
                           #{src\ 13712}#)
                         (call-with-values
                           (lambda ()
                             (#{gen-ref\ 13622}#
                               #{src\ 13712}#
                               #{var\ 13713}#
                               (#{fx-\ 11054}# #{level\ 13714}# 1)
                               (cdr #{maps\ 13715}#)))
                           (lambda (#{outer-var\ 13720}# #{outer-maps\ 13721}#)
                             (let ((#{b\ 13725}#
                                     (assq #{outer-var\ 13720}#
                                           (car #{maps\ 13715}#))))
                               (if #{b\ 13725}#
                                 (values (cdr #{b\ 13725}#) #{maps\ 13715}#)
                                 (let ((#{inner-var\ 13727}#
                                         (#{gen-var\ 11264}# (quote tmp))))
                                   (values
                                     #{inner-var\ 13727}#
                                     (cons (cons (cons #{outer-var\ 13720}#
                                                       #{inner-var\ 13727}#)
                                                 (car #{maps\ 13715}#))
                                           #{outer-maps\ 13721}#)))))))))))
                 (#{gen-syntax\ 13620}#
                   (lambda (#{src\ 13728}#
                            #{e\ 13729}#
                            #{r\ 13730}#
                            #{maps\ 13731}#
                            #{ellipsis?\ 13732}#
                            #{mod\ 13733}#)
                     (if (#{id?\ 11151}# #{e\ 13729}#)
                       (let ((#{label\ 13741}#
                               (#{id-var-name\ 11208}#
                                 #{e\ 13729}#
                                 '(()))))
                         (let ((#{b\ 13744}#
                                 (#{lookup\ 11145}#
                                   #{label\ 13741}#
                                   #{r\ 13730}#
                                   #{mod\ 13733}#)))
                           (if (eq? (#{binding-type\ 11134}# #{b\ 13744}#)
                                    'syntax)
                             (call-with-values
                               (lambda ()
                                 (let ((#{var.lev\ 13746}#
                                         (#{binding-value\ 11136}#
                                           #{b\ 13744}#)))
                                   (#{gen-ref\ 13622}#
                                     #{src\ 13728}#
                                     (car #{var.lev\ 13746}#)
                                     (cdr #{var.lev\ 13746}#)
                                     #{maps\ 13731}#)))
                               (lambda (#{var\ 13747}# #{maps\ 13748}#)
                                 (values
                                   (list (quote ref) #{var\ 13747}#)
                                   #{maps\ 13748}#)))
                             (if (#{ellipsis?\ 13732}# #{e\ 13729}#)
                               (syntax-violation
                                 'syntax
                                 "misplaced ellipsis"
                                 #{src\ 13728}#)
                               (values
                                 (list (quote quote) #{e\ 13729}#)
                                 #{maps\ 13731}#)))))
                       ((lambda (#{tmp\ 13753}#)
                          ((lambda (#{tmp\ 13754}#)
                             (if (if #{tmp\ 13754}#
                                   (apply (lambda (#{dots\ 13757}#
                                                   #{e\ 13758}#)
                                            (#{ellipsis?\ 13732}#
                                              #{dots\ 13757}#))
                                          #{tmp\ 13754}#)
                                   #f)
                               (apply (lambda (#{dots\ 13761}# #{e\ 13762}#)
                                        (#{gen-syntax\ 13620}#
                                          #{src\ 13728}#
                                          #{e\ 13762}#
                                          #{r\ 13730}#
                                          #{maps\ 13731}#
                                          (lambda (#{x\ 13763}#) #f)
                                          #{mod\ 13733}#))
                                      #{tmp\ 13754}#)
                               ((lambda (#{tmp\ 13765}#)
                                  (if (if #{tmp\ 13765}#
                                        (apply (lambda (#{x\ 13769}#
                                                        #{dots\ 13770}#
                                                        #{y\ 13771}#)
                                                 (#{ellipsis?\ 13732}#
                                                   #{dots\ 13770}#))
                                               #{tmp\ 13765}#)
                                        #f)
                                    (apply (lambda (#{x\ 13775}#
                                                    #{dots\ 13776}#
                                                    #{y\ 13777}#)
                                             (letrec ((#{f\ 13781}#
                                                        (lambda (#{y\ 13782}#
                                                                 #{k\ 13783}#)
                                                          ((lambda (#{tmp\ 13790}#)
                                                             ((lambda (#{tmp\ 13791}#)
                                                                (if (if #{tmp\ 13791}#
                                                                      (apply (lambda (#{dots\ 13794}#
                                                                                      #{y\ 13795}#)
                                                                               (#{ellipsis?\ 13732}#
                                                                                 #{dots\ 13794}#))
                                                                             #{tmp\ 13791}#)
                                                                      #f)
                                                                  (apply (lambda (#{dots\ 13798}#
                                                                                  #{y\ 13799}#)
                                                                           (#{f\ 13781}#
                                                                             #{y\ 13799}#
                                                                             (lambda (#{maps\ 13800}#)
                                                                               (call-with-values
                                                                                 (lambda ()
                                                                                   (#{k\ 13783}#
                                                                                     (cons '()
                                                                                           #{maps\ 13800}#)))
                                                                                 (lambda (#{x\ 13802}#
                                                                                          #{maps\ 13803}#)
                                                                                   (if (null? (car #{maps\ 13803}#))
                                                                                     (syntax-violation
                                                                                       'syntax
                                                                                       "extra ellipsis"
                                                                                       #{src\ 13728}#)
                                                                                     (values
                                                                                       (#{gen-mappend\ 13624}#
                                                                                         #{x\ 13802}#
                                                                                         (car #{maps\ 13803}#))
                                                                                       (cdr #{maps\ 13803}#))))))))
                                                                         #{tmp\ 13791}#)
                                                                  ((lambda (#{_\ 13807}#)
                                                                     (call-with-values
                                                                       (lambda ()
                                                                         (#{gen-syntax\ 13620}#
                                                                           #{src\ 13728}#
                                                                           #{y\ 13782}#
                                                                           #{r\ 13730}#
                                                                           #{maps\ 13731}#
                                                                           #{ellipsis?\ 13732}#
                                                                           #{mod\ 13733}#))
                                                                       (lambda (#{y\ 13808}#
                                                                                #{maps\ 13809}#)
                                                                         (call-with-values
                                                                           (lambda ()
                                                                             (#{k\ 13783}#
                                                                               #{maps\ 13809}#))
                                                                           (lambda (#{x\ 13812}#
                                                                                    #{maps\ 13813}#)
                                                                             (values
                                                                               (#{gen-append\ 13630}#
                                                                                 #{x\ 13812}#
                                                                                 #{y\ 13808}#)
                                                                               #{maps\ 13813}#))))))
                                                                   #{tmp\ 13790}#)))
                                                              ($sc-dispatch
                                                                #{tmp\ 13790}#
                                                                '(any . any))))
                                                           #{y\ 13782}#))))
                                               (#{f\ 13781}#
                                                 #{y\ 13777}#
                                                 (lambda (#{maps\ 13784}#)
                                                   (call-with-values
                                                     (lambda ()
                                                       (#{gen-syntax\ 13620}#
                                                         #{src\ 13728}#
                                                         #{x\ 13775}#
                                                         #{r\ 13730}#
                                                         (cons '()
                                                               #{maps\ 13784}#)
                                                         #{ellipsis?\ 13732}#
                                                         #{mod\ 13733}#))
                                                     (lambda (#{x\ 13786}#
                                                              #{maps\ 13787}#)
                                                       (if (null? (car #{maps\ 13787}#))
                                                         (syntax-violation
                                                           'syntax
                                                           "extra ellipsis"
                                                           #{src\ 13728}#)
                                                         (values
                                                           (#{gen-map\ 13626}#
                                                             #{x\ 13786}#
                                                             (car #{maps\ 13787}#))
                                                           (cdr #{maps\ 13787}#)))))))))
                                           #{tmp\ 13765}#)
                                    ((lambda (#{tmp\ 13816}#)
                                       (if #{tmp\ 13816}#
                                         (apply (lambda (#{x\ 13819}#
                                                         #{y\ 13820}#)
                                                  (call-with-values
                                                    (lambda ()
                                                      (#{gen-syntax\ 13620}#
                                                        #{src\ 13728}#
                                                        #{x\ 13819}#
                                                        #{r\ 13730}#
                                                        #{maps\ 13731}#
                                                        #{ellipsis?\ 13732}#
                                                        #{mod\ 13733}#))
                                                    (lambda (#{x\ 13821}#
                                                             #{maps\ 13822}#)
                                                      (call-with-values
                                                        (lambda ()
                                                          (#{gen-syntax\ 13620}#
                                                            #{src\ 13728}#
                                                            #{y\ 13820}#
                                                            #{r\ 13730}#
                                                            #{maps\ 13822}#
                                                            #{ellipsis?\ 13732}#
                                                            #{mod\ 13733}#))
                                                        (lambda (#{y\ 13825}#
                                                                 #{maps\ 13826}#)
                                                          (values
                                                            (#{gen-cons\ 13628}#
                                                              #{x\ 13821}#
                                                              #{y\ 13825}#)
                                                            #{maps\ 13826}#))))))
                                                #{tmp\ 13816}#)
                                         ((lambda (#{tmp\ 13829}#)
                                            (if #{tmp\ 13829}#
                                              (apply (lambda (#{e1\ 13832}#
                                                              #{e2\ 13833}#)
                                                       (call-with-values
                                                         (lambda ()
                                                           (#{gen-syntax\ 13620}#
                                                             #{src\ 13728}#
                                                             (cons #{e1\ 13832}#
                                                                   #{e2\ 13833}#)
                                                             #{r\ 13730}#
                                                             #{maps\ 13731}#
                                                             #{ellipsis?\ 13732}#
                                                             #{mod\ 13733}#))
                                                         (lambda (#{e\ 13835}#
                                                                  #{maps\ 13836}#)
                                                           (values
                                                             (#{gen-vector\ 13632}#
                                                               #{e\ 13835}#)
                                                             #{maps\ 13836}#))))
                                                     #{tmp\ 13829}#)
                                              ((lambda (#{_\ 13840}#)
                                                 (values
                                                   (list 'quote
                                                         #{e\ 13729}#)
                                                   #{maps\ 13731}#))
                                               #{tmp\ 13753}#)))
                                          ($sc-dispatch
                                            #{tmp\ 13753}#
                                            '#(vector (any . each-any))))))
                                     ($sc-dispatch
                                       #{tmp\ 13753}#
                                       '(any . any)))))
                                ($sc-dispatch
                                  #{tmp\ 13753}#
                                  '(any any . any)))))
                           ($sc-dispatch #{tmp\ 13753}# (quote (any any)))))
                        #{e\ 13729}#)))))
          (lambda (#{e\ 13842}#
                   #{r\ 13843}#
                   #{w\ 13844}#
                   #{s\ 13845}#
                   #{mod\ 13846}#)
            (let ((#{e\ 13853}#
                    (#{source-wrap\ 11222}#
                      #{e\ 13842}#
                      #{w\ 13844}#
                      #{s\ 13845}#
                      #{mod\ 13846}#)))
              ((lambda (#{tmp\ 13854}#)
                 ((lambda (#{tmp\ 13855}#)
                    (if #{tmp\ 13855}#
                      (apply (lambda (#{_\ 13858}# #{x\ 13859}#)
                               (call-with-values
                                 (lambda ()
                                   (#{gen-syntax\ 13620}#
                                     #{e\ 13853}#
                                     #{x\ 13859}#
                                     #{r\ 13843}#
                                     '()
                                     #{ellipsis?\ 11252}#
                                     #{mod\ 13846}#))
                                 (lambda (#{e\ 13860}# #{maps\ 13861}#)
                                   (#{regen\ 13634}# #{e\ 13860}#))))
                             #{tmp\ 13855}#)
                      ((lambda (#{_\ 13865}#)
                         (syntax-violation
                           'syntax
                           "bad `syntax' form"
                           #{e\ 13853}#))
                       #{tmp\ 13854}#)))
                  ($sc-dispatch #{tmp\ 13854}# (quote (any any)))))
               #{e\ 13853}#)))))
      (#{global-extend\ 11147}#
        'core
        'lambda
        (lambda (#{e\ 13866}#
                 #{r\ 13867}#
                 #{w\ 13868}#
                 #{s\ 13869}#
                 #{mod\ 13870}#)
          ((lambda (#{tmp\ 13876}#)
             ((lambda (#{tmp\ 13877}#)
                (if #{tmp\ 13877}#
                  (apply (lambda (#{_\ 13882}#
                                  #{args\ 13883}#
                                  #{e1\ 13884}#
                                  #{e2\ 13885}#)
                           (call-with-values
                             (lambda ()
                               (#{lambda-formals\ 11254}# #{args\ 13883}#))
                             (lambda (#{req\ 13886}#
                                      #{opt\ 13887}#
                                      #{rest\ 13888}#
                                      #{kw\ 13889}#)
                               (letrec ((#{lp\ 13897}#
                                          (lambda (#{body\ 13898}#
                                                   #{meta\ 13899}#)
                                            ((lambda (#{tmp\ 13901}#)
                                               ((lambda (#{tmp\ 13902}#)
                                                  (if (if #{tmp\ 13902}#
                                                        (apply (lambda (#{docstring\ 13906}#
                                                                        #{e1\ 13907}#
                                                                        #{e2\ 13908}#)
                                                                 (string?
                                                                   (syntax->datum
                                                                     #{docstring\ 13906}#)))
                                                               #{tmp\ 13902}#)
                                                        #f)
                                                    (apply (lambda (#{docstring\ 13912}#
                                                                    #{e1\ 13913}#
                                                                    #{e2\ 13914}#)
                                                             (#{lp\ 13897}#
                                                               (cons #{e1\ 13913}#
                                                                     #{e2\ 13914}#)
                                                               (append
                                                                 #{meta\ 13899}#
                                                                 (list (cons 'documentation
                                                                             (syntax->datum
                                                                               #{docstring\ 13912}#))))))
                                                           #{tmp\ 13902}#)
                                                    ((lambda (#{tmp\ 13917}#)
                                                       (if #{tmp\ 13917}#
                                                         (apply (lambda (#{k\ 13922}#
                                                                         #{v\ 13923}#
                                                                         #{e1\ 13924}#
                                                                         #{e2\ 13925}#)
                                                                  (#{lp\ 13897}#
                                                                    (cons #{e1\ 13924}#
                                                                          #{e2\ 13925}#)
                                                                    (append
                                                                      #{meta\ 13899}#
                                                                      (syntax->datum
                                                                        (map cons
                                                                             #{k\ 13922}#
                                                                             #{v\ 13923}#)))))
                                                                #{tmp\ 13917}#)
                                                         ((lambda (#{_\ 13930}#)
                                                            (#{chi-simple-lambda\ 11256}#
                                                              #{e\ 13866}#
                                                              #{r\ 13867}#
                                                              #{w\ 13868}#
                                                              #{s\ 13869}#
                                                              #{mod\ 13870}#
                                                              #{req\ 13886}#
                                                              #{rest\ 13888}#
                                                              #{meta\ 13899}#
                                                              #{body\ 13898}#))
                                                          #{tmp\ 13901}#)))
                                                     ($sc-dispatch
                                                       #{tmp\ 13901}#
                                                       '(#(vector
                                                           #(each (any . any)))
                                                         any
                                                         .
                                                         each-any)))))
                                                ($sc-dispatch
                                                  #{tmp\ 13901}#
                                                  '(any any . each-any))))
                                             #{body\ 13898}#))))
                                 (#{lp\ 13897}#
                                   (cons #{e1\ 13884}# #{e2\ 13885}#)
                                   '())))))
                         #{tmp\ 13877}#)
                  ((lambda (#{_\ 13932}#)
                     (syntax-violation
                       'lambda
                       "bad lambda"
                       #{e\ 13866}#))
                   #{tmp\ 13876}#)))
              ($sc-dispatch
                #{tmp\ 13876}#
                '(any any any . each-any))))
           #{e\ 13866}#)))
      (#{global-extend\ 11147}#
        'core
        'lambda*
        (lambda (#{e\ 13933}#
                 #{r\ 13934}#
                 #{w\ 13935}#
                 #{s\ 13936}#
                 #{mod\ 13937}#)
          ((lambda (#{tmp\ 13943}#)
             ((lambda (#{tmp\ 13944}#)
                (if #{tmp\ 13944}#
                  (apply (lambda (#{_\ 13949}#
                                  #{args\ 13950}#
                                  #{e1\ 13951}#
                                  #{e2\ 13952}#)
                           (call-with-values
                             (lambda ()
                               (#{chi-lambda-case\ 11260}#
                                 #{e\ 13933}#
                                 #{r\ 13934}#
                                 #{w\ 13935}#
                                 #{s\ 13936}#
                                 #{mod\ 13937}#
                                 #{lambda*-formals\ 11258}#
                                 (list (cons #{args\ 13950}#
                                             (cons #{e1\ 13951}#
                                                   #{e2\ 13952}#)))))
                             (lambda (#{meta\ 13954}# #{lcase\ 13955}#)
                               (#{build-case-lambda\ 11095}#
                                 #{s\ 13936}#
                                 #{meta\ 13954}#
                                 #{lcase\ 13955}#))))
                         #{tmp\ 13944}#)
                  ((lambda (#{_\ 13959}#)
                     (syntax-violation
                       'lambda
                       "bad lambda*"
                       #{e\ 13933}#))
                   #{tmp\ 13943}#)))
              ($sc-dispatch
                #{tmp\ 13943}#
                '(any any any . each-any))))
           #{e\ 13933}#)))
      (#{global-extend\ 11147}#
        'core
        'case-lambda
        (lambda (#{e\ 13960}#
                 #{r\ 13961}#
                 #{w\ 13962}#
                 #{s\ 13963}#
                 #{mod\ 13964}#)
          ((lambda (#{tmp\ 13970}#)
             ((lambda (#{tmp\ 13971}#)
                (if #{tmp\ 13971}#
                  (apply (lambda (#{_\ 13979}#
                                  #{args\ 13980}#
                                  #{e1\ 13981}#
                                  #{e2\ 13982}#
                                  #{args*\ 13983}#
                                  #{e1*\ 13984}#
                                  #{e2*\ 13985}#)
                           (call-with-values
                             (lambda ()
                               (#{chi-lambda-case\ 11260}#
                                 #{e\ 13960}#
                                 #{r\ 13961}#
                                 #{w\ 13962}#
                                 #{s\ 13963}#
                                 #{mod\ 13964}#
                                 #{lambda-formals\ 11254}#
                                 (cons (cons #{args\ 13980}#
                                             (cons #{e1\ 13981}#
                                                   #{e2\ 13982}#))
                                       (map (lambda (#{tmp\ 13989}#
                                                     #{tmp\ 13988}#
                                                     #{tmp\ 13987}#)
                                              (cons #{tmp\ 13987}#
                                                    (cons #{tmp\ 13988}#
                                                          #{tmp\ 13989}#)))
                                            #{e2*\ 13985}#
                                            #{e1*\ 13984}#
                                            #{args*\ 13983}#))))
                             (lambda (#{meta\ 13991}# #{lcase\ 13992}#)
                               (#{build-case-lambda\ 11095}#
                                 #{s\ 13963}#
                                 #{meta\ 13991}#
                                 #{lcase\ 13992}#))))
                         #{tmp\ 13971}#)
                  ((lambda (#{_\ 13996}#)
                     (syntax-violation
                       'case-lambda
                       "bad case-lambda"
                       #{e\ 13960}#))
                   #{tmp\ 13970}#)))
              ($sc-dispatch
                #{tmp\ 13970}#
                '(any (any any . each-any)
                      .
                      #(each (any any . each-any))))))
           #{e\ 13960}#)))
      (#{global-extend\ 11147}#
        'core
        'case-lambda*
        (lambda (#{e\ 13997}#
                 #{r\ 13998}#
                 #{w\ 13999}#
                 #{s\ 14000}#
                 #{mod\ 14001}#)
          ((lambda (#{tmp\ 14007}#)
             ((lambda (#{tmp\ 14008}#)
                (if #{tmp\ 14008}#
                  (apply (lambda (#{_\ 14016}#
                                  #{args\ 14017}#
                                  #{e1\ 14018}#
                                  #{e2\ 14019}#
                                  #{args*\ 14020}#
                                  #{e1*\ 14021}#
                                  #{e2*\ 14022}#)
                           (call-with-values
                             (lambda ()
                               (#{chi-lambda-case\ 11260}#
                                 #{e\ 13997}#
                                 #{r\ 13998}#
                                 #{w\ 13999}#
                                 #{s\ 14000}#
                                 #{mod\ 14001}#
                                 #{lambda*-formals\ 11258}#
                                 (cons (cons #{args\ 14017}#
                                             (cons #{e1\ 14018}#
                                                   #{e2\ 14019}#))
                                       (map (lambda (#{tmp\ 14026}#
                                                     #{tmp\ 14025}#
                                                     #{tmp\ 14024}#)
                                              (cons #{tmp\ 14024}#
                                                    (cons #{tmp\ 14025}#
                                                          #{tmp\ 14026}#)))
                                            #{e2*\ 14022}#
                                            #{e1*\ 14021}#
                                            #{args*\ 14020}#))))
                             (lambda (#{meta\ 14028}# #{lcase\ 14029}#)
                               (#{build-case-lambda\ 11095}#
                                 #{s\ 14000}#
                                 #{meta\ 14028}#
                                 #{lcase\ 14029}#))))
                         #{tmp\ 14008}#)
                  ((lambda (#{_\ 14033}#)
                     (syntax-violation
                       'case-lambda
                       "bad case-lambda*"
                       #{e\ 13997}#))
                   #{tmp\ 14007}#)))
              ($sc-dispatch
                #{tmp\ 14007}#
                '(any (any any . each-any)
                      .
                      #(each (any any . each-any))))))
           #{e\ 13997}#)))
      (#{global-extend\ 11147}#
        'core
        'let
        (letrec ((#{chi-let\ 14035}#
                   (lambda (#{e\ 14036}#
                            #{r\ 14037}#
                            #{w\ 14038}#
                            #{s\ 14039}#
                            #{mod\ 14040}#
                            #{constructor\ 14041}#
                            #{ids\ 14042}#
                            #{vals\ 14043}#
                            #{exps\ 14044}#)
                     (if (not (#{valid-bound-ids?\ 11214}# #{ids\ 14042}#))
                       (syntax-violation
                         'let
                         "duplicate bound variable"
                         #{e\ 14036}#)
                       (let ((#{labels\ 14056}#
                               (#{gen-labels\ 11169}# #{ids\ 14042}#))
                             (#{new-vars\ 14057}#
                               (map #{gen-var\ 11264}# #{ids\ 14042}#)))
                         (let ((#{nw\ 14060}#
                                 (#{make-binding-wrap\ 11198}#
                                   #{ids\ 14042}#
                                   #{labels\ 14056}#
                                   #{w\ 14038}#))
                               (#{nr\ 14061}#
                                 (#{extend-var-env\ 11141}#
                                   #{labels\ 14056}#
                                   #{new-vars\ 14057}#
                                   #{r\ 14037}#)))
                           (#{constructor\ 14041}#
                             #{s\ 14039}#
                             (map syntax->datum #{ids\ 14042}#)
                             #{new-vars\ 14057}#
                             (map (lambda (#{x\ 14062}#)
                                    (#{chi\ 11236}#
                                      #{x\ 14062}#
                                      #{r\ 14037}#
                                      #{w\ 14038}#
                                      #{mod\ 14040}#))
                                  #{vals\ 14043}#)
                             (#{chi-body\ 11244}#
                               #{exps\ 14044}#
                               (#{source-wrap\ 11222}#
                                 #{e\ 14036}#
                                 #{nw\ 14060}#
                                 #{s\ 14039}#
                                 #{mod\ 14040}#)
                               #{nr\ 14061}#
                               #{nw\ 14060}#
                               #{mod\ 14040}#))))))))
          (lambda (#{e\ 14064}#
                   #{r\ 14065}#
                   #{w\ 14066}#
                   #{s\ 14067}#
                   #{mod\ 14068}#)
            ((lambda (#{tmp\ 14074}#)
               ((lambda (#{tmp\ 14075}#)
                  (if (if #{tmp\ 14075}#
                        (apply (lambda (#{_\ 14081}#
                                        #{id\ 14082}#
                                        #{val\ 14083}#
                                        #{e1\ 14084}#
                                        #{e2\ 14085}#)
                                 (and-map #{id?\ 11151}# #{id\ 14082}#))
                               #{tmp\ 14075}#)
                        #f)
                    (apply (lambda (#{_\ 14092}#
                                    #{id\ 14093}#
                                    #{val\ 14094}#
                                    #{e1\ 14095}#
                                    #{e2\ 14096}#)
                             (#{chi-let\ 14035}#
                               #{e\ 14064}#
                               #{r\ 14065}#
                               #{w\ 14066}#
                               #{s\ 14067}#
                               #{mod\ 14068}#
                               #{build-let\ 11105}#
                               #{id\ 14093}#
                               #{val\ 14094}#
                               (cons #{e1\ 14095}# #{e2\ 14096}#)))
                           #{tmp\ 14075}#)
                    ((lambda (#{tmp\ 14100}#)
                       (if (if #{tmp\ 14100}#
                             (apply (lambda (#{_\ 14107}#
                                             #{f\ 14108}#
                                             #{id\ 14109}#
                                             #{val\ 14110}#
                                             #{e1\ 14111}#
                                             #{e2\ 14112}#)
                                      (if (#{id?\ 11151}# #{f\ 14108}#)
                                        (and-map #{id?\ 11151}# #{id\ 14109}#)
                                        #f))
                                    #{tmp\ 14100}#)
                             #f)
                         (apply (lambda (#{_\ 14122}#
                                         #{f\ 14123}#
                                         #{id\ 14124}#
                                         #{val\ 14125}#
                                         #{e1\ 14126}#
                                         #{e2\ 14127}#)
                                  (#{chi-let\ 14035}#
                                    #{e\ 14064}#
                                    #{r\ 14065}#
                                    #{w\ 14066}#
                                    #{s\ 14067}#
                                    #{mod\ 14068}#
                                    #{build-named-let\ 11107}#
                                    (cons #{f\ 14123}# #{id\ 14124}#)
                                    #{val\ 14125}#
                                    (cons #{e1\ 14126}# #{e2\ 14127}#)))
                                #{tmp\ 14100}#)
                         ((lambda (#{_\ 14132}#)
                            (syntax-violation
                              'let
                              "bad let"
                              (#{source-wrap\ 11222}#
                                #{e\ 14064}#
                                #{w\ 14066}#
                                #{s\ 14067}#
                                #{mod\ 14068}#)))
                          #{tmp\ 14074}#)))
                     ($sc-dispatch
                       #{tmp\ 14074}#
                       '(any any #(each (any any)) any . each-any)))))
                ($sc-dispatch
                  #{tmp\ 14074}#
                  '(any #(each (any any)) any . each-any))))
             #{e\ 14064}#))))
      (#{global-extend\ 11147}#
        'core
        'letrec
        (lambda (#{e\ 14133}#
                 #{r\ 14134}#
                 #{w\ 14135}#
                 #{s\ 14136}#
                 #{mod\ 14137}#)
          ((lambda (#{tmp\ 14143}#)
             ((lambda (#{tmp\ 14144}#)
                (if (if #{tmp\ 14144}#
                      (apply (lambda (#{_\ 14150}#
                                      #{id\ 14151}#
                                      #{val\ 14152}#
                                      #{e1\ 14153}#
                                      #{e2\ 14154}#)
                               (and-map #{id?\ 11151}# #{id\ 14151}#))
                             #{tmp\ 14144}#)
                      #f)
                  (apply (lambda (#{_\ 14161}#
                                  #{id\ 14162}#
                                  #{val\ 14163}#
                                  #{e1\ 14164}#
                                  #{e2\ 14165}#)
                           (let ((#{ids\ 14167}# #{id\ 14162}#))
                             (if (not (#{valid-bound-ids?\ 11214}#
                                        #{ids\ 14167}#))
                               (syntax-violation
                                 'letrec
                                 "duplicate bound variable"
                                 #{e\ 14133}#)
                               (let ((#{labels\ 14171}#
                                       (#{gen-labels\ 11169}# #{ids\ 14167}#))
                                     (#{new-vars\ 14172}#
                                       (map #{gen-var\ 11264}#
                                            #{ids\ 14167}#)))
                                 (let ((#{w\ 14175}#
                                         (#{make-binding-wrap\ 11198}#
                                           #{ids\ 14167}#
                                           #{labels\ 14171}#
                                           #{w\ 14135}#))
                                       (#{r\ 14176}#
                                         (#{extend-var-env\ 11141}#
                                           #{labels\ 14171}#
                                           #{new-vars\ 14172}#
                                           #{r\ 14134}#)))
                                   (#{build-letrec\ 11109}#
                                     #{s\ 14136}#
                                     (map syntax->datum #{ids\ 14167}#)
                                     #{new-vars\ 14172}#
                                     (map (lambda (#{x\ 14177}#)
                                            (#{chi\ 11236}#
                                              #{x\ 14177}#
                                              #{r\ 14176}#
                                              #{w\ 14175}#
                                              #{mod\ 14137}#))
                                          #{val\ 14163}#)
                                     (#{chi-body\ 11244}#
                                       (cons #{e1\ 14164}# #{e2\ 14165}#)
                                       (#{source-wrap\ 11222}#
                                         #{e\ 14133}#
                                         #{w\ 14175}#
                                         #{s\ 14136}#
                                         #{mod\ 14137}#)
                                       #{r\ 14176}#
                                       #{w\ 14175}#
                                       #{mod\ 14137}#)))))))
                         #{tmp\ 14144}#)
                  ((lambda (#{_\ 14182}#)
                     (syntax-violation
                       'letrec
                       "bad letrec"
                       (#{source-wrap\ 11222}#
                         #{e\ 14133}#
                         #{w\ 14135}#
                         #{s\ 14136}#
                         #{mod\ 14137}#)))
                   #{tmp\ 14143}#)))
              ($sc-dispatch
                #{tmp\ 14143}#
                '(any #(each (any any)) any . each-any))))
           #{e\ 14133}#)))
      (#{global-extend\ 11147}#
        'core
        'set!
        (lambda (#{e\ 14183}#
                 #{r\ 14184}#
                 #{w\ 14185}#
                 #{s\ 14186}#
                 #{mod\ 14187}#)
          ((lambda (#{tmp\ 14193}#)
             ((lambda (#{tmp\ 14194}#)
                (if (if #{tmp\ 14194}#
                      (apply (lambda (#{_\ 14198}#
                                      #{id\ 14199}#
                                      #{val\ 14200}#)
                               (#{id?\ 11151}# #{id\ 14199}#))
                             #{tmp\ 14194}#)
                      #f)
                  (apply (lambda (#{_\ 14204}# #{id\ 14205}# #{val\ 14206}#)
                           (let ((#{val\ 14209}#
                                   (#{chi\ 11236}#
                                     #{val\ 14206}#
                                     #{r\ 14184}#
                                     #{w\ 14185}#
                                     #{mod\ 14187}#))
                                 (#{n\ 14210}#
                                   (#{id-var-name\ 11208}#
                                     #{id\ 14205}#
                                     #{w\ 14185}#)))
                             (let ((#{b\ 14212}#
                                     (#{lookup\ 11145}#
                                       #{n\ 14210}#
                                       #{r\ 14184}#
                                       #{mod\ 14187}#)))
                               (let ((#{atom-key\ 14215}#
                                       (#{binding-type\ 11134}# #{b\ 14212}#)))
                                 (if (memv #{atom-key\ 14215}#
                                           '(lexical))
                                   (#{build-lexical-assignment\ 11081}#
                                     #{s\ 14186}#
                                     (syntax->datum #{id\ 14205}#)
                                     (#{binding-value\ 11136}# #{b\ 14212}#)
                                     #{val\ 14209}#)
                                   (if (memv #{atom-key\ 14215}#
                                             '(global))
                                     (#{build-global-assignment\ 11087}#
                                       #{s\ 14186}#
                                       #{n\ 14210}#
                                       #{val\ 14209}#
                                       #{mod\ 14187}#)
                                     (if (memv #{atom-key\ 14215}#
                                               '(displaced-lexical))
                                       (syntax-violation
                                         'set!
                                         "identifier out of context"
                                         (#{wrap\ 11220}#
                                           #{id\ 14205}#
                                           #{w\ 14185}#
                                           #{mod\ 14187}#))
                                       (syntax-violation
                                         'set!
                                         "bad set!"
                                         (#{source-wrap\ 11222}#
                                           #{e\ 14183}#
                                           #{w\ 14185}#
                                           #{s\ 14186}#
                                           #{mod\ 14187}#)))))))))
                         #{tmp\ 14194}#)
                  ((lambda (#{tmp\ 14220}#)
                     (if #{tmp\ 14220}#
                       (apply (lambda (#{_\ 14225}#
                                       #{head\ 14226}#
                                       #{tail\ 14227}#
                                       #{val\ 14228}#)
                                (call-with-values
                                  (lambda ()
                                    (#{syntax-type\ 11232}#
                                      #{head\ 14226}#
                                      #{r\ 14184}#
                                      '(())
                                      #f
                                      #f
                                      #{mod\ 14187}#
                                      #t))
                                  (lambda (#{type\ 14231}#
                                           #{value\ 14232}#
                                           #{ee\ 14233}#
                                           #{ww\ 14234}#
                                           #{ss\ 14235}#
                                           #{modmod\ 14236}#)
                                    (if (memv #{type\ 14231}#
                                              '(module-ref))
                                      (let ((#{val\ 14245}#
                                              (#{chi\ 11236}#
                                                #{val\ 14228}#
                                                #{r\ 14184}#
                                                #{w\ 14185}#
                                                #{mod\ 14187}#)))
                                        (call-with-values
                                          (lambda ()
                                            (#{value\ 14232}#
                                              (cons #{head\ 14226}#
                                                    #{tail\ 14227}#)
                                              #{r\ 14184}#
                                              #{w\ 14185}#))
                                          (lambda (#{e\ 14247}#
                                                   #{r\ 14248}#
                                                   #{w\ 14249}#
                                                   #{s*\ 14250}#
                                                   #{mod\ 14251}#)
                                            ((lambda (#{tmp\ 14257}#)
                                               ((lambda (#{tmp\ 14258}#)
                                                  (if (if #{tmp\ 14258}#
                                                        (apply (lambda (#{e\ 14260}#)
                                                                 (#{id?\ 11151}#
                                                                   #{e\ 14260}#))
                                                               #{tmp\ 14258}#)
                                                        #f)
                                                    (apply (lambda (#{e\ 14262}#)
                                                             (#{build-global-assignment\ 11087}#
                                                               #{s\ 14186}#
                                                               (syntax->datum
                                                                 #{e\ 14262}#)
                                                               #{val\ 14245}#
                                                               #{mod\ 14251}#))
                                                           #{tmp\ 14258}#)
                                                    (syntax-violation
                                                      #f
                                                      "source expression failed to match any pattern"
                                                      #{tmp\ 14257}#)))
                                                (list #{tmp\ 14257}#)))
                                             #{e\ 14247}#))))
                                      (#{build-application\ 11073}#
                                        #{s\ 14186}#
                                        (#{chi\ 11236}#
                                          (list '#(syntax-object
                                                   setter
                                                   ((top)
                                                    #(ribcage () () ())
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(type
                                                        value
                                                        ee
                                                        ww
                                                        ss
                                                        modmod)
                                                      #((top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top))
                                                      #("i14237"
                                                        "i14238"
                                                        "i14239"
                                                        "i14240"
                                                        "i14241"
                                                        "i14242"))
                                                    #(ribcage
                                                      #(_ head tail val)
                                                      #((top)
                                                        (top)
                                                        (top)
                                                        (top))
                                                      #("i14221"
                                                        "i14222"
                                                        "i14223"
                                                        "i14224"))
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(e r w s mod)
                                                      #((top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top))
                                                      #("i14188"
                                                        "i14189"
                                                        "i14190"
                                                        "i14191"
                                                        "i14192"))
                                                    #(ribcage
                                                      (lambda-var-list
                                                        gen-var
                                                        strip
                                                        chi-lambda-case
                                                        lambda*-formals
                                                        chi-simple-lambda
                                                        lambda-formals
                                                        ellipsis?
                                                        chi-void
                                                        eval-local-transformer
                                                        chi-local-syntax
                                                        chi-body
                                                        chi-macro
                                                        chi-application
                                                        chi-expr
                                                        chi
                                                        chi-top
                                                        syntax-type
                                                        chi-when-list
                                                        chi-install-global
                                                        chi-top-sequence
                                                        chi-sequence
                                                        source-wrap
                                                        wrap
                                                        bound-id-member?
                                                        distinct-bound-ids?
                                                        valid-bound-ids?
                                                        bound-id=?
                                                        free-id=?
                                                        id-var-name
                                                        same-marks?
                                                        join-marks
                                                        join-wraps
                                                        smart-append
                                                        make-binding-wrap
                                                        extend-ribcage!
                                                        make-empty-ribcage
                                                        new-mark
                                                        anti-mark
                                                        the-anti-mark
                                                        top-marked?
                                                        top-wrap
                                                        empty-wrap
                                                        set-ribcage-labels!
                                                        set-ribcage-marks!
                                                        set-ribcage-symnames!
                                                        ribcage-labels
                                                        ribcage-marks
                                                        ribcage-symnames
                                                        ribcage?
                                                        make-ribcage
                                                        gen-labels
                                                        gen-label
                                                        make-rename
                                                        rename-marks
                                                        rename-new
                                                        rename-old
                                                        subst-rename?
                                                        wrap-subst
                                                        wrap-marks
                                                        make-wrap
                                                        id-sym-name&marks
                                                        id-sym-name
                                                        id?
                                                        nonsymbol-id?
                                                        global-extend
                                                        lookup
                                                        macros-only-env
                                                        extend-var-env
                                                        extend-env
                                                        null-env
                                                        binding-value
                                                        binding-type
                                                        make-binding
                                                        arg-check
                                                        source-annotation
                                                        no-source
                                                        set-syntax-object-module!
                                                        set-syntax-object-wrap!
                                                        set-syntax-object-expression!
                                                        syntax-object-module
                                                        syntax-object-wrap
                                                        syntax-object-expression
                                                        syntax-object?
                                                        make-syntax-object
                                                        build-lexical-var
                                                        build-letrec
                                                        build-named-let
                                                        build-let
                                                        build-sequence
                                                        build-data
                                                        build-primref
                                                        build-lambda-case
                                                        build-case-lambda
                                                        build-simple-lambda
                                                        build-global-definition
                                                        maybe-name-value!
                                                        build-global-assignment
                                                        build-global-reference
                                                        analyze-variable
                                                        build-lexical-assignment
                                                        build-lexical-reference
                                                        build-dynlet
                                                        build-conditional
                                                        build-application
                                                        build-void
                                                        decorate-source
                                                        get-global-definition-hook
                                                        put-global-definition-hook
                                                        gensym-hook
                                                        local-eval-hook
                                                        top-level-eval-hook
                                                        fx<
                                                        fx=
                                                        fx-
                                                        fx+
                                                        *mode*)
                                                      ((top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top))
                                                      ("i11265"
                                                       "i11263"
                                                       "i11261"
                                                       "i11259"
                                                       "i11257"
                                                       "i11255"
                                                       "i11253"
                                                       "i11251"
                                                       "i11249"
                                                       "i11247"
                                                       "i11245"
                                                       "i11243"
                                                       "i11241"
                                                       "i11239"
                                                       "i11237"
                                                       "i11235"
                                                       "i11233"
                                                       "i11231"
                                                       "i11229"
                                                       "i11227"
                                                       "i11225"
                                                       "i11223"
                                                       "i11221"
                                                       "i11219"
                                                       "i11217"
                                                       "i11215"
                                                       "i11213"
                                                       "i11211"
                                                       "i11209"
                                                       "i11207"
                                                       "i11205"
                                                       "i11203"
                                                       "i11201"
                                                       "i11199"
                                                       "i11197"
                                                       "i11195"
                                                       "i11194"
                                                       "i11193"
                                                       "i11191"
                                                       "i11190"
                                                       "i11189"
                                                       "i11188"
                                                       "i11187"
                                                       "i11185"
                                                       "i11183"
                                                       "i11181"
                                                       "i11179"
                                                       "i11177"
                                                       "i11175"
                                                       "i11173"
                                                       "i11171"
                                                       "i11168"
                                                       "i11166"
                                                       "i11165"
                                                       "i11164"
                                                       "i11163"
                                                       "i11162"
                                                       "i11161"
                                                       "i11159"
                                                       "i11157"
                                                       "i11155"
                                                       "i11153"
                                                       "i11152"
                                                       "i11150"
                                                       "i11148"
                                                       "i11146"
                                                       "i11144"
                                                       "i11142"
                                                       "i11140"
                                                       "i11138"
                                                       "i11137"
                                                       "i11135"
                                                       "i11133"
                                                       "i11132"
                                                       "i11131"
                                                       "i11129"
                                                       "i11128"
                                                       "i11126"
                                                       "i11124"
                                                       "i11122"
                                                       "i11120"
                                                       "i11118"
                                                       "i11116"
                                                       "i11114"
                                                       "i11112"
                                                       "i11110"
                                                       "i11108"
                                                       "i11106"
                                                       "i11104"
                                                       "i11102"
                                                       "i11100"
                                                       "i11098"
                                                       "i11096"
                                                       "i11094"
                                                       "i11092"
                                                       "i11090"
                                                       "i11088"
                                                       "i11086"
                                                       "i11084"
                                                       "i11082"
                                                       "i11080"
                                                       "i11078"
                                                       "i11076"
                                                       "i11074"
                                                       "i11072"
                                                       "i11070"
                                                       "i11068"
                                                       "i11066"
                                                       "i11064"
                                                       "i11063"
                                                       "i11061"
                                                       "i11059"
                                                       "i11057"
                                                       "i11055"
                                                       "i11053"
                                                       "i11051"
                                                       "i11049"))
                                                    #(ribcage
                                                      (define-structure
                                                        and-map*)
                                                      ((top) (top))
                                                      ("i10952" "i10950")))
                                                   (hygiene guile))
                                                #{head\ 14226}#)
                                          #{r\ 14184}#
                                          #{w\ 14185}#
                                          #{mod\ 14187}#)
                                        (map (lambda (#{e\ 14264}#)
                                               (#{chi\ 11236}#
                                                 #{e\ 14264}#
                                                 #{r\ 14184}#
                                                 #{w\ 14185}#
                                                 #{mod\ 14187}#))
                                             (append
                                               #{tail\ 14227}#
                                               (list #{val\ 14228}#))))))))
                              #{tmp\ 14220}#)
                       ((lambda (#{_\ 14268}#)
                          (syntax-violation
                            'set!
                            "bad set!"
                            (#{source-wrap\ 11222}#
                              #{e\ 14183}#
                              #{w\ 14185}#
                              #{s\ 14186}#
                              #{mod\ 14187}#)))
                        #{tmp\ 14193}#)))
                   ($sc-dispatch
                     #{tmp\ 14193}#
                     '(any (any . each-any) any)))))
              ($sc-dispatch
                #{tmp\ 14193}#
                '(any any any))))
           #{e\ 14183}#)))
      (#{global-extend\ 11147}#
        'module-ref
        '@
        (lambda (#{e\ 14269}# #{r\ 14270}# #{w\ 14271}#)
          ((lambda (#{tmp\ 14275}#)
             ((lambda (#{tmp\ 14276}#)
                (if (if #{tmp\ 14276}#
                      (apply (lambda (#{_\ 14280}#
                                      #{mod\ 14281}#
                                      #{id\ 14282}#)
                               (if (and-map #{id?\ 11151}# #{mod\ 14281}#)
                                 (#{id?\ 11151}# #{id\ 14282}#)
                                 #f))
                             #{tmp\ 14276}#)
                      #f)
                  (apply (lambda (#{_\ 14289}# #{mod\ 14290}# #{id\ 14291}#)
                           (values
                             (syntax->datum #{id\ 14291}#)
                             #{r\ 14270}#
                             #{w\ 14271}#
                             #f
                             (syntax->datum
                               (cons '#(syntax-object
                                        public
                                        ((top)
                                         #(ribcage
                                           #(_ mod id)
                                           #((top) (top) (top))
                                           #("i14286" "i14287" "i14288"))
                                         #(ribcage () () ())
                                         #(ribcage
                                           #(e r w)
                                           #((top) (top) (top))
                                           #("i14272" "i14273" "i14274"))
                                         #(ribcage
                                           (lambda-var-list
                                             gen-var
                                             strip
                                             chi-lambda-case
                                             lambda*-formals
                                             chi-simple-lambda
                                             lambda-formals
                                             ellipsis?
                                             chi-void
                                             eval-local-transformer
                                             chi-local-syntax
                                             chi-body
                                             chi-macro
                                             chi-application
                                             chi-expr
                                             chi
                                             chi-top
                                             syntax-type
                                             chi-when-list
                                             chi-install-global
                                             chi-top-sequence
                                             chi-sequence
                                             source-wrap
                                             wrap
                                             bound-id-member?
                                             distinct-bound-ids?
                                             valid-bound-ids?
                                             bound-id=?
                                             free-id=?
                                             id-var-name
                                             same-marks?
                                             join-marks
                                             join-wraps
                                             smart-append
                                             make-binding-wrap
                                             extend-ribcage!
                                             make-empty-ribcage
                                             new-mark
                                             anti-mark
                                             the-anti-mark
                                             top-marked?
                                             top-wrap
                                             empty-wrap
                                             set-ribcage-labels!
                                             set-ribcage-marks!
                                             set-ribcage-symnames!
                                             ribcage-labels
                                             ribcage-marks
                                             ribcage-symnames
                                             ribcage?
                                             make-ribcage
                                             gen-labels
                                             gen-label
                                             make-rename
                                             rename-marks
                                             rename-new
                                             rename-old
                                             subst-rename?
                                             wrap-subst
                                             wrap-marks
                                             make-wrap
                                             id-sym-name&marks
                                             id-sym-name
                                             id?
                                             nonsymbol-id?
                                             global-extend
                                             lookup
                                             macros-only-env
                                             extend-var-env
                                             extend-env
                                             null-env
                                             binding-value
                                             binding-type
                                             make-binding
                                             arg-check
                                             source-annotation
                                             no-source
                                             set-syntax-object-module!
                                             set-syntax-object-wrap!
                                             set-syntax-object-expression!
                                             syntax-object-module
                                             syntax-object-wrap
                                             syntax-object-expression
                                             syntax-object?
                                             make-syntax-object
                                             build-lexical-var
                                             build-letrec
                                             build-named-let
                                             build-let
                                             build-sequence
                                             build-data
                                             build-primref
                                             build-lambda-case
                                             build-case-lambda
                                             build-simple-lambda
                                             build-global-definition
                                             maybe-name-value!
                                             build-global-assignment
                                             build-global-reference
                                             analyze-variable
                                             build-lexical-assignment
                                             build-lexical-reference
                                             build-dynlet
                                             build-conditional
                                             build-application
                                             build-void
                                             decorate-source
                                             get-global-definition-hook
                                             put-global-definition-hook
                                             gensym-hook
                                             local-eval-hook
                                             top-level-eval-hook
                                             fx<
                                             fx=
                                             fx-
                                             fx+
                                             *mode*)
                                           ((top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top))
                                           ("i11265"
                                            "i11263"
                                            "i11261"
                                            "i11259"
                                            "i11257"
                                            "i11255"
                                            "i11253"
                                            "i11251"
                                            "i11249"
                                            "i11247"
                                            "i11245"
                                            "i11243"
                                            "i11241"
                                            "i11239"
                                            "i11237"
                                            "i11235"
                                            "i11233"
                                            "i11231"
                                            "i11229"
                                            "i11227"
                                            "i11225"
                                            "i11223"
                                            "i11221"
                                            "i11219"
                                            "i11217"
                                            "i11215"
                                            "i11213"
                                            "i11211"
                                            "i11209"
                                            "i11207"
                                            "i11205"
                                            "i11203"
                                            "i11201"
                                            "i11199"
                                            "i11197"
                                            "i11195"
                                            "i11194"
                                            "i11193"
                                            "i11191"
                                            "i11190"
                                            "i11189"
                                            "i11188"
                                            "i11187"
                                            "i11185"
                                            "i11183"
                                            "i11181"
                                            "i11179"
                                            "i11177"
                                            "i11175"
                                            "i11173"
                                            "i11171"
                                            "i11168"
                                            "i11166"
                                            "i11165"
                                            "i11164"
                                            "i11163"
                                            "i11162"
                                            "i11161"
                                            "i11159"
                                            "i11157"
                                            "i11155"
                                            "i11153"
                                            "i11152"
                                            "i11150"
                                            "i11148"
                                            "i11146"
                                            "i11144"
                                            "i11142"
                                            "i11140"
                                            "i11138"
                                            "i11137"
                                            "i11135"
                                            "i11133"
                                            "i11132"
                                            "i11131"
                                            "i11129"
                                            "i11128"
                                            "i11126"
                                            "i11124"
                                            "i11122"
                                            "i11120"
                                            "i11118"
                                            "i11116"
                                            "i11114"
                                            "i11112"
                                            "i11110"
                                            "i11108"
                                            "i11106"
                                            "i11104"
                                            "i11102"
                                            "i11100"
                                            "i11098"
                                            "i11096"
                                            "i11094"
                                            "i11092"
                                            "i11090"
                                            "i11088"
                                            "i11086"
                                            "i11084"
                                            "i11082"
                                            "i11080"
                                            "i11078"
                                            "i11076"
                                            "i11074"
                                            "i11072"
                                            "i11070"
                                            "i11068"
                                            "i11066"
                                            "i11064"
                                            "i11063"
                                            "i11061"
                                            "i11059"
                                            "i11057"
                                            "i11055"
                                            "i11053"
                                            "i11051"
                                            "i11049"))
                                         #(ribcage
                                           (define-structure and-map*)
                                           ((top) (top))
                                           ("i10952" "i10950")))
                                        (hygiene guile))
                                     #{mod\ 14290}#))))
                         #{tmp\ 14276}#)
                  (syntax-violation
                    #f
                    "source expression failed to match any pattern"
                    #{tmp\ 14275}#)))
              ($sc-dispatch
                #{tmp\ 14275}#
                '(any each-any any))))
           #{e\ 14269}#)))
      (#{global-extend\ 11147}#
        'module-ref
        '@@
        (lambda (#{e\ 14293}# #{r\ 14294}# #{w\ 14295}#)
          (letrec ((#{remodulate\ 14300}#
                     (lambda (#{x\ 14301}# #{mod\ 14302}#)
                       (if (pair? #{x\ 14301}#)
                         (cons (#{remodulate\ 14300}#
                                 (car #{x\ 14301}#)
                                 #{mod\ 14302}#)
                               (#{remodulate\ 14300}#
                                 (cdr #{x\ 14301}#)
                                 #{mod\ 14302}#))
                         (if (#{syntax-object?\ 11115}# #{x\ 14301}#)
                           (#{make-syntax-object\ 11113}#
                             (#{remodulate\ 14300}#
                               (#{syntax-object-expression\ 11117}#
                                 #{x\ 14301}#)
                               #{mod\ 14302}#)
                             (#{syntax-object-wrap\ 11119}# #{x\ 14301}#)
                             #{mod\ 14302}#)
                           (if (vector? #{x\ 14301}#)
                             (let ((#{n\ 14313}# (vector-length #{x\ 14301}#)))
                               (let ((#{v\ 14315}# (make-vector #{n\ 14313}#)))
                                 (letrec ((#{loop\ 14318}#
                                            (lambda (#{i\ 14319}#)
                                              (if (#{fx=\ 11056}#
                                                    #{i\ 14319}#
                                                    #{n\ 14313}#)
                                                (begin (if #f #f) #{v\ 14315}#)
                                                (begin
                                                  (vector-set!
                                                    #{v\ 14315}#
                                                    #{i\ 14319}#
                                                    (#{remodulate\ 14300}#
                                                      (vector-ref
                                                        #{x\ 14301}#
                                                        #{i\ 14319}#)
                                                      #{mod\ 14302}#))
                                                  (#{loop\ 14318}#
                                                    (#{fx+\ 11052}#
                                                      #{i\ 14319}#
                                                      1)))))))
                                   (#{loop\ 14318}# 0))))
                             #{x\ 14301}#))))))
            ((lambda (#{tmp\ 14323}#)
               ((lambda (#{tmp\ 14324}#)
                  (if (if #{tmp\ 14324}#
                        (apply (lambda (#{_\ 14328}#
                                        #{mod\ 14329}#
                                        #{exp\ 14330}#)
                                 (and-map #{id?\ 11151}# #{mod\ 14329}#))
                               #{tmp\ 14324}#)
                        #f)
                    (apply (lambda (#{_\ 14335}# #{mod\ 14336}# #{exp\ 14337}#)
                             (let ((#{mod\ 14339}#
                                     (syntax->datum
                                       (cons '#(syntax-object
                                                private
                                                ((top)
                                                 #(ribcage
                                                   #(_ mod exp)
                                                   #((top) (top) (top))
                                                   #("i14332"
                                                     "i14333"
                                                     "i14334"))
                                                 #(ribcage
                                                   (remodulate)
                                                   ((top))
                                                   ("i14299"))
                                                 #(ribcage
                                                   #(e r w)
                                                   #((top) (top) (top))
                                                   #("i14296"
                                                     "i14297"
                                                     "i14298"))
                                                 #(ribcage
                                                   (lambda-var-list
                                                     gen-var
                                                     strip
                                                     chi-lambda-case
                                                     lambda*-formals
                                                     chi-simple-lambda
                                                     lambda-formals
                                                     ellipsis?
                                                     chi-void
                                                     eval-local-transformer
                                                     chi-local-syntax
                                                     chi-body
                                                     chi-macro
                                                     chi-application
                                                     chi-expr
                                                     chi
                                                     chi-top
                                                     syntax-type
                                                     chi-when-list
                                                     chi-install-global
                                                     chi-top-sequence
                                                     chi-sequence
                                                     source-wrap
                                                     wrap
                                                     bound-id-member?
                                                     distinct-bound-ids?
                                                     valid-bound-ids?
                                                     bound-id=?
                                                     free-id=?
                                                     id-var-name
                                                     same-marks?
                                                     join-marks
                                                     join-wraps
                                                     smart-append
                                                     make-binding-wrap
                                                     extend-ribcage!
                                                     make-empty-ribcage
                                                     new-mark
                                                     anti-mark
                                                     the-anti-mark
                                                     top-marked?
                                                     top-wrap
                                                     empty-wrap
                                                     set-ribcage-labels!
                                                     set-ribcage-marks!
                                                     set-ribcage-symnames!
                                                     ribcage-labels
                                                     ribcage-marks
                                                     ribcage-symnames
                                                     ribcage?
                                                     make-ribcage
                                                     gen-labels
                                                     gen-label
                                                     make-rename
                                                     rename-marks
                                                     rename-new
                                                     rename-old
                                                     subst-rename?
                                                     wrap-subst
                                                     wrap-marks
                                                     make-wrap
                                                     id-sym-name&marks
                                                     id-sym-name
                                                     id?
                                                     nonsymbol-id?
                                                     global-extend
                                                     lookup
                                                     macros-only-env
                                                     extend-var-env
                                                     extend-env
                                                     null-env
                                                     binding-value
                                                     binding-type
                                                     make-binding
                                                     arg-check
                                                     source-annotation
                                                     no-source
                                                     set-syntax-object-module!
                                                     set-syntax-object-wrap!
                                                     set-syntax-object-expression!
                                                     syntax-object-module
                                                     syntax-object-wrap
                                                     syntax-object-expression
                                                     syntax-object?
                                                     make-syntax-object
                                                     build-lexical-var
                                                     build-letrec
                                                     build-named-let
                                                     build-let
                                                     build-sequence
                                                     build-data
                                                     build-primref
                                                     build-lambda-case
                                                     build-case-lambda
                                                     build-simple-lambda
                                                     build-global-definition
                                                     maybe-name-value!
                                                     build-global-assignment
                                                     build-global-reference
                                                     analyze-variable
                                                     build-lexical-assignment
                                                     build-lexical-reference
                                                     build-dynlet
                                                     build-conditional
                                                     build-application
                                                     build-void
                                                     decorate-source
                                                     get-global-definition-hook
                                                     put-global-definition-hook
                                                     gensym-hook
                                                     local-eval-hook
                                                     top-level-eval-hook
                                                     fx<
                                                     fx=
                                                     fx-
                                                     fx+
                                                     *mode*)
                                                   ((top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top))
                                                   ("i11265"
                                                    "i11263"
                                                    "i11261"
                                                    "i11259"
                                                    "i11257"
                                                    "i11255"
                                                    "i11253"
                                                    "i11251"
                                                    "i11249"
                                                    "i11247"
                                                    "i11245"
                                                    "i11243"
                                                    "i11241"
                                                    "i11239"
                                                    "i11237"
                                                    "i11235"
                                                    "i11233"
                                                    "i11231"
                                                    "i11229"
                                                    "i11227"
                                                    "i11225"
                                                    "i11223"
                                                    "i11221"
                                                    "i11219"
                                                    "i11217"
                                                    "i11215"
                                                    "i11213"
                                                    "i11211"
                                                    "i11209"
                                                    "i11207"
                                                    "i11205"
                                                    "i11203"
                                                    "i11201"
                                                    "i11199"
                                                    "i11197"
                                                    "i11195"
                                                    "i11194"
                                                    "i11193"
                                                    "i11191"
                                                    "i11190"
                                                    "i11189"
                                                    "i11188"
                                                    "i11187"
                                                    "i11185"
                                                    "i11183"
                                                    "i11181"
                                                    "i11179"
                                                    "i11177"
                                                    "i11175"
                                                    "i11173"
                                                    "i11171"
                                                    "i11168"
                                                    "i11166"
                                                    "i11165"
                                                    "i11164"
                                                    "i11163"
                                                    "i11162"
                                                    "i11161"
                                                    "i11159"
                                                    "i11157"
                                                    "i11155"
                                                    "i11153"
                                                    "i11152"
                                                    "i11150"
                                                    "i11148"
                                                    "i11146"
                                                    "i11144"
                                                    "i11142"
                                                    "i11140"
                                                    "i11138"
                                                    "i11137"
                                                    "i11135"
                                                    "i11133"
                                                    "i11132"
                                                    "i11131"
                                                    "i11129"
                                                    "i11128"
                                                    "i11126"
                                                    "i11124"
                                                    "i11122"
                                                    "i11120"
                                                    "i11118"
                                                    "i11116"
                                                    "i11114"
                                                    "i11112"
                                                    "i11110"
                                                    "i11108"
                                                    "i11106"
                                                    "i11104"
                                                    "i11102"
                                                    "i11100"
                                                    "i11098"
                                                    "i11096"
                                                    "i11094"
                                                    "i11092"
                                                    "i11090"
                                                    "i11088"
                                                    "i11086"
                                                    "i11084"
                                                    "i11082"
                                                    "i11080"
                                                    "i11078"
                                                    "i11076"
                                                    "i11074"
                                                    "i11072"
                                                    "i11070"
                                                    "i11068"
                                                    "i11066"
                                                    "i11064"
                                                    "i11063"
                                                    "i11061"
                                                    "i11059"
                                                    "i11057"
                                                    "i11055"
                                                    "i11053"
                                                    "i11051"
                                                    "i11049"))
                                                 #(ribcage
                                                   (define-structure and-map*)
                                                   ((top) (top))
                                                   ("i10952" "i10950")))
                                                (hygiene guile))
                                             #{mod\ 14336}#))))
                               (values
                                 (#{remodulate\ 14300}#
                                   #{exp\ 14337}#
                                   #{mod\ 14339}#)
                                 #{r\ 14294}#
                                 #{w\ 14295}#
                                 (#{source-annotation\ 11130}# #{exp\ 14337}#)
                                 #{mod\ 14339}#)))
                           #{tmp\ 14324}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 14323}#)))
                ($sc-dispatch
                  #{tmp\ 14323}#
                  '(any each-any any))))
             #{e\ 14293}#))))
      (#{global-extend\ 11147}#
        'core
        'if
        (lambda (#{e\ 14341}#
                 #{r\ 14342}#
                 #{w\ 14343}#
                 #{s\ 14344}#
                 #{mod\ 14345}#)
          ((lambda (#{tmp\ 14351}#)
             ((lambda (#{tmp\ 14352}#)
                (if #{tmp\ 14352}#
                  (apply (lambda (#{_\ 14356}# #{test\ 14357}# #{then\ 14358}#)
                           (#{build-conditional\ 11075}#
                             #{s\ 14344}#
                             (#{chi\ 11236}#
                               #{test\ 14357}#
                               #{r\ 14342}#
                               #{w\ 14343}#
                               #{mod\ 14345}#)
                             (#{chi\ 11236}#
                               #{then\ 14358}#
                               #{r\ 14342}#
                               #{w\ 14343}#
                               #{mod\ 14345}#)
                             (#{build-void\ 11071}# #f)))
                         #{tmp\ 14352}#)
                  ((lambda (#{tmp\ 14360}#)
                     (if #{tmp\ 14360}#
                       (apply (lambda (#{_\ 14365}#
                                       #{test\ 14366}#
                                       #{then\ 14367}#
                                       #{else\ 14368}#)
                                (#{build-conditional\ 11075}#
                                  #{s\ 14344}#
                                  (#{chi\ 11236}#
                                    #{test\ 14366}#
                                    #{r\ 14342}#
                                    #{w\ 14343}#
                                    #{mod\ 14345}#)
                                  (#{chi\ 11236}#
                                    #{then\ 14367}#
                                    #{r\ 14342}#
                                    #{w\ 14343}#
                                    #{mod\ 14345}#)
                                  (#{chi\ 11236}#
                                    #{else\ 14368}#
                                    #{r\ 14342}#
                                    #{w\ 14343}#
                                    #{mod\ 14345}#)))
                              #{tmp\ 14360}#)
                       (syntax-violation
                         #f
                         "source expression failed to match any pattern"
                         #{tmp\ 14351}#)))
                   ($sc-dispatch
                     #{tmp\ 14351}#
                     '(any any any any)))))
              ($sc-dispatch
                #{tmp\ 14351}#
                '(any any any))))
           #{e\ 14341}#)))
      (#{global-extend\ 11147}#
        'core
        'with-fluids
        (lambda (#{e\ 14369}#
                 #{r\ 14370}#
                 #{w\ 14371}#
                 #{s\ 14372}#
                 #{mod\ 14373}#)
          ((lambda (#{tmp\ 14379}#)
             ((lambda (#{tmp\ 14380}#)
                (if #{tmp\ 14380}#
                  (apply (lambda (#{_\ 14386}#
                                  #{fluid\ 14387}#
                                  #{val\ 14388}#
                                  #{b\ 14389}#
                                  #{b*\ 14390}#)
                           (#{build-dynlet\ 11077}#
                             #{s\ 14372}#
                             (map (lambda (#{x\ 14391}#)
                                    (#{chi\ 11236}#
                                      #{x\ 14391}#
                                      #{r\ 14370}#
                                      #{w\ 14371}#
                                      #{mod\ 14373}#))
                                  #{fluid\ 14387}#)
                             (map (lambda (#{x\ 14394}#)
                                    (#{chi\ 11236}#
                                      #{x\ 14394}#
                                      #{r\ 14370}#
                                      #{w\ 14371}#
                                      #{mod\ 14373}#))
                                  #{val\ 14388}#)
                             (#{chi-body\ 11244}#
                               (cons #{b\ 14389}# #{b*\ 14390}#)
                               (#{source-wrap\ 11222}#
                                 #{e\ 14369}#
                                 #{w\ 14371}#
                                 #{s\ 14372}#
                                 #{mod\ 14373}#)
                               #{r\ 14370}#
                               #{w\ 14371}#
                               #{mod\ 14373}#)))
                         #{tmp\ 14380}#)
                  (syntax-violation
                    #f
                    "source expression failed to match any pattern"
                    #{tmp\ 14379}#)))
              ($sc-dispatch
                #{tmp\ 14379}#
                '(any #(each (any any)) any . each-any))))
           #{e\ 14369}#)))
      (#{global-extend\ 11147}#
        'begin
        'begin
        '())
      (#{global-extend\ 11147}#
        'define
        'define
        '())
      (#{global-extend\ 11147}#
        'define-syntax
        'define-syntax
        '())
      (#{global-extend\ 11147}#
        'eval-when
        'eval-when
        '())
      (#{global-extend\ 11147}#
        'core
        'syntax-case
        (letrec ((#{gen-syntax-case\ 14405}#
                   (lambda (#{x\ 14406}#
                            #{keys\ 14407}#
                            #{clauses\ 14408}#
                            #{r\ 14409}#
                            #{mod\ 14410}#)
                     (if (null? #{clauses\ 14408}#)
                       (#{build-application\ 11073}#
                         #f
                         (#{build-primref\ 11099}#
                           #f
                           'syntax-violation)
                         (list (#{build-data\ 11101}# #f #f)
                               (#{build-data\ 11101}#
                                 #f
                                 "source expression failed to match any pattern")
                               #{x\ 14406}#))
                       ((lambda (#{tmp\ 14420}#)
                          ((lambda (#{tmp\ 14421}#)
                             (if #{tmp\ 14421}#
                               (apply (lambda (#{pat\ 14424}# #{exp\ 14425}#)
                                        (if (if (#{id?\ 11151}# #{pat\ 14424}#)
                                              (and-map
                                                (lambda (#{x\ 14428}#)
                                                  (not (#{free-id=?\ 11210}#
                                                         #{pat\ 14424}#
                                                         #{x\ 14428}#)))
                                                (cons '#(syntax-object
                                                         ...
                                                         ((top)
                                                          #(ribcage
                                                            #(pat exp)
                                                            #((top) (top))
                                                            #("i14422"
                                                              "i14423"))
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(x
                                                              keys
                                                              clauses
                                                              r
                                                              mod)
                                                            #((top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top))
                                                            #("i14411"
                                                              "i14412"
                                                              "i14413"
                                                              "i14414"
                                                              "i14415"))
                                                          #(ribcage
                                                            (gen-syntax-case
                                                              gen-clause
                                                              build-dispatch-call
                                                              convert-pattern)
                                                            ((top)
                                                             (top)
                                                             (top)
                                                             (top))
                                                            ("i14404"
                                                             "i14402"
                                                             "i14400"
                                                             "i14398"))
                                                          #(ribcage
                                                            (lambda-var-list
                                                              gen-var
                                                              strip
                                                              chi-lambda-case
                                                              lambda*-formals
                                                              chi-simple-lambda
                                                              lambda-formals
                                                              ellipsis?
                                                              chi-void
                                                              eval-local-transformer
                                                              chi-local-syntax
                                                              chi-body
                                                              chi-macro
                                                              chi-application
                                                              chi-expr
                                                              chi
                                                              chi-top
                                                              syntax-type
                                                              chi-when-list
                                                              chi-install-global
                                                              chi-top-sequence
                                                              chi-sequence
                                                              source-wrap
                                                              wrap
                                                              bound-id-member?
                                                              distinct-bound-ids?
                                                              valid-bound-ids?
                                                              bound-id=?
                                                              free-id=?
                                                              id-var-name
                                                              same-marks?
                                                              join-marks
                                                              join-wraps
                                                              smart-append
                                                              make-binding-wrap
                                                              extend-ribcage!
                                                              make-empty-ribcage
                                                              new-mark
                                                              anti-mark
                                                              the-anti-mark
                                                              top-marked?
                                                              top-wrap
                                                              empty-wrap
                                                              set-ribcage-labels!
                                                              set-ribcage-marks!
                                                              set-ribcage-symnames!
                                                              ribcage-labels
                                                              ribcage-marks
                                                              ribcage-symnames
                                                              ribcage?
                                                              make-ribcage
                                                              gen-labels
                                                              gen-label
                                                              make-rename
                                                              rename-marks
                                                              rename-new
                                                              rename-old
                                                              subst-rename?
                                                              wrap-subst
                                                              wrap-marks
                                                              make-wrap
                                                              id-sym-name&marks
                                                              id-sym-name
                                                              id?
                                                              nonsymbol-id?
                                                              global-extend
                                                              lookup
                                                              macros-only-env
                                                              extend-var-env
                                                              extend-env
                                                              null-env
                                                              binding-value
                                                              binding-type
                                                              make-binding
                                                              arg-check
                                                              source-annotation
                                                              no-source
                                                              set-syntax-object-module!
                                                              set-syntax-object-wrap!
                                                              set-syntax-object-expression!
                                                              syntax-object-module
                                                              syntax-object-wrap
                                                              syntax-object-expression
                                                              syntax-object?
                                                              make-syntax-object
                                                              build-lexical-var
                                                              build-letrec
                                                              build-named-let
                                                              build-let
                                                              build-sequence
                                                              build-data
                                                              build-primref
                                                              build-lambda-case
                                                              build-case-lambda
                                                              build-simple-lambda
                                                              build-global-definition
                                                              maybe-name-value!
                                                              build-global-assignment
                                                              build-global-reference
                                                              analyze-variable
                                                              build-lexical-assignment
                                                              build-lexical-reference
                                                              build-dynlet
                                                              build-conditional
                                                              build-application
                                                              build-void
                                                              decorate-source
                                                              get-global-definition-hook
                                                              put-global-definition-hook
                                                              gensym-hook
                                                              local-eval-hook
                                                              top-level-eval-hook
                                                              fx<
                                                              fx=
                                                              fx-
                                                              fx+
                                                              *mode*)
                                                            ((top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top))
                                                            ("i11265"
                                                             "i11263"
                                                             "i11261"
                                                             "i11259"
                                                             "i11257"
                                                             "i11255"
                                                             "i11253"
                                                             "i11251"
                                                             "i11249"
                                                             "i11247"
                                                             "i11245"
                                                             "i11243"
                                                             "i11241"
                                                             "i11239"
                                                             "i11237"
                                                             "i11235"
                                                             "i11233"
                                                             "i11231"
                                                             "i11229"
                                                             "i11227"
                                                             "i11225"
                                                             "i11223"
                                                             "i11221"
                                                             "i11219"
                                                             "i11217"
                                                             "i11215"
                                                             "i11213"
                                                             "i11211"
                                                             "i11209"
                                                             "i11207"
                                                             "i11205"
                                                             "i11203"
                                                             "i11201"
                                                             "i11199"
                                                             "i11197"
                                                             "i11195"
                                                             "i11194"
                                                             "i11193"
                                                             "i11191"
                                                             "i11190"
                                                             "i11189"
                                                             "i11188"
                                                             "i11187"
                                                             "i11185"
                                                             "i11183"
                                                             "i11181"
                                                             "i11179"
                                                             "i11177"
                                                             "i11175"
                                                             "i11173"
                                                             "i11171"
                                                             "i11168"
                                                             "i11166"
                                                             "i11165"
                                                             "i11164"
                                                             "i11163"
                                                             "i11162"
                                                             "i11161"
                                                             "i11159"
                                                             "i11157"
                                                             "i11155"
                                                             "i11153"
                                                             "i11152"
                                                             "i11150"
                                                             "i11148"
                                                             "i11146"
                                                             "i11144"
                                                             "i11142"
                                                             "i11140"
                                                             "i11138"
                                                             "i11137"
                                                             "i11135"
                                                             "i11133"
                                                             "i11132"
                                                             "i11131"
                                                             "i11129"
                                                             "i11128"
                                                             "i11126"
                                                             "i11124"
                                                             "i11122"
                                                             "i11120"
                                                             "i11118"
                                                             "i11116"
                                                             "i11114"
                                                             "i11112"
                                                             "i11110"
                                                             "i11108"
                                                             "i11106"
                                                             "i11104"
                                                             "i11102"
                                                             "i11100"
                                                             "i11098"
                                                             "i11096"
                                                             "i11094"
                                                             "i11092"
                                                             "i11090"
                                                             "i11088"
                                                             "i11086"
                                                             "i11084"
                                                             "i11082"
                                                             "i11080"
                                                             "i11078"
                                                             "i11076"
                                                             "i11074"
                                                             "i11072"
                                                             "i11070"
                                                             "i11068"
                                                             "i11066"
                                                             "i11064"
                                                             "i11063"
                                                             "i11061"
                                                             "i11059"
                                                             "i11057"
                                                             "i11055"
                                                             "i11053"
                                                             "i11051"
                                                             "i11049"))
                                                          #(ribcage
                                                            (define-structure
                                                              and-map*)
                                                            ((top) (top))
                                                            ("i10952"
                                                             "i10950")))
                                                         (hygiene guile))
                                                      #{keys\ 14407}#))
                                              #f)
                                          (let ((#{labels\ 14432}#
                                                  (list (#{gen-label\ 11167}#)))
                                                (#{var\ 14433}#
                                                  (#{gen-var\ 11264}#
                                                    #{pat\ 14424}#)))
                                            (#{build-application\ 11073}#
                                              #f
                                              (#{build-simple-lambda\ 11093}#
                                                #f
                                                (list (syntax->datum
                                                        #{pat\ 14424}#))
                                                #f
                                                (list #{var\ 14433}#)
                                                '()
                                                (#{chi\ 11236}#
                                                  #{exp\ 14425}#
                                                  (#{extend-env\ 11139}#
                                                    #{labels\ 14432}#
                                                    (list (cons 'syntax
                                                                (cons #{var\ 14433}#
                                                                      0)))
                                                    #{r\ 14409}#)
                                                  (#{make-binding-wrap\ 11198}#
                                                    (list #{pat\ 14424}#)
                                                    #{labels\ 14432}#
                                                    '(()))
                                                  #{mod\ 14410}#))
                                              (list #{x\ 14406}#)))
                                          (#{gen-clause\ 14403}#
                                            #{x\ 14406}#
                                            #{keys\ 14407}#
                                            (cdr #{clauses\ 14408}#)
                                            #{r\ 14409}#
                                            #{pat\ 14424}#
                                            #t
                                            #{exp\ 14425}#
                                            #{mod\ 14410}#)))
                                      #{tmp\ 14421}#)
                               ((lambda (#{tmp\ 14439}#)
                                  (if #{tmp\ 14439}#
                                    (apply (lambda (#{pat\ 14443}#
                                                    #{fender\ 14444}#
                                                    #{exp\ 14445}#)
                                             (#{gen-clause\ 14403}#
                                               #{x\ 14406}#
                                               #{keys\ 14407}#
                                               (cdr #{clauses\ 14408}#)
                                               #{r\ 14409}#
                                               #{pat\ 14443}#
                                               #{fender\ 14444}#
                                               #{exp\ 14445}#
                                               #{mod\ 14410}#))
                                           #{tmp\ 14439}#)
                                    ((lambda (#{_\ 14447}#)
                                       (syntax-violation
                                         'syntax-case
                                         "invalid clause"
                                         (car #{clauses\ 14408}#)))
                                     #{tmp\ 14420}#)))
                                ($sc-dispatch
                                  #{tmp\ 14420}#
                                  '(any any any)))))
                           ($sc-dispatch #{tmp\ 14420}# (quote (any any)))))
                        (car #{clauses\ 14408}#)))))
                 (#{gen-clause\ 14403}#
                   (lambda (#{x\ 14448}#
                            #{keys\ 14449}#
                            #{clauses\ 14450}#
                            #{r\ 14451}#
                            #{pat\ 14452}#
                            #{fender\ 14453}#
                            #{exp\ 14454}#
                            #{mod\ 14455}#)
                     (call-with-values
                       (lambda ()
                         (#{convert-pattern\ 14399}#
                           #{pat\ 14452}#
                           #{keys\ 14449}#))
                       (lambda (#{p\ 14464}# #{pvars\ 14465}#)
                         (if (not (#{distinct-bound-ids?\ 11216}#
                                    (map car #{pvars\ 14465}#)))
                           (syntax-violation
                             'syntax-case
                             "duplicate pattern variable"
                             #{pat\ 14452}#)
                           (if (not (and-map
                                      (lambda (#{x\ 14472}#)
                                        (not (#{ellipsis?\ 11252}#
                                               (car #{x\ 14472}#))))
                                      #{pvars\ 14465}#))
                             (syntax-violation
                               'syntax-case
                               "misplaced ellipsis"
                               #{pat\ 14452}#)
                             (let ((#{y\ 14476}#
                                     (#{gen-var\ 11264}# (quote tmp))))
                               (#{build-application\ 11073}#
                                 #f
                                 (#{build-simple-lambda\ 11093}#
                                   #f
                                   (list (quote tmp))
                                   #f
                                   (list #{y\ 14476}#)
                                   '()
                                   (let ((#{y\ 14480}#
                                           (#{build-lexical-reference\ 11079}#
                                             'value
                                             #f
                                             'tmp
                                             #{y\ 14476}#)))
                                     (#{build-conditional\ 11075}#
                                       #f
                                       ((lambda (#{tmp\ 14483}#)
                                          ((lambda (#{tmp\ 14484}#)
                                             (if #{tmp\ 14484}#
                                               (apply (lambda () #{y\ 14480}#)
                                                      #{tmp\ 14484}#)
                                               ((lambda (#{_\ 14486}#)
                                                  (#{build-conditional\ 11075}#
                                                    #f
                                                    #{y\ 14480}#
                                                    (#{build-dispatch-call\ 14401}#
                                                      #{pvars\ 14465}#
                                                      #{fender\ 14453}#
                                                      #{y\ 14480}#
                                                      #{r\ 14451}#
                                                      #{mod\ 14455}#)
                                                    (#{build-data\ 11101}#
                                                      #f
                                                      #f)))
                                                #{tmp\ 14483}#)))
                                           ($sc-dispatch
                                             #{tmp\ 14483}#
                                             '#(atom #t))))
                                        #{fender\ 14453}#)
                                       (#{build-dispatch-call\ 14401}#
                                         #{pvars\ 14465}#
                                         #{exp\ 14454}#
                                         #{y\ 14480}#
                                         #{r\ 14451}#
                                         #{mod\ 14455}#)
                                       (#{gen-syntax-case\ 14405}#
                                         #{x\ 14448}#
                                         #{keys\ 14449}#
                                         #{clauses\ 14450}#
                                         #{r\ 14451}#
                                         #{mod\ 14455}#))))
                                 (list (if (eq? #{p\ 14464}# (quote any))
                                         (#{build-application\ 11073}#
                                           #f
                                           (#{build-primref\ 11099}#
                                             #f
                                             'list)
                                           (list #{x\ 14448}#))
                                         (#{build-application\ 11073}#
                                           #f
                                           (#{build-primref\ 11099}#
                                             #f
                                             '$sc-dispatch)
                                           (list #{x\ 14448}#
                                                 (#{build-data\ 11101}#
                                                   #f
                                                   #{p\ 14464}#)))))))))))))
                 (#{build-dispatch-call\ 14401}#
                   (lambda (#{pvars\ 14494}#
                            #{exp\ 14495}#
                            #{y\ 14496}#
                            #{r\ 14497}#
                            #{mod\ 14498}#)
                     (let ((#{ids\ 14506}# (map car #{pvars\ 14494}#))
                           (#{levels\ 14507}# (map cdr #{pvars\ 14494}#)))
                       (let ((#{labels\ 14510}#
                               (#{gen-labels\ 11169}# #{ids\ 14506}#))
                             (#{new-vars\ 14511}#
                               (map #{gen-var\ 11264}# #{ids\ 14506}#)))
                         (#{build-application\ 11073}#
                           #f
                           (#{build-primref\ 11099}# #f (quote apply))
                           (list (#{build-simple-lambda\ 11093}#
                                   #f
                                   (map syntax->datum #{ids\ 14506}#)
                                   #f
                                   #{new-vars\ 14511}#
                                   '()
                                   (#{chi\ 11236}#
                                     #{exp\ 14495}#
                                     (#{extend-env\ 11139}#
                                       #{labels\ 14510}#
                                       (map (lambda (#{var\ 14515}#
                                                     #{level\ 14516}#)
                                              (cons 'syntax
                                                    (cons #{var\ 14515}#
                                                          #{level\ 14516}#)))
                                            #{new-vars\ 14511}#
                                            (map cdr #{pvars\ 14494}#))
                                       #{r\ 14497}#)
                                     (#{make-binding-wrap\ 11198}#
                                       #{ids\ 14506}#
                                       #{labels\ 14510}#
                                       '(()))
                                     #{mod\ 14498}#))
                                 #{y\ 14496}#))))))
                 (#{convert-pattern\ 14399}#
                   (lambda (#{pattern\ 14522}# #{keys\ 14523}#)
                     (letrec ((#{cvt\ 14529}#
                                (lambda (#{p\ 14530}#
                                         #{n\ 14531}#
                                         #{ids\ 14532}#)
                                  (if (#{id?\ 11151}# #{p\ 14530}#)
                                    (if (#{bound-id-member?\ 11218}#
                                          #{p\ 14530}#
                                          #{keys\ 14523}#)
                                      (values
                                        (vector (quote free-id) #{p\ 14530}#)
                                        #{ids\ 14532}#)
                                      (values
                                        'any
                                        (cons (cons #{p\ 14530}# #{n\ 14531}#)
                                              #{ids\ 14532}#)))
                                    ((lambda (#{tmp\ 14536}#)
                                       ((lambda (#{tmp\ 14537}#)
                                          (if (if #{tmp\ 14537}#
                                                (apply (lambda (#{x\ 14540}#
                                                                #{dots\ 14541}#)
                                                         (#{ellipsis?\ 11252}#
                                                           #{dots\ 14541}#))
                                                       #{tmp\ 14537}#)
                                                #f)
                                            (apply (lambda (#{x\ 14544}#
                                                            #{dots\ 14545}#)
                                                     (call-with-values
                                                       (lambda ()
                                                         (#{cvt\ 14529}#
                                                           #{x\ 14544}#
                                                           (#{fx+\ 11052}#
                                                             #{n\ 14531}#
                                                             1)
                                                           #{ids\ 14532}#))
                                                       (lambda (#{p\ 14546}#
                                                                #{ids\ 14547}#)
                                                         (values
                                                           (if (eq? #{p\ 14546}#
                                                                    'any)
                                                             'each-any
                                                             (vector
                                                               'each
                                                               #{p\ 14546}#))
                                                           #{ids\ 14547}#))))
                                                   #{tmp\ 14537}#)
                                            ((lambda (#{tmp\ 14550}#)
                                               (if (if #{tmp\ 14550}#
                                                     (apply (lambda (#{x\ 14554}#
                                                                     #{dots\ 14555}#
                                                                     #{ys\ 14556}#)
                                                              (#{ellipsis?\ 11252}#
                                                                #{dots\ 14555}#))
                                                            #{tmp\ 14550}#)
                                                     #f)
                                                 (apply (lambda (#{x\ 14560}#
                                                                 #{dots\ 14561}#
                                                                 #{ys\ 14562}#)
                                                          (call-with-values
                                                            (lambda ()
                                                              (#{cvt*\ 14527}#
                                                                #{ys\ 14562}#
                                                                #{n\ 14531}#
                                                                #{ids\ 14532}#))
                                                            (lambda (#{ys\ 14564}#
                                                                     #{ids\ 14565}#)
                                                              (call-with-values
                                                                (lambda ()
                                                                  (#{cvt\ 14529}#
                                                                    #{x\ 14560}#
                                                                    (+ #{n\ 14531}#
                                                                       1)
                                                                    #{ids\ 14565}#))
                                                                (lambda (#{x\ 14568}#
                                                                         #{ids\ 14569}#)
                                                                  (values
                                                                    (list->vector
                                                                      (cons 'each+
                                                                            (cons #{x\ 14568}#
                                                                                  (cons (reverse
                                                                                          #{ys\ 14564}#)
                                                                                        '(())))))
                                                                    #{ids\ 14569}#))))))
                                                        #{tmp\ 14550}#)
                                                 ((lambda (#{tmp\ 14573}#)
                                                    (if #{tmp\ 14573}#
                                                      (apply (lambda (#{x\ 14576}#
                                                                      #{y\ 14577}#)
                                                               (call-with-values
                                                                 (lambda ()
                                                                   (#{cvt\ 14529}#
                                                                     #{y\ 14577}#
                                                                     #{n\ 14531}#
                                                                     #{ids\ 14532}#))
                                                                 (lambda (#{y\ 14578}#
                                                                          #{ids\ 14579}#)
                                                                   (call-with-values
                                                                     (lambda ()
                                                                       (#{cvt\ 14529}#
                                                                         #{x\ 14576}#
                                                                         #{n\ 14531}#
                                                                         #{ids\ 14579}#))
                                                                     (lambda (#{x\ 14582}#
                                                                              #{ids\ 14583}#)
                                                                       (values
                                                                         (cons #{x\ 14582}#
                                                                               #{y\ 14578}#)
                                                                         #{ids\ 14583}#))))))
                                                             #{tmp\ 14573}#)
                                                      ((lambda (#{tmp\ 14586}#)
                                                         (if #{tmp\ 14586}#
                                                           (apply (lambda ()
                                                                    (values
                                                                      '()
                                                                      #{ids\ 14532}#))
                                                                  #{tmp\ 14586}#)
                                                           ((lambda (#{tmp\ 14587}#)
                                                              (if #{tmp\ 14587}#
                                                                (apply (lambda (#{x\ 14589}#)
                                                                         (call-with-values
                                                                           (lambda ()
                                                                             (#{cvt\ 14529}#
                                                                               #{x\ 14589}#
                                                                               #{n\ 14531}#
                                                                               #{ids\ 14532}#))
                                                                           (lambda (#{p\ 14591}#
                                                                                    #{ids\ 14592}#)
                                                                             (values
                                                                               (vector
                                                                                 'vector
                                                                                 #{p\ 14591}#)
                                                                               #{ids\ 14592}#))))
                                                                       #{tmp\ 14587}#)
                                                                ((lambda (#{x\ 14596}#)
                                                                   (values
                                                                     (vector
                                                                       'atom
                                                                       (#{strip\ 11262}#
                                                                         #{p\ 14530}#
                                                                         '(())))
                                                                     #{ids\ 14532}#))
                                                                 #{tmp\ 14536}#)))
                                                            ($sc-dispatch
                                                              #{tmp\ 14536}#
                                                              '#(vector
                                                                 each-any)))))
                                                       ($sc-dispatch
                                                         #{tmp\ 14536}#
                                                         '()))))
                                                  ($sc-dispatch
                                                    #{tmp\ 14536}#
                                                    '(any . any)))))
                                             ($sc-dispatch
                                               #{tmp\ 14536}#
                                               '(any any . each-any)))))
                                        ($sc-dispatch
                                          #{tmp\ 14536}#
                                          '(any any))))
                                     #{p\ 14530}#))))
                              (#{cvt*\ 14527}#
                                (lambda (#{p*\ 14598}#
                                         #{n\ 14599}#
                                         #{ids\ 14600}#)
                                  (if (null? #{p*\ 14598}#)
                                    (values (quote ()) #{ids\ 14600}#)
                                    (call-with-values
                                      (lambda ()
                                        (#{cvt*\ 14527}#
                                          (cdr #{p*\ 14598}#)
                                          #{n\ 14599}#
                                          #{ids\ 14600}#))
                                      (lambda (#{y\ 14604}# #{ids\ 14605}#)
                                        (call-with-values
                                          (lambda ()
                                            (#{cvt\ 14529}#
                                              (car #{p*\ 14598}#)
                                              #{n\ 14599}#
                                              #{ids\ 14605}#))
                                          (lambda (#{x\ 14608}# #{ids\ 14609}#)
                                            (values
                                              (cons #{x\ 14608}# #{y\ 14604}#)
                                              #{ids\ 14609}#)))))))))
                       (#{cvt\ 14529}# #{pattern\ 14522}# 0 (quote ()))))))
          (lambda (#{e\ 14612}#
                   #{r\ 14613}#
                   #{w\ 14614}#
                   #{s\ 14615}#
                   #{mod\ 14616}#)
            (let ((#{e\ 14623}#
                    (#{source-wrap\ 11222}#
                      #{e\ 14612}#
                      #{w\ 14614}#
                      #{s\ 14615}#
                      #{mod\ 14616}#)))
              ((lambda (#{tmp\ 14624}#)
                 ((lambda (#{tmp\ 14625}#)
                    (if #{tmp\ 14625}#
                      (apply (lambda (#{_\ 14630}#
                                      #{val\ 14631}#
                                      #{key\ 14632}#
                                      #{m\ 14633}#)
                               (if (and-map
                                     (lambda (#{x\ 14634}#)
                                       (if (#{id?\ 11151}# #{x\ 14634}#)
                                         (not (#{ellipsis?\ 11252}#
                                                #{x\ 14634}#))
                                         #f))
                                     #{key\ 14632}#)
                                 (let ((#{x\ 14640}#
                                         (#{gen-var\ 11264}# (quote tmp))))
                                   (#{build-application\ 11073}#
                                     #{s\ 14615}#
                                     (#{build-simple-lambda\ 11093}#
                                       #f
                                       (list (quote tmp))
                                       #f
                                       (list #{x\ 14640}#)
                                       '()
                                       (#{gen-syntax-case\ 14405}#
                                         (#{build-lexical-reference\ 11079}#
                                           'value
                                           #f
                                           'tmp
                                           #{x\ 14640}#)
                                         #{key\ 14632}#
                                         #{m\ 14633}#
                                         #{r\ 14613}#
                                         #{mod\ 14616}#))
                                     (list (#{chi\ 11236}#
                                             #{val\ 14631}#
                                             #{r\ 14613}#
                                             '(())
                                             #{mod\ 14616}#))))
                                 (syntax-violation
                                   'syntax-case
                                   "invalid literals list"
                                   #{e\ 14623}#)))
                             #{tmp\ 14625}#)
                      (syntax-violation
                        #f
                        "source expression failed to match any pattern"
                        #{tmp\ 14624}#)))
                  ($sc-dispatch
                    #{tmp\ 14624}#
                    '(any any each-any . each-any))))
               #{e\ 14623}#)))))
      (set! macroexpand
        (lambda (#{x\ 14646}# . #{rest\ 14647}#)
          (let ((#{m\ 14653}#
                  (if (null? #{rest\ 14647}#)
                    'e
                    (car #{rest\ 14647}#)))
                (#{esew\ 14654}#
                  (if (let ((#{t\ 14658}# (null? #{rest\ 14647}#)))
                        (if #{t\ 14658}#
                          #{t\ 14658}#
                          (null? (cdr #{rest\ 14647}#))))
                    '(eval)
                    (cadr #{rest\ 14647}#)))
                (#{mod\ 14655}#
                  (cons 'hygiene
                        (module-name (current-module)))))
            (with-fluids
              ((#{*mode*\ 11050}# #{m\ 14653}#))
              (if (eq? #{m\ 14653}# (quote e))
                (memoize-expression
                  (#{chi-top\ 11234}#
                    #{x\ 14646}#
                    '()
                    '((top))
                    #{m\ 14653}#
                    #{esew\ 14654}#
                    #{mod\ 14655}#))
                (#{chi-top\ 11234}#
                  #{x\ 14646}#
                  '()
                  '((top))
                  #{m\ 14653}#
                  #{esew\ 14654}#
                  #{mod\ 14655}#))))))
      (set! identifier?
        (lambda (#{x\ 14664}#)
          (#{nonsymbol-id?\ 11149}# #{x\ 14664}#)))
      (set! datum->syntax
        (lambda (#{id\ 14666}# #{datum\ 14667}#)
          (#{make-syntax-object\ 11113}#
            #{datum\ 14667}#
            (#{syntax-object-wrap\ 11119}# #{id\ 14666}#)
            #f)))
      (set! syntax->datum
        (lambda (#{x\ 14670}#)
          (#{strip\ 11262}# #{x\ 14670}# (quote (())))))
      (set! generate-temporaries
        (lambda (#{ls\ 14673}#)
          (begin
            (let ((#{x\ 14677}# #{ls\ 14673}#))
              (if (not (list? #{x\ 14677}#))
                (syntax-violation
                  'generate-temporaries
                  "invalid argument"
                  #{x\ 14677}#)))
            (map (lambda (#{x\ 14678}#)
                   (#{wrap\ 11220}# (gensym) (quote ((top))) #f))
                 #{ls\ 14673}#))))
      (set! free-identifier=?
        (lambda (#{x\ 14682}# #{y\ 14683}#)
          (begin
            (let ((#{x\ 14688}# #{x\ 14682}#))
              (if (not (#{nonsymbol-id?\ 11149}# #{x\ 14688}#))
                (syntax-violation
                  'free-identifier=?
                  "invalid argument"
                  #{x\ 14688}#)))
            (let ((#{x\ 14691}# #{y\ 14683}#))
              (if (not (#{nonsymbol-id?\ 11149}# #{x\ 14691}#))
                (syntax-violation
                  'free-identifier=?
                  "invalid argument"
                  #{x\ 14691}#)))
            (#{free-id=?\ 11210}# #{x\ 14682}# #{y\ 14683}#))))
      (set! bound-identifier=?
        (lambda (#{x\ 14692}# #{y\ 14693}#)
          (begin
            (let ((#{x\ 14698}# #{x\ 14692}#))
              (if (not (#{nonsymbol-id?\ 11149}# #{x\ 14698}#))
                (syntax-violation
                  'bound-identifier=?
                  "invalid argument"
                  #{x\ 14698}#)))
            (let ((#{x\ 14701}# #{y\ 14693}#))
              (if (not (#{nonsymbol-id?\ 11149}# #{x\ 14701}#))
                (syntax-violation
                  'bound-identifier=?
                  "invalid argument"
                  #{x\ 14701}#)))
            (#{bound-id=?\ 11212}# #{x\ 14692}# #{y\ 14693}#))))
      (set! syntax-violation
        (lambda (#{who\ 14702}#
                 #{message\ 14703}#
                 #{form\ 14704}#
                 .
                 #{subform\ 14705}#)
          (begin
            (let ((#{x\ 14712}# #{who\ 14702}#))
              (if (not ((lambda (#{x\ 14713}#)
                          (let ((#{t\ 14717}# (not #{x\ 14713}#)))
                            (if #{t\ 14717}#
                              #{t\ 14717}#
                              (let ((#{t\ 14720}# (string? #{x\ 14713}#)))
                                (if #{t\ 14720}#
                                  #{t\ 14720}#
                                  (symbol? #{x\ 14713}#))))))
                        #{x\ 14712}#))
                (syntax-violation
                  'syntax-violation
                  "invalid argument"
                  #{x\ 14712}#)))
            (let ((#{x\ 14724}# #{message\ 14703}#))
              (if (not (string? #{x\ 14724}#))
                (syntax-violation
                  'syntax-violation
                  "invalid argument"
                  #{x\ 14724}#)))
            (scm-error
              'syntax-error
              'macroexpand
              (string-append
                (if #{who\ 14702}# "~a: " "")
                "~a "
                (if (null? #{subform\ 14705}#)
                  "in ~a"
                  "in subform `~s' of `~s'"))
              (let ((#{tail\ 14726}#
                      (cons #{message\ 14703}#
                            (map (lambda (#{x\ 14727}#)
                                   (#{strip\ 11262}#
                                     #{x\ 14727}#
                                     '(())))
                                 (append
                                   #{subform\ 14705}#
                                   (list #{form\ 14704}#))))))
                (if #{who\ 14702}#
                  (cons #{who\ 14702}# #{tail\ 14726}#)
                  #{tail\ 14726}#))
              #f))))
      (letrec ((#{match\ 14743}#
                 (lambda (#{e\ 14744}#
                          #{p\ 14745}#
                          #{w\ 14746}#
                          #{r\ 14747}#
                          #{mod\ 14748}#)
                   (if (not #{r\ 14747}#)
                     #f
                     (if (eq? #{p\ 14745}# (quote any))
                       (cons (#{wrap\ 11220}#
                               #{e\ 14744}#
                               #{w\ 14746}#
                               #{mod\ 14748}#)
                             #{r\ 14747}#)
                       (if (#{syntax-object?\ 11115}# #{e\ 14744}#)
                         (#{match*\ 14741}#
                           (#{syntax-object-expression\ 11117}#
                             #{e\ 14744}#)
                           #{p\ 14745}#
                           (#{join-wraps\ 11202}#
                             #{w\ 14746}#
                             (#{syntax-object-wrap\ 11119}# #{e\ 14744}#))
                           #{r\ 14747}#
                           (#{syntax-object-module\ 11121}# #{e\ 14744}#))
                         (#{match*\ 14741}#
                           #{e\ 14744}#
                           #{p\ 14745}#
                           #{w\ 14746}#
                           #{r\ 14747}#
                           #{mod\ 14748}#))))))
               (#{match*\ 14741}#
                 (lambda (#{e\ 14761}#
                          #{p\ 14762}#
                          #{w\ 14763}#
                          #{r\ 14764}#
                          #{mod\ 14765}#)
                   (if (null? #{p\ 14762}#)
                     (if (null? #{e\ 14761}#) #{r\ 14764}# #f)
                     (if (pair? #{p\ 14762}#)
                       (if (pair? #{e\ 14761}#)
                         (#{match\ 14743}#
                           (car #{e\ 14761}#)
                           (car #{p\ 14762}#)
                           #{w\ 14763}#
                           (#{match\ 14743}#
                             (cdr #{e\ 14761}#)
                             (cdr #{p\ 14762}#)
                             #{w\ 14763}#
                             #{r\ 14764}#
                             #{mod\ 14765}#)
                           #{mod\ 14765}#)
                         #f)
                       (if (eq? #{p\ 14762}# (quote each-any))
                         (let ((#{l\ 14782}#
                                 (#{match-each-any\ 14735}#
                                   #{e\ 14761}#
                                   #{w\ 14763}#
                                   #{mod\ 14765}#)))
                           (if #{l\ 14782}#
                             (cons #{l\ 14782}# #{r\ 14764}#)
                             #f))
                         (let ((#{atom-key\ 14788}#
                                 (vector-ref #{p\ 14762}# 0)))
                           (if (memv #{atom-key\ 14788}# (quote (each)))
                             (if (null? #{e\ 14761}#)
                               (#{match-empty\ 14737}#
                                 (vector-ref #{p\ 14762}# 1)
                                 #{r\ 14764}#)
                               (let ((#{l\ 14791}#
                                       (#{match-each\ 14731}#
                                         #{e\ 14761}#
                                         (vector-ref #{p\ 14762}# 1)
                                         #{w\ 14763}#
                                         #{mod\ 14765}#)))
                                 (if #{l\ 14791}#
                                   (letrec ((#{collect\ 14796}#
                                              (lambda (#{l\ 14797}#)
                                                (if (null? (car #{l\ 14797}#))
                                                  #{r\ 14764}#
                                                  (cons (map car #{l\ 14797}#)
                                                        (#{collect\ 14796}#
                                                          (map cdr
                                                               #{l\ 14797}#)))))))
                                     (#{collect\ 14796}# #{l\ 14791}#))
                                   #f)))
                             (if (memv #{atom-key\ 14788}# (quote (each+)))
                               (call-with-values
                                 (lambda ()
                                   (#{match-each+\ 14733}#
                                     #{e\ 14761}#
                                     (vector-ref #{p\ 14762}# 1)
                                     (vector-ref #{p\ 14762}# 2)
                                     (vector-ref #{p\ 14762}# 3)
                                     #{w\ 14763}#
                                     #{r\ 14764}#
                                     #{mod\ 14765}#))
                                 (lambda (#{xr*\ 14799}#
                                          #{y-pat\ 14800}#
                                          #{r\ 14801}#)
                                   (if #{r\ 14801}#
                                     (if (null? #{y-pat\ 14800}#)
                                       (if (null? #{xr*\ 14799}#)
                                         (#{match-empty\ 14737}#
                                           (vector-ref #{p\ 14762}# 1)
                                           #{r\ 14801}#)
                                         (#{combine\ 14739}#
                                           #{xr*\ 14799}#
                                           #{r\ 14801}#))
                                       #f)
                                     #f)))
                               (if (memv #{atom-key\ 14788}# (quote (free-id)))
                                 (if (#{id?\ 11151}# #{e\ 14761}#)
                                   (if (#{free-id=?\ 11210}#
                                         (#{wrap\ 11220}#
                                           #{e\ 14761}#
                                           #{w\ 14763}#
                                           #{mod\ 14765}#)
                                         (vector-ref #{p\ 14762}# 1))
                                     #{r\ 14764}#
                                     #f)
                                   #f)
                                 (if (memv #{atom-key\ 14788}# (quote (atom)))
                                   (if (equal?
                                         (vector-ref #{p\ 14762}# 1)
                                         (#{strip\ 11262}#
                                           #{e\ 14761}#
                                           #{w\ 14763}#))
                                     #{r\ 14764}#
                                     #f)
                                   (if (memv #{atom-key\ 14788}#
                                             '(vector))
                                     (if (vector? #{e\ 14761}#)
                                       (#{match\ 14743}#
                                         (vector->list #{e\ 14761}#)
                                         (vector-ref #{p\ 14762}# 1)
                                         #{w\ 14763}#
                                         #{r\ 14764}#
                                         #{mod\ 14765}#)
                                       #f))))))))))))
               (#{combine\ 14739}#
                 (lambda (#{r*\ 14818}# #{r\ 14819}#)
                   (if (null? (car #{r*\ 14818}#))
                     #{r\ 14819}#
                     (cons (map car #{r*\ 14818}#)
                           (#{combine\ 14739}#
                             (map cdr #{r*\ 14818}#)
                             #{r\ 14819}#)))))
               (#{match-empty\ 14737}#
                 (lambda (#{p\ 14822}# #{r\ 14823}#)
                   (if (null? #{p\ 14822}#)
                     #{r\ 14823}#
                     (if (eq? #{p\ 14822}# (quote any))
                       (cons (quote ()) #{r\ 14823}#)
                       (if (pair? #{p\ 14822}#)
                         (#{match-empty\ 14737}#
                           (car #{p\ 14822}#)
                           (#{match-empty\ 14737}#
                             (cdr #{p\ 14822}#)
                             #{r\ 14823}#))
                         (if (eq? #{p\ 14822}# (quote each-any))
                           (cons (quote ()) #{r\ 14823}#)
                           (let ((#{atom-key\ 14837}#
                                   (vector-ref #{p\ 14822}# 0)))
                             (if (memv #{atom-key\ 14837}# (quote (each)))
                               (#{match-empty\ 14737}#
                                 (vector-ref #{p\ 14822}# 1)
                                 #{r\ 14823}#)
                               (if (memv #{atom-key\ 14837}# (quote (each+)))
                                 (#{match-empty\ 14737}#
                                   (vector-ref #{p\ 14822}# 1)
                                   (#{match-empty\ 14737}#
                                     (reverse (vector-ref #{p\ 14822}# 2))
                                     (#{match-empty\ 14737}#
                                       (vector-ref #{p\ 14822}# 3)
                                       #{r\ 14823}#)))
                                 (if (memv #{atom-key\ 14837}#
                                           '(free-id atom))
                                   #{r\ 14823}#
                                   (if (memv #{atom-key\ 14837}#
                                             '(vector))
                                     (#{match-empty\ 14737}#
                                       (vector-ref #{p\ 14822}# 1)
                                       #{r\ 14823}#))))))))))))
               (#{match-each-any\ 14735}#
                 (lambda (#{e\ 14842}# #{w\ 14843}# #{mod\ 14844}#)
                   (if (pair? #{e\ 14842}#)
                     (let ((#{l\ 14851}#
                             (#{match-each-any\ 14735}#
                               (cdr #{e\ 14842}#)
                               #{w\ 14843}#
                               #{mod\ 14844}#)))
                       (if #{l\ 14851}#
                         (cons (#{wrap\ 11220}#
                                 (car #{e\ 14842}#)
                                 #{w\ 14843}#
                                 #{mod\ 14844}#)
                               #{l\ 14851}#)
                         #f))
                     (if (null? #{e\ 14842}#)
                       '()
                       (if (#{syntax-object?\ 11115}# #{e\ 14842}#)
                         (#{match-each-any\ 14735}#
                           (#{syntax-object-expression\ 11117}#
                             #{e\ 14842}#)
                           (#{join-wraps\ 11202}#
                             #{w\ 14843}#
                             (#{syntax-object-wrap\ 11119}# #{e\ 14842}#))
                           #{mod\ 14844}#)
                         #f)))))
               (#{match-each+\ 14733}#
                 (lambda (#{e\ 14859}#
                          #{x-pat\ 14860}#
                          #{y-pat\ 14861}#
                          #{z-pat\ 14862}#
                          #{w\ 14863}#
                          #{r\ 14864}#
                          #{mod\ 14865}#)
                   (letrec ((#{f\ 14876}#
                              (lambda (#{e\ 14877}# #{w\ 14878}#)
                                (if (pair? #{e\ 14877}#)
                                  (call-with-values
                                    (lambda ()
                                      (#{f\ 14876}#
                                        (cdr #{e\ 14877}#)
                                        #{w\ 14878}#))
                                    (lambda (#{xr*\ 14881}#
                                             #{y-pat\ 14882}#
                                             #{r\ 14883}#)
                                      (if #{r\ 14883}#
                                        (if (null? #{y-pat\ 14882}#)
                                          (let ((#{xr\ 14888}#
                                                  (#{match\ 14743}#
                                                    (car #{e\ 14877}#)
                                                    #{x-pat\ 14860}#
                                                    #{w\ 14878}#
                                                    '()
                                                    #{mod\ 14865}#)))
                                            (if #{xr\ 14888}#
                                              (values
                                                (cons #{xr\ 14888}#
                                                      #{xr*\ 14881}#)
                                                #{y-pat\ 14882}#
                                                #{r\ 14883}#)
                                              (values #f #f #f)))
                                          (values
                                            '()
                                            (cdr #{y-pat\ 14882}#)
                                            (#{match\ 14743}#
                                              (car #{e\ 14877}#)
                                              (car #{y-pat\ 14882}#)
                                              #{w\ 14878}#
                                              #{r\ 14883}#
                                              #{mod\ 14865}#)))
                                        (values #f #f #f))))
                                  (if (#{syntax-object?\ 11115}# #{e\ 14877}#)
                                    (#{f\ 14876}#
                                      (#{syntax-object-expression\ 11117}#
                                        #{e\ 14877}#)
                                      (#{join-wraps\ 11202}#
                                        #{w\ 14878}#
                                        #{e\ 14877}#))
                                    (values
                                      '()
                                      #{y-pat\ 14861}#
                                      (#{match\ 14743}#
                                        #{e\ 14877}#
                                        #{z-pat\ 14862}#
                                        #{w\ 14878}#
                                        #{r\ 14864}#
                                        #{mod\ 14865}#)))))))
                     (#{f\ 14876}# #{e\ 14859}# #{w\ 14863}#))))
               (#{match-each\ 14731}#
                 (lambda (#{e\ 14892}#
                          #{p\ 14893}#
                          #{w\ 14894}#
                          #{mod\ 14895}#)
                   (if (pair? #{e\ 14892}#)
                     (let ((#{first\ 14903}#
                             (#{match\ 14743}#
                               (car #{e\ 14892}#)
                               #{p\ 14893}#
                               #{w\ 14894}#
                               '()
                               #{mod\ 14895}#)))
                       (if #{first\ 14903}#
                         (let ((#{rest\ 14907}#
                                 (#{match-each\ 14731}#
                                   (cdr #{e\ 14892}#)
                                   #{p\ 14893}#
                                   #{w\ 14894}#
                                   #{mod\ 14895}#)))
                           (if #{rest\ 14907}#
                             (cons #{first\ 14903}# #{rest\ 14907}#)
                             #f))
                         #f))
                     (if (null? #{e\ 14892}#)
                       '()
                       (if (#{syntax-object?\ 11115}# #{e\ 14892}#)
                         (#{match-each\ 14731}#
                           (#{syntax-object-expression\ 11117}#
                             #{e\ 14892}#)
                           #{p\ 14893}#
                           (#{join-wraps\ 11202}#
                             #{w\ 14894}#
                             (#{syntax-object-wrap\ 11119}# #{e\ 14892}#))
                           (#{syntax-object-module\ 11121}# #{e\ 14892}#))
                         #f))))))
        (set! $sc-dispatch
          (lambda (#{e\ 14915}# #{p\ 14916}#)
            (if (eq? #{p\ 14916}# (quote any))
              (list #{e\ 14915}#)
              (if (#{syntax-object?\ 11115}# #{e\ 14915}#)
                (#{match*\ 14741}#
                  (#{syntax-object-expression\ 11117}#
                    #{e\ 14915}#)
                  #{p\ 14916}#
                  (#{syntax-object-wrap\ 11119}# #{e\ 14915}#)
                  '()
                  (#{syntax-object-module\ 11121}# #{e\ 14915}#))
                (#{match*\ 14741}#
                  #{e\ 14915}#
                  #{p\ 14916}#
                  '(())
                  '()
                  #f)))))))))

(define with-syntax
  (make-syntax-transformer
    'with-syntax
    'macro
    (cons (lambda (#{x\ 14925}#)
            ((lambda (#{tmp\ 14927}#)
               ((lambda (#{tmp\ 14928}#)
                  (if #{tmp\ 14928}#
                    (apply (lambda (#{_\ 14932}# #{e1\ 14933}# #{e2\ 14934}#)
                             (cons '#(syntax-object
                                      begin
                                      ((top)
                                       #(ribcage
                                         #(_ e1 e2)
                                         #((top) (top) (top))
                                         #("i14929" "i14930" "i14931"))
                                       #(ribcage () () ())
                                       #(ribcage #(x) #((top)) #("i14926")))
                                      (hygiene guile))
                                   (cons #{e1\ 14933}# #{e2\ 14934}#)))
                           #{tmp\ 14928}#)
                    ((lambda (#{tmp\ 14936}#)
                       (if #{tmp\ 14936}#
                         (apply (lambda (#{_\ 14942}#
                                         #{out\ 14943}#
                                         #{in\ 14944}#
                                         #{e1\ 14945}#
                                         #{e2\ 14946}#)
                                  (list '#(syntax-object
                                           syntax-case
                                           ((top)
                                            #(ribcage
                                              #(_ out in e1 e2)
                                              #((top) (top) (top) (top) (top))
                                              #("i14937"
                                                "i14938"
                                                "i14939"
                                                "i14940"
                                                "i14941"))
                                            #(ribcage () () ())
                                            #(ribcage
                                              #(x)
                                              #((top))
                                              #("i14926")))
                                           (hygiene guile))
                                        #{in\ 14944}#
                                        '()
                                        (list #{out\ 14943}#
                                              (cons '#(syntax-object
                                                       begin
                                                       ((top)
                                                        #(ribcage
                                                          #(_ out in e1 e2)
                                                          #((top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top))
                                                          #("i14937"
                                                            "i14938"
                                                            "i14939"
                                                            "i14940"
                                                            "i14941"))
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(x)
                                                          #((top))
                                                          #("i14926")))
                                                       (hygiene guile))
                                                    (cons #{e1\ 14945}#
                                                          #{e2\ 14946}#)))))
                                #{tmp\ 14936}#)
                         ((lambda (#{tmp\ 14948}#)
                            (if #{tmp\ 14948}#
                              (apply (lambda (#{_\ 14954}#
                                              #{out\ 14955}#
                                              #{in\ 14956}#
                                              #{e1\ 14957}#
                                              #{e2\ 14958}#)
                                       (list '#(syntax-object
                                                syntax-case
                                                ((top)
                                                 #(ribcage
                                                   #(_ out in e1 e2)
                                                   #((top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top))
                                                   #("i14949"
                                                     "i14950"
                                                     "i14951"
                                                     "i14952"
                                                     "i14953"))
                                                 #(ribcage () () ())
                                                 #(ribcage
                                                   #(x)
                                                   #((top))
                                                   #("i14926")))
                                                (hygiene guile))
                                             (cons '#(syntax-object
                                                      list
                                                      ((top)
                                                       #(ribcage
                                                         #(_ out in e1 e2)
                                                         #((top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top))
                                                         #("i14949"
                                                           "i14950"
                                                           "i14951"
                                                           "i14952"
                                                           "i14953"))
                                                       #(ribcage () () ())
                                                       #(ribcage
                                                         #(x)
                                                         #((top))
                                                         #("i14926")))
                                                      (hygiene guile))
                                                   #{in\ 14956}#)
                                             '()
                                             (list #{out\ 14955}#
                                                   (cons '#(syntax-object
                                                            begin
                                                            ((top)
                                                             #(ribcage
                                                               #(_
                                                                 out
                                                                 in
                                                                 e1
                                                                 e2)
                                                               #((top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top))
                                                               #("i14949"
                                                                 "i14950"
                                                                 "i14951"
                                                                 "i14952"
                                                                 "i14953"))
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               #(x)
                                                               #((top))
                                                               #("i14926")))
                                                            (hygiene guile))
                                                         (cons #{e1\ 14957}#
                                                               #{e2\ 14958}#)))))
                                     #{tmp\ 14948}#)
                              (syntax-violation
                                #f
                                "source expression failed to match any pattern"
                                #{tmp\ 14927}#)))
                          ($sc-dispatch
                            #{tmp\ 14927}#
                            '(any #(each (any any)) any . each-any)))))
                     ($sc-dispatch
                       #{tmp\ 14927}#
                       '(any ((any any)) any . each-any)))))
                ($sc-dispatch
                  #{tmp\ 14927}#
                  '(any () any . each-any))))
             #{x\ 14925}#))
          (module-name (current-module)))))

(define syntax-rules
  (make-syntax-transformer
    'syntax-rules
    'macro
    (cons (lambda (#{x\ 14962}#)
            ((lambda (#{tmp\ 14964}#)
               ((lambda (#{tmp\ 14965}#)
                  (if #{tmp\ 14965}#
                    (apply (lambda (#{_\ 14971}#
                                    #{k\ 14972}#
                                    #{keyword\ 14973}#
                                    #{pattern\ 14974}#
                                    #{template\ 14975}#)
                             (list '#(syntax-object
                                      lambda
                                      ((top)
                                       #(ribcage
                                         #(_ k keyword pattern template)
                                         #((top) (top) (top) (top) (top))
                                         #("i14966"
                                           "i14967"
                                           "i14968"
                                           "i14969"
                                           "i14970"))
                                       #(ribcage () () ())
                                       #(ribcage #(x) #((top)) #("i14963")))
                                      (hygiene guile))
                                   '(#(syntax-object
                                       x
                                       ((top)
                                        #(ribcage
                                          #(_ k keyword pattern template)
                                          #((top) (top) (top) (top) (top))
                                          #("i14966"
                                            "i14967"
                                            "i14968"
                                            "i14969"
                                            "i14970"))
                                        #(ribcage () () ())
                                        #(ribcage #(x) #((top)) #("i14963")))
                                       (hygiene guile)))
                                   (vector
                                     '(#(syntax-object
                                         macro-type
                                         ((top)
                                          #(ribcage
                                            #(_ k keyword pattern template)
                                            #((top) (top) (top) (top) (top))
                                            #("i14966"
                                              "i14967"
                                              "i14968"
                                              "i14969"
                                              "i14970"))
                                          #(ribcage () () ())
                                          #(ribcage #(x) #((top)) #("i14963")))
                                         (hygiene guile))
                                       .
                                       #(syntax-object
                                         syntax-rules
                                         ((top)
                                          #(ribcage
                                            #(_ k keyword pattern template)
                                            #((top) (top) (top) (top) (top))
                                            #("i14966"
                                              "i14967"
                                              "i14968"
                                              "i14969"
                                              "i14970"))
                                          #(ribcage () () ())
                                          #(ribcage #(x) #((top)) #("i14963")))
                                         (hygiene guile)))
                                     (cons '#(syntax-object
                                              patterns
                                              ((top)
                                               #(ribcage
                                                 #(_
                                                   k
                                                   keyword
                                                   pattern
                                                   template)
                                                 #((top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top))
                                                 #("i14966"
                                                   "i14967"
                                                   "i14968"
                                                   "i14969"
                                                   "i14970"))
                                               #(ribcage () () ())
                                               #(ribcage
                                                 #(x)
                                                 #((top))
                                                 #("i14963")))
                                              (hygiene guile))
                                           #{pattern\ 14974}#))
                                   (cons '#(syntax-object
                                            syntax-case
                                            ((top)
                                             #(ribcage
                                               #(_ k keyword pattern template)
                                               #((top) (top) (top) (top) (top))
                                               #("i14966"
                                                 "i14967"
                                                 "i14968"
                                                 "i14969"
                                                 "i14970"))
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(x)
                                               #((top))
                                               #("i14963")))
                                            (hygiene guile))
                                         (cons '#(syntax-object
                                                  x
                                                  ((top)
                                                   #(ribcage
                                                     #(_
                                                       k
                                                       keyword
                                                       pattern
                                                       template)
                                                     #((top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top))
                                                     #("i14966"
                                                       "i14967"
                                                       "i14968"
                                                       "i14969"
                                                       "i14970"))
                                                   #(ribcage () () ())
                                                   #(ribcage
                                                     #(x)
                                                     #((top))
                                                     #("i14963")))
                                                  (hygiene guile))
                                               (cons #{k\ 14972}#
                                                     (map (lambda (#{tmp\ 14979}#
                                                                   #{tmp\ 14978}#)
                                                            (list (cons '#(syntax-object
                                                                           dummy
                                                                           ((top)
                                                                            #(ribcage
                                                                              #(_
                                                                                k
                                                                                keyword
                                                                                pattern
                                                                                template)
                                                                              #((top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top))
                                                                              #("i14966"
                                                                                "i14967"
                                                                                "i14968"
                                                                                "i14969"
                                                                                "i14970"))
                                                                            #(ribcage
                                                                              ()
                                                                              ()
                                                                              ())
                                                                            #(ribcage
                                                                              #(x)
                                                                              #((top))
                                                                              #("i14963")))
                                                                           (hygiene
                                                                             guile))
                                                                        #{tmp\ 14978}#)
                                                                  (list '#(syntax-object
                                                                           syntax
                                                                           ((top)
                                                                            #(ribcage
                                                                              #(_
                                                                                k
                                                                                keyword
                                                                                pattern
                                                                                template)
                                                                              #((top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top))
                                                                              #("i14966"
                                                                                "i14967"
                                                                                "i14968"
                                                                                "i14969"
                                                                                "i14970"))
                                                                            #(ribcage
                                                                              ()
                                                                              ()
                                                                              ())
                                                                            #(ribcage
                                                                              #(x)
                                                                              #((top))
                                                                              #("i14963")))
                                                                           (hygiene
                                                                             guile))
                                                                        #{tmp\ 14979}#)))
                                                          #{template\ 14975}#
                                                          #{pattern\ 14974}#))))))
                           #{tmp\ 14965}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 14964}#)))
                ($sc-dispatch
                  #{tmp\ 14964}#
                  '(any each-any . #(each ((any . any) any))))))
             #{x\ 14962}#))
          (module-name (current-module)))))

(define let*
  (make-syntax-transformer
    'let*
    'macro
    (cons (lambda (#{x\ 14980}#)
            ((lambda (#{tmp\ 14982}#)
               ((lambda (#{tmp\ 14983}#)
                  (if (if #{tmp\ 14983}#
                        (apply (lambda (#{let*\ 14989}#
                                        #{x\ 14990}#
                                        #{v\ 14991}#
                                        #{e1\ 14992}#
                                        #{e2\ 14993}#)
                                 (and-map identifier? #{x\ 14990}#))
                               #{tmp\ 14983}#)
                        #f)
                    (apply (lambda (#{let*\ 15000}#
                                    #{x\ 15001}#
                                    #{v\ 15002}#
                                    #{e1\ 15003}#
                                    #{e2\ 15004}#)
                             (letrec ((#{f\ 15007}#
                                        (lambda (#{bindings\ 15008}#)
                                          (if (null? #{bindings\ 15008}#)
                                            (cons '#(syntax-object
                                                     let
                                                     ((top)
                                                      #(ribcage () () ())
                                                      #(ribcage
                                                        #(f bindings)
                                                        #((top) (top))
                                                        #("i15005" "i15006"))
                                                      #(ribcage
                                                        #(let* x v e1 e2)
                                                        #((top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top))
                                                        #("i14995"
                                                          "i14996"
                                                          "i14997"
                                                          "i14998"
                                                          "i14999"))
                                                      #(ribcage () () ())
                                                      #(ribcage
                                                        #(x)
                                                        #((top))
                                                        #("i14981")))
                                                     (hygiene guile))
                                                  (cons '()
                                                        (cons #{e1\ 15003}#
                                                              #{e2\ 15004}#)))
                                            ((lambda (#{tmp\ 15013}#)
                                               ((lambda (#{tmp\ 15014}#)
                                                  (if #{tmp\ 15014}#
                                                    (apply (lambda (#{body\ 15017}#
                                                                    #{binding\ 15018}#)
                                                             (list '#(syntax-object
                                                                      let
                                                                      ((top)
                                                                       #(ribcage
                                                                         #(body
                                                                           binding)
                                                                         #((top)
                                                                           (top))
                                                                         #("i15015"
                                                                           "i15016"))
                                                                       #(ribcage
                                                                         ()
                                                                         ()
                                                                         ())
                                                                       #(ribcage
                                                                         #(f
                                                                           bindings)
                                                                         #((top)
                                                                           (top))
                                                                         #("i15005"
                                                                           "i15006"))
                                                                       #(ribcage
                                                                         #(let*
                                                                           x
                                                                           v
                                                                           e1
                                                                           e2)
                                                                         #((top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top))
                                                                         #("i14995"
                                                                           "i14996"
                                                                           "i14997"
                                                                           "i14998"
                                                                           "i14999"))
                                                                       #(ribcage
                                                                         ()
                                                                         ()
                                                                         ())
                                                                       #(ribcage
                                                                         #(x)
                                                                         #((top))
                                                                         #("i14981")))
                                                                      (hygiene
                                                                        guile))
                                                                   (list #{binding\ 15018}#)
                                                                   #{body\ 15017}#))
                                                           #{tmp\ 15014}#)
                                                    (syntax-violation
                                                      #f
                                                      "source expression failed to match any pattern"
                                                      #{tmp\ 15013}#)))
                                                ($sc-dispatch
                                                  #{tmp\ 15013}#
                                                  '(any any))))
                                             (list (#{f\ 15007}#
                                                     (cdr #{bindings\ 15008}#))
                                                   (car #{bindings\ 15008}#)))))))
                               (#{f\ 15007}#
                                 (map list #{x\ 15001}# #{v\ 15002}#))))
                           #{tmp\ 14983}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 14982}#)))
                ($sc-dispatch
                  #{tmp\ 14982}#
                  '(any #(each (any any)) any . each-any))))
             #{x\ 14980}#))
          (module-name (current-module)))))

(define do
  (make-syntax-transformer
    'do
    'macro
    (cons (lambda (#{orig-x\ 15019}#)
            ((lambda (#{tmp\ 15021}#)
               ((lambda (#{tmp\ 15022}#)
                  (if #{tmp\ 15022}#
                    (apply (lambda (#{_\ 15030}#
                                    #{var\ 15031}#
                                    #{init\ 15032}#
                                    #{step\ 15033}#
                                    #{e0\ 15034}#
                                    #{e1\ 15035}#
                                    #{c\ 15036}#)
                             ((lambda (#{tmp\ 15038}#)
                                ((lambda (#{tmp\ 15039}#)
                                   (if #{tmp\ 15039}#
                                     (apply (lambda (#{step\ 15041}#)
                                              ((lambda (#{tmp\ 15042}#)
                                                 ((lambda (#{tmp\ 15043}#)
                                                    (if #{tmp\ 15043}#
                                                      (apply (lambda ()
                                                               (list '#(syntax-object
                                                                        let
                                                                        ((top)
                                                                         #(ribcage
                                                                           #(step)
                                                                           #((top))
                                                                           #("i15040"))
                                                                         #(ribcage
                                                                           #(_
                                                                             var
                                                                             init
                                                                             step
                                                                             e0
                                                                             e1
                                                                             c)
                                                                           #((top)
                                                                             (top)
                                                                             (top)
                                                                             (top)
                                                                             (top)
                                                                             (top)
                                                                             (top))
                                                                           #("i15023"
                                                                             "i15024"
                                                                             "i15025"
                                                                             "i15026"
                                                                             "i15027"
                                                                             "i15028"
                                                                             "i15029"))
                                                                         #(ribcage
                                                                           ()
                                                                           ()
                                                                           ())
                                                                         #(ribcage
                                                                           #(orig-x)
                                                                           #((top))
                                                                           #("i15020")))
                                                                        (hygiene
                                                                          guile))
                                                                     '#(syntax-object
                                                                        doloop
                                                                        ((top)
                                                                         #(ribcage
                                                                           #(step)
                                                                           #((top))
                                                                           #("i15040"))
                                                                         #(ribcage
                                                                           #(_
                                                                             var
                                                                             init
                                                                             step
                                                                             e0
                                                                             e1
                                                                             c)
                                                                           #((top)
                                                                             (top)
                                                                             (top)
                                                                             (top)
                                                                             (top)
                                                                             (top)
                                                                             (top))
                                                                           #("i15023"
                                                                             "i15024"
                                                                             "i15025"
                                                                             "i15026"
                                                                             "i15027"
                                                                             "i15028"
                                                                             "i15029"))
                                                                         #(ribcage
                                                                           ()
                                                                           ()
                                                                           ())
                                                                         #(ribcage
                                                                           #(orig-x)
                                                                           #((top))
                                                                           #("i15020")))
                                                                        (hygiene
                                                                          guile))
                                                                     (map list
                                                                          #{var\ 15031}#
                                                                          #{init\ 15032}#)
                                                                     (list '#(syntax-object
                                                                              if
                                                                              ((top)
                                                                               #(ribcage
                                                                                 #(step)
                                                                                 #((top))
                                                                                 #("i15040"))
                                                                               #(ribcage
                                                                                 #(_
                                                                                   var
                                                                                   init
                                                                                   step
                                                                                   e0
                                                                                   e1
                                                                                   c)
                                                                                 #((top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top))
                                                                                 #("i15023"
                                                                                   "i15024"
                                                                                   "i15025"
                                                                                   "i15026"
                                                                                   "i15027"
                                                                                   "i15028"
                                                                                   "i15029"))
                                                                               #(ribcage
                                                                                 ()
                                                                                 ()
                                                                                 ())
                                                                               #(ribcage
                                                                                 #(orig-x)
                                                                                 #((top))
                                                                                 #("i15020")))
                                                                              (hygiene
                                                                                guile))
                                                                           (list '#(syntax-object
                                                                                    not
                                                                                    ((top)
                                                                                     #(ribcage
                                                                                       #(step)
                                                                                       #((top))
                                                                                       #("i15040"))
                                                                                     #(ribcage
                                                                                       #(_
                                                                                         var
                                                                                         init
                                                                                         step
                                                                                         e0
                                                                                         e1
                                                                                         c)
                                                                                       #((top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top))
                                                                                       #("i15023"
                                                                                         "i15024"
                                                                                         "i15025"
                                                                                         "i15026"
                                                                                         "i15027"
                                                                                         "i15028"
                                                                                         "i15029"))
                                                                                     #(ribcage
                                                                                       ()
                                                                                       ()
                                                                                       ())
                                                                                     #(ribcage
                                                                                       #(orig-x)
                                                                                       #((top))
                                                                                       #("i15020")))
                                                                                    (hygiene
                                                                                      guile))
                                                                                 #{e0\ 15034}#)
                                                                           (cons '#(syntax-object
                                                                                    begin
                                                                                    ((top)
                                                                                     #(ribcage
                                                                                       #(step)
                                                                                       #((top))
                                                                                       #("i15040"))
                                                                                     #(ribcage
                                                                                       #(_
                                                                                         var
                                                                                         init
                                                                                         step
                                                                                         e0
                                                                                         e1
                                                                                         c)
                                                                                       #((top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top))
                                                                                       #("i15023"
                                                                                         "i15024"
                                                                                         "i15025"
                                                                                         "i15026"
                                                                                         "i15027"
                                                                                         "i15028"
                                                                                         "i15029"))
                                                                                     #(ribcage
                                                                                       ()
                                                                                       ()
                                                                                       ())
                                                                                     #(ribcage
                                                                                       #(orig-x)
                                                                                       #((top))
                                                                                       #("i15020")))
                                                                                    (hygiene
                                                                                      guile))
                                                                                 (append
                                                                                   #{c\ 15036}#
                                                                                   (list (cons '#(syntax-object
                                                                                                  doloop
                                                                                                  ((top)
                                                                                                   #(ribcage
                                                                                                     #(step)
                                                                                                     #((top))
                                                                                                     #("i15040"))
                                                                                                   #(ribcage
                                                                                                     #(_
                                                                                                       var
                                                                                                       init
                                                                                                       step
                                                                                                       e0
                                                                                                       e1
                                                                                                       c)
                                                                                                     #((top)
                                                                                                       (top)
                                                                                                       (top)
                                                                                                       (top)
                                                                                                       (top)
                                                                                                       (top)
                                                                                                       (top))
                                                                                                     #("i15023"
                                                                                                       "i15024"
                                                                                                       "i15025"
                                                                                                       "i15026"
                                                                                                       "i15027"
                                                                                                       "i15028"
                                                                                                       "i15029"))
                                                                                                   #(ribcage
                                                                                                     ()
                                                                                                     ()
                                                                                                     ())
                                                                                                   #(ribcage
                                                                                                     #(orig-x)
                                                                                                     #((top))
                                                                                                     #("i15020")))
                                                                                                  (hygiene
                                                                                                    guile))
                                                                                               #{step\ 15041}#)))))))
                                                             #{tmp\ 15043}#)
                                                      ((lambda (#{tmp\ 15048}#)
                                                         (if #{tmp\ 15048}#
                                                           (apply (lambda (#{e1\ 15051}#
                                                                           #{e2\ 15052}#)
                                                                    (list '#(syntax-object
                                                                             let
                                                                             ((top)
                                                                              #(ribcage
                                                                                #(e1
                                                                                  e2)
                                                                                #((top)
                                                                                  (top))
                                                                                #("i15049"
                                                                                  "i15050"))
                                                                              #(ribcage
                                                                                #(step)
                                                                                #((top))
                                                                                #("i15040"))
                                                                              #(ribcage
                                                                                #(_
                                                                                  var
                                                                                  init
                                                                                  step
                                                                                  e0
                                                                                  e1
                                                                                  c)
                                                                                #((top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top))
                                                                                #("i15023"
                                                                                  "i15024"
                                                                                  "i15025"
                                                                                  "i15026"
                                                                                  "i15027"
                                                                                  "i15028"
                                                                                  "i15029"))
                                                                              #(ribcage
                                                                                ()
                                                                                ()
                                                                                ())
                                                                              #(ribcage
                                                                                #(orig-x)
                                                                                #((top))
                                                                                #("i15020")))
                                                                             (hygiene
                                                                               guile))
                                                                          '#(syntax-object
                                                                             doloop
                                                                             ((top)
                                                                              #(ribcage
                                                                                #(e1
                                                                                  e2)
                                                                                #((top)
                                                                                  (top))
                                                                                #("i15049"
                                                                                  "i15050"))
                                                                              #(ribcage
                                                                                #(step)
                                                                                #((top))
                                                                                #("i15040"))
                                                                              #(ribcage
                                                                                #(_
                                                                                  var
                                                                                  init
                                                                                  step
                                                                                  e0
                                                                                  e1
                                                                                  c)
                                                                                #((top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top))
                                                                                #("i15023"
                                                                                  "i15024"
                                                                                  "i15025"
                                                                                  "i15026"
                                                                                  "i15027"
                                                                                  "i15028"
                                                                                  "i15029"))
                                                                              #(ribcage
                                                                                ()
                                                                                ()
                                                                                ())
                                                                              #(ribcage
                                                                                #(orig-x)
                                                                                #((top))
                                                                                #("i15020")))
                                                                             (hygiene
                                                                               guile))
                                                                          (map list
                                                                               #{var\ 15031}#
                                                                               #{init\ 15032}#)
                                                                          (list '#(syntax-object
                                                                                   if
                                                                                   ((top)
                                                                                    #(ribcage
                                                                                      #(e1
                                                                                        e2)
                                                                                      #((top)
                                                                                        (top))
                                                                                      #("i15049"
                                                                                        "i15050"))
                                                                                    #(ribcage
                                                                                      #(step)
                                                                                      #((top))
                                                                                      #("i15040"))
                                                                                    #(ribcage
                                                                                      #(_
                                                                                        var
                                                                                        init
                                                                                        step
                                                                                        e0
                                                                                        e1
                                                                                        c)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i15023"
                                                                                        "i15024"
                                                                                        "i15025"
                                                                                        "i15026"
                                                                                        "i15027"
                                                                                        "i15028"
                                                                                        "i15029"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(orig-x)
                                                                                      #((top))
                                                                                      #("i15020")))
                                                                                   (hygiene
                                                                                     guile))
                                                                                #{e0\ 15034}#
                                                                                (cons '#(syntax-object
                                                                                         begin
                                                                                         ((top)
                                                                                          #(ribcage
                                                                                            #(e1
                                                                                              e2)
                                                                                            #((top)
                                                                                              (top))
                                                                                            #("i15049"
                                                                                              "i15050"))
                                                                                          #(ribcage
                                                                                            #(step)
                                                                                            #((top))
                                                                                            #("i15040"))
                                                                                          #(ribcage
                                                                                            #(_
                                                                                              var
                                                                                              init
                                                                                              step
                                                                                              e0
                                                                                              e1
                                                                                              c)
                                                                                            #((top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top))
                                                                                            #("i15023"
                                                                                              "i15024"
                                                                                              "i15025"
                                                                                              "i15026"
                                                                                              "i15027"
                                                                                              "i15028"
                                                                                              "i15029"))
                                                                                          #(ribcage
                                                                                            ()
                                                                                            ()
                                                                                            ())
                                                                                          #(ribcage
                                                                                            #(orig-x)
                                                                                            #((top))
                                                                                            #("i15020")))
                                                                                         (hygiene
                                                                                           guile))
                                                                                      (cons #{e1\ 15051}#
                                                                                            #{e2\ 15052}#))
                                                                                (cons '#(syntax-object
                                                                                         begin
                                                                                         ((top)
                                                                                          #(ribcage
                                                                                            #(e1
                                                                                              e2)
                                                                                            #((top)
                                                                                              (top))
                                                                                            #("i15049"
                                                                                              "i15050"))
                                                                                          #(ribcage
                                                                                            #(step)
                                                                                            #((top))
                                                                                            #("i15040"))
                                                                                          #(ribcage
                                                                                            #(_
                                                                                              var
                                                                                              init
                                                                                              step
                                                                                              e0
                                                                                              e1
                                                                                              c)
                                                                                            #((top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top))
                                                                                            #("i15023"
                                                                                              "i15024"
                                                                                              "i15025"
                                                                                              "i15026"
                                                                                              "i15027"
                                                                                              "i15028"
                                                                                              "i15029"))
                                                                                          #(ribcage
                                                                                            ()
                                                                                            ()
                                                                                            ())
                                                                                          #(ribcage
                                                                                            #(orig-x)
                                                                                            #((top))
                                                                                            #("i15020")))
                                                                                         (hygiene
                                                                                           guile))
                                                                                      (append
                                                                                        #{c\ 15036}#
                                                                                        (list (cons '#(syntax-object
                                                                                                       doloop
                                                                                                       ((top)
                                                                                                        #(ribcage
                                                                                                          #(e1
                                                                                                            e2)
                                                                                                          #((top)
                                                                                                            (top))
                                                                                                          #("i15049"
                                                                                                            "i15050"))
                                                                                                        #(ribcage
                                                                                                          #(step)
                                                                                                          #((top))
                                                                                                          #("i15040"))
                                                                                                        #(ribcage
                                                                                                          #(_
                                                                                                            var
                                                                                                            init
                                                                                                            step
                                                                                                            e0
                                                                                                            e1
                                                                                                            c)
                                                                                                          #((top)
                                                                                                            (top)
                                                                                                            (top)
                                                                                                            (top)
                                                                                                            (top)
                                                                                                            (top)
                                                                                                            (top))
                                                                                                          #("i15023"
                                                                                                            "i15024"
                                                                                                            "i15025"
                                                                                                            "i15026"
                                                                                                            "i15027"
                                                                                                            "i15028"
                                                                                                            "i15029"))
                                                                                                        #(ribcage
                                                                                                          ()
                                                                                                          ()
                                                                                                          ())
                                                                                                        #(ribcage
                                                                                                          #(orig-x)
                                                                                                          #((top))
                                                                                                          #("i15020")))
                                                                                                       (hygiene
                                                                                                         guile))
                                                                                                    #{step\ 15041}#)))))))
                                                                  #{tmp\ 15048}#)
                                                           (syntax-violation
                                                             #f
                                                             "source expression failed to match any pattern"
                                                             #{tmp\ 15042}#)))
                                                       ($sc-dispatch
                                                         #{tmp\ 15042}#
                                                         '(any . each-any)))))
                                                  ($sc-dispatch
                                                    #{tmp\ 15042}#
                                                    '())))
                                               #{e1\ 15035}#))
                                            #{tmp\ 15039}#)
                                     (syntax-violation
                                       #f
                                       "source expression failed to match any pattern"
                                       #{tmp\ 15038}#)))
                                 ($sc-dispatch
                                   #{tmp\ 15038}#
                                   'each-any)))
                              (map (lambda (#{v\ 15059}# #{s\ 15060}#)
                                     ((lambda (#{tmp\ 15063}#)
                                        ((lambda (#{tmp\ 15064}#)
                                           (if #{tmp\ 15064}#
                                             (apply (lambda () #{v\ 15059}#)
                                                    #{tmp\ 15064}#)
                                             ((lambda (#{tmp\ 15065}#)
                                                (if #{tmp\ 15065}#
                                                  (apply (lambda (#{e\ 15067}#)
                                                           #{e\ 15067}#)
                                                         #{tmp\ 15065}#)
                                                  ((lambda (#{_\ 15069}#)
                                                     (syntax-violation
                                                       'do
                                                       "bad step expression"
                                                       #{orig-x\ 15019}#
                                                       #{s\ 15060}#))
                                                   #{tmp\ 15063}#)))
                                              ($sc-dispatch
                                                #{tmp\ 15063}#
                                                '(any)))))
                                         ($sc-dispatch
                                           #{tmp\ 15063}#
                                           '())))
                                      #{s\ 15060}#))
                                   #{var\ 15031}#
                                   #{step\ 15033}#)))
                           #{tmp\ 15022}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 15021}#)))
                ($sc-dispatch
                  #{tmp\ 15021}#
                  '(any #(each (any any . any))
                        (any . each-any)
                        .
                        each-any))))
             #{orig-x\ 15019}#))
          (module-name (current-module)))))

(define quasiquote
  (make-syntax-transformer
    'quasiquote
    'macro
    (cons (letrec ((#{quasicons\ 15076}#
                     (lambda (#{x\ 15080}# #{y\ 15081}#)
                       ((lambda (#{tmp\ 15085}#)
                          ((lambda (#{tmp\ 15086}#)
                             (if #{tmp\ 15086}#
                               (apply (lambda (#{x\ 15089}# #{y\ 15090}#)
                                        ((lambda (#{tmp\ 15091}#)
                                           ((lambda (#{tmp\ 15092}#)
                                              (if #{tmp\ 15092}#
                                                (apply (lambda (#{dy\ 15094}#)
                                                         ((lambda (#{tmp\ 15095}#)
                                                            ((lambda (#{tmp\ 15096}#)
                                                               (if #{tmp\ 15096}#
                                                                 (apply (lambda (#{dx\ 15098}#)
                                                                          (list '#(syntax-object
                                                                                   quote
                                                                                   ((top)
                                                                                    #(ribcage
                                                                                      #(dx)
                                                                                      #((top))
                                                                                      #("i15097"))
                                                                                    #(ribcage
                                                                                      #(dy)
                                                                                      #((top))
                                                                                      #("i15093"))
                                                                                    #(ribcage
                                                                                      #(x
                                                                                        y)
                                                                                      #((top)
                                                                                        (top))
                                                                                      #("i15087"
                                                                                        "i15088"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(x
                                                                                        y)
                                                                                      #((top)
                                                                                        (top))
                                                                                      #("i15082"
                                                                                        "i15083"))
                                                                                    #(ribcage
                                                                                      #(quasicons
                                                                                        quasiappend
                                                                                        quasivector
                                                                                        quasi)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i15072"
                                                                                        "i15073"
                                                                                        "i15074"
                                                                                        "i15075")))
                                                                                   (hygiene
                                                                                     guile))
                                                                                (cons #{dx\ 15098}#
                                                                                      #{dy\ 15094}#)))
                                                                        #{tmp\ 15096}#)
                                                                 ((lambda (#{_\ 15100}#)
                                                                    (if (null? #{dy\ 15094}#)
                                                                      (list '#(syntax-object
                                                                               list
                                                                               ((top)
                                                                                #(ribcage
                                                                                  #(_)
                                                                                  #((top))
                                                                                  #("i15099"))
                                                                                #(ribcage
                                                                                  #(dy)
                                                                                  #((top))
                                                                                  #("i15093"))
                                                                                #(ribcage
                                                                                  #(x
                                                                                    y)
                                                                                  #((top)
                                                                                    (top))
                                                                                  #("i15087"
                                                                                    "i15088"))
                                                                                #(ribcage
                                                                                  ()
                                                                                  ()
                                                                                  ())
                                                                                #(ribcage
                                                                                  ()
                                                                                  ()
                                                                                  ())
                                                                                #(ribcage
                                                                                  #(x
                                                                                    y)
                                                                                  #((top)
                                                                                    (top))
                                                                                  #("i15082"
                                                                                    "i15083"))
                                                                                #(ribcage
                                                                                  #(quasicons
                                                                                    quasiappend
                                                                                    quasivector
                                                                                    quasi)
                                                                                  #((top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top))
                                                                                  #("i15072"
                                                                                    "i15073"
                                                                                    "i15074"
                                                                                    "i15075")))
                                                                               (hygiene
                                                                                 guile))
                                                                            #{x\ 15089}#)
                                                                      (list '#(syntax-object
                                                                               cons
                                                                               ((top)
                                                                                #(ribcage
                                                                                  #(_)
                                                                                  #((top))
                                                                                  #("i15099"))
                                                                                #(ribcage
                                                                                  #(dy)
                                                                                  #((top))
                                                                                  #("i15093"))
                                                                                #(ribcage
                                                                                  #(x
                                                                                    y)
                                                                                  #((top)
                                                                                    (top))
                                                                                  #("i15087"
                                                                                    "i15088"))
                                                                                #(ribcage
                                                                                  ()
                                                                                  ()
                                                                                  ())
                                                                                #(ribcage
                                                                                  ()
                                                                                  ()
                                                                                  ())
                                                                                #(ribcage
                                                                                  #(x
                                                                                    y)
                                                                                  #((top)
                                                                                    (top))
                                                                                  #("i15082"
                                                                                    "i15083"))
                                                                                #(ribcage
                                                                                  #(quasicons
                                                                                    quasiappend
                                                                                    quasivector
                                                                                    quasi)
                                                                                  #((top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top))
                                                                                  #("i15072"
                                                                                    "i15073"
                                                                                    "i15074"
                                                                                    "i15075")))
                                                                               (hygiene
                                                                                 guile))
                                                                            #{x\ 15089}#
                                                                            #{y\ 15090}#)))
                                                                  #{tmp\ 15095}#)))
                                                             ($sc-dispatch
                                                               #{tmp\ 15095}#
                                                               '(#(free-id
                                                                   #(syntax-object
                                                                     quote
                                                                     ((top)
                                                                      #(ribcage
                                                                        #(dy)
                                                                        #((top))
                                                                        #("i15093"))
                                                                      #(ribcage
                                                                        #(x y)
                                                                        #((top)
                                                                          (top))
                                                                        #("i15087"
                                                                          "i15088"))
                                                                      #(ribcage
                                                                        ()
                                                                        ()
                                                                        ())
                                                                      #(ribcage
                                                                        ()
                                                                        ()
                                                                        ())
                                                                      #(ribcage
                                                                        #(x y)
                                                                        #((top)
                                                                          (top))
                                                                        #("i15082"
                                                                          "i15083"))
                                                                      #(ribcage
                                                                        #(quasicons
                                                                          quasiappend
                                                                          quasivector
                                                                          quasi)
                                                                        #((top)
                                                                          (top)
                                                                          (top)
                                                                          (top))
                                                                        #("i15072"
                                                                          "i15073"
                                                                          "i15074"
                                                                          "i15075")))
                                                                     (hygiene
                                                                       guile)))
                                                                 any))))
                                                          #{x\ 15089}#))
                                                       #{tmp\ 15092}#)
                                                ((lambda (#{tmp\ 15101}#)
                                                   (if #{tmp\ 15101}#
                                                     (apply (lambda (#{stuff\ 15103}#)
                                                              (cons '#(syntax-object
                                                                       list
                                                                       ((top)
                                                                        #(ribcage
                                                                          #(stuff)
                                                                          #((top))
                                                                          #("i15102"))
                                                                        #(ribcage
                                                                          #(x
                                                                            y)
                                                                          #((top)
                                                                            (top))
                                                                          #("i15087"
                                                                            "i15088"))
                                                                        #(ribcage
                                                                          ()
                                                                          ()
                                                                          ())
                                                                        #(ribcage
                                                                          ()
                                                                          ()
                                                                          ())
                                                                        #(ribcage
                                                                          #(x
                                                                            y)
                                                                          #((top)
                                                                            (top))
                                                                          #("i15082"
                                                                            "i15083"))
                                                                        #(ribcage
                                                                          #(quasicons
                                                                            quasiappend
                                                                            quasivector
                                                                            quasi)
                                                                          #((top)
                                                                            (top)
                                                                            (top)
                                                                            (top))
                                                                          #("i15072"
                                                                            "i15073"
                                                                            "i15074"
                                                                            "i15075")))
                                                                       (hygiene
                                                                         guile))
                                                                    (cons #{x\ 15089}#
                                                                          #{stuff\ 15103}#)))
                                                            #{tmp\ 15101}#)
                                                     ((lambda (#{else\ 15105}#)
                                                        (list '#(syntax-object
                                                                 cons
                                                                 ((top)
                                                                  #(ribcage
                                                                    #(else)
                                                                    #((top))
                                                                    #("i15104"))
                                                                  #(ribcage
                                                                    #(x y)
                                                                    #((top)
                                                                      (top))
                                                                    #("i15087"
                                                                      "i15088"))
                                                                  #(ribcage
                                                                    ()
                                                                    ()
                                                                    ())
                                                                  #(ribcage
                                                                    ()
                                                                    ()
                                                                    ())
                                                                  #(ribcage
                                                                    #(x y)
                                                                    #((top)
                                                                      (top))
                                                                    #("i15082"
                                                                      "i15083"))
                                                                  #(ribcage
                                                                    #(quasicons
                                                                      quasiappend
                                                                      quasivector
                                                                      quasi)
                                                                    #((top)
                                                                      (top)
                                                                      (top)
                                                                      (top))
                                                                    #("i15072"
                                                                      "i15073"
                                                                      "i15074"
                                                                      "i15075")))
                                                                 (hygiene
                                                                   guile))
                                                              #{x\ 15089}#
                                                              #{y\ 15090}#))
                                                      #{tmp\ 15091}#)))
                                                 ($sc-dispatch
                                                   #{tmp\ 15091}#
                                                   '(#(free-id
                                                       #(syntax-object
                                                         list
                                                         ((top)
                                                          #(ribcage
                                                            #(x y)
                                                            #((top) (top))
                                                            #("i15087"
                                                              "i15088"))
                                                          #(ribcage () () ())
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(x y)
                                                            #((top) (top))
                                                            #("i15082"
                                                              "i15083"))
                                                          #(ribcage
                                                            #(quasicons
                                                              quasiappend
                                                              quasivector
                                                              quasi)
                                                            #((top)
                                                              (top)
                                                              (top)
                                                              (top))
                                                            #("i15072"
                                                              "i15073"
                                                              "i15074"
                                                              "i15075")))
                                                         (hygiene guile)))
                                                     .
                                                     any)))))
                                            ($sc-dispatch
                                              #{tmp\ 15091}#
                                              '(#(free-id
                                                  #(syntax-object
                                                    quote
                                                    ((top)
                                                     #(ribcage
                                                       #(x y)
                                                       #((top) (top))
                                                       #("i15087" "i15088"))
                                                     #(ribcage () () ())
                                                     #(ribcage () () ())
                                                     #(ribcage
                                                       #(x y)
                                                       #((top) (top))
                                                       #("i15082" "i15083"))
                                                     #(ribcage
                                                       #(quasicons
                                                         quasiappend
                                                         quasivector
                                                         quasi)
                                                       #((top)
                                                         (top)
                                                         (top)
                                                         (top))
                                                       #("i15072"
                                                         "i15073"
                                                         "i15074"
                                                         "i15075")))
                                                    (hygiene guile)))
                                                any))))
                                         #{y\ 15090}#))
                                      #{tmp\ 15086}#)
                               (syntax-violation
                                 #f
                                 "source expression failed to match any pattern"
                                 #{tmp\ 15085}#)))
                           ($sc-dispatch #{tmp\ 15085}# (quote (any any)))))
                        (list #{x\ 15080}# #{y\ 15081}#))))
                   (#{quasiappend\ 15077}#
                     (lambda (#{x\ 15106}# #{y\ 15107}#)
                       ((lambda (#{tmp\ 15111}#)
                          ((lambda (#{tmp\ 15112}#)
                             (if #{tmp\ 15112}#
                               (apply (lambda (#{x\ 15115}# #{y\ 15116}#)
                                        ((lambda (#{tmp\ 15117}#)
                                           ((lambda (#{tmp\ 15118}#)
                                              (if #{tmp\ 15118}#
                                                (apply (lambda () #{x\ 15115}#)
                                                       #{tmp\ 15118}#)
                                                ((lambda (#{_\ 15120}#)
                                                   (list '#(syntax-object
                                                            append
                                                            ((top)
                                                             #(ribcage
                                                               #(_)
                                                               #((top))
                                                               #("i15119"))
                                                             #(ribcage
                                                               #(x y)
                                                               #((top) (top))
                                                               #("i15113"
                                                                 "i15114"))
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               #(x y)
                                                               #((top) (top))
                                                               #("i15108"
                                                                 "i15109"))
                                                             #(ribcage
                                                               #(quasicons
                                                                 quasiappend
                                                                 quasivector
                                                                 quasi)
                                                               #((top)
                                                                 (top)
                                                                 (top)
                                                                 (top))
                                                               #("i15072"
                                                                 "i15073"
                                                                 "i15074"
                                                                 "i15075")))
                                                            (hygiene guile))
                                                         #{x\ 15115}#
                                                         #{y\ 15116}#))
                                                 #{tmp\ 15117}#)))
                                            ($sc-dispatch
                                              #{tmp\ 15117}#
                                              '(#(free-id
                                                  #(syntax-object
                                                    quote
                                                    ((top)
                                                     #(ribcage
                                                       #(x y)
                                                       #((top) (top))
                                                       #("i15113" "i15114"))
                                                     #(ribcage () () ())
                                                     #(ribcage () () ())
                                                     #(ribcage
                                                       #(x y)
                                                       #((top) (top))
                                                       #("i15108" "i15109"))
                                                     #(ribcage
                                                       #(quasicons
                                                         quasiappend
                                                         quasivector
                                                         quasi)
                                                       #((top)
                                                         (top)
                                                         (top)
                                                         (top))
                                                       #("i15072"
                                                         "i15073"
                                                         "i15074"
                                                         "i15075")))
                                                    (hygiene guile)))
                                                ()))))
                                         #{y\ 15116}#))
                                      #{tmp\ 15112}#)
                               (syntax-violation
                                 #f
                                 "source expression failed to match any pattern"
                                 #{tmp\ 15111}#)))
                           ($sc-dispatch #{tmp\ 15111}# (quote (any any)))))
                        (list #{x\ 15106}# #{y\ 15107}#))))
                   (#{quasivector\ 15078}#
                     (lambda (#{x\ 15121}#)
                       ((lambda (#{tmp\ 15124}#)
                          ((lambda (#{x\ 15126}#)
                             ((lambda (#{tmp\ 15127}#)
                                ((lambda (#{tmp\ 15128}#)
                                   (if #{tmp\ 15128}#
                                     (apply (lambda (#{x\ 15130}#)
                                              (list '#(syntax-object
                                                       quote
                                                       ((top)
                                                        #(ribcage
                                                          #(x)
                                                          #((top))
                                                          #("i15129"))
                                                        #(ribcage
                                                          #(x)
                                                          #((top))
                                                          #("i15125"))
                                                        #(ribcage () () ())
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(x)
                                                          #((top))
                                                          #("i15122"))
                                                        #(ribcage
                                                          #(quasicons
                                                            quasiappend
                                                            quasivector
                                                            quasi)
                                                          #((top)
                                                            (top)
                                                            (top)
                                                            (top))
                                                          #("i15072"
                                                            "i15073"
                                                            "i15074"
                                                            "i15075")))
                                                       (hygiene guile))
                                                    (list->vector
                                                      #{x\ 15130}#)))
                                            #{tmp\ 15128}#)
                                     ((lambda (#{tmp\ 15132}#)
                                        (if #{tmp\ 15132}#
                                          (apply (lambda (#{x\ 15134}#)
                                                   (cons '#(syntax-object
                                                            vector
                                                            ((top)
                                                             #(ribcage
                                                               #(x)
                                                               #((top))
                                                               #("i15133"))
                                                             #(ribcage
                                                               #(x)
                                                               #((top))
                                                               #("i15125"))
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               #(x)
                                                               #((top))
                                                               #("i15122"))
                                                             #(ribcage
                                                               #(quasicons
                                                                 quasiappend
                                                                 quasivector
                                                                 quasi)
                                                               #((top)
                                                                 (top)
                                                                 (top)
                                                                 (top))
                                                               #("i15072"
                                                                 "i15073"
                                                                 "i15074"
                                                                 "i15075")))
                                                            (hygiene guile))
                                                         #{x\ 15134}#))
                                                 #{tmp\ 15132}#)
                                          ((lambda (#{_\ 15137}#)
                                             (list '#(syntax-object
                                                      list->vector
                                                      ((top)
                                                       #(ribcage
                                                         #(_)
                                                         #((top))
                                                         #("i15136"))
                                                       #(ribcage
                                                         #(x)
                                                         #((top))
                                                         #("i15125"))
                                                       #(ribcage () () ())
                                                       #(ribcage () () ())
                                                       #(ribcage
                                                         #(x)
                                                         #((top))
                                                         #("i15122"))
                                                       #(ribcage
                                                         #(quasicons
                                                           quasiappend
                                                           quasivector
                                                           quasi)
                                                         #((top)
                                                           (top)
                                                           (top)
                                                           (top))
                                                         #("i15072"
                                                           "i15073"
                                                           "i15074"
                                                           "i15075")))
                                                      (hygiene guile))
                                                   #{x\ 15126}#))
                                           #{tmp\ 15127}#)))
                                      ($sc-dispatch
                                        #{tmp\ 15127}#
                                        '(#(free-id
                                            #(syntax-object
                                              list
                                              ((top)
                                               #(ribcage
                                                 #(x)
                                                 #((top))
                                                 #("i15125"))
                                               #(ribcage () () ())
                                               #(ribcage () () ())
                                               #(ribcage
                                                 #(x)
                                                 #((top))
                                                 #("i15122"))
                                               #(ribcage
                                                 #(quasicons
                                                   quasiappend
                                                   quasivector
                                                   quasi)
                                                 #((top) (top) (top) (top))
                                                 #("i15072"
                                                   "i15073"
                                                   "i15074"
                                                   "i15075")))
                                              (hygiene guile)))
                                          .
                                          each-any)))))
                                 ($sc-dispatch
                                   #{tmp\ 15127}#
                                   '(#(free-id
                                       #(syntax-object
                                         quote
                                         ((top)
                                          #(ribcage #(x) #((top)) #("i15125"))
                                          #(ribcage () () ())
                                          #(ribcage () () ())
                                          #(ribcage #(x) #((top)) #("i15122"))
                                          #(ribcage
                                            #(quasicons
                                              quasiappend
                                              quasivector
                                              quasi)
                                            #((top) (top) (top) (top))
                                            #("i15072"
                                              "i15073"
                                              "i15074"
                                              "i15075")))
                                         (hygiene guile)))
                                     each-any))))
                              #{x\ 15126}#))
                           #{tmp\ 15124}#))
                        #{x\ 15121}#)))
                   (#{quasi\ 15079}#
                     (lambda (#{p\ 15138}# #{lev\ 15139}#)
                       ((lambda (#{tmp\ 15142}#)
                          ((lambda (#{tmp\ 15143}#)
                             (if #{tmp\ 15143}#
                               (apply (lambda (#{p\ 15145}#)
                                        (if (= #{lev\ 15139}# 0)
                                          #{p\ 15145}#
                                          (#{quasicons\ 15076}#
                                            '(#(syntax-object
                                                quote
                                                ((top)
                                                 #(ribcage
                                                   #(p)
                                                   #((top))
                                                   #("i15144"))
                                                 #(ribcage () () ())
                                                 #(ribcage
                                                   #(p lev)
                                                   #((top) (top))
                                                   #("i15140" "i15141"))
                                                 #(ribcage
                                                   #(quasicons
                                                     quasiappend
                                                     quasivector
                                                     quasi)
                                                   #((top) (top) (top) (top))
                                                   #("i15072"
                                                     "i15073"
                                                     "i15074"
                                                     "i15075")))
                                                (hygiene guile))
                                              #(syntax-object
                                                unquote
                                                ((top)
                                                 #(ribcage
                                                   #(p)
                                                   #((top))
                                                   #("i15144"))
                                                 #(ribcage () () ())
                                                 #(ribcage
                                                   #(p lev)
                                                   #((top) (top))
                                                   #("i15140" "i15141"))
                                                 #(ribcage
                                                   #(quasicons
                                                     quasiappend
                                                     quasivector
                                                     quasi)
                                                   #((top) (top) (top) (top))
                                                   #("i15072"
                                                     "i15073"
                                                     "i15074"
                                                     "i15075")))
                                                (hygiene guile)))
                                            (#{quasi\ 15079}#
                                              (list #{p\ 15145}#)
                                              (- #{lev\ 15139}# 1)))))
                                      #{tmp\ 15143}#)
                               ((lambda (#{tmp\ 15146}#)
                                  (if (if #{tmp\ 15146}#
                                        (apply (lambda (#{args\ 15148}#)
                                                 (= #{lev\ 15139}# 0))
                                               #{tmp\ 15146}#)
                                        #f)
                                    (apply (lambda (#{args\ 15150}#)
                                             (syntax-violation
                                               'unquote
                                               "unquote takes exactly one argument"
                                               #{p\ 15138}#
                                               (cons '#(syntax-object
                                                        unquote
                                                        ((top)
                                                         #(ribcage
                                                           #(args)
                                                           #((top))
                                                           #("i15149"))
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(p lev)
                                                           #((top) (top))
                                                           #("i15140"
                                                             "i15141"))
                                                         #(ribcage
                                                           #(quasicons
                                                             quasiappend
                                                             quasivector
                                                             quasi)
                                                           #((top)
                                                             (top)
                                                             (top)
                                                             (top))
                                                           #("i15072"
                                                             "i15073"
                                                             "i15074"
                                                             "i15075")))
                                                        (hygiene guile))
                                                     #{args\ 15150}#)))
                                           #{tmp\ 15146}#)
                                    ((lambda (#{tmp\ 15151}#)
                                       (if #{tmp\ 15151}#
                                         (apply (lambda (#{p\ 15154}#
                                                         #{q\ 15155}#)
                                                  (if (= #{lev\ 15139}# 0)
                                                    (#{quasiappend\ 15077}#
                                                      #{p\ 15154}#
                                                      (#{quasi\ 15079}#
                                                        #{q\ 15155}#
                                                        #{lev\ 15139}#))
                                                    (#{quasicons\ 15076}#
                                                      (#{quasicons\ 15076}#
                                                        '(#(syntax-object
                                                            quote
                                                            ((top)
                                                             #(ribcage
                                                               #(p q)
                                                               #((top) (top))
                                                               #("i15152"
                                                                 "i15153"))
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               #(p lev)
                                                               #((top) (top))
                                                               #("i15140"
                                                                 "i15141"))
                                                             #(ribcage
                                                               #(quasicons
                                                                 quasiappend
                                                                 quasivector
                                                                 quasi)
                                                               #((top)
                                                                 (top)
                                                                 (top)
                                                                 (top))
                                                               #("i15072"
                                                                 "i15073"
                                                                 "i15074"
                                                                 "i15075")))
                                                            (hygiene guile))
                                                          #(syntax-object
                                                            unquote-splicing
                                                            ((top)
                                                             #(ribcage
                                                               #(p q)
                                                               #((top) (top))
                                                               #("i15152"
                                                                 "i15153"))
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               #(p lev)
                                                               #((top) (top))
                                                               #("i15140"
                                                                 "i15141"))
                                                             #(ribcage
                                                               #(quasicons
                                                                 quasiappend
                                                                 quasivector
                                                                 quasi)
                                                               #((top)
                                                                 (top)
                                                                 (top)
                                                                 (top))
                                                               #("i15072"
                                                                 "i15073"
                                                                 "i15074"
                                                                 "i15075")))
                                                            (hygiene guile)))
                                                        (#{quasi\ 15079}#
                                                          (list #{p\ 15154}#)
                                                          (- #{lev\ 15139}#
                                                             1)))
                                                      (#{quasi\ 15079}#
                                                        #{q\ 15155}#
                                                        #{lev\ 15139}#))))
                                                #{tmp\ 15151}#)
                                         ((lambda (#{tmp\ 15156}#)
                                            (if (if #{tmp\ 15156}#
                                                  (apply (lambda (#{args\ 15159}#
                                                                  #{q\ 15160}#)
                                                           (= #{lev\ 15139}#
                                                              0))
                                                         #{tmp\ 15156}#)
                                                  #f)
                                              (apply (lambda (#{args\ 15163}#
                                                              #{q\ 15164}#)
                                                       (syntax-violation
                                                         'unquote-splicing
                                                         "unquote-splicing takes exactly one argument"
                                                         #{p\ 15138}#
                                                         (cons '#(syntax-object
                                                                  unquote-splicing
                                                                  ((top)
                                                                   #(ribcage
                                                                     #(args q)
                                                                     #((top)
                                                                       (top))
                                                                     #("i15161"
                                                                       "i15162"))
                                                                   #(ribcage
                                                                     ()
                                                                     ()
                                                                     ())
                                                                   #(ribcage
                                                                     #(p lev)
                                                                     #((top)
                                                                       (top))
                                                                     #("i15140"
                                                                       "i15141"))
                                                                   #(ribcage
                                                                     #(quasicons
                                                                       quasiappend
                                                                       quasivector
                                                                       quasi)
                                                                     #((top)
                                                                       (top)
                                                                       (top)
                                                                       (top))
                                                                     #("i15072"
                                                                       "i15073"
                                                                       "i15074"
                                                                       "i15075")))
                                                                  (hygiene
                                                                    guile))
                                                               #{args\ 15163}#)))
                                                     #{tmp\ 15156}#)
                                              ((lambda (#{tmp\ 15165}#)
                                                 (if #{tmp\ 15165}#
                                                   (apply (lambda (#{p\ 15167}#)
                                                            (#{quasicons\ 15076}#
                                                              '(#(syntax-object
                                                                  quote
                                                                  ((top)
                                                                   #(ribcage
                                                                     #(p)
                                                                     #((top))
                                                                     #("i15166"))
                                                                   #(ribcage
                                                                     ()
                                                                     ()
                                                                     ())
                                                                   #(ribcage
                                                                     #(p lev)
                                                                     #((top)
                                                                       (top))
                                                                     #("i15140"
                                                                       "i15141"))
                                                                   #(ribcage
                                                                     #(quasicons
                                                                       quasiappend
                                                                       quasivector
                                                                       quasi)
                                                                     #((top)
                                                                       (top)
                                                                       (top)
                                                                       (top))
                                                                     #("i15072"
                                                                       "i15073"
                                                                       "i15074"
                                                                       "i15075")))
                                                                  (hygiene
                                                                    guile))
                                                                #(syntax-object
                                                                  quasiquote
                                                                  ((top)
                                                                   #(ribcage
                                                                     #(p)
                                                                     #((top))
                                                                     #("i15166"))
                                                                   #(ribcage
                                                                     ()
                                                                     ()
                                                                     ())
                                                                   #(ribcage
                                                                     #(p lev)
                                                                     #((top)
                                                                       (top))
                                                                     #("i15140"
                                                                       "i15141"))
                                                                   #(ribcage
                                                                     #(quasicons
                                                                       quasiappend
                                                                       quasivector
                                                                       quasi)
                                                                     #((top)
                                                                       (top)
                                                                       (top)
                                                                       (top))
                                                                     #("i15072"
                                                                       "i15073"
                                                                       "i15074"
                                                                       "i15075")))
                                                                  (hygiene
                                                                    guile)))
                                                              (#{quasi\ 15079}#
                                                                (list #{p\ 15167}#)
                                                                (+ #{lev\ 15139}#
                                                                   1))))
                                                          #{tmp\ 15165}#)
                                                   ((lambda (#{tmp\ 15168}#)
                                                      (if #{tmp\ 15168}#
                                                        (apply (lambda (#{p\ 15171}#
                                                                        #{q\ 15172}#)
                                                                 (#{quasicons\ 15076}#
                                                                   (#{quasi\ 15079}#
                                                                     #{p\ 15171}#
                                                                     #{lev\ 15139}#)
                                                                   (#{quasi\ 15079}#
                                                                     #{q\ 15172}#
                                                                     #{lev\ 15139}#)))
                                                               #{tmp\ 15168}#)
                                                        ((lambda (#{tmp\ 15173}#)
                                                           (if #{tmp\ 15173}#
                                                             (apply (lambda (#{x\ 15175}#)
                                                                      (#{quasivector\ 15078}#
                                                                        (#{quasi\ 15079}#
                                                                          #{x\ 15175}#
                                                                          #{lev\ 15139}#)))
                                                                    #{tmp\ 15173}#)
                                                             ((lambda (#{p\ 15178}#)
                                                                (list '#(syntax-object
                                                                         quote
                                                                         ((top)
                                                                          #(ribcage
                                                                            #(p)
                                                                            #((top))
                                                                            #("i15177"))
                                                                          #(ribcage
                                                                            ()
                                                                            ()
                                                                            ())
                                                                          #(ribcage
                                                                            #(p
                                                                              lev)
                                                                            #((top)
                                                                              (top))
                                                                            #("i15140"
                                                                              "i15141"))
                                                                          #(ribcage
                                                                            #(quasicons
                                                                              quasiappend
                                                                              quasivector
                                                                              quasi)
                                                                            #((top)
                                                                              (top)
                                                                              (top)
                                                                              (top))
                                                                            #("i15072"
                                                                              "i15073"
                                                                              "i15074"
                                                                              "i15075")))
                                                                         (hygiene
                                                                           guile))
                                                                      #{p\ 15178}#))
                                                              #{tmp\ 15142}#)))
                                                         ($sc-dispatch
                                                           #{tmp\ 15142}#
                                                           '#(vector
                                                              each-any)))))
                                                    ($sc-dispatch
                                                      #{tmp\ 15142}#
                                                      '(any . any)))))
                                               ($sc-dispatch
                                                 #{tmp\ 15142}#
                                                 '(#(free-id
                                                     #(syntax-object
                                                       quasiquote
                                                       ((top)
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(p lev)
                                                          #((top) (top))
                                                          #("i15140" "i15141"))
                                                        #(ribcage
                                                          #(quasicons
                                                            quasiappend
                                                            quasivector
                                                            quasi)
                                                          #((top)
                                                            (top)
                                                            (top)
                                                            (top))
                                                          #("i15072"
                                                            "i15073"
                                                            "i15074"
                                                            "i15075")))
                                                       (hygiene guile)))
                                                   any)))))
                                          ($sc-dispatch
                                            #{tmp\ 15142}#
                                            '((#(free-id
                                                 #(syntax-object
                                                   unquote-splicing
                                                   ((top)
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(p lev)
                                                      #((top) (top))
                                                      #("i15140" "i15141"))
                                                    #(ribcage
                                                      #(quasicons
                                                        quasiappend
                                                        quasivector
                                                        quasi)
                                                      #((top)
                                                        (top)
                                                        (top)
                                                        (top))
                                                      #("i15072"
                                                        "i15073"
                                                        "i15074"
                                                        "i15075")))
                                                   (hygiene guile)))
                                               .
                                               any)
                                              .
                                              any)))))
                                     ($sc-dispatch
                                       #{tmp\ 15142}#
                                       '((#(free-id
                                            #(syntax-object
                                              unquote-splicing
                                              ((top)
                                               #(ribcage () () ())
                                               #(ribcage
                                                 #(p lev)
                                                 #((top) (top))
                                                 #("i15140" "i15141"))
                                               #(ribcage
                                                 #(quasicons
                                                   quasiappend
                                                   quasivector
                                                   quasi)
                                                 #((top) (top) (top) (top))
                                                 #("i15072"
                                                   "i15073"
                                                   "i15074"
                                                   "i15075")))
                                              (hygiene guile)))
                                          any)
                                         .
                                         any)))))
                                ($sc-dispatch
                                  #{tmp\ 15142}#
                                  '(#(free-id
                                      #(syntax-object
                                        unquote
                                        ((top)
                                         #(ribcage () () ())
                                         #(ribcage
                                           #(p lev)
                                           #((top) (top))
                                           #("i15140" "i15141"))
                                         #(ribcage
                                           #(quasicons
                                             quasiappend
                                             quasivector
                                             quasi)
                                           #((top) (top) (top) (top))
                                           #("i15072"
                                             "i15073"
                                             "i15074"
                                             "i15075")))
                                        (hygiene guile)))
                                    .
                                    any)))))
                           ($sc-dispatch
                             #{tmp\ 15142}#
                             '(#(free-id
                                 #(syntax-object
                                   unquote
                                   ((top)
                                    #(ribcage () () ())
                                    #(ribcage
                                      #(p lev)
                                      #((top) (top))
                                      #("i15140" "i15141"))
                                    #(ribcage
                                      #(quasicons
                                        quasiappend
                                        quasivector
                                        quasi)
                                      #((top) (top) (top) (top))
                                      #("i15072" "i15073" "i15074" "i15075")))
                                   (hygiene guile)))
                               any))))
                        #{p\ 15138}#))))
            (lambda (#{x\ 15179}#)
              ((lambda (#{tmp\ 15181}#)
                 ((lambda (#{tmp\ 15182}#)
                    (if #{tmp\ 15182}#
                      (apply (lambda (#{_\ 15185}# #{e\ 15186}#)
                               (#{quasi\ 15079}# #{e\ 15186}# 0))
                             #{tmp\ 15182}#)
                      (syntax-violation
                        #f
                        "source expression failed to match any pattern"
                        #{tmp\ 15181}#)))
                  ($sc-dispatch #{tmp\ 15181}# (quote (any any)))))
               #{x\ 15179}#)))
          (module-name (current-module)))))

(define include
  (make-syntax-transformer
    'include
    'macro
    (cons (lambda (#{x\ 15187}#)
            (letrec ((#{read-file\ 15190}#
                       (lambda (#{fn\ 15191}# #{k\ 15192}#)
                         (let ((#{p\ 15196}# (open-input-file #{fn\ 15191}#)))
                           (letrec ((#{f\ 15200}#
                                      (lambda (#{x\ 15201}# #{result\ 15202}#)
                                        (if (eof-object? #{x\ 15201}#)
                                          (begin
                                            (close-input-port #{p\ 15196}#)
                                            (reverse #{result\ 15202}#))
                                          (#{f\ 15200}#
                                            (read #{p\ 15196}#)
                                            (cons (datum->syntax
                                                    #{k\ 15192}#
                                                    #{x\ 15201}#)
                                                  #{result\ 15202}#))))))
                             (#{f\ 15200}# (read #{p\ 15196}#) (quote ())))))))
              ((lambda (#{tmp\ 15203}#)
                 ((lambda (#{tmp\ 15204}#)
                    (if #{tmp\ 15204}#
                      (apply (lambda (#{k\ 15207}# #{filename\ 15208}#)
                               (let ((#{fn\ 15210}#
                                       (syntax->datum #{filename\ 15208}#)))
                                 ((lambda (#{tmp\ 15212}#)
                                    ((lambda (#{tmp\ 15213}#)
                                       (if #{tmp\ 15213}#
                                         (apply (lambda (#{exp\ 15215}#)
                                                  (cons '#(syntax-object
                                                           begin
                                                           ((top)
                                                            #(ribcage
                                                              #(exp)
                                                              #((top))
                                                              #("i15214"))
                                                            #(ribcage () () ())
                                                            #(ribcage () () ())
                                                            #(ribcage
                                                              #(fn)
                                                              #((top))
                                                              #("i15209"))
                                                            #(ribcage
                                                              #(k filename)
                                                              #((top) (top))
                                                              #("i15205"
                                                                "i15206"))
                                                            #(ribcage
                                                              (read-file)
                                                              ((top))
                                                              ("i15189"))
                                                            #(ribcage
                                                              #(x)
                                                              #((top))
                                                              #("i15188")))
                                                           (hygiene guile))
                                                        #{exp\ 15215}#))
                                                #{tmp\ 15213}#)
                                         (syntax-violation
                                           #f
                                           "source expression failed to match any pattern"
                                           #{tmp\ 15212}#)))
                                     ($sc-dispatch
                                       #{tmp\ 15212}#
                                       'each-any)))
                                  (#{read-file\ 15190}#
                                    #{fn\ 15210}#
                                    #{k\ 15207}#))))
                             #{tmp\ 15204}#)
                      (syntax-violation
                        #f
                        "source expression failed to match any pattern"
                        #{tmp\ 15203}#)))
                  ($sc-dispatch #{tmp\ 15203}# (quote (any any)))))
               #{x\ 15187}#)))
          (module-name (current-module)))))

(define include-from-path
  (make-syntax-transformer
    'include-from-path
    'macro
    (cons (lambda (#{x\ 15217}#)
            ((lambda (#{tmp\ 15219}#)
               ((lambda (#{tmp\ 15220}#)
                  (if #{tmp\ 15220}#
                    (apply (lambda (#{k\ 15223}# #{filename\ 15224}#)
                             (let ((#{fn\ 15226}#
                                     (syntax->datum #{filename\ 15224}#)))
                               ((lambda (#{tmp\ 15228}#)
                                  ((lambda (#{fn\ 15230}#)
                                     (list '#(syntax-object
                                              include
                                              ((top)
                                               #(ribcage
                                                 #(fn)
                                                 #((top))
                                                 #("i15229"))
                                               #(ribcage () () ())
                                               #(ribcage () () ())
                                               #(ribcage
                                                 #(fn)
                                                 #((top))
                                                 #("i15225"))
                                               #(ribcage
                                                 #(k filename)
                                                 #((top) (top))
                                                 #("i15221" "i15222"))
                                               #(ribcage () () ())
                                               #(ribcage
                                                 #(x)
                                                 #((top))
                                                 #("i15218")))
                                              (hygiene guile))
                                           #{fn\ 15230}#))
                                   #{tmp\ 15228}#))
                                (let ((#{t\ 15233}#
                                        (%search-load-path #{fn\ 15226}#)))
                                  (if #{t\ 15233}#
                                    #{t\ 15233}#
                                    (syntax-violation
                                      'include-from-path
                                      "file not found in path"
                                      #{x\ 15217}#
                                      #{filename\ 15224}#))))))
                           #{tmp\ 15220}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 15219}#)))
                ($sc-dispatch #{tmp\ 15219}# (quote (any any)))))
             #{x\ 15217}#))
          (module-name (current-module)))))

(define unquote
  (make-syntax-transformer
    'unquote
    'macro
    (cons (lambda (#{x\ 15235}#)
            ((lambda (#{tmp\ 15237}#)
               ((lambda (#{tmp\ 15238}#)
                  (if #{tmp\ 15238}#
                    (apply (lambda (#{_\ 15241}# #{e\ 15242}#)
                             (syntax-violation
                               'unquote
                               "expression not valid outside of quasiquote"
                               #{x\ 15235}#))
                           #{tmp\ 15238}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 15237}#)))
                ($sc-dispatch #{tmp\ 15237}# (quote (any any)))))
             #{x\ 15235}#))
          (module-name (current-module)))))

(define unquote-splicing
  (make-syntax-transformer
    'unquote-splicing
    'macro
    (cons (lambda (#{x\ 15243}#)
            ((lambda (#{tmp\ 15245}#)
               ((lambda (#{tmp\ 15246}#)
                  (if #{tmp\ 15246}#
                    (apply (lambda (#{_\ 15249}# #{e\ 15250}#)
                             (syntax-violation
                               'unquote-splicing
                               "expression not valid outside of quasiquote"
                               #{x\ 15243}#))
                           #{tmp\ 15246}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 15245}#)))
                ($sc-dispatch #{tmp\ 15245}# (quote (any any)))))
             #{x\ 15243}#))
          (module-name (current-module)))))

(define case
  (make-syntax-transformer
    'case
    'macro
    (cons (lambda (#{x\ 15251}#)
            ((lambda (#{tmp\ 15253}#)
               ((lambda (#{tmp\ 15254}#)
                  (if #{tmp\ 15254}#
                    (apply (lambda (#{_\ 15259}#
                                    #{e\ 15260}#
                                    #{m1\ 15261}#
                                    #{m2\ 15262}#)
                             ((lambda (#{tmp\ 15264}#)
                                ((lambda (#{body\ 15266}#)
                                   (list '#(syntax-object
                                            let
                                            ((top)
                                             #(ribcage
                                               #(body)
                                               #((top))
                                               #("i15265"))
                                             #(ribcage
                                               #(_ e m1 m2)
                                               #((top) (top) (top) (top))
                                               #("i15255"
                                                 "i15256"
                                                 "i15257"
                                                 "i15258"))
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(x)
                                               #((top))
                                               #("i15252")))
                                            (hygiene guile))
                                         (list (list '#(syntax-object
                                                        t
                                                        ((top)
                                                         #(ribcage
                                                           #(body)
                                                           #((top))
                                                           #("i15265"))
                                                         #(ribcage
                                                           #(_ e m1 m2)
                                                           #((top)
                                                             (top)
                                                             (top)
                                                             (top))
                                                           #("i15255"
                                                             "i15256"
                                                             "i15257"
                                                             "i15258"))
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(x)
                                                           #((top))
                                                           #("i15252")))
                                                        (hygiene guile))
                                                     #{e\ 15260}#))
                                         #{body\ 15266}#))
                                 #{tmp\ 15264}#))
                              (letrec ((#{f\ 15270}#
                                         (lambda (#{clause\ 15271}#
                                                  #{clauses\ 15272}#)
                                           (if (null? #{clauses\ 15272}#)
                                             ((lambda (#{tmp\ 15274}#)
                                                ((lambda (#{tmp\ 15275}#)
                                                   (if #{tmp\ 15275}#
                                                     (apply (lambda (#{e1\ 15278}#
                                                                     #{e2\ 15279}#)
                                                              (cons '#(syntax-object
                                                                       begin
                                                                       ((top)
                                                                        #(ribcage
                                                                          #(e1
                                                                            e2)
                                                                          #((top)
                                                                            (top))
                                                                          #("i15276"
                                                                            "i15277"))
                                                                        #(ribcage
                                                                          ()
                                                                          ()
                                                                          ())
                                                                        #(ribcage
                                                                          #(f
                                                                            clause
                                                                            clauses)
                                                                          #((top)
                                                                            (top)
                                                                            (top))
                                                                          #("i15267"
                                                                            "i15268"
                                                                            "i15269"))
                                                                        #(ribcage
                                                                          #(_
                                                                            e
                                                                            m1
                                                                            m2)
                                                                          #((top)
                                                                            (top)
                                                                            (top)
                                                                            (top))
                                                                          #("i15255"
                                                                            "i15256"
                                                                            "i15257"
                                                                            "i15258"))
                                                                        #(ribcage
                                                                          ()
                                                                          ()
                                                                          ())
                                                                        #(ribcage
                                                                          #(x)
                                                                          #((top))
                                                                          #("i15252")))
                                                                       (hygiene
                                                                         guile))
                                                                    (cons #{e1\ 15278}#
                                                                          #{e2\ 15279}#)))
                                                            #{tmp\ 15275}#)
                                                     ((lambda (#{tmp\ 15281}#)
                                                        (if #{tmp\ 15281}#
                                                          (apply (lambda (#{k\ 15285}#
                                                                          #{e1\ 15286}#
                                                                          #{e2\ 15287}#)
                                                                   (list '#(syntax-object
                                                                            if
                                                                            ((top)
                                                                             #(ribcage
                                                                               #(k
                                                                                 e1
                                                                                 e2)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i15282"
                                                                                 "i15283"
                                                                                 "i15284"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(f
                                                                                 clause
                                                                                 clauses)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i15267"
                                                                                 "i15268"
                                                                                 "i15269"))
                                                                             #(ribcage
                                                                               #(_
                                                                                 e
                                                                                 m1
                                                                                 m2)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i15255"
                                                                                 "i15256"
                                                                                 "i15257"
                                                                                 "i15258"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(x)
                                                                               #((top))
                                                                               #("i15252")))
                                                                            (hygiene
                                                                              guile))
                                                                         (list '#(syntax-object
                                                                                  memv
                                                                                  ((top)
                                                                                   #(ribcage
                                                                                     #(k
                                                                                       e1
                                                                                       e2)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i15282"
                                                                                       "i15283"
                                                                                       "i15284"))
                                                                                   #(ribcage
                                                                                     ()
                                                                                     ()
                                                                                     ())
                                                                                   #(ribcage
                                                                                     #(f
                                                                                       clause
                                                                                       clauses)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i15267"
                                                                                       "i15268"
                                                                                       "i15269"))
                                                                                   #(ribcage
                                                                                     #(_
                                                                                       e
                                                                                       m1
                                                                                       m2)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i15255"
                                                                                       "i15256"
                                                                                       "i15257"
                                                                                       "i15258"))
                                                                                   #(ribcage
                                                                                     ()
                                                                                     ()
                                                                                     ())
                                                                                   #(ribcage
                                                                                     #(x)
                                                                                     #((top))
                                                                                     #("i15252")))
                                                                                  (hygiene
                                                                                    guile))
                                                                               '#(syntax-object
                                                                                  t
                                                                                  ((top)
                                                                                   #(ribcage
                                                                                     #(k
                                                                                       e1
                                                                                       e2)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i15282"
                                                                                       "i15283"
                                                                                       "i15284"))
                                                                                   #(ribcage
                                                                                     ()
                                                                                     ()
                                                                                     ())
                                                                                   #(ribcage
                                                                                     #(f
                                                                                       clause
                                                                                       clauses)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i15267"
                                                                                       "i15268"
                                                                                       "i15269"))
                                                                                   #(ribcage
                                                                                     #(_
                                                                                       e
                                                                                       m1
                                                                                       m2)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i15255"
                                                                                       "i15256"
                                                                                       "i15257"
                                                                                       "i15258"))
                                                                                   #(ribcage
                                                                                     ()
                                                                                     ()
                                                                                     ())
                                                                                   #(ribcage
                                                                                     #(x)
                                                                                     #((top))
                                                                                     #("i15252")))
                                                                                  (hygiene
                                                                                    guile))
                                                                               (list '#(syntax-object
                                                                                        quote
                                                                                        ((top)
                                                                                         #(ribcage
                                                                                           #(k
                                                                                             e1
                                                                                             e2)
                                                                                           #((top)
                                                                                             (top)
                                                                                             (top))
                                                                                           #("i15282"
                                                                                             "i15283"
                                                                                             "i15284"))
                                                                                         #(ribcage
                                                                                           ()
                                                                                           ()
                                                                                           ())
                                                                                         #(ribcage
                                                                                           #(f
                                                                                             clause
                                                                                             clauses)
                                                                                           #((top)
                                                                                             (top)
                                                                                             (top))
                                                                                           #("i15267"
                                                                                             "i15268"
                                                                                             "i15269"))
                                                                                         #(ribcage
                                                                                           #(_
                                                                                             e
                                                                                             m1
                                                                                             m2)
                                                                                           #((top)
                                                                                             (top)
                                                                                             (top)
                                                                                             (top))
                                                                                           #("i15255"
                                                                                             "i15256"
                                                                                             "i15257"
                                                                                             "i15258"))
                                                                                         #(ribcage
                                                                                           ()
                                                                                           ()
                                                                                           ())
                                                                                         #(ribcage
                                                                                           #(x)
                                                                                           #((top))
                                                                                           #("i15252")))
                                                                                        (hygiene
                                                                                          guile))
                                                                                     #{k\ 15285}#))
                                                                         (cons '#(syntax-object
                                                                                  begin
                                                                                  ((top)
                                                                                   #(ribcage
                                                                                     #(k
                                                                                       e1
                                                                                       e2)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i15282"
                                                                                       "i15283"
                                                                                       "i15284"))
                                                                                   #(ribcage
                                                                                     ()
                                                                                     ()
                                                                                     ())
                                                                                   #(ribcage
                                                                                     #(f
                                                                                       clause
                                                                                       clauses)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i15267"
                                                                                       "i15268"
                                                                                       "i15269"))
                                                                                   #(ribcage
                                                                                     #(_
                                                                                       e
                                                                                       m1
                                                                                       m2)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i15255"
                                                                                       "i15256"
                                                                                       "i15257"
                                                                                       "i15258"))
                                                                                   #(ribcage
                                                                                     ()
                                                                                     ()
                                                                                     ())
                                                                                   #(ribcage
                                                                                     #(x)
                                                                                     #((top))
                                                                                     #("i15252")))
                                                                                  (hygiene
                                                                                    guile))
                                                                               (cons #{e1\ 15286}#
                                                                                     #{e2\ 15287}#))))
                                                                 #{tmp\ 15281}#)
                                                          ((lambda (#{_\ 15291}#)
                                                             (syntax-violation
                                                               'case
                                                               "bad clause"
                                                               #{x\ 15251}#
                                                               #{clause\ 15271}#))
                                                           #{tmp\ 15274}#)))
                                                      ($sc-dispatch
                                                        #{tmp\ 15274}#
                                                        '(each-any
                                                           any
                                                           .
                                                           each-any)))))
                                                 ($sc-dispatch
                                                   #{tmp\ 15274}#
                                                   '(#(free-id
                                                       #(syntax-object
                                                         else
                                                         ((top)
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(f clause clauses)
                                                            #((top)
                                                              (top)
                                                              (top))
                                                            #("i15267"
                                                              "i15268"
                                                              "i15269"))
                                                          #(ribcage
                                                            #(_ e m1 m2)
                                                            #((top)
                                                              (top)
                                                              (top)
                                                              (top))
                                                            #("i15255"
                                                              "i15256"
                                                              "i15257"
                                                              "i15258"))
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(x)
                                                            #((top))
                                                            #("i15252")))
                                                         (hygiene guile)))
                                                     any
                                                     .
                                                     each-any))))
                                              #{clause\ 15271}#)
                                             ((lambda (#{tmp\ 15293}#)
                                                ((lambda (#{rest\ 15295}#)
                                                   ((lambda (#{tmp\ 15296}#)
                                                      ((lambda (#{tmp\ 15297}#)
                                                         (if #{tmp\ 15297}#
                                                           (apply (lambda (#{k\ 15301}#
                                                                           #{e1\ 15302}#
                                                                           #{e2\ 15303}#)
                                                                    (list '#(syntax-object
                                                                             if
                                                                             ((top)
                                                                              #(ribcage
                                                                                #(k
                                                                                  e1
                                                                                  e2)
                                                                                #((top)
                                                                                  (top)
                                                                                  (top))
                                                                                #("i15298"
                                                                                  "i15299"
                                                                                  "i15300"))
                                                                              #(ribcage
                                                                                #(rest)
                                                                                #((top))
                                                                                #("i15294"))
                                                                              #(ribcage
                                                                                ()
                                                                                ()
                                                                                ())
                                                                              #(ribcage
                                                                                #(f
                                                                                  clause
                                                                                  clauses)
                                                                                #((top)
                                                                                  (top)
                                                                                  (top))
                                                                                #("i15267"
                                                                                  "i15268"
                                                                                  "i15269"))
                                                                              #(ribcage
                                                                                #(_
                                                                                  e
                                                                                  m1
                                                                                  m2)
                                                                                #((top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top))
                                                                                #("i15255"
                                                                                  "i15256"
                                                                                  "i15257"
                                                                                  "i15258"))
                                                                              #(ribcage
                                                                                ()
                                                                                ()
                                                                                ())
                                                                              #(ribcage
                                                                                #(x)
                                                                                #((top))
                                                                                #("i15252")))
                                                                             (hygiene
                                                                               guile))
                                                                          (list '#(syntax-object
                                                                                   memv
                                                                                   ((top)
                                                                                    #(ribcage
                                                                                      #(k
                                                                                        e1
                                                                                        e2)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i15298"
                                                                                        "i15299"
                                                                                        "i15300"))
                                                                                    #(ribcage
                                                                                      #(rest)
                                                                                      #((top))
                                                                                      #("i15294"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(f
                                                                                        clause
                                                                                        clauses)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i15267"
                                                                                        "i15268"
                                                                                        "i15269"))
                                                                                    #(ribcage
                                                                                      #(_
                                                                                        e
                                                                                        m1
                                                                                        m2)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i15255"
                                                                                        "i15256"
                                                                                        "i15257"
                                                                                        "i15258"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(x)
                                                                                      #((top))
                                                                                      #("i15252")))
                                                                                   (hygiene
                                                                                     guile))
                                                                                '#(syntax-object
                                                                                   t
                                                                                   ((top)
                                                                                    #(ribcage
                                                                                      #(k
                                                                                        e1
                                                                                        e2)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i15298"
                                                                                        "i15299"
                                                                                        "i15300"))
                                                                                    #(ribcage
                                                                                      #(rest)
                                                                                      #((top))
                                                                                      #("i15294"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(f
                                                                                        clause
                                                                                        clauses)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i15267"
                                                                                        "i15268"
                                                                                        "i15269"))
                                                                                    #(ribcage
                                                                                      #(_
                                                                                        e
                                                                                        m1
                                                                                        m2)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i15255"
                                                                                        "i15256"
                                                                                        "i15257"
                                                                                        "i15258"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(x)
                                                                                      #((top))
                                                                                      #("i15252")))
                                                                                   (hygiene
                                                                                     guile))
                                                                                (list '#(syntax-object
                                                                                         quote
                                                                                         ((top)
                                                                                          #(ribcage
                                                                                            #(k
                                                                                              e1
                                                                                              e2)
                                                                                            #((top)
                                                                                              (top)
                                                                                              (top))
                                                                                            #("i15298"
                                                                                              "i15299"
                                                                                              "i15300"))
                                                                                          #(ribcage
                                                                                            #(rest)
                                                                                            #((top))
                                                                                            #("i15294"))
                                                                                          #(ribcage
                                                                                            ()
                                                                                            ()
                                                                                            ())
                                                                                          #(ribcage
                                                                                            #(f
                                                                                              clause
                                                                                              clauses)
                                                                                            #((top)
                                                                                              (top)
                                                                                              (top))
                                                                                            #("i15267"
                                                                                              "i15268"
                                                                                              "i15269"))
                                                                                          #(ribcage
                                                                                            #(_
                                                                                              e
                                                                                              m1
                                                                                              m2)
                                                                                            #((top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top))
                                                                                            #("i15255"
                                                                                              "i15256"
                                                                                              "i15257"
                                                                                              "i15258"))
                                                                                          #(ribcage
                                                                                            ()
                                                                                            ()
                                                                                            ())
                                                                                          #(ribcage
                                                                                            #(x)
                                                                                            #((top))
                                                                                            #("i15252")))
                                                                                         (hygiene
                                                                                           guile))
                                                                                      #{k\ 15301}#))
                                                                          (cons '#(syntax-object
                                                                                   begin
                                                                                   ((top)
                                                                                    #(ribcage
                                                                                      #(k
                                                                                        e1
                                                                                        e2)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i15298"
                                                                                        "i15299"
                                                                                        "i15300"))
                                                                                    #(ribcage
                                                                                      #(rest)
                                                                                      #((top))
                                                                                      #("i15294"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(f
                                                                                        clause
                                                                                        clauses)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i15267"
                                                                                        "i15268"
                                                                                        "i15269"))
                                                                                    #(ribcage
                                                                                      #(_
                                                                                        e
                                                                                        m1
                                                                                        m2)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i15255"
                                                                                        "i15256"
                                                                                        "i15257"
                                                                                        "i15258"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(x)
                                                                                      #((top))
                                                                                      #("i15252")))
                                                                                   (hygiene
                                                                                     guile))
                                                                                (cons #{e1\ 15302}#
                                                                                      #{e2\ 15303}#))
                                                                          #{rest\ 15295}#))
                                                                  #{tmp\ 15297}#)
                                                           ((lambda (#{_\ 15307}#)
                                                              (syntax-violation
                                                                'case
                                                                "bad clause"
                                                                #{x\ 15251}#
                                                                #{clause\ 15271}#))
                                                            #{tmp\ 15296}#)))
                                                       ($sc-dispatch
                                                         #{tmp\ 15296}#
                                                         '(each-any
                                                            any
                                                            .
                                                            each-any))))
                                                    #{clause\ 15271}#))
                                                 #{tmp\ 15293}#))
                                              (#{f\ 15270}#
                                                (car #{clauses\ 15272}#)
                                                (cdr #{clauses\ 15272}#)))))))
                                (#{f\ 15270}# #{m1\ 15261}# #{m2\ 15262}#))))
                           #{tmp\ 15254}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 15253}#)))
                ($sc-dispatch
                  #{tmp\ 15253}#
                  '(any any any . each-any))))
             #{x\ 15251}#))
          (module-name (current-module)))))

(define identifier-syntax
  (make-syntax-transformer
    'identifier-syntax
    'macro
    (cons (lambda (#{x\ 15308}#)
            ((lambda (#{tmp\ 15310}#)
               ((lambda (#{tmp\ 15311}#)
                  (if #{tmp\ 15311}#
                    (apply (lambda (#{_\ 15314}# #{e\ 15315}#)
                             (list '#(syntax-object
                                      lambda
                                      ((top)
                                       #(ribcage
                                         #(_ e)
                                         #((top) (top))
                                         #("i15312" "i15313"))
                                       #(ribcage () () ())
                                       #(ribcage #(x) #((top)) #("i15309")))
                                      (hygiene guile))
                                   '(#(syntax-object
                                       x
                                       ((top)
                                        #(ribcage
                                          #(_ e)
                                          #((top) (top))
                                          #("i15312" "i15313"))
                                        #(ribcage () () ())
                                        #(ribcage #(x) #((top)) #("i15309")))
                                       (hygiene guile)))
                                   '#((#(syntax-object
                                         macro-type
                                         ((top)
                                          #(ribcage
                                            #(_ e)
                                            #((top) (top))
                                            #("i15312" "i15313"))
                                          #(ribcage () () ())
                                          #(ribcage #(x) #((top)) #("i15309")))
                                         (hygiene guile))
                                       .
                                       #(syntax-object
                                         identifier-syntax
                                         ((top)
                                          #(ribcage
                                            #(_ e)
                                            #((top) (top))
                                            #("i15312" "i15313"))
                                          #(ribcage () () ())
                                          #(ribcage #(x) #((top)) #("i15309")))
                                         (hygiene guile))))
                                   (list '#(syntax-object
                                            syntax-case
                                            ((top)
                                             #(ribcage
                                               #(_ e)
                                               #((top) (top))
                                               #("i15312" "i15313"))
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(x)
                                               #((top))
                                               #("i15309")))
                                            (hygiene guile))
                                         '#(syntax-object
                                            x
                                            ((top)
                                             #(ribcage
                                               #(_ e)
                                               #((top) (top))
                                               #("i15312" "i15313"))
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(x)
                                               #((top))
                                               #("i15309")))
                                            (hygiene guile))
                                         '()
                                         (list '#(syntax-object
                                                  id
                                                  ((top)
                                                   #(ribcage
                                                     #(_ e)
                                                     #((top) (top))
                                                     #("i15312" "i15313"))
                                                   #(ribcage () () ())
                                                   #(ribcage
                                                     #(x)
                                                     #((top))
                                                     #("i15309")))
                                                  (hygiene guile))
                                               '(#(syntax-object
                                                   identifier?
                                                   ((top)
                                                    #(ribcage
                                                      #(_ e)
                                                      #((top) (top))
                                                      #("i15312" "i15313"))
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(x)
                                                      #((top))
                                                      #("i15309")))
                                                   (hygiene guile))
                                                 (#(syntax-object
                                                    syntax
                                                    ((top)
                                                     #(ribcage
                                                       #(_ e)
                                                       #((top) (top))
                                                       #("i15312" "i15313"))
                                                     #(ribcage () () ())
                                                     #(ribcage
                                                       #(x)
                                                       #((top))
                                                       #("i15309")))
                                                    (hygiene guile))
                                                  #(syntax-object
                                                    id
                                                    ((top)
                                                     #(ribcage
                                                       #(_ e)
                                                       #((top) (top))
                                                       #("i15312" "i15313"))
                                                     #(ribcage () () ())
                                                     #(ribcage
                                                       #(x)
                                                       #((top))
                                                       #("i15309")))
                                                    (hygiene guile))))
                                               (list '#(syntax-object
                                                        syntax
                                                        ((top)
                                                         #(ribcage
                                                           #(_ e)
                                                           #((top) (top))
                                                           #("i15312"
                                                             "i15313"))
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(x)
                                                           #((top))
                                                           #("i15309")))
                                                        (hygiene guile))
                                                     #{e\ 15315}#))
                                         (list (cons #{_\ 15314}#
                                                     '(#(syntax-object
                                                         x
                                                         ((top)
                                                          #(ribcage
                                                            #(_ e)
                                                            #((top) (top))
                                                            #("i15312"
                                                              "i15313"))
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(x)
                                                            #((top))
                                                            #("i15309")))
                                                         (hygiene guile))
                                                       #(syntax-object
                                                         ...
                                                         ((top)
                                                          #(ribcage
                                                            #(_ e)
                                                            #((top) (top))
                                                            #("i15312"
                                                              "i15313"))
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(x)
                                                            #((top))
                                                            #("i15309")))
                                                         (hygiene guile))))
                                               (list '#(syntax-object
                                                        syntax
                                                        ((top)
                                                         #(ribcage
                                                           #(_ e)
                                                           #((top) (top))
                                                           #("i15312"
                                                             "i15313"))
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(x)
                                                           #((top))
                                                           #("i15309")))
                                                        (hygiene guile))
                                                     (cons #{e\ 15315}#
                                                           '(#(syntax-object
                                                               x
                                                               ((top)
                                                                #(ribcage
                                                                  #(_ e)
                                                                  #((top)
                                                                    (top))
                                                                  #("i15312"
                                                                    "i15313"))
                                                                #(ribcage
                                                                  ()
                                                                  ()
                                                                  ())
                                                                #(ribcage
                                                                  #(x)
                                                                  #((top))
                                                                  #("i15309")))
                                                               (hygiene guile))
                                                             #(syntax-object
                                                               ...
                                                               ((top)
                                                                #(ribcage
                                                                  #(_ e)
                                                                  #((top)
                                                                    (top))
                                                                  #("i15312"
                                                                    "i15313"))
                                                                #(ribcage
                                                                  ()
                                                                  ()
                                                                  ())
                                                                #(ribcage
                                                                  #(x)
                                                                  #((top))
                                                                  #("i15309")))
                                                               (hygiene
                                                                 guile)))))))))
                           #{tmp\ 15311}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 15310}#)))
                ($sc-dispatch #{tmp\ 15310}# (quote (any any)))))
             #{x\ 15308}#))
          (module-name (current-module)))))

(define define*
  (make-syntax-transformer
    'define*
    'macro
    (cons (lambda (#{x\ 15316}#)
            ((lambda (#{tmp\ 15318}#)
               ((lambda (#{tmp\ 15319}#)
                  (if #{tmp\ 15319}#
                    (apply (lambda (#{_\ 15325}#
                                    #{id\ 15326}#
                                    #{args\ 15327}#
                                    #{b0\ 15328}#
                                    #{b1\ 15329}#)
                             (list '#(syntax-object
                                      define
                                      ((top)
                                       #(ribcage
                                         #(_ id args b0 b1)
                                         #((top) (top) (top) (top) (top))
                                         #("i15320"
                                           "i15321"
                                           "i15322"
                                           "i15323"
                                           "i15324"))
                                       #(ribcage () () ())
                                       #(ribcage #(x) #((top)) #("i15317")))
                                      (hygiene guile))
                                   #{id\ 15326}#
                                   (cons '#(syntax-object
                                            lambda*
                                            ((top)
                                             #(ribcage
                                               #(_ id args b0 b1)
                                               #((top) (top) (top) (top) (top))
                                               #("i15320"
                                                 "i15321"
                                                 "i15322"
                                                 "i15323"
                                                 "i15324"))
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(x)
                                               #((top))
                                               #("i15317")))
                                            (hygiene guile))
                                         (cons #{args\ 15327}#
                                               (cons #{b0\ 15328}#
                                                     #{b1\ 15329}#)))))
                           #{tmp\ 15319}#)
                    ((lambda (#{tmp\ 15331}#)
                       (if (if #{tmp\ 15331}#
                             (apply (lambda (#{_\ 15335}#
                                             #{id\ 15336}#
                                             #{val\ 15337}#)
                                      (identifier?
                                        '#(syntax-object
                                           x
                                           ((top)
                                            #(ribcage
                                              #(_ id val)
                                              #((top) (top) (top))
                                              #("i15332" "i15333" "i15334"))
                                            #(ribcage () () ())
                                            #(ribcage
                                              #(x)
                                              #((top))
                                              #("i15317")))
                                           (hygiene guile))))
                                    #{tmp\ 15331}#)
                             #f)
                         (apply (lambda (#{_\ 15341}#
                                         #{id\ 15342}#
                                         #{val\ 15343}#)
                                  (list '#(syntax-object
                                           define
                                           ((top)
                                            #(ribcage
                                              #(_ id val)
                                              #((top) (top) (top))
                                              #("i15338" "i15339" "i15340"))
                                            #(ribcage () () ())
                                            #(ribcage
                                              #(x)
                                              #((top))
                                              #("i15317")))
                                           (hygiene guile))
                                        #{id\ 15342}#
                                        #{val\ 15343}#))
                                #{tmp\ 15331}#)
                         (syntax-violation
                           #f
                           "source expression failed to match any pattern"
                           #{tmp\ 15318}#)))
                     ($sc-dispatch
                       #{tmp\ 15318}#
                       '(any any any)))))
                ($sc-dispatch
                  #{tmp\ 15318}#
                  '(any (any . any) any . each-any))))
             #{x\ 15316}#))
          (module-name (current-module)))))

