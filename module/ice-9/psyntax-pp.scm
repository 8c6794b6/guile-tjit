(eval-when (compile) (set-current-module (resolve-module (quote (guile)))))
(if #f #f)

(letrec ((#{and-map*\ 8874}#
           (lambda (#{f\ 8936}# #{first\ 8937}# . #{rest\ 8938}#)
             (let ((#{t\ 8944}# (null? #{first\ 8937}#)))
               (if #{t\ 8944}#
                 #{t\ 8944}#
                 (if (null? #{rest\ 8938}#)
                   (letrec ((#{andmap\ 8948}#
                              (lambda (#{first\ 8949}#)
                                (let ((#{x\ 8952}# (car #{first\ 8949}#))
                                      (#{first\ 8953}# (cdr #{first\ 8949}#)))
                                  (if (null? #{first\ 8953}#)
                                    (#{f\ 8936}# #{x\ 8952}#)
                                    (if (#{f\ 8936}# #{x\ 8952}#)
                                      (#{andmap\ 8948}# #{first\ 8953}#)
                                      #f))))))
                     (#{andmap\ 8948}# #{first\ 8937}#))
                   (letrec ((#{andmap\ 8959}#
                              (lambda (#{first\ 8960}# #{rest\ 8961}#)
                                (let ((#{x\ 8966}# (car #{first\ 8960}#))
                                      (#{xr\ 8967}# (map car #{rest\ 8961}#))
                                      (#{first\ 8968}# (cdr #{first\ 8960}#))
                                      (#{rest\ 8969}#
                                        (map cdr #{rest\ 8961}#)))
                                  (if (null? #{first\ 8968}#)
                                    (apply #{f\ 8936}#
                                           (cons #{x\ 8966}# #{xr\ 8967}#))
                                    (if (apply #{f\ 8936}#
                                               (cons #{x\ 8966}# #{xr\ 8967}#))
                                      (#{andmap\ 8959}#
                                        #{first\ 8968}#
                                        #{rest\ 8969}#)
                                      #f))))))
                     (#{andmap\ 8959}# #{first\ 8937}# #{rest\ 8938}#))))))))
  (letrec ((#{lambda-var-list\ 9191}#
             (lambda (#{vars\ 9406}#)
               (letrec ((#{lvl\ 9412}#
                          (lambda (#{vars\ 9413}# #{ls\ 9414}# #{w\ 9415}#)
                            (if (pair? #{vars\ 9413}#)
                              (#{lvl\ 9412}#
                                (cdr #{vars\ 9413}#)
                                (cons (#{wrap\ 9145}#
                                        (car #{vars\ 9413}#)
                                        #{w\ 9415}#
                                        #f)
                                      #{ls\ 9414}#)
                                #{w\ 9415}#)
                              (if (#{id?\ 9076}# #{vars\ 9413}#)
                                (cons (#{wrap\ 9145}#
                                        #{vars\ 9413}#
                                        #{w\ 9415}#
                                        #f)
                                      #{ls\ 9414}#)
                                (if (null? #{vars\ 9413}#)
                                  #{ls\ 9414}#
                                  (if (#{syntax-object?\ 9040}# #{vars\ 9413}#)
                                    (#{lvl\ 9412}#
                                      (#{syntax-object-expression\ 9042}#
                                        #{vars\ 9413}#)
                                      #{ls\ 9414}#
                                      (#{join-wraps\ 9127}#
                                        #{w\ 9415}#
                                        (#{syntax-object-wrap\ 9044}#
                                          #{vars\ 9413}#)))
                                    (cons #{vars\ 9413}# #{ls\ 9414}#))))))))
                 (#{lvl\ 9412}#
                   #{vars\ 9406}#
                   '()
                   '(())))))
           (#{gen-var\ 9189}#
             (lambda (#{id\ 9426}#)
               (let ((#{id\ 9429}#
                       (if (#{syntax-object?\ 9040}# #{id\ 9426}#)
                         (#{syntax-object-expression\ 9042}# #{id\ 9426}#)
                         #{id\ 9426}#)))
                 (gensym
                   (string-append (symbol->string #{id\ 9429}#) " ")))))
           (#{strip\ 9187}#
             (lambda (#{x\ 9431}# #{w\ 9432}#)
               (if (memq 'top
                         (#{wrap-marks\ 9083}# #{w\ 9432}#))
                 #{x\ 9431}#
                 (letrec ((#{f\ 9438}#
                            (lambda (#{x\ 9439}#)
                              (if (#{syntax-object?\ 9040}# #{x\ 9439}#)
                                (#{strip\ 9187}#
                                  (#{syntax-object-expression\ 9042}#
                                    #{x\ 9439}#)
                                  (#{syntax-object-wrap\ 9044}# #{x\ 9439}#))
                                (if (pair? #{x\ 9439}#)
                                  (let ((#{a\ 9446}#
                                          (#{f\ 9438}# (car #{x\ 9439}#)))
                                        (#{d\ 9447}#
                                          (#{f\ 9438}# (cdr #{x\ 9439}#))))
                                    (if (if (eq? #{a\ 9446}# (car #{x\ 9439}#))
                                          (eq? #{d\ 9447}# (cdr #{x\ 9439}#))
                                          #f)
                                      #{x\ 9439}#
                                      (cons #{a\ 9446}# #{d\ 9447}#)))
                                  (if (vector? #{x\ 9439}#)
                                    (let ((#{old\ 9453}#
                                            (vector->list #{x\ 9439}#)))
                                      (let ((#{new\ 9455}#
                                              (map #{f\ 9438}# #{old\ 9453}#)))
                                        (if (#{and-map*\ 8874}#
                                              eq?
                                              #{old\ 9453}#
                                              #{new\ 9455}#)
                                          #{x\ 9439}#
                                          (list->vector #{new\ 9455}#))))
                                    #{x\ 9439}#))))))
                   (#{f\ 9438}# #{x\ 9431}#)))))
           (#{chi-lambda-case\ 9185}#
             (lambda (#{e\ 9457}#
                      #{r\ 9458}#
                      #{w\ 9459}#
                      #{s\ 9460}#
                      #{mod\ 9461}#
                      #{get-formals\ 9462}#
                      #{clauses\ 9463}#)
               (letrec ((#{expand-body\ 9478}#
                          (lambda (#{req\ 9479}#
                                   #{opt\ 9480}#
                                   #{rest\ 9481}#
                                   #{kw\ 9482}#
                                   #{body\ 9483}#
                                   #{vars\ 9484}#
                                   #{r*\ 9485}#
                                   #{w*\ 9486}#
                                   #{inits\ 9487}#
                                   #{meta\ 9488}#)
                            ((lambda (#{tmp\ 9499}#)
                               ((lambda (#{tmp\ 9500}#)
                                  (if (if #{tmp\ 9500}#
                                        (apply (lambda (#{docstring\ 9504}#
                                                        #{e1\ 9505}#
                                                        #{e2\ 9506}#)
                                                 (string?
                                                   (syntax->datum
                                                     #{docstring\ 9504}#)))
                                               #{tmp\ 9500}#)
                                        #f)
                                    (apply (lambda (#{docstring\ 9510}#
                                                    #{e1\ 9511}#
                                                    #{e2\ 9512}#)
                                             (#{expand-body\ 9478}#
                                               #{req\ 9479}#
                                               #{opt\ 9480}#
                                               #{rest\ 9481}#
                                               #{kw\ 9482}#
                                               (cons #{e1\ 9511}# #{e2\ 9512}#)
                                               #{vars\ 9484}#
                                               #{r*\ 9485}#
                                               #{w*\ 9486}#
                                               #{inits\ 9487}#
                                               (append
                                                 #{meta\ 9488}#
                                                 (list (cons 'documentation
                                                             (syntax->datum
                                                               #{docstring\ 9510}#))))))
                                           #{tmp\ 9500}#)
                                    ((lambda (#{tmp\ 9515}#)
                                       (if #{tmp\ 9515}#
                                         (apply (lambda (#{k\ 9520}#
                                                         #{v\ 9521}#
                                                         #{e1\ 9522}#
                                                         #{e2\ 9523}#)
                                                  (#{expand-body\ 9478}#
                                                    #{req\ 9479}#
                                                    #{opt\ 9480}#
                                                    #{rest\ 9481}#
                                                    #{kw\ 9482}#
                                                    (cons #{e1\ 9522}#
                                                          #{e2\ 9523}#)
                                                    #{vars\ 9484}#
                                                    #{r*\ 9485}#
                                                    #{w*\ 9486}#
                                                    #{inits\ 9487}#
                                                    (append
                                                      #{meta\ 9488}#
                                                      (syntax->datum
                                                        (map cons
                                                             #{k\ 9520}#
                                                             #{v\ 9521}#)))))
                                                #{tmp\ 9515}#)
                                         ((lambda (#{tmp\ 9527}#)
                                            (if #{tmp\ 9527}#
                                              (apply (lambda (#{e1\ 9530}#
                                                              #{e2\ 9531}#)
                                                       (values
                                                         #{meta\ 9488}#
                                                         #{req\ 9479}#
                                                         #{opt\ 9480}#
                                                         #{rest\ 9481}#
                                                         #{kw\ 9482}#
                                                         #{inits\ 9487}#
                                                         #{vars\ 9484}#
                                                         (#{chi-body\ 9169}#
                                                           (cons #{e1\ 9530}#
                                                                 #{e2\ 9531}#)
                                                           (#{source-wrap\ 9147}#
                                                             #{e\ 9457}#
                                                             #{w\ 9459}#
                                                             #{s\ 9460}#
                                                             #{mod\ 9461}#)
                                                           #{r*\ 9485}#
                                                           #{w*\ 9486}#
                                                           #{mod\ 9461}#)))
                                                     #{tmp\ 9527}#)
                                              (syntax-violation
                                                #f
                                                "source expression failed to match any pattern"
                                                #{tmp\ 9499}#)))
                                          ($sc-dispatch
                                            #{tmp\ 9499}#
                                            '(any . each-any)))))
                                     ($sc-dispatch
                                       #{tmp\ 9499}#
                                       '(#(vector #(each (any . any)))
                                         any
                                         .
                                         each-any)))))
                                ($sc-dispatch
                                  #{tmp\ 9499}#
                                  '(any any . each-any))))
                             #{body\ 9483}#)))
                        (#{expand-kw\ 9476}#
                          (lambda (#{req\ 9533}#
                                   #{opt\ 9534}#
                                   #{rest\ 9535}#
                                   #{kw\ 9536}#
                                   #{body\ 9537}#
                                   #{vars\ 9538}#
                                   #{r*\ 9539}#
                                   #{w*\ 9540}#
                                   #{aok\ 9541}#
                                   #{out\ 9542}#
                                   #{inits\ 9543}#)
                            (if (pair? #{kw\ 9536}#)
                              ((lambda (#{tmp\ 9557}#)
                                 ((lambda (#{tmp\ 9558}#)
                                    (if #{tmp\ 9558}#
                                      (apply (lambda (#{k\ 9562}#
                                                      #{id\ 9563}#
                                                      #{i\ 9564}#)
                                               (let ((#{v\ 9567}#
                                                       (#{gen-var\ 9189}#
                                                         #{id\ 9563}#)))
                                                 (let ((#{l\ 9569}#
                                                         (#{gen-labels\ 9094}#
                                                           (list #{v\ 9567}#))))
                                                   (let ((#{r**\ 9571}#
                                                           (#{extend-var-env\ 9066}#
                                                             #{l\ 9569}#
                                                             (list #{v\ 9567}#)
                                                             #{r*\ 9539}#)))
                                                     (let ((#{w**\ 9573}#
                                                             (#{make-binding-wrap\ 9123}#
                                                               (list #{id\ 9563}#)
                                                               #{l\ 9569}#
                                                               #{w*\ 9540}#)))
                                                       (#{expand-kw\ 9476}#
                                                         #{req\ 9533}#
                                                         #{opt\ 9534}#
                                                         #{rest\ 9535}#
                                                         (cdr #{kw\ 9536}#)
                                                         #{body\ 9537}#
                                                         (cons #{v\ 9567}#
                                                               #{vars\ 9538}#)
                                                         #{r**\ 9571}#
                                                         #{w**\ 9573}#
                                                         #{aok\ 9541}#
                                                         (cons (list (syntax->datum
                                                                       #{k\ 9562}#)
                                                                     (syntax->datum
                                                                       #{id\ 9563}#)
                                                                     #{v\ 9567}#)
                                                               #{out\ 9542}#)
                                                         (cons (#{chi\ 9161}#
                                                                 #{i\ 9564}#
                                                                 #{r*\ 9539}#
                                                                 #{w*\ 9540}#
                                                                 #{mod\ 9461}#)
                                                               #{inits\ 9543}#)))))))
                                             #{tmp\ 9558}#)
                                      (syntax-violation
                                        #f
                                        "source expression failed to match any pattern"
                                        #{tmp\ 9557}#)))
                                  ($sc-dispatch
                                    #{tmp\ 9557}#
                                    '(any any any))))
                               (car #{kw\ 9536}#))
                              (#{expand-body\ 9478}#
                                #{req\ 9533}#
                                #{opt\ 9534}#
                                #{rest\ 9535}#
                                (if (let ((#{t\ 9577}# #{aok\ 9541}#))
                                      (if #{t\ 9577}#
                                        #{t\ 9577}#
                                        (pair? #{out\ 9542}#)))
                                  (cons #{aok\ 9541}# (reverse #{out\ 9542}#))
                                  #f)
                                #{body\ 9537}#
                                (reverse #{vars\ 9538}#)
                                #{r*\ 9539}#
                                #{w*\ 9540}#
                                (reverse #{inits\ 9543}#)
                                '()))))
                        (#{expand-opt\ 9474}#
                          (lambda (#{req\ 9579}#
                                   #{opt\ 9580}#
                                   #{rest\ 9581}#
                                   #{kw\ 9582}#
                                   #{body\ 9583}#
                                   #{vars\ 9584}#
                                   #{r*\ 9585}#
                                   #{w*\ 9586}#
                                   #{out\ 9587}#
                                   #{inits\ 9588}#)
                            (if (pair? #{opt\ 9580}#)
                              ((lambda (#{tmp\ 9601}#)
                                 ((lambda (#{tmp\ 9602}#)
                                    (if #{tmp\ 9602}#
                                      (apply (lambda (#{id\ 9605}# #{i\ 9606}#)
                                               (let ((#{v\ 9609}#
                                                       (#{gen-var\ 9189}#
                                                         #{id\ 9605}#)))
                                                 (let ((#{l\ 9611}#
                                                         (#{gen-labels\ 9094}#
                                                           (list #{v\ 9609}#))))
                                                   (let ((#{r**\ 9613}#
                                                           (#{extend-var-env\ 9066}#
                                                             #{l\ 9611}#
                                                             (list #{v\ 9609}#)
                                                             #{r*\ 9585}#)))
                                                     (let ((#{w**\ 9615}#
                                                             (#{make-binding-wrap\ 9123}#
                                                               (list #{id\ 9605}#)
                                                               #{l\ 9611}#
                                                               #{w*\ 9586}#)))
                                                       (#{expand-opt\ 9474}#
                                                         #{req\ 9579}#
                                                         (cdr #{opt\ 9580}#)
                                                         #{rest\ 9581}#
                                                         #{kw\ 9582}#
                                                         #{body\ 9583}#
                                                         (cons #{v\ 9609}#
                                                               #{vars\ 9584}#)
                                                         #{r**\ 9613}#
                                                         #{w**\ 9615}#
                                                         (cons (syntax->datum
                                                                 #{id\ 9605}#)
                                                               #{out\ 9587}#)
                                                         (cons (#{chi\ 9161}#
                                                                 #{i\ 9606}#
                                                                 #{r*\ 9585}#
                                                                 #{w*\ 9586}#
                                                                 #{mod\ 9461}#)
                                                               #{inits\ 9588}#)))))))
                                             #{tmp\ 9602}#)
                                      (syntax-violation
                                        #f
                                        "source expression failed to match any pattern"
                                        #{tmp\ 9601}#)))
                                  ($sc-dispatch
                                    #{tmp\ 9601}#
                                    '(any any))))
                               (car #{opt\ 9580}#))
                              (if #{rest\ 9581}#
                                (let ((#{v\ 9620}#
                                        (#{gen-var\ 9189}# #{rest\ 9581}#)))
                                  (let ((#{l\ 9622}#
                                          (#{gen-labels\ 9094}#
                                            (list #{v\ 9620}#))))
                                    (let ((#{r*\ 9624}#
                                            (#{extend-var-env\ 9066}#
                                              #{l\ 9622}#
                                              (list #{v\ 9620}#)
                                              #{r*\ 9585}#)))
                                      (let ((#{w*\ 9626}#
                                              (#{make-binding-wrap\ 9123}#
                                                (list #{rest\ 9581}#)
                                                #{l\ 9622}#
                                                #{w*\ 9586}#)))
                                        (#{expand-kw\ 9476}#
                                          #{req\ 9579}#
                                          (if (pair? #{out\ 9587}#)
                                            (reverse #{out\ 9587}#)
                                            #f)
                                          (syntax->datum #{rest\ 9581}#)
                                          (if (pair? #{kw\ 9582}#)
                                            (cdr #{kw\ 9582}#)
                                            #{kw\ 9582}#)
                                          #{body\ 9583}#
                                          (cons #{v\ 9620}# #{vars\ 9584}#)
                                          #{r*\ 9624}#
                                          #{w*\ 9626}#
                                          (if (pair? #{kw\ 9582}#)
                                            (car #{kw\ 9582}#)
                                            #f)
                                          '()
                                          #{inits\ 9588}#)))))
                                (#{expand-kw\ 9476}#
                                  #{req\ 9579}#
                                  (if (pair? #{out\ 9587}#)
                                    (reverse #{out\ 9587}#)
                                    #f)
                                  #f
                                  (if (pair? #{kw\ 9582}#)
                                    (cdr #{kw\ 9582}#)
                                    #{kw\ 9582}#)
                                  #{body\ 9583}#
                                  #{vars\ 9584}#
                                  #{r*\ 9585}#
                                  #{w*\ 9586}#
                                  (if (pair? #{kw\ 9582}#)
                                    (car #{kw\ 9582}#)
                                    #f)
                                  '()
                                  #{inits\ 9588}#)))))
                        (#{expand-req\ 9472}#
                          (lambda (#{req\ 9628}#
                                   #{opt\ 9629}#
                                   #{rest\ 9630}#
                                   #{kw\ 9631}#
                                   #{body\ 9632}#)
                            (let ((#{vars\ 9640}#
                                    (map #{gen-var\ 9189}# #{req\ 9628}#))
                                  (#{labels\ 9641}#
                                    (#{gen-labels\ 9094}# #{req\ 9628}#)))
                              (let ((#{r*\ 9644}#
                                      (#{extend-var-env\ 9066}#
                                        #{labels\ 9641}#
                                        #{vars\ 9640}#
                                        #{r\ 9458}#))
                                    (#{w*\ 9645}#
                                      (#{make-binding-wrap\ 9123}#
                                        #{req\ 9628}#
                                        #{labels\ 9641}#
                                        #{w\ 9459}#)))
                                (#{expand-opt\ 9474}#
                                  (map syntax->datum #{req\ 9628}#)
                                  #{opt\ 9629}#
                                  #{rest\ 9630}#
                                  #{kw\ 9631}#
                                  #{body\ 9632}#
                                  (reverse #{vars\ 9640}#)
                                  #{r*\ 9644}#
                                  #{w*\ 9645}#
                                  '()
                                  '()))))))
                 ((lambda (#{tmp\ 9646}#)
                    ((lambda (#{tmp\ 9647}#)
                       (if #{tmp\ 9647}#
                         (apply (lambda () (values (quote ()) #f))
                                #{tmp\ 9647}#)
                         ((lambda (#{tmp\ 9648}#)
                            (if #{tmp\ 9648}#
                              (apply (lambda (#{args\ 9655}#
                                              #{e1\ 9656}#
                                              #{e2\ 9657}#
                                              #{args*\ 9658}#
                                              #{e1*\ 9659}#
                                              #{e2*\ 9660}#)
                                       (call-with-values
                                         (lambda ()
                                           (#{get-formals\ 9462}#
                                             #{args\ 9655}#))
                                         (lambda (#{req\ 9661}#
                                                  #{opt\ 9662}#
                                                  #{rest\ 9663}#
                                                  #{kw\ 9664}#)
                                           (call-with-values
                                             (lambda ()
                                               (#{expand-req\ 9472}#
                                                 #{req\ 9661}#
                                                 #{opt\ 9662}#
                                                 #{rest\ 9663}#
                                                 #{kw\ 9664}#
                                                 (cons #{e1\ 9656}#
                                                       #{e2\ 9657}#)))
                                             (lambda (#{meta\ 9670}#
                                                      #{req\ 9671}#
                                                      #{opt\ 9672}#
                                                      #{rest\ 9673}#
                                                      #{kw\ 9674}#
                                                      #{inits\ 9675}#
                                                      #{vars\ 9676}#
                                                      #{body\ 9677}#)
                                               (call-with-values
                                                 (lambda ()
                                                   (#{chi-lambda-case\ 9185}#
                                                     #{e\ 9457}#
                                                     #{r\ 9458}#
                                                     #{w\ 9459}#
                                                     #{s\ 9460}#
                                                     #{mod\ 9461}#
                                                     #{get-formals\ 9462}#
                                                     (map (lambda (#{tmp\ 9688}#
                                                                   #{tmp\ 9687}#
                                                                   #{tmp\ 9686}#)
                                                            (cons #{tmp\ 9686}#
                                                                  (cons #{tmp\ 9687}#
                                                                        #{tmp\ 9688}#)))
                                                          #{e2*\ 9660}#
                                                          #{e1*\ 9659}#
                                                          #{args*\ 9658}#)))
                                                 (lambda (#{meta*\ 9690}#
                                                          #{else*\ 9691}#)
                                                   (values
                                                     (append
                                                       #{meta\ 9670}#
                                                       #{meta*\ 9690}#)
                                                     (#{build-lambda-case\ 9022}#
                                                       #{s\ 9460}#
                                                       #{req\ 9671}#
                                                       #{opt\ 9672}#
                                                       #{rest\ 9673}#
                                                       #{kw\ 9674}#
                                                       #{inits\ 9675}#
                                                       #{vars\ 9676}#
                                                       #{body\ 9677}#
                                                       #{else*\ 9691}#)))))))))
                                     #{tmp\ 9648}#)
                              (syntax-violation
                                #f
                                "source expression failed to match any pattern"
                                #{tmp\ 9646}#)))
                          ($sc-dispatch
                            #{tmp\ 9646}#
                            '((any any . each-any)
                              .
                              #(each (any any . each-any)))))))
                     ($sc-dispatch #{tmp\ 9646}# (quote ()))))
                  #{clauses\ 9463}#))))
           (#{lambda*-formals\ 9183}#
             (lambda (#{orig-args\ 9694}#)
               (letrec ((#{check\ 9705}#
                          (lambda (#{req\ 9706}#
                                   #{opt\ 9707}#
                                   #{rest\ 9708}#
                                   #{kw\ 9709}#)
                            (if (#{distinct-bound-ids?\ 9141}#
                                  (append
                                    #{req\ 9706}#
                                    (map car #{opt\ 9707}#)
                                    (if #{rest\ 9708}#
                                      (list #{rest\ 9708}#)
                                      '())
                                    (if (pair? #{kw\ 9709}#)
                                      (map cadr (cdr #{kw\ 9709}#))
                                      '())))
                              (values
                                #{req\ 9706}#
                                #{opt\ 9707}#
                                #{rest\ 9708}#
                                #{kw\ 9709}#)
                              (syntax-violation
                                'lambda*
                                "duplicate identifier in argument list"
                                #{orig-args\ 9694}#))))
                        (#{rest\ 9703}#
                          (lambda (#{args\ 9717}#
                                   #{req\ 9718}#
                                   #{opt\ 9719}#
                                   #{kw\ 9720}#)
                            ((lambda (#{tmp\ 9725}#)
                               ((lambda (#{tmp\ 9726}#)
                                  (if (if #{tmp\ 9726}#
                                        (apply (lambda (#{r\ 9728}#)
                                                 (#{id?\ 9076}# #{r\ 9728}#))
                                               #{tmp\ 9726}#)
                                        #f)
                                    (apply (lambda (#{r\ 9730}#)
                                             (#{check\ 9705}#
                                               #{req\ 9718}#
                                               #{opt\ 9719}#
                                               #{r\ 9730}#
                                               #{kw\ 9720}#))
                                           #{tmp\ 9726}#)
                                    ((lambda (#{else\ 9732}#)
                                       (syntax-violation
                                         'lambda*
                                         "invalid rest argument"
                                         #{orig-args\ 9694}#
                                         #{args\ 9717}#))
                                     #{tmp\ 9725}#)))
                                (list #{tmp\ 9725}#)))
                             #{args\ 9717}#)))
                        (#{key\ 9701}#
                          (lambda (#{args\ 9733}#
                                   #{req\ 9734}#
                                   #{opt\ 9735}#
                                   #{rkey\ 9736}#)
                            ((lambda (#{tmp\ 9741}#)
                               ((lambda (#{tmp\ 9742}#)
                                  (if #{tmp\ 9742}#
                                    (apply (lambda ()
                                             (#{check\ 9705}#
                                               #{req\ 9734}#
                                               #{opt\ 9735}#
                                               #f
                                               (cons #f
                                                     (reverse
                                                       #{rkey\ 9736}#))))
                                           #{tmp\ 9742}#)
                                    ((lambda (#{tmp\ 9743}#)
                                       (if (if #{tmp\ 9743}#
                                             (apply (lambda (#{a\ 9746}#
                                                             #{b\ 9747}#)
                                                      (#{id?\ 9076}#
                                                        #{a\ 9746}#))
                                                    #{tmp\ 9743}#)
                                             #f)
                                         (apply (lambda (#{a\ 9750}#
                                                         #{b\ 9751}#)
                                                  ((lambda (#{tmp\ 9753}#)
                                                     ((lambda (#{k\ 9755}#)
                                                        (#{key\ 9701}#
                                                          #{b\ 9751}#
                                                          #{req\ 9734}#
                                                          #{opt\ 9735}#
                                                          (cons (cons #{k\ 9755}#
                                                                      (cons #{a\ 9750}#
                                                                            '(#(syntax-object
                                                                                #f
                                                                                ((top)
                                                                                 #(ribcage
                                                                                   #(k)
                                                                                   #((top))
                                                                                   #("i9754"))
                                                                                 #(ribcage
                                                                                   #(a
                                                                                     b)
                                                                                   #((top)
                                                                                     (top))
                                                                                   #("i9748"
                                                                                     "i9749"))
                                                                                 #(ribcage
                                                                                   ()
                                                                                   ()
                                                                                   ())
                                                                                 #(ribcage
                                                                                   #(args
                                                                                     req
                                                                                     opt
                                                                                     rkey)
                                                                                   #((top)
                                                                                     (top)
                                                                                     (top)
                                                                                     (top))
                                                                                   #("i9737"
                                                                                     "i9738"
                                                                                     "i9739"
                                                                                     "i9740"))
                                                                                 #(ribcage
                                                                                   (check rest
                                                                                          key
                                                                                          opt
                                                                                          req)
                                                                                   ((top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top))
                                                                                   ("i9704"
                                                                                    "i9702"
                                                                                    "i9700"
                                                                                    "i9698"
                                                                                    "i9696"))
                                                                                 #(ribcage
                                                                                   #(orig-args)
                                                                                   #((top))
                                                                                   #("i9695"))
                                                                                 #(ribcage
                                                                                   (lambda-var-list
                                                                                     gen-var
                                                                                     strip
                                                                                     chi-lambda-case
                                                                                     lambda*-formals
                                                                                     chi-simple-lambda
                                                                                     lambda-formals
                                                                                     ellipsis?
                                                                                     chi-void
                                                                                     eval-local-transformer
                                                                                     chi-local-syntax
                                                                                     chi-body
                                                                                     chi-macro
                                                                                     chi-application
                                                                                     chi-expr
                                                                                     chi
                                                                                     chi-top
                                                                                     syntax-type
                                                                                     chi-when-list
                                                                                     chi-install-global
                                                                                     chi-top-sequence
                                                                                     chi-sequence
                                                                                     source-wrap
                                                                                     wrap
                                                                                     bound-id-member?
                                                                                     distinct-bound-ids?
                                                                                     valid-bound-ids?
                                                                                     bound-id=?
                                                                                     free-id=?
                                                                                     id-var-name
                                                                                     same-marks?
                                                                                     join-marks
                                                                                     join-wraps
                                                                                     smart-append
                                                                                     make-binding-wrap
                                                                                     extend-ribcage!
                                                                                     make-empty-ribcage
                                                                                     new-mark
                                                                                     anti-mark
                                                                                     the-anti-mark
                                                                                     top-marked?
                                                                                     top-wrap
                                                                                     empty-wrap
                                                                                     set-ribcage-labels!
                                                                                     set-ribcage-marks!
                                                                                     set-ribcage-symnames!
                                                                                     ribcage-labels
                                                                                     ribcage-marks
                                                                                     ribcage-symnames
                                                                                     ribcage?
                                                                                     make-ribcage
                                                                                     gen-labels
                                                                                     gen-label
                                                                                     make-rename
                                                                                     rename-marks
                                                                                     rename-new
                                                                                     rename-old
                                                                                     subst-rename?
                                                                                     wrap-subst
                                                                                     wrap-marks
                                                                                     make-wrap
                                                                                     id-sym-name&marks
                                                                                     id-sym-name
                                                                                     id?
                                                                                     nonsymbol-id?
                                                                                     global-extend
                                                                                     lookup
                                                                                     macros-only-env
                                                                                     extend-var-env
                                                                                     extend-env
                                                                                     null-env
                                                                                     binding-value
                                                                                     binding-type
                                                                                     make-binding
                                                                                     arg-check
                                                                                     source-annotation
                                                                                     no-source
                                                                                     set-syntax-object-module!
                                                                                     set-syntax-object-wrap!
                                                                                     set-syntax-object-expression!
                                                                                     syntax-object-module
                                                                                     syntax-object-wrap
                                                                                     syntax-object-expression
                                                                                     syntax-object?
                                                                                     make-syntax-object
                                                                                     build-lexical-var
                                                                                     build-letrec
                                                                                     build-named-let
                                                                                     build-let
                                                                                     build-sequence
                                                                                     build-data
                                                                                     build-primref
                                                                                     build-lambda-case
                                                                                     build-case-lambda
                                                                                     build-simple-lambda
                                                                                     build-global-definition
                                                                                     maybe-name-value!
                                                                                     build-global-assignment
                                                                                     build-global-reference
                                                                                     analyze-variable
                                                                                     build-lexical-assignment
                                                                                     build-lexical-reference
                                                                                     build-dynlet
                                                                                     build-conditional
                                                                                     build-application
                                                                                     build-void
                                                                                     decorate-source
                                                                                     get-global-definition-hook
                                                                                     put-global-definition-hook
                                                                                     gensym-hook
                                                                                     local-eval-hook
                                                                                     top-level-eval-hook
                                                                                     fx<
                                                                                     fx=
                                                                                     fx-
                                                                                     fx+
                                                                                     *mode*
                                                                                     noexpand)
                                                                                   ((top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top))
                                                                                   ("i9190"
                                                                                    "i9188"
                                                                                    "i9186"
                                                                                    "i9184"
                                                                                    "i9182"
                                                                                    "i9180"
                                                                                    "i9178"
                                                                                    "i9176"
                                                                                    "i9174"
                                                                                    "i9172"
                                                                                    "i9170"
                                                                                    "i9168"
                                                                                    "i9166"
                                                                                    "i9164"
                                                                                    "i9162"
                                                                                    "i9160"
                                                                                    "i9158"
                                                                                    "i9156"
                                                                                    "i9154"
                                                                                    "i9152"
                                                                                    "i9150"
                                                                                    "i9148"
                                                                                    "i9146"
                                                                                    "i9144"
                                                                                    "i9142"
                                                                                    "i9140"
                                                                                    "i9138"
                                                                                    "i9136"
                                                                                    "i9134"
                                                                                    "i9132"
                                                                                    "i9130"
                                                                                    "i9128"
                                                                                    "i9126"
                                                                                    "i9124"
                                                                                    "i9122"
                                                                                    "i9120"
                                                                                    "i9119"
                                                                                    "i9118"
                                                                                    "i9116"
                                                                                    "i9115"
                                                                                    "i9114"
                                                                                    "i9113"
                                                                                    "i9112"
                                                                                    "i9110"
                                                                                    "i9108"
                                                                                    "i9106"
                                                                                    "i9104"
                                                                                    "i9102"
                                                                                    "i9100"
                                                                                    "i9098"
                                                                                    "i9096"
                                                                                    "i9093"
                                                                                    "i9091"
                                                                                    "i9090"
                                                                                    "i9089"
                                                                                    "i9088"
                                                                                    "i9087"
                                                                                    "i9086"
                                                                                    "i9084"
                                                                                    "i9082"
                                                                                    "i9080"
                                                                                    "i9078"
                                                                                    "i9077"
                                                                                    "i9075"
                                                                                    "i9073"
                                                                                    "i9071"
                                                                                    "i9069"
                                                                                    "i9067"
                                                                                    "i9065"
                                                                                    "i9063"
                                                                                    "i9062"
                                                                                    "i9060"
                                                                                    "i9058"
                                                                                    "i9057"
                                                                                    "i9056"
                                                                                    "i9054"
                                                                                    "i9053"
                                                                                    "i9051"
                                                                                    "i9049"
                                                                                    "i9047"
                                                                                    "i9045"
                                                                                    "i9043"
                                                                                    "i9041"
                                                                                    "i9039"
                                                                                    "i9037"
                                                                                    "i9035"
                                                                                    "i9033"
                                                                                    "i9031"
                                                                                    "i9029"
                                                                                    "i9027"
                                                                                    "i9025"
                                                                                    "i9023"
                                                                                    "i9021"
                                                                                    "i9019"
                                                                                    "i9017"
                                                                                    "i9015"
                                                                                    "i9013"
                                                                                    "i9011"
                                                                                    "i9009"
                                                                                    "i9007"
                                                                                    "i9005"
                                                                                    "i9003"
                                                                                    "i9001"
                                                                                    "i8999"
                                                                                    "i8997"
                                                                                    "i8995"
                                                                                    "i8993"
                                                                                    "i8991"
                                                                                    "i8989"
                                                                                    "i8988"
                                                                                    "i8986"
                                                                                    "i8984"
                                                                                    "i8982"
                                                                                    "i8980"
                                                                                    "i8978"
                                                                                    "i8976"
                                                                                    "i8974"
                                                                                    "i8972"))
                                                                                 #(ribcage
                                                                                   (define-structure
                                                                                     and-map*)
                                                                                   ((top)
                                                                                    (top))
                                                                                   ("i8875"
                                                                                    "i8873")))
                                                                                (hygiene
                                                                                  guile)))))
                                                                #{rkey\ 9736}#)))
                                                      #{tmp\ 9753}#))
                                                   (symbol->keyword
                                                     (syntax->datum
                                                       #{a\ 9750}#))))
                                                #{tmp\ 9743}#)
                                         ((lambda (#{tmp\ 9756}#)
                                            (if (if #{tmp\ 9756}#
                                                  (apply (lambda (#{a\ 9760}#
                                                                  #{init\ 9761}#
                                                                  #{b\ 9762}#)
                                                           (#{id?\ 9076}#
                                                             #{a\ 9760}#))
                                                         #{tmp\ 9756}#)
                                                  #f)
                                              (apply (lambda (#{a\ 9766}#
                                                              #{init\ 9767}#
                                                              #{b\ 9768}#)
                                                       ((lambda (#{tmp\ 9770}#)
                                                          ((lambda (#{k\ 9772}#)
                                                             (#{key\ 9701}#
                                                               #{b\ 9768}#
                                                               #{req\ 9734}#
                                                               #{opt\ 9735}#
                                                               (cons (list #{k\ 9772}#
                                                                           #{a\ 9766}#
                                                                           #{init\ 9767}#)
                                                                     #{rkey\ 9736}#)))
                                                           #{tmp\ 9770}#))
                                                        (symbol->keyword
                                                          (syntax->datum
                                                            #{a\ 9766}#))))
                                                     #{tmp\ 9756}#)
                                              ((lambda (#{tmp\ 9773}#)
                                                 (if (if #{tmp\ 9773}#
                                                       (apply (lambda (#{a\ 9778}#
                                                                       #{init\ 9779}#
                                                                       #{k\ 9780}#
                                                                       #{b\ 9781}#)
                                                                (if (#{id?\ 9076}#
                                                                      #{a\ 9778}#)
                                                                  (keyword?
                                                                    (syntax->datum
                                                                      #{k\ 9780}#))
                                                                  #f))
                                                              #{tmp\ 9773}#)
                                                       #f)
                                                   (apply (lambda (#{a\ 9788}#
                                                                   #{init\ 9789}#
                                                                   #{k\ 9790}#
                                                                   #{b\ 9791}#)
                                                            (#{key\ 9701}#
                                                              #{b\ 9791}#
                                                              #{req\ 9734}#
                                                              #{opt\ 9735}#
                                                              (cons (list #{k\ 9790}#
                                                                          #{a\ 9788}#
                                                                          #{init\ 9789}#)
                                                                    #{rkey\ 9736}#)))
                                                          #{tmp\ 9773}#)
                                                   ((lambda (#{tmp\ 9792}#)
                                                      (if (if #{tmp\ 9792}#
                                                            (apply (lambda (#{aok\ 9794}#)
                                                                     (eq? (syntax->datum
                                                                            #{aok\ 9794}#)
                                                                          #:allow-other-keys))
                                                                   #{tmp\ 9792}#)
                                                            #f)
                                                        (apply (lambda (#{aok\ 9796}#)
                                                                 (#{check\ 9705}#
                                                                   #{req\ 9734}#
                                                                   #{opt\ 9735}#
                                                                   #f
                                                                   (cons #t
                                                                         (reverse
                                                                           #{rkey\ 9736}#))))
                                                               #{tmp\ 9792}#)
                                                        ((lambda (#{tmp\ 9797}#)
                                                           (if (if #{tmp\ 9797}#
                                                                 (apply (lambda (#{aok\ 9801}#
                                                                                 #{a\ 9802}#
                                                                                 #{b\ 9803}#)
                                                                          (if (eq? (syntax->datum
                                                                                     #{aok\ 9801}#)
                                                                                   #:allow-other-keys)
                                                                            (eq? (syntax->datum
                                                                                   #{a\ 9802}#)
                                                                                 #:rest)
                                                                            #f))
                                                                        #{tmp\ 9797}#)
                                                                 #f)
                                                             (apply (lambda (#{aok\ 9809}#
                                                                             #{a\ 9810}#
                                                                             #{b\ 9811}#)
                                                                      (#{rest\ 9703}#
                                                                        #{b\ 9811}#
                                                                        #{req\ 9734}#
                                                                        #{opt\ 9735}#
                                                                        (cons #t
                                                                              (reverse
                                                                                #{rkey\ 9736}#))))
                                                                    #{tmp\ 9797}#)
                                                             ((lambda (#{tmp\ 9812}#)
                                                                (if (if #{tmp\ 9812}#
                                                                      (apply (lambda (#{aok\ 9815}#
                                                                                      #{r\ 9816}#)
                                                                               (if (eq? (syntax->datum
                                                                                          #{aok\ 9815}#)
                                                                                        #:allow-other-keys)
                                                                                 (#{id?\ 9076}#
                                                                                   #{r\ 9816}#)
                                                                                 #f))
                                                                             #{tmp\ 9812}#)
                                                                      #f)
                                                                  (apply (lambda (#{aok\ 9821}#
                                                                                  #{r\ 9822}#)
                                                                           (#{rest\ 9703}#
                                                                             #{r\ 9822}#
                                                                             #{req\ 9734}#
                                                                             #{opt\ 9735}#
                                                                             (cons #t
                                                                                   (reverse
                                                                                     #{rkey\ 9736}#))))
                                                                         #{tmp\ 9812}#)
                                                                  ((lambda (#{tmp\ 9823}#)
                                                                     (if (if #{tmp\ 9823}#
                                                                           (apply (lambda (#{a\ 9826}#
                                                                                           #{b\ 9827}#)
                                                                                    (eq? (syntax->datum
                                                                                           #{a\ 9826}#)
                                                                                         #:rest))
                                                                                  #{tmp\ 9823}#)
                                                                           #f)
                                                                       (apply (lambda (#{a\ 9830}#
                                                                                       #{b\ 9831}#)
                                                                                (#{rest\ 9703}#
                                                                                  #{b\ 9831}#
                                                                                  #{req\ 9734}#
                                                                                  #{opt\ 9735}#
                                                                                  (cons #f
                                                                                        (reverse
                                                                                          #{rkey\ 9736}#))))
                                                                              #{tmp\ 9823}#)
                                                                       ((lambda (#{tmp\ 9832}#)
                                                                          (if (if #{tmp\ 9832}#
                                                                                (apply (lambda (#{r\ 9834}#)
                                                                                         (#{id?\ 9076}#
                                                                                           #{r\ 9834}#))
                                                                                       #{tmp\ 9832}#)
                                                                                #f)
                                                                            (apply (lambda (#{r\ 9836}#)
                                                                                     (#{rest\ 9703}#
                                                                                       #{r\ 9836}#
                                                                                       #{req\ 9734}#
                                                                                       #{opt\ 9735}#
                                                                                       (cons #f
                                                                                             (reverse
                                                                                               #{rkey\ 9736}#))))
                                                                                   #{tmp\ 9832}#)
                                                                            ((lambda (#{else\ 9838}#)
                                                                               (syntax-violation
                                                                                 'lambda*
                                                                                 "invalid keyword argument list"
                                                                                 #{orig-args\ 9694}#
                                                                                 #{args\ 9733}#))
                                                                             #{tmp\ 9741}#)))
                                                                        (list #{tmp\ 9741}#))))
                                                                   ($sc-dispatch
                                                                     #{tmp\ 9741}#
                                                                     '(any any)))))
                                                              ($sc-dispatch
                                                                #{tmp\ 9741}#
                                                                '(any .
                                                                      any)))))
                                                         ($sc-dispatch
                                                           #{tmp\ 9741}#
                                                           '(any any any)))))
                                                    ($sc-dispatch
                                                      #{tmp\ 9741}#
                                                      '(any)))))
                                               ($sc-dispatch
                                                 #{tmp\ 9741}#
                                                 '((any any any) . any)))))
                                          ($sc-dispatch
                                            #{tmp\ 9741}#
                                            '((any any) . any)))))
                                     ($sc-dispatch
                                       #{tmp\ 9741}#
                                       '(any . any)))))
                                ($sc-dispatch #{tmp\ 9741}# (quote ()))))
                             #{args\ 9733}#)))
                        (#{opt\ 9699}#
                          (lambda (#{args\ 9839}# #{req\ 9840}# #{ropt\ 9841}#)
                            ((lambda (#{tmp\ 9845}#)
                               ((lambda (#{tmp\ 9846}#)
                                  (if #{tmp\ 9846}#
                                    (apply (lambda ()
                                             (#{check\ 9705}#
                                               #{req\ 9840}#
                                               (reverse #{ropt\ 9841}#)
                                               #f
                                               '()))
                                           #{tmp\ 9846}#)
                                    ((lambda (#{tmp\ 9847}#)
                                       (if (if #{tmp\ 9847}#
                                             (apply (lambda (#{a\ 9850}#
                                                             #{b\ 9851}#)
                                                      (#{id?\ 9076}#
                                                        #{a\ 9850}#))
                                                    #{tmp\ 9847}#)
                                             #f)
                                         (apply (lambda (#{a\ 9854}#
                                                         #{b\ 9855}#)
                                                  (#{opt\ 9699}#
                                                    #{b\ 9855}#
                                                    #{req\ 9840}#
                                                    (cons (cons #{a\ 9854}#
                                                                '(#(syntax-object
                                                                    #f
                                                                    ((top)
                                                                     #(ribcage
                                                                       #(a b)
                                                                       #((top)
                                                                         (top))
                                                                       #("i9852"
                                                                         "i9853"))
                                                                     #(ribcage
                                                                       ()
                                                                       ()
                                                                       ())
                                                                     #(ribcage
                                                                       #(args
                                                                         req
                                                                         ropt)
                                                                       #((top)
                                                                         (top)
                                                                         (top))
                                                                       #("i9842"
                                                                         "i9843"
                                                                         "i9844"))
                                                                     #(ribcage
                                                                       (check rest
                                                                              key
                                                                              opt
                                                                              req)
                                                                       ((top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top))
                                                                       ("i9704"
                                                                        "i9702"
                                                                        "i9700"
                                                                        "i9698"
                                                                        "i9696"))
                                                                     #(ribcage
                                                                       #(orig-args)
                                                                       #((top))
                                                                       #("i9695"))
                                                                     #(ribcage
                                                                       (lambda-var-list
                                                                         gen-var
                                                                         strip
                                                                         chi-lambda-case
                                                                         lambda*-formals
                                                                         chi-simple-lambda
                                                                         lambda-formals
                                                                         ellipsis?
                                                                         chi-void
                                                                         eval-local-transformer
                                                                         chi-local-syntax
                                                                         chi-body
                                                                         chi-macro
                                                                         chi-application
                                                                         chi-expr
                                                                         chi
                                                                         chi-top
                                                                         syntax-type
                                                                         chi-when-list
                                                                         chi-install-global
                                                                         chi-top-sequence
                                                                         chi-sequence
                                                                         source-wrap
                                                                         wrap
                                                                         bound-id-member?
                                                                         distinct-bound-ids?
                                                                         valid-bound-ids?
                                                                         bound-id=?
                                                                         free-id=?
                                                                         id-var-name
                                                                         same-marks?
                                                                         join-marks
                                                                         join-wraps
                                                                         smart-append
                                                                         make-binding-wrap
                                                                         extend-ribcage!
                                                                         make-empty-ribcage
                                                                         new-mark
                                                                         anti-mark
                                                                         the-anti-mark
                                                                         top-marked?
                                                                         top-wrap
                                                                         empty-wrap
                                                                         set-ribcage-labels!
                                                                         set-ribcage-marks!
                                                                         set-ribcage-symnames!
                                                                         ribcage-labels
                                                                         ribcage-marks
                                                                         ribcage-symnames
                                                                         ribcage?
                                                                         make-ribcage
                                                                         gen-labels
                                                                         gen-label
                                                                         make-rename
                                                                         rename-marks
                                                                         rename-new
                                                                         rename-old
                                                                         subst-rename?
                                                                         wrap-subst
                                                                         wrap-marks
                                                                         make-wrap
                                                                         id-sym-name&marks
                                                                         id-sym-name
                                                                         id?
                                                                         nonsymbol-id?
                                                                         global-extend
                                                                         lookup
                                                                         macros-only-env
                                                                         extend-var-env
                                                                         extend-env
                                                                         null-env
                                                                         binding-value
                                                                         binding-type
                                                                         make-binding
                                                                         arg-check
                                                                         source-annotation
                                                                         no-source
                                                                         set-syntax-object-module!
                                                                         set-syntax-object-wrap!
                                                                         set-syntax-object-expression!
                                                                         syntax-object-module
                                                                         syntax-object-wrap
                                                                         syntax-object-expression
                                                                         syntax-object?
                                                                         make-syntax-object
                                                                         build-lexical-var
                                                                         build-letrec
                                                                         build-named-let
                                                                         build-let
                                                                         build-sequence
                                                                         build-data
                                                                         build-primref
                                                                         build-lambda-case
                                                                         build-case-lambda
                                                                         build-simple-lambda
                                                                         build-global-definition
                                                                         maybe-name-value!
                                                                         build-global-assignment
                                                                         build-global-reference
                                                                         analyze-variable
                                                                         build-lexical-assignment
                                                                         build-lexical-reference
                                                                         build-dynlet
                                                                         build-conditional
                                                                         build-application
                                                                         build-void
                                                                         decorate-source
                                                                         get-global-definition-hook
                                                                         put-global-definition-hook
                                                                         gensym-hook
                                                                         local-eval-hook
                                                                         top-level-eval-hook
                                                                         fx<
                                                                         fx=
                                                                         fx-
                                                                         fx+
                                                                         *mode*
                                                                         noexpand)
                                                                       ((top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top))
                                                                       ("i9190"
                                                                        "i9188"
                                                                        "i9186"
                                                                        "i9184"
                                                                        "i9182"
                                                                        "i9180"
                                                                        "i9178"
                                                                        "i9176"
                                                                        "i9174"
                                                                        "i9172"
                                                                        "i9170"
                                                                        "i9168"
                                                                        "i9166"
                                                                        "i9164"
                                                                        "i9162"
                                                                        "i9160"
                                                                        "i9158"
                                                                        "i9156"
                                                                        "i9154"
                                                                        "i9152"
                                                                        "i9150"
                                                                        "i9148"
                                                                        "i9146"
                                                                        "i9144"
                                                                        "i9142"
                                                                        "i9140"
                                                                        "i9138"
                                                                        "i9136"
                                                                        "i9134"
                                                                        "i9132"
                                                                        "i9130"
                                                                        "i9128"
                                                                        "i9126"
                                                                        "i9124"
                                                                        "i9122"
                                                                        "i9120"
                                                                        "i9119"
                                                                        "i9118"
                                                                        "i9116"
                                                                        "i9115"
                                                                        "i9114"
                                                                        "i9113"
                                                                        "i9112"
                                                                        "i9110"
                                                                        "i9108"
                                                                        "i9106"
                                                                        "i9104"
                                                                        "i9102"
                                                                        "i9100"
                                                                        "i9098"
                                                                        "i9096"
                                                                        "i9093"
                                                                        "i9091"
                                                                        "i9090"
                                                                        "i9089"
                                                                        "i9088"
                                                                        "i9087"
                                                                        "i9086"
                                                                        "i9084"
                                                                        "i9082"
                                                                        "i9080"
                                                                        "i9078"
                                                                        "i9077"
                                                                        "i9075"
                                                                        "i9073"
                                                                        "i9071"
                                                                        "i9069"
                                                                        "i9067"
                                                                        "i9065"
                                                                        "i9063"
                                                                        "i9062"
                                                                        "i9060"
                                                                        "i9058"
                                                                        "i9057"
                                                                        "i9056"
                                                                        "i9054"
                                                                        "i9053"
                                                                        "i9051"
                                                                        "i9049"
                                                                        "i9047"
                                                                        "i9045"
                                                                        "i9043"
                                                                        "i9041"
                                                                        "i9039"
                                                                        "i9037"
                                                                        "i9035"
                                                                        "i9033"
                                                                        "i9031"
                                                                        "i9029"
                                                                        "i9027"
                                                                        "i9025"
                                                                        "i9023"
                                                                        "i9021"
                                                                        "i9019"
                                                                        "i9017"
                                                                        "i9015"
                                                                        "i9013"
                                                                        "i9011"
                                                                        "i9009"
                                                                        "i9007"
                                                                        "i9005"
                                                                        "i9003"
                                                                        "i9001"
                                                                        "i8999"
                                                                        "i8997"
                                                                        "i8995"
                                                                        "i8993"
                                                                        "i8991"
                                                                        "i8989"
                                                                        "i8988"
                                                                        "i8986"
                                                                        "i8984"
                                                                        "i8982"
                                                                        "i8980"
                                                                        "i8978"
                                                                        "i8976"
                                                                        "i8974"
                                                                        "i8972"))
                                                                     #(ribcage
                                                                       (define-structure
                                                                         and-map*)
                                                                       ((top)
                                                                        (top))
                                                                       ("i8875"
                                                                        "i8873")))
                                                                    (hygiene
                                                                      guile))))
                                                          #{ropt\ 9841}#)))
                                                #{tmp\ 9847}#)
                                         ((lambda (#{tmp\ 9856}#)
                                            (if (if #{tmp\ 9856}#
                                                  (apply (lambda (#{a\ 9860}#
                                                                  #{init\ 9861}#
                                                                  #{b\ 9862}#)
                                                           (#{id?\ 9076}#
                                                             #{a\ 9860}#))
                                                         #{tmp\ 9856}#)
                                                  #f)
                                              (apply (lambda (#{a\ 9866}#
                                                              #{init\ 9867}#
                                                              #{b\ 9868}#)
                                                       (#{opt\ 9699}#
                                                         #{b\ 9868}#
                                                         #{req\ 9840}#
                                                         (cons (list #{a\ 9866}#
                                                                     #{init\ 9867}#)
                                                               #{ropt\ 9841}#)))
                                                     #{tmp\ 9856}#)
                                              ((lambda (#{tmp\ 9869}#)
                                                 (if (if #{tmp\ 9869}#
                                                       (apply (lambda (#{a\ 9872}#
                                                                       #{b\ 9873}#)
                                                                (eq? (syntax->datum
                                                                       #{a\ 9872}#)
                                                                     #:key))
                                                              #{tmp\ 9869}#)
                                                       #f)
                                                   (apply (lambda (#{a\ 9876}#
                                                                   #{b\ 9877}#)
                                                            (#{key\ 9701}#
                                                              #{b\ 9877}#
                                                              #{req\ 9840}#
                                                              (reverse
                                                                #{ropt\ 9841}#)
                                                              '()))
                                                          #{tmp\ 9869}#)
                                                   ((lambda (#{tmp\ 9878}#)
                                                      (if (if #{tmp\ 9878}#
                                                            (apply (lambda (#{a\ 9881}#
                                                                            #{b\ 9882}#)
                                                                     (eq? (syntax->datum
                                                                            #{a\ 9881}#)
                                                                          #:rest))
                                                                   #{tmp\ 9878}#)
                                                            #f)
                                                        (apply (lambda (#{a\ 9885}#
                                                                        #{b\ 9886}#)
                                                                 (#{rest\ 9703}#
                                                                   #{b\ 9886}#
                                                                   #{req\ 9840}#
                                                                   (reverse
                                                                     #{ropt\ 9841}#)
                                                                   '()))
                                                               #{tmp\ 9878}#)
                                                        ((lambda (#{tmp\ 9887}#)
                                                           (if (if #{tmp\ 9887}#
                                                                 (apply (lambda (#{r\ 9889}#)
                                                                          (#{id?\ 9076}#
                                                                            #{r\ 9889}#))
                                                                        #{tmp\ 9887}#)
                                                                 #f)
                                                             (apply (lambda (#{r\ 9891}#)
                                                                      (#{rest\ 9703}#
                                                                        #{r\ 9891}#
                                                                        #{req\ 9840}#
                                                                        (reverse
                                                                          #{ropt\ 9841}#)
                                                                        '()))
                                                                    #{tmp\ 9887}#)
                                                             ((lambda (#{else\ 9893}#)
                                                                (syntax-violation
                                                                  'lambda*
                                                                  "invalid optional argument list"
                                                                  #{orig-args\ 9694}#
                                                                  #{args\ 9839}#))
                                                              #{tmp\ 9845}#)))
                                                         (list #{tmp\ 9845}#))))
                                                    ($sc-dispatch
                                                      #{tmp\ 9845}#
                                                      '(any any)))))
                                               ($sc-dispatch
                                                 #{tmp\ 9845}#
                                                 '(any . any)))))
                                          ($sc-dispatch
                                            #{tmp\ 9845}#
                                            '((any any) . any)))))
                                     ($sc-dispatch
                                       #{tmp\ 9845}#
                                       '(any . any)))))
                                ($sc-dispatch #{tmp\ 9845}# (quote ()))))
                             #{args\ 9839}#)))
                        (#{req\ 9697}#
                          (lambda (#{args\ 9894}# #{rreq\ 9895}#)
                            ((lambda (#{tmp\ 9898}#)
                               ((lambda (#{tmp\ 9899}#)
                                  (if #{tmp\ 9899}#
                                    (apply (lambda ()
                                             (#{check\ 9705}#
                                               (reverse #{rreq\ 9895}#)
                                               '()
                                               #f
                                               '()))
                                           #{tmp\ 9899}#)
                                    ((lambda (#{tmp\ 9900}#)
                                       (if (if #{tmp\ 9900}#
                                             (apply (lambda (#{a\ 9903}#
                                                             #{b\ 9904}#)
                                                      (#{id?\ 9076}#
                                                        #{a\ 9903}#))
                                                    #{tmp\ 9900}#)
                                             #f)
                                         (apply (lambda (#{a\ 9907}#
                                                         #{b\ 9908}#)
                                                  (#{req\ 9697}#
                                                    #{b\ 9908}#
                                                    (cons #{a\ 9907}#
                                                          #{rreq\ 9895}#)))
                                                #{tmp\ 9900}#)
                                         ((lambda (#{tmp\ 9909}#)
                                            (if (if #{tmp\ 9909}#
                                                  (apply (lambda (#{a\ 9912}#
                                                                  #{b\ 9913}#)
                                                           (eq? (syntax->datum
                                                                  #{a\ 9912}#)
                                                                #:optional))
                                                         #{tmp\ 9909}#)
                                                  #f)
                                              (apply (lambda (#{a\ 9916}#
                                                              #{b\ 9917}#)
                                                       (#{opt\ 9699}#
                                                         #{b\ 9917}#
                                                         (reverse
                                                           #{rreq\ 9895}#)
                                                         '()))
                                                     #{tmp\ 9909}#)
                                              ((lambda (#{tmp\ 9918}#)
                                                 (if (if #{tmp\ 9918}#
                                                       (apply (lambda (#{a\ 9921}#
                                                                       #{b\ 9922}#)
                                                                (eq? (syntax->datum
                                                                       #{a\ 9921}#)
                                                                     #:key))
                                                              #{tmp\ 9918}#)
                                                       #f)
                                                   (apply (lambda (#{a\ 9925}#
                                                                   #{b\ 9926}#)
                                                            (#{key\ 9701}#
                                                              #{b\ 9926}#
                                                              (reverse
                                                                #{rreq\ 9895}#)
                                                              '()
                                                              '()))
                                                          #{tmp\ 9918}#)
                                                   ((lambda (#{tmp\ 9927}#)
                                                      (if (if #{tmp\ 9927}#
                                                            (apply (lambda (#{a\ 9930}#
                                                                            #{b\ 9931}#)
                                                                     (eq? (syntax->datum
                                                                            #{a\ 9930}#)
                                                                          #:rest))
                                                                   #{tmp\ 9927}#)
                                                            #f)
                                                        (apply (lambda (#{a\ 9934}#
                                                                        #{b\ 9935}#)
                                                                 (#{rest\ 9703}#
                                                                   #{b\ 9935}#
                                                                   (reverse
                                                                     #{rreq\ 9895}#)
                                                                   '()
                                                                   '()))
                                                               #{tmp\ 9927}#)
                                                        ((lambda (#{tmp\ 9936}#)
                                                           (if (if #{tmp\ 9936}#
                                                                 (apply (lambda (#{r\ 9938}#)
                                                                          (#{id?\ 9076}#
                                                                            #{r\ 9938}#))
                                                                        #{tmp\ 9936}#)
                                                                 #f)
                                                             (apply (lambda (#{r\ 9940}#)
                                                                      (#{rest\ 9703}#
                                                                        #{r\ 9940}#
                                                                        (reverse
                                                                          #{rreq\ 9895}#)
                                                                        '()
                                                                        '()))
                                                                    #{tmp\ 9936}#)
                                                             ((lambda (#{else\ 9942}#)
                                                                (syntax-violation
                                                                  'lambda*
                                                                  "invalid argument list"
                                                                  #{orig-args\ 9694}#
                                                                  #{args\ 9894}#))
                                                              #{tmp\ 9898}#)))
                                                         (list #{tmp\ 9898}#))))
                                                    ($sc-dispatch
                                                      #{tmp\ 9898}#
                                                      '(any any)))))
                                               ($sc-dispatch
                                                 #{tmp\ 9898}#
                                                 '(any . any)))))
                                          ($sc-dispatch
                                            #{tmp\ 9898}#
                                            '(any . any)))))
                                     ($sc-dispatch
                                       #{tmp\ 9898}#
                                       '(any . any)))))
                                ($sc-dispatch #{tmp\ 9898}# (quote ()))))
                             #{args\ 9894}#))))
                 (#{req\ 9697}# #{orig-args\ 9694}# (quote ())))))
           (#{chi-simple-lambda\ 9181}#
             (lambda (#{e\ 9943}#
                      #{r\ 9944}#
                      #{w\ 9945}#
                      #{s\ 9946}#
                      #{mod\ 9947}#
                      #{req\ 9948}#
                      #{rest\ 9949}#
                      #{meta\ 9950}#
                      #{body\ 9951}#)
               (let ((#{ids\ 9963}#
                       (if #{rest\ 9949}#
                         (append #{req\ 9948}# (list #{rest\ 9949}#))
                         #{req\ 9948}#)))
                 (let ((#{vars\ 9965}#
                         (map #{gen-var\ 9189}# #{ids\ 9963}#)))
                   (let ((#{labels\ 9967}#
                           (#{gen-labels\ 9094}# #{ids\ 9963}#)))
                     (#{build-simple-lambda\ 9018}#
                       #{s\ 9946}#
                       (map syntax->datum #{req\ 9948}#)
                       (if #{rest\ 9949}#
                         (syntax->datum #{rest\ 9949}#)
                         #f)
                       #{vars\ 9965}#
                       #{meta\ 9950}#
                       (#{chi-body\ 9169}#
                         #{body\ 9951}#
                         (#{source-wrap\ 9147}#
                           #{e\ 9943}#
                           #{w\ 9945}#
                           #{s\ 9946}#
                           #{mod\ 9947}#)
                         (#{extend-var-env\ 9066}#
                           #{labels\ 9967}#
                           #{vars\ 9965}#
                           #{r\ 9944}#)
                         (#{make-binding-wrap\ 9123}#
                           #{ids\ 9963}#
                           #{labels\ 9967}#
                           #{w\ 9945}#)
                         #{mod\ 9947}#)))))))
           (#{lambda-formals\ 9179}#
             (lambda (#{orig-args\ 9970}#)
               (letrec ((#{check\ 9975}#
                          (lambda (#{req\ 9976}# #{rest\ 9977}#)
                            (if (#{distinct-bound-ids?\ 9141}#
                                  (if #{rest\ 9977}#
                                    (cons #{rest\ 9977}# #{req\ 9976}#)
                                    #{req\ 9976}#))
                              (values #{req\ 9976}# #f #{rest\ 9977}# #f)
                              (syntax-violation
                                'lambda
                                "duplicate identifier in argument list"
                                #{orig-args\ 9970}#))))
                        (#{req\ 9973}#
                          (lambda (#{args\ 9983}# #{rreq\ 9984}#)
                            ((lambda (#{tmp\ 9987}#)
                               ((lambda (#{tmp\ 9988}#)
                                  (if #{tmp\ 9988}#
                                    (apply (lambda ()
                                             (#{check\ 9975}#
                                               (reverse #{rreq\ 9984}#)
                                               #f))
                                           #{tmp\ 9988}#)
                                    ((lambda (#{tmp\ 9989}#)
                                       (if (if #{tmp\ 9989}#
                                             (apply (lambda (#{a\ 9992}#
                                                             #{b\ 9993}#)
                                                      (#{id?\ 9076}#
                                                        #{a\ 9992}#))
                                                    #{tmp\ 9989}#)
                                             #f)
                                         (apply (lambda (#{a\ 9996}#
                                                         #{b\ 9997}#)
                                                  (#{req\ 9973}#
                                                    #{b\ 9997}#
                                                    (cons #{a\ 9996}#
                                                          #{rreq\ 9984}#)))
                                                #{tmp\ 9989}#)
                                         ((lambda (#{tmp\ 9998}#)
                                            (if (if #{tmp\ 9998}#
                                                  (apply (lambda (#{r\ 10000}#)
                                                           (#{id?\ 9076}#
                                                             #{r\ 10000}#))
                                                         #{tmp\ 9998}#)
                                                  #f)
                                              (apply (lambda (#{r\ 10002}#)
                                                       (#{check\ 9975}#
                                                         (reverse
                                                           #{rreq\ 9984}#)
                                                         #{r\ 10002}#))
                                                     #{tmp\ 9998}#)
                                              ((lambda (#{else\ 10004}#)
                                                 (syntax-violation
                                                   'lambda
                                                   "invalid argument list"
                                                   #{orig-args\ 9970}#
                                                   #{args\ 9983}#))
                                               #{tmp\ 9987}#)))
                                          (list #{tmp\ 9987}#))))
                                     ($sc-dispatch
                                       #{tmp\ 9987}#
                                       '(any . any)))))
                                ($sc-dispatch #{tmp\ 9987}# (quote ()))))
                             #{args\ 9983}#))))
                 (#{req\ 9973}# #{orig-args\ 9970}# (quote ())))))
           (#{ellipsis?\ 9177}#
             (lambda (#{x\ 10005}#)
               (if (#{nonsymbol-id?\ 9074}# #{x\ 10005}#)
                 (#{free-id=?\ 9135}#
                   #{x\ 10005}#
                   '#(syntax-object
                      ...
                      ((top)
                       #(ribcage () () ())
                       #(ribcage () () ())
                       #(ribcage #(x) #((top)) #("i10006"))
                       #(ribcage
                         (lambda-var-list
                           gen-var
                           strip
                           chi-lambda-case
                           lambda*-formals
                           chi-simple-lambda
                           lambda-formals
                           ellipsis?
                           chi-void
                           eval-local-transformer
                           chi-local-syntax
                           chi-body
                           chi-macro
                           chi-application
                           chi-expr
                           chi
                           chi-top
                           syntax-type
                           chi-when-list
                           chi-install-global
                           chi-top-sequence
                           chi-sequence
                           source-wrap
                           wrap
                           bound-id-member?
                           distinct-bound-ids?
                           valid-bound-ids?
                           bound-id=?
                           free-id=?
                           id-var-name
                           same-marks?
                           join-marks
                           join-wraps
                           smart-append
                           make-binding-wrap
                           extend-ribcage!
                           make-empty-ribcage
                           new-mark
                           anti-mark
                           the-anti-mark
                           top-marked?
                           top-wrap
                           empty-wrap
                           set-ribcage-labels!
                           set-ribcage-marks!
                           set-ribcage-symnames!
                           ribcage-labels
                           ribcage-marks
                           ribcage-symnames
                           ribcage?
                           make-ribcage
                           gen-labels
                           gen-label
                           make-rename
                           rename-marks
                           rename-new
                           rename-old
                           subst-rename?
                           wrap-subst
                           wrap-marks
                           make-wrap
                           id-sym-name&marks
                           id-sym-name
                           id?
                           nonsymbol-id?
                           global-extend
                           lookup
                           macros-only-env
                           extend-var-env
                           extend-env
                           null-env
                           binding-value
                           binding-type
                           make-binding
                           arg-check
                           source-annotation
                           no-source
                           set-syntax-object-module!
                           set-syntax-object-wrap!
                           set-syntax-object-expression!
                           syntax-object-module
                           syntax-object-wrap
                           syntax-object-expression
                           syntax-object?
                           make-syntax-object
                           build-lexical-var
                           build-letrec
                           build-named-let
                           build-let
                           build-sequence
                           build-data
                           build-primref
                           build-lambda-case
                           build-case-lambda
                           build-simple-lambda
                           build-global-definition
                           maybe-name-value!
                           build-global-assignment
                           build-global-reference
                           analyze-variable
                           build-lexical-assignment
                           build-lexical-reference
                           build-dynlet
                           build-conditional
                           build-application
                           build-void
                           decorate-source
                           get-global-definition-hook
                           put-global-definition-hook
                           gensym-hook
                           local-eval-hook
                           top-level-eval-hook
                           fx<
                           fx=
                           fx-
                           fx+
                           *mode*
                           noexpand)
                         ((top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top))
                         ("i9190"
                          "i9188"
                          "i9186"
                          "i9184"
                          "i9182"
                          "i9180"
                          "i9178"
                          "i9176"
                          "i9174"
                          "i9172"
                          "i9170"
                          "i9168"
                          "i9166"
                          "i9164"
                          "i9162"
                          "i9160"
                          "i9158"
                          "i9156"
                          "i9154"
                          "i9152"
                          "i9150"
                          "i9148"
                          "i9146"
                          "i9144"
                          "i9142"
                          "i9140"
                          "i9138"
                          "i9136"
                          "i9134"
                          "i9132"
                          "i9130"
                          "i9128"
                          "i9126"
                          "i9124"
                          "i9122"
                          "i9120"
                          "i9119"
                          "i9118"
                          "i9116"
                          "i9115"
                          "i9114"
                          "i9113"
                          "i9112"
                          "i9110"
                          "i9108"
                          "i9106"
                          "i9104"
                          "i9102"
                          "i9100"
                          "i9098"
                          "i9096"
                          "i9093"
                          "i9091"
                          "i9090"
                          "i9089"
                          "i9088"
                          "i9087"
                          "i9086"
                          "i9084"
                          "i9082"
                          "i9080"
                          "i9078"
                          "i9077"
                          "i9075"
                          "i9073"
                          "i9071"
                          "i9069"
                          "i9067"
                          "i9065"
                          "i9063"
                          "i9062"
                          "i9060"
                          "i9058"
                          "i9057"
                          "i9056"
                          "i9054"
                          "i9053"
                          "i9051"
                          "i9049"
                          "i9047"
                          "i9045"
                          "i9043"
                          "i9041"
                          "i9039"
                          "i9037"
                          "i9035"
                          "i9033"
                          "i9031"
                          "i9029"
                          "i9027"
                          "i9025"
                          "i9023"
                          "i9021"
                          "i9019"
                          "i9017"
                          "i9015"
                          "i9013"
                          "i9011"
                          "i9009"
                          "i9007"
                          "i9005"
                          "i9003"
                          "i9001"
                          "i8999"
                          "i8997"
                          "i8995"
                          "i8993"
                          "i8991"
                          "i8989"
                          "i8988"
                          "i8986"
                          "i8984"
                          "i8982"
                          "i8980"
                          "i8978"
                          "i8976"
                          "i8974"
                          "i8972"))
                       #(ribcage
                         (define-structure and-map*)
                         ((top) (top))
                         ("i8875" "i8873")))
                      (hygiene guile)))
                 #f)))
           (#{chi-void\ 9175}#
             (lambda () (#{build-void\ 8996}# #f)))
           (#{eval-local-transformer\ 9173}#
             (lambda (#{expanded\ 10010}# #{mod\ 10011}#)
               (let ((#{p\ 10015}#
                       (#{local-eval-hook\ 8987}#
                         #{expanded\ 10010}#
                         #{mod\ 10011}#)))
                 (if (procedure? #{p\ 10015}#)
                   (cons #{p\ 10015}#
                         (module-name (current-module)))
                   (syntax-violation
                     #f
                     "nonprocedure transformer"
                     #{p\ 10015}#)))))
           (#{chi-local-syntax\ 9171}#
             (lambda (#{rec?\ 10016}#
                      #{e\ 10017}#
                      #{r\ 10018}#
                      #{w\ 10019}#
                      #{s\ 10020}#
                      #{mod\ 10021}#
                      #{k\ 10022}#)
               ((lambda (#{tmp\ 10030}#)
                  ((lambda (#{tmp\ 10031}#)
                     (if #{tmp\ 10031}#
                       (apply (lambda (#{_\ 10037}#
                                       #{id\ 10038}#
                                       #{val\ 10039}#
                                       #{e1\ 10040}#
                                       #{e2\ 10041}#)
                                (let ((#{ids\ 10043}# #{id\ 10038}#))
                                  (if (not (#{valid-bound-ids?\ 9139}#
                                             #{ids\ 10043}#))
                                    (syntax-violation
                                      #f
                                      "duplicate bound keyword"
                                      #{e\ 10017}#)
                                    (let ((#{labels\ 10046}#
                                            (#{gen-labels\ 9094}#
                                              #{ids\ 10043}#)))
                                      (let ((#{new-w\ 10048}#
                                              (#{make-binding-wrap\ 9123}#
                                                #{ids\ 10043}#
                                                #{labels\ 10046}#
                                                #{w\ 10019}#)))
                                        (#{k\ 10022}#
                                          (cons #{e1\ 10040}# #{e2\ 10041}#)
                                          (#{extend-env\ 9064}#
                                            #{labels\ 10046}#
                                            (let ((#{w\ 10052}#
                                                    (if #{rec?\ 10016}#
                                                      #{new-w\ 10048}#
                                                      #{w\ 10019}#))
                                                  (#{trans-r\ 10053}#
                                                    (#{macros-only-env\ 9068}#
                                                      #{r\ 10018}#)))
                                              (map (lambda (#{x\ 10054}#)
                                                     (cons 'macro
                                                           (#{eval-local-transformer\ 9173}#
                                                             (#{chi\ 9161}#
                                                               #{x\ 10054}#
                                                               #{trans-r\ 10053}#
                                                               #{w\ 10052}#
                                                               #{mod\ 10021}#)
                                                             #{mod\ 10021}#)))
                                                   #{val\ 10039}#))
                                            #{r\ 10018}#)
                                          #{new-w\ 10048}#
                                          #{s\ 10020}#
                                          #{mod\ 10021}#))))))
                              #{tmp\ 10031}#)
                       ((lambda (#{_\ 10059}#)
                          (syntax-violation
                            #f
                            "bad local syntax definition"
                            (#{source-wrap\ 9147}#
                              #{e\ 10017}#
                              #{w\ 10019}#
                              #{s\ 10020}#
                              #{mod\ 10021}#)))
                        #{tmp\ 10030}#)))
                   ($sc-dispatch
                     #{tmp\ 10030}#
                     '(any #(each (any any)) any . each-any))))
                #{e\ 10017}#)))
           (#{chi-body\ 9169}#
             (lambda (#{body\ 10060}#
                      #{outer-form\ 10061}#
                      #{r\ 10062}#
                      #{w\ 10063}#
                      #{mod\ 10064}#)
               (let ((#{r\ 10072}#
                       (cons '("placeholder" placeholder)
                             #{r\ 10062}#)))
                 (let ((#{ribcage\ 10074}#
                         (#{make-ribcage\ 9097}#
                           '()
                           '()
                           '())))
                   (let ((#{w\ 10077}#
                           (#{make-wrap\ 9081}#
                             (#{wrap-marks\ 9083}# #{w\ 10063}#)
                             (cons #{ribcage\ 10074}#
                                   (#{wrap-subst\ 9085}# #{w\ 10063}#)))))
                     (letrec ((#{parse\ 10086}#
                                (lambda (#{body\ 10087}#
                                         #{ids\ 10088}#
                                         #{labels\ 10089}#
                                         #{var-ids\ 10090}#
                                         #{vars\ 10091}#
                                         #{vals\ 10092}#
                                         #{bindings\ 10093}#)
                                  (if (null? #{body\ 10087}#)
                                    (syntax-violation
                                      #f
                                      "no expressions in body"
                                      #{outer-form\ 10061}#)
                                    (let ((#{e\ 10098}# (cdar #{body\ 10087}#))
                                          (#{er\ 10099}#
                                            (caar #{body\ 10087}#)))
                                      (call-with-values
                                        (lambda ()
                                          (#{syntax-type\ 9157}#
                                            #{e\ 10098}#
                                            #{er\ 10099}#
                                            '(())
                                            (#{source-annotation\ 9055}#
                                              #{er\ 10099}#)
                                            #{ribcage\ 10074}#
                                            #{mod\ 10064}#
                                            #f))
                                        (lambda (#{type\ 10101}#
                                                 #{value\ 10102}#
                                                 #{e\ 10103}#
                                                 #{w\ 10104}#
                                                 #{s\ 10105}#
                                                 #{mod\ 10106}#)
                                          (if (memv #{type\ 10101}#
                                                    '(define-form))
                                            (let ((#{id\ 10116}#
                                                    (#{wrap\ 9145}#
                                                      #{value\ 10102}#
                                                      #{w\ 10104}#
                                                      #{mod\ 10106}#))
                                                  (#{label\ 10117}#
                                                    (#{gen-label\ 9092}#)))
                                              (let ((#{var\ 10119}#
                                                      (#{gen-var\ 9189}#
                                                        #{id\ 10116}#)))
                                                (begin
                                                  (#{extend-ribcage!\ 9121}#
                                                    #{ribcage\ 10074}#
                                                    #{id\ 10116}#
                                                    #{label\ 10117}#)
                                                  (#{parse\ 10086}#
                                                    (cdr #{body\ 10087}#)
                                                    (cons #{id\ 10116}#
                                                          #{ids\ 10088}#)
                                                    (cons #{label\ 10117}#
                                                          #{labels\ 10089}#)
                                                    (cons #{id\ 10116}#
                                                          #{var-ids\ 10090}#)
                                                    (cons #{var\ 10119}#
                                                          #{vars\ 10091}#)
                                                    (cons (cons #{er\ 10099}#
                                                                (#{wrap\ 9145}#
                                                                  #{e\ 10103}#
                                                                  #{w\ 10104}#
                                                                  #{mod\ 10106}#))
                                                          #{vals\ 10092}#)
                                                    (cons (cons 'lexical
                                                                #{var\ 10119}#)
                                                          #{bindings\ 10093}#)))))
                                            (if (memv #{type\ 10101}#
                                                      '(define-syntax-form))
                                              (let ((#{id\ 10124}#
                                                      (#{wrap\ 9145}#
                                                        #{value\ 10102}#
                                                        #{w\ 10104}#
                                                        #{mod\ 10106}#))
                                                    (#{label\ 10125}#
                                                      (#{gen-label\ 9092}#)))
                                                (begin
                                                  (#{extend-ribcage!\ 9121}#
                                                    #{ribcage\ 10074}#
                                                    #{id\ 10124}#
                                                    #{label\ 10125}#)
                                                  (#{parse\ 10086}#
                                                    (cdr #{body\ 10087}#)
                                                    (cons #{id\ 10124}#
                                                          #{ids\ 10088}#)
                                                    (cons #{label\ 10125}#
                                                          #{labels\ 10089}#)
                                                    #{var-ids\ 10090}#
                                                    #{vars\ 10091}#
                                                    #{vals\ 10092}#
                                                    (cons (cons 'macro
                                                                (cons #{er\ 10099}#
                                                                      (#{wrap\ 9145}#
                                                                        #{e\ 10103}#
                                                                        #{w\ 10104}#
                                                                        #{mod\ 10106}#)))
                                                          #{bindings\ 10093}#))))
                                              (if (memv #{type\ 10101}#
                                                        '(begin-form))
                                                ((lambda (#{tmp\ 10128}#)
                                                   ((lambda (#{tmp\ 10129}#)
                                                      (if #{tmp\ 10129}#
                                                        (apply (lambda (#{_\ 10132}#
                                                                        #{e1\ 10133}#)
                                                                 (#{parse\ 10086}#
                                                                   (letrec ((#{f\ 10136}#
                                                                              (lambda (#{forms\ 10137}#)
                                                                                (if (null? #{forms\ 10137}#)
                                                                                  (cdr #{body\ 10087}#)
                                                                                  (cons (cons #{er\ 10099}#
                                                                                              (#{wrap\ 9145}#
                                                                                                (car #{forms\ 10137}#)
                                                                                                #{w\ 10104}#
                                                                                                #{mod\ 10106}#))
                                                                                        (#{f\ 10136}#
                                                                                          (cdr #{forms\ 10137}#)))))))
                                                                     (#{f\ 10136}#
                                                                       #{e1\ 10133}#))
                                                                   #{ids\ 10088}#
                                                                   #{labels\ 10089}#
                                                                   #{var-ids\ 10090}#
                                                                   #{vars\ 10091}#
                                                                   #{vals\ 10092}#
                                                                   #{bindings\ 10093}#))
                                                               #{tmp\ 10129}#)
                                                        (syntax-violation
                                                          #f
                                                          "source expression failed to match any pattern"
                                                          #{tmp\ 10128}#)))
                                                    ($sc-dispatch
                                                      #{tmp\ 10128}#
                                                      '(any . each-any))))
                                                 #{e\ 10103}#)
                                                (if (memv #{type\ 10101}#
                                                          '(local-syntax-form))
                                                  (#{chi-local-syntax\ 9171}#
                                                    #{value\ 10102}#
                                                    #{e\ 10103}#
                                                    #{er\ 10099}#
                                                    #{w\ 10104}#
                                                    #{s\ 10105}#
                                                    #{mod\ 10106}#
                                                    (lambda (#{forms\ 10140}#
                                                             #{er\ 10141}#
                                                             #{w\ 10142}#
                                                             #{s\ 10143}#
                                                             #{mod\ 10144}#)
                                                      (#{parse\ 10086}#
                                                        (letrec ((#{f\ 10152}#
                                                                   (lambda (#{forms\ 10153}#)
                                                                     (if (null? #{forms\ 10153}#)
                                                                       (cdr #{body\ 10087}#)
                                                                       (cons (cons #{er\ 10141}#
                                                                                   (#{wrap\ 9145}#
                                                                                     (car #{forms\ 10153}#)
                                                                                     #{w\ 10142}#
                                                                                     #{mod\ 10144}#))
                                                                             (#{f\ 10152}#
                                                                               (cdr #{forms\ 10153}#)))))))
                                                          (#{f\ 10152}#
                                                            #{forms\ 10140}#))
                                                        #{ids\ 10088}#
                                                        #{labels\ 10089}#
                                                        #{var-ids\ 10090}#
                                                        #{vars\ 10091}#
                                                        #{vals\ 10092}#
                                                        #{bindings\ 10093}#)))
                                                  (if (null? #{ids\ 10088}#)
                                                    (#{build-sequence\ 9028}#
                                                      #f
                                                      (map (lambda (#{x\ 10156}#)
                                                             (#{chi\ 9161}#
                                                               (cdr #{x\ 10156}#)
                                                               (car #{x\ 10156}#)
                                                               '(())
                                                               #{mod\ 10106}#))
                                                           (cons (cons #{er\ 10099}#
                                                                       (#{source-wrap\ 9147}#
                                                                         #{e\ 10103}#
                                                                         #{w\ 10104}#
                                                                         #{s\ 10105}#
                                                                         #{mod\ 10106}#))
                                                                 (cdr #{body\ 10087}#))))
                                                    (begin
                                                      (if (not (#{valid-bound-ids?\ 9139}#
                                                                 #{ids\ 10088}#))
                                                        (syntax-violation
                                                          #f
                                                          "invalid or duplicate identifier in definition"
                                                          #{outer-form\ 10061}#))
                                                      (letrec ((#{loop\ 10163}#
                                                                 (lambda (#{bs\ 10164}#
                                                                          #{er-cache\ 10165}#
                                                                          #{r-cache\ 10166}#)
                                                                   (if (not (null? #{bs\ 10164}#))
                                                                     (let ((#{b\ 10169}#
                                                                             (car #{bs\ 10164}#)))
                                                                       (if (eq? (car #{b\ 10169}#)
                                                                                'macro)
                                                                         (let ((#{er\ 10172}#
                                                                                 (cadr #{b\ 10169}#)))
                                                                           (let ((#{r-cache\ 10174}#
                                                                                   (if (eq? #{er\ 10172}#
                                                                                            #{er-cache\ 10165}#)
                                                                                     #{r-cache\ 10166}#
                                                                                     (#{macros-only-env\ 9068}#
                                                                                       #{er\ 10172}#))))
                                                                             (begin
                                                                               (set-cdr!
                                                                                 #{b\ 10169}#
                                                                                 (#{eval-local-transformer\ 9173}#
                                                                                   (#{chi\ 9161}#
                                                                                     (cddr #{b\ 10169}#)
                                                                                     #{r-cache\ 10174}#
                                                                                     '(())
                                                                                     #{mod\ 10106}#)
                                                                                   #{mod\ 10106}#))
                                                                               (#{loop\ 10163}#
                                                                                 (cdr #{bs\ 10164}#)
                                                                                 #{er\ 10172}#
                                                                                 #{r-cache\ 10174}#))))
                                                                         (#{loop\ 10163}#
                                                                           (cdr #{bs\ 10164}#)
                                                                           #{er-cache\ 10165}#
                                                                           #{r-cache\ 10166}#)))))))
                                                        (#{loop\ 10163}#
                                                          #{bindings\ 10093}#
                                                          #f
                                                          #f))
                                                      (set-cdr!
                                                        #{r\ 10072}#
                                                        (#{extend-env\ 9064}#
                                                          #{labels\ 10089}#
                                                          #{bindings\ 10093}#
                                                          (cdr #{r\ 10072}#)))
                                                      (#{build-letrec\ 9034}#
                                                        #f
                                                        (map syntax->datum
                                                             #{var-ids\ 10090}#)
                                                        #{vars\ 10091}#
                                                        (map (lambda (#{x\ 10177}#)
                                                               (#{chi\ 9161}#
                                                                 (cdr #{x\ 10177}#)
                                                                 (car #{x\ 10177}#)
                                                                 '(())
                                                                 #{mod\ 10106}#))
                                                             #{vals\ 10092}#)
                                                        (#{build-sequence\ 9028}#
                                                          #f
                                                          (map (lambda (#{x\ 10181}#)
                                                                 (#{chi\ 9161}#
                                                                   (cdr #{x\ 10181}#)
                                                                   (car #{x\ 10181}#)
                                                                   '(())
                                                                   #{mod\ 10106}#))
                                                               (cons (cons #{er\ 10099}#
                                                                           (#{source-wrap\ 9147}#
                                                                             #{e\ 10103}#
                                                                             #{w\ 10104}#
                                                                             #{s\ 10105}#
                                                                             #{mod\ 10106}#))
                                                                     (cdr #{body\ 10087}#))))))))))))))))))
                       (#{parse\ 10086}#
                         (map (lambda (#{x\ 10094}#)
                                (cons #{r\ 10072}#
                                      (#{wrap\ 9145}#
                                        #{x\ 10094}#
                                        #{w\ 10077}#
                                        #{mod\ 10064}#)))
                              #{body\ 10060}#)
                         '()
                         '()
                         '()
                         '()
                         '()
                         '())))))))
           (#{chi-macro\ 9167}#
             (lambda (#{p\ 10184}#
                      #{e\ 10185}#
                      #{r\ 10186}#
                      #{w\ 10187}#
                      #{rib\ 10188}#
                      #{mod\ 10189}#)
               (letrec ((#{rebuild-macro-output\ 10197}#
                          (lambda (#{x\ 10198}# #{m\ 10199}#)
                            (if (pair? #{x\ 10198}#)
                              (cons (#{rebuild-macro-output\ 10197}#
                                      (car #{x\ 10198}#)
                                      #{m\ 10199}#)
                                    (#{rebuild-macro-output\ 10197}#
                                      (cdr #{x\ 10198}#)
                                      #{m\ 10199}#))
                              (if (#{syntax-object?\ 9040}# #{x\ 10198}#)
                                (let ((#{w\ 10207}#
                                        (#{syntax-object-wrap\ 9044}#
                                          #{x\ 10198}#)))
                                  (let ((#{ms\ 10210}#
                                          (#{wrap-marks\ 9083}# #{w\ 10207}#))
                                        (#{s\ 10211}#
                                          (#{wrap-subst\ 9085}# #{w\ 10207}#)))
                                    (if (if (pair? #{ms\ 10210}#)
                                          (eq? (car #{ms\ 10210}#) #f)
                                          #f)
                                      (#{make-syntax-object\ 9038}#
                                        (#{syntax-object-expression\ 9042}#
                                          #{x\ 10198}#)
                                        (#{make-wrap\ 9081}#
                                          (cdr #{ms\ 10210}#)
                                          (if #{rib\ 10188}#
                                            (cons #{rib\ 10188}#
                                                  (cdr #{s\ 10211}#))
                                            (cdr #{s\ 10211}#)))
                                        (#{syntax-object-module\ 9046}#
                                          #{x\ 10198}#))
                                      (#{make-syntax-object\ 9038}#
                                        (#{syntax-object-expression\ 9042}#
                                          #{x\ 10198}#)
                                        (#{make-wrap\ 9081}#
                                          (cons #{m\ 10199}# #{ms\ 10210}#)
                                          (if #{rib\ 10188}#
                                            (cons #{rib\ 10188}#
                                                  (cons 'shift
                                                        #{s\ 10211}#))
                                            (cons (quote shift) #{s\ 10211}#)))
                                        (cons 'hygiene
                                              (cdr #{p\ 10184}#))))))
                                (if (vector? #{x\ 10198}#)
                                  (let ((#{n\ 10219}#
                                          (vector-length #{x\ 10198}#)))
                                    (let ((#{v\ 10221}#
                                            (make-vector #{n\ 10219}#)))
                                      (letrec ((#{loop\ 10224}#
                                                 (lambda (#{i\ 10225}#)
                                                   (if (#{fx=\ 8981}#
                                                         #{i\ 10225}#
                                                         #{n\ 10219}#)
                                                     (begin
                                                       (if #f #f)
                                                       #{v\ 10221}#)
                                                     (begin
                                                       (vector-set!
                                                         #{v\ 10221}#
                                                         #{i\ 10225}#
                                                         (#{rebuild-macro-output\ 10197}#
                                                           (vector-ref
                                                             #{x\ 10198}#
                                                             #{i\ 10225}#)
                                                           #{m\ 10199}#))
                                                       (#{loop\ 10224}#
                                                         (#{fx+\ 8977}#
                                                           #{i\ 10225}#
                                                           1)))))))
                                        (#{loop\ 10224}# 0))))
                                  (if (symbol? #{x\ 10198}#)
                                    (syntax-violation
                                      #f
                                      "encountered raw symbol in macro output"
                                      (#{source-wrap\ 9147}#
                                        #{e\ 10185}#
                                        #{w\ 10187}#
                                        (#{wrap-subst\ 9085}# #{w\ 10187}#)
                                        #{mod\ 10189}#)
                                      #{x\ 10198}#)
                                    #{x\ 10198}#)))))))
                 (#{rebuild-macro-output\ 10197}#
                   ((car #{p\ 10184}#)
                    (#{wrap\ 9145}#
                      #{e\ 10185}#
                      (#{anti-mark\ 9117}# #{w\ 10187}#)
                      #{mod\ 10189}#))
                   (gensym "m")))))
           (#{chi-application\ 9165}#
             (lambda (#{x\ 10232}#
                      #{e\ 10233}#
                      #{r\ 10234}#
                      #{w\ 10235}#
                      #{s\ 10236}#
                      #{mod\ 10237}#)
               ((lambda (#{tmp\ 10244}#)
                  ((lambda (#{tmp\ 10245}#)
                     (if #{tmp\ 10245}#
                       (apply (lambda (#{e0\ 10248}# #{e1\ 10249}#)
                                (#{build-application\ 8998}#
                                  #{s\ 10236}#
                                  #{x\ 10232}#
                                  (map (lambda (#{e\ 10250}#)
                                         (#{chi\ 9161}#
                                           #{e\ 10250}#
                                           #{r\ 10234}#
                                           #{w\ 10235}#
                                           #{mod\ 10237}#))
                                       #{e1\ 10249}#)))
                              #{tmp\ 10245}#)
                       (syntax-violation
                         #f
                         "source expression failed to match any pattern"
                         #{tmp\ 10244}#)))
                   ($sc-dispatch
                     #{tmp\ 10244}#
                     '(any . each-any))))
                #{e\ 10233}#)))
           (#{chi-expr\ 9163}#
             (lambda (#{type\ 10253}#
                      #{value\ 10254}#
                      #{e\ 10255}#
                      #{r\ 10256}#
                      #{w\ 10257}#
                      #{s\ 10258}#
                      #{mod\ 10259}#)
               (if (memv #{type\ 10253}# (quote (lexical)))
                 (#{build-lexical-reference\ 9004}#
                   'value
                   #{s\ 10258}#
                   #{e\ 10255}#
                   #{value\ 10254}#)
                 (if (memv #{type\ 10253}# (quote (core core-form)))
                   (#{value\ 10254}#
                     #{e\ 10255}#
                     #{r\ 10256}#
                     #{w\ 10257}#
                     #{s\ 10258}#
                     #{mod\ 10259}#)
                   (if (memv #{type\ 10253}# (quote (module-ref)))
                     (call-with-values
                       (lambda () (#{value\ 10254}# #{e\ 10255}#))
                       (lambda (#{id\ 10270}# #{mod\ 10271}#)
                         (#{build-global-reference\ 9010}#
                           #{s\ 10258}#
                           #{id\ 10270}#
                           #{mod\ 10271}#)))
                     (if (memv #{type\ 10253}# (quote (lexical-call)))
                       (#{chi-application\ 9165}#
                         (#{build-lexical-reference\ 9004}#
                           'fun
                           (#{source-annotation\ 9055}# (car #{e\ 10255}#))
                           (car #{e\ 10255}#)
                           #{value\ 10254}#)
                         #{e\ 10255}#
                         #{r\ 10256}#
                         #{w\ 10257}#
                         #{s\ 10258}#
                         #{mod\ 10259}#)
                       (if (memv #{type\ 10253}# (quote (global-call)))
                         (#{chi-application\ 9165}#
                           (#{build-global-reference\ 9010}#
                             (#{source-annotation\ 9055}# (car #{e\ 10255}#))
                             (if (#{syntax-object?\ 9040}# #{value\ 10254}#)
                               (#{syntax-object-expression\ 9042}#
                                 #{value\ 10254}#)
                               #{value\ 10254}#)
                             (if (#{syntax-object?\ 9040}# #{value\ 10254}#)
                               (#{syntax-object-module\ 9046}#
                                 #{value\ 10254}#)
                               #{mod\ 10259}#))
                           #{e\ 10255}#
                           #{r\ 10256}#
                           #{w\ 10257}#
                           #{s\ 10258}#
                           #{mod\ 10259}#)
                         (if (memv #{type\ 10253}# (quote (constant)))
                           (#{build-data\ 9026}#
                             #{s\ 10258}#
                             (#{strip\ 9187}#
                               (#{source-wrap\ 9147}#
                                 #{e\ 10255}#
                                 #{w\ 10257}#
                                 #{s\ 10258}#
                                 #{mod\ 10259}#)
                               '(())))
                           (if (memv #{type\ 10253}# (quote (global)))
                             (#{build-global-reference\ 9010}#
                               #{s\ 10258}#
                               #{value\ 10254}#
                               #{mod\ 10259}#)
                             (if (memv #{type\ 10253}# (quote (call)))
                               (#{chi-application\ 9165}#
                                 (#{chi\ 9161}#
                                   (car #{e\ 10255}#)
                                   #{r\ 10256}#
                                   #{w\ 10257}#
                                   #{mod\ 10259}#)
                                 #{e\ 10255}#
                                 #{r\ 10256}#
                                 #{w\ 10257}#
                                 #{s\ 10258}#
                                 #{mod\ 10259}#)
                               (if (memv #{type\ 10253}# (quote (begin-form)))
                                 ((lambda (#{tmp\ 10281}#)
                                    ((lambda (#{tmp\ 10282}#)
                                       (if #{tmp\ 10282}#
                                         (apply (lambda (#{_\ 10286}#
                                                         #{e1\ 10287}#
                                                         #{e2\ 10288}#)
                                                  (#{chi-sequence\ 9149}#
                                                    (cons #{e1\ 10287}#
                                                          #{e2\ 10288}#)
                                                    #{r\ 10256}#
                                                    #{w\ 10257}#
                                                    #{s\ 10258}#
                                                    #{mod\ 10259}#))
                                                #{tmp\ 10282}#)
                                         (syntax-violation
                                           #f
                                           "source expression failed to match any pattern"
                                           #{tmp\ 10281}#)))
                                     ($sc-dispatch
                                       #{tmp\ 10281}#
                                       '(any any . each-any))))
                                  #{e\ 10255}#)
                                 (if (memv #{type\ 10253}#
                                           '(local-syntax-form))
                                   (#{chi-local-syntax\ 9171}#
                                     #{value\ 10254}#
                                     #{e\ 10255}#
                                     #{r\ 10256}#
                                     #{w\ 10257}#
                                     #{s\ 10258}#
                                     #{mod\ 10259}#
                                     #{chi-sequence\ 9149}#)
                                   (if (memv #{type\ 10253}#
                                             '(eval-when-form))
                                     ((lambda (#{tmp\ 10292}#)
                                        ((lambda (#{tmp\ 10293}#)
                                           (if #{tmp\ 10293}#
                                             (apply (lambda (#{_\ 10298}#
                                                             #{x\ 10299}#
                                                             #{e1\ 10300}#
                                                             #{e2\ 10301}#)
                                                      (let ((#{when-list\ 10303}#
                                                              (#{chi-when-list\ 9155}#
                                                                #{e\ 10255}#
                                                                #{x\ 10299}#
                                                                #{w\ 10257}#)))
                                                        (if (memq 'eval
                                                                  #{when-list\ 10303}#)
                                                          (#{chi-sequence\ 9149}#
                                                            (cons #{e1\ 10300}#
                                                                  #{e2\ 10301}#)
                                                            #{r\ 10256}#
                                                            #{w\ 10257}#
                                                            #{s\ 10258}#
                                                            #{mod\ 10259}#)
                                                          (#{chi-void\ 9175}#))))
                                                    #{tmp\ 10293}#)
                                             (syntax-violation
                                               #f
                                               "source expression failed to match any pattern"
                                               #{tmp\ 10292}#)))
                                         ($sc-dispatch
                                           #{tmp\ 10292}#
                                           '(any each-any any . each-any))))
                                      #{e\ 10255}#)
                                     (if (memv #{type\ 10253}#
                                               '(define-form
                                                  define-syntax-form))
                                       (syntax-violation
                                         #f
                                         "definition in expression context"
                                         #{e\ 10255}#
                                         (#{wrap\ 9145}#
                                           #{value\ 10254}#
                                           #{w\ 10257}#
                                           #{mod\ 10259}#))
                                       (if (memv #{type\ 10253}#
                                                 '(syntax))
                                         (syntax-violation
                                           #f
                                           "reference to pattern variable outside syntax form"
                                           (#{source-wrap\ 9147}#
                                             #{e\ 10255}#
                                             #{w\ 10257}#
                                             #{s\ 10258}#
                                             #{mod\ 10259}#))
                                         (if (memv #{type\ 10253}#
                                                   '(displaced-lexical))
                                           (syntax-violation
                                             #f
                                             "reference to identifier outside its scope"
                                             (#{source-wrap\ 9147}#
                                               #{e\ 10255}#
                                               #{w\ 10257}#
                                               #{s\ 10258}#
                                               #{mod\ 10259}#))
                                           (syntax-violation
                                             #f
                                             "unexpected syntax"
                                             (#{source-wrap\ 9147}#
                                               #{e\ 10255}#
                                               #{w\ 10257}#
                                               #{s\ 10258}#
                                               #{mod\ 10259}#))))))))))))))))))
           (#{chi\ 9161}#
             (lambda (#{e\ 10310}#
                      #{r\ 10311}#
                      #{w\ 10312}#
                      #{mod\ 10313}#)
               (call-with-values
                 (lambda ()
                   (#{syntax-type\ 9157}#
                     #{e\ 10310}#
                     #{r\ 10311}#
                     #{w\ 10312}#
                     (#{source-annotation\ 9055}# #{e\ 10310}#)
                     #f
                     #{mod\ 10313}#
                     #f))
                 (lambda (#{type\ 10318}#
                          #{value\ 10319}#
                          #{e\ 10320}#
                          #{w\ 10321}#
                          #{s\ 10322}#
                          #{mod\ 10323}#)
                   (#{chi-expr\ 9163}#
                     #{type\ 10318}#
                     #{value\ 10319}#
                     #{e\ 10320}#
                     #{r\ 10311}#
                     #{w\ 10321}#
                     #{s\ 10322}#
                     #{mod\ 10323}#)))))
           (#{chi-top\ 9159}#
             (lambda (#{e\ 10330}#
                      #{r\ 10331}#
                      #{w\ 10332}#
                      #{m\ 10333}#
                      #{esew\ 10334}#
                      #{mod\ 10335}#)
               (call-with-values
                 (lambda ()
                   (#{syntax-type\ 9157}#
                     #{e\ 10330}#
                     #{r\ 10331}#
                     #{w\ 10332}#
                     (#{source-annotation\ 9055}# #{e\ 10330}#)
                     #f
                     #{mod\ 10335}#
                     #f))
                 (lambda (#{type\ 10356}#
                          #{value\ 10357}#
                          #{e\ 10358}#
                          #{w\ 10359}#
                          #{s\ 10360}#
                          #{mod\ 10361}#)
                   (if (memv #{type\ 10356}# (quote (begin-form)))
                     ((lambda (#{tmp\ 10369}#)
                        ((lambda (#{tmp\ 10370}#)
                           (if #{tmp\ 10370}#
                             (apply (lambda (#{_\ 10372}#)
                                      (#{chi-void\ 9175}#))
                                    #{tmp\ 10370}#)
                             ((lambda (#{tmp\ 10373}#)
                                (if #{tmp\ 10373}#
                                  (apply (lambda (#{_\ 10377}#
                                                  #{e1\ 10378}#
                                                  #{e2\ 10379}#)
                                           (#{chi-top-sequence\ 9151}#
                                             (cons #{e1\ 10378}# #{e2\ 10379}#)
                                             #{r\ 10331}#
                                             #{w\ 10359}#
                                             #{s\ 10360}#
                                             #{m\ 10333}#
                                             #{esew\ 10334}#
                                             #{mod\ 10361}#))
                                         #{tmp\ 10373}#)
                                  (syntax-violation
                                    #f
                                    "source expression failed to match any pattern"
                                    #{tmp\ 10369}#)))
                              ($sc-dispatch
                                #{tmp\ 10369}#
                                '(any any . each-any)))))
                         ($sc-dispatch #{tmp\ 10369}# (quote (any)))))
                      #{e\ 10358}#)
                     (if (memv #{type\ 10356}#
                               '(local-syntax-form))
                       (#{chi-local-syntax\ 9171}#
                         #{value\ 10357}#
                         #{e\ 10358}#
                         #{r\ 10331}#
                         #{w\ 10359}#
                         #{s\ 10360}#
                         #{mod\ 10361}#
                         (lambda (#{body\ 10382}#
                                  #{r\ 10383}#
                                  #{w\ 10384}#
                                  #{s\ 10385}#
                                  #{mod\ 10386}#)
                           (#{chi-top-sequence\ 9151}#
                             #{body\ 10382}#
                             #{r\ 10383}#
                             #{w\ 10384}#
                             #{s\ 10385}#
                             #{m\ 10333}#
                             #{esew\ 10334}#
                             #{mod\ 10386}#)))
                       (if (memv #{type\ 10356}# (quote (eval-when-form)))
                         ((lambda (#{tmp\ 10393}#)
                            ((lambda (#{tmp\ 10394}#)
                               (if #{tmp\ 10394}#
                                 (apply (lambda (#{_\ 10399}#
                                                 #{x\ 10400}#
                                                 #{e1\ 10401}#
                                                 #{e2\ 10402}#)
                                          (let ((#{when-list\ 10405}#
                                                  (#{chi-when-list\ 9155}#
                                                    #{e\ 10358}#
                                                    #{x\ 10400}#
                                                    #{w\ 10359}#))
                                                (#{body\ 10406}#
                                                  (cons #{e1\ 10401}#
                                                        #{e2\ 10402}#)))
                                            (if (eq? #{m\ 10333}# (quote e))
                                              (if (memq 'eval
                                                        #{when-list\ 10405}#)
                                                (#{chi-top-sequence\ 9151}#
                                                  #{body\ 10406}#
                                                  #{r\ 10331}#
                                                  #{w\ 10359}#
                                                  #{s\ 10360}#
                                                  'e
                                                  '(eval)
                                                  #{mod\ 10361}#)
                                                (#{chi-void\ 9175}#))
                                              (if (memq 'load
                                                        #{when-list\ 10405}#)
                                                (if (let ((#{t\ 10415}#
                                                            (memq 'compile
                                                                  #{when-list\ 10405}#)))
                                                      (if #{t\ 10415}#
                                                        #{t\ 10415}#
                                                        (if (eq? #{m\ 10333}#
                                                                 'c&e)
                                                          (memq 'eval
                                                                #{when-list\ 10405}#)
                                                          #f)))
                                                  (#{chi-top-sequence\ 9151}#
                                                    #{body\ 10406}#
                                                    #{r\ 10331}#
                                                    #{w\ 10359}#
                                                    #{s\ 10360}#
                                                    'c&e
                                                    '(compile load)
                                                    #{mod\ 10361}#)
                                                  (if (memq #{m\ 10333}#
                                                            '(c c&e))
                                                    (#{chi-top-sequence\ 9151}#
                                                      #{body\ 10406}#
                                                      #{r\ 10331}#
                                                      #{w\ 10359}#
                                                      #{s\ 10360}#
                                                      'c
                                                      '(load)
                                                      #{mod\ 10361}#)
                                                    (#{chi-void\ 9175}#)))
                                                (if (let ((#{t\ 10423}#
                                                            (memq 'compile
                                                                  #{when-list\ 10405}#)))
                                                      (if #{t\ 10423}#
                                                        #{t\ 10423}#
                                                        (if (eq? #{m\ 10333}#
                                                                 'c&e)
                                                          (memq 'eval
                                                                #{when-list\ 10405}#)
                                                          #f)))
                                                  (begin
                                                    (#{top-level-eval-hook\ 8985}#
                                                      (#{chi-top-sequence\ 9151}#
                                                        #{body\ 10406}#
                                                        #{r\ 10331}#
                                                        #{w\ 10359}#
                                                        #{s\ 10360}#
                                                        'e
                                                        '(eval)
                                                        #{mod\ 10361}#)
                                                      #{mod\ 10361}#)
                                                    (#{chi-void\ 9175}#))
                                                  (#{chi-void\ 9175}#))))))
                                        #{tmp\ 10394}#)
                                 (syntax-violation
                                   #f
                                   "source expression failed to match any pattern"
                                   #{tmp\ 10393}#)))
                             ($sc-dispatch
                               #{tmp\ 10393}#
                               '(any each-any any . each-any))))
                          #{e\ 10358}#)
                         (if (memv #{type\ 10356}#
                                   '(define-syntax-form))
                           (let ((#{n\ 10431}#
                                   (#{id-var-name\ 9133}#
                                     #{value\ 10357}#
                                     #{w\ 10359}#))
                                 (#{r\ 10432}#
                                   (#{macros-only-env\ 9068}# #{r\ 10331}#)))
                             (if (memv #{m\ 10333}# (quote (c)))
                               (if (memq (quote compile) #{esew\ 10334}#)
                                 (let ((#{e\ 10435}#
                                         (#{chi-install-global\ 9153}#
                                           #{n\ 10431}#
                                           (#{chi\ 9161}#
                                             #{e\ 10358}#
                                             #{r\ 10432}#
                                             #{w\ 10359}#
                                             #{mod\ 10361}#))))
                                   (begin
                                     (#{top-level-eval-hook\ 8985}#
                                       #{e\ 10435}#
                                       #{mod\ 10361}#)
                                     (if (memq (quote load) #{esew\ 10334}#)
                                       #{e\ 10435}#
                                       (#{chi-void\ 9175}#))))
                                 (if (memq (quote load) #{esew\ 10334}#)
                                   (#{chi-install-global\ 9153}#
                                     #{n\ 10431}#
                                     (#{chi\ 9161}#
                                       #{e\ 10358}#
                                       #{r\ 10432}#
                                       #{w\ 10359}#
                                       #{mod\ 10361}#))
                                   (#{chi-void\ 9175}#)))
                               (if (memv #{m\ 10333}# (quote (c&e)))
                                 (let ((#{e\ 10438}#
                                         (#{chi-install-global\ 9153}#
                                           #{n\ 10431}#
                                           (#{chi\ 9161}#
                                             #{e\ 10358}#
                                             #{r\ 10432}#
                                             #{w\ 10359}#
                                             #{mod\ 10361}#))))
                                   (begin
                                     (#{top-level-eval-hook\ 8985}#
                                       #{e\ 10438}#
                                       #{mod\ 10361}#)
                                     #{e\ 10438}#))
                                 (begin
                                   (if (memq (quote eval) #{esew\ 10334}#)
                                     (#{top-level-eval-hook\ 8985}#
                                       (#{chi-install-global\ 9153}#
                                         #{n\ 10431}#
                                         (#{chi\ 9161}#
                                           #{e\ 10358}#
                                           #{r\ 10432}#
                                           #{w\ 10359}#
                                           #{mod\ 10361}#))
                                       #{mod\ 10361}#))
                                   (#{chi-void\ 9175}#)))))
                           (if (memv #{type\ 10356}# (quote (define-form)))
                             (let ((#{n\ 10443}#
                                     (#{id-var-name\ 9133}#
                                       #{value\ 10357}#
                                       #{w\ 10359}#)))
                               (let ((#{type\ 10445}#
                                       (#{binding-type\ 9059}#
                                         (#{lookup\ 9070}#
                                           #{n\ 10443}#
                                           #{r\ 10331}#
                                           #{mod\ 10361}#))))
                                 (if (memv #{type\ 10445}#
                                           '(global core macro module-ref))
                                   (begin
                                     (if (if (not (module-local-variable
                                                    (current-module)
                                                    #{n\ 10443}#))
                                           (current-module)
                                           #f)
                                       (let ((#{old\ 10450}#
                                               (module-variable
                                                 (current-module)
                                                 #{n\ 10443}#)))
                                         (module-define!
                                           (current-module)
                                           #{n\ 10443}#
                                           (if (variable? #{old\ 10450}#)
                                             (variable-ref #{old\ 10450}#)
                                             #f))))
                                     (let ((#{x\ 10453}#
                                             (#{build-global-definition\ 9016}#
                                               #{s\ 10360}#
                                               #{n\ 10443}#
                                               (#{chi\ 9161}#
                                                 #{e\ 10358}#
                                                 #{r\ 10331}#
                                                 #{w\ 10359}#
                                                 #{mod\ 10361}#))))
                                       (begin
                                         (if (eq? #{m\ 10333}# (quote c&e))
                                           (#{top-level-eval-hook\ 8985}#
                                             #{x\ 10453}#
                                             #{mod\ 10361}#))
                                         #{x\ 10453}#)))
                                   (if (memv #{type\ 10445}#
                                             '(displaced-lexical))
                                     (syntax-violation
                                       #f
                                       "identifier out of context"
                                       #{e\ 10358}#
                                       (#{wrap\ 9145}#
                                         #{value\ 10357}#
                                         #{w\ 10359}#
                                         #{mod\ 10361}#))
                                     (syntax-violation
                                       #f
                                       "cannot define keyword at top level"
                                       #{e\ 10358}#
                                       (#{wrap\ 9145}#
                                         #{value\ 10357}#
                                         #{w\ 10359}#
                                         #{mod\ 10361}#))))))
                             (let ((#{x\ 10459}#
                                     (#{chi-expr\ 9163}#
                                       #{type\ 10356}#
                                       #{value\ 10357}#
                                       #{e\ 10358}#
                                       #{r\ 10331}#
                                       #{w\ 10359}#
                                       #{s\ 10360}#
                                       #{mod\ 10361}#)))
                               (begin
                                 (if (eq? #{m\ 10333}# (quote c&e))
                                   (#{top-level-eval-hook\ 8985}#
                                     #{x\ 10459}#
                                     #{mod\ 10361}#))
                                 #{x\ 10459}#)))))))))))
           (#{syntax-type\ 9157}#
             (lambda (#{e\ 10460}#
                      #{r\ 10461}#
                      #{w\ 10462}#
                      #{s\ 10463}#
                      #{rib\ 10464}#
                      #{mod\ 10465}#
                      #{for-car?\ 10466}#)
               (if (symbol? #{e\ 10460}#)
                 (let ((#{n\ 10478}#
                         (#{id-var-name\ 9133}# #{e\ 10460}# #{w\ 10462}#)))
                   (let ((#{b\ 10480}#
                           (#{lookup\ 9070}#
                             #{n\ 10478}#
                             #{r\ 10461}#
                             #{mod\ 10465}#)))
                     (let ((#{type\ 10482}#
                             (#{binding-type\ 9059}# #{b\ 10480}#)))
                       (if (memv #{type\ 10482}# (quote (lexical)))
                         (values
                           #{type\ 10482}#
                           (#{binding-value\ 9061}# #{b\ 10480}#)
                           #{e\ 10460}#
                           #{w\ 10462}#
                           #{s\ 10463}#
                           #{mod\ 10465}#)
                         (if (memv #{type\ 10482}# (quote (global)))
                           (values
                             #{type\ 10482}#
                             #{n\ 10478}#
                             #{e\ 10460}#
                             #{w\ 10462}#
                             #{s\ 10463}#
                             #{mod\ 10465}#)
                           (if (memv #{type\ 10482}# (quote (macro)))
                             (if #{for-car?\ 10466}#
                               (values
                                 #{type\ 10482}#
                                 (#{binding-value\ 9061}# #{b\ 10480}#)
                                 #{e\ 10460}#
                                 #{w\ 10462}#
                                 #{s\ 10463}#
                                 #{mod\ 10465}#)
                               (#{syntax-type\ 9157}#
                                 (#{chi-macro\ 9167}#
                                   (#{binding-value\ 9061}# #{b\ 10480}#)
                                   #{e\ 10460}#
                                   #{r\ 10461}#
                                   #{w\ 10462}#
                                   #{rib\ 10464}#
                                   #{mod\ 10465}#)
                                 #{r\ 10461}#
                                 '(())
                                 #{s\ 10463}#
                                 #{rib\ 10464}#
                                 #{mod\ 10465}#
                                 #f))
                             (values
                               #{type\ 10482}#
                               (#{binding-value\ 9061}# #{b\ 10480}#)
                               #{e\ 10460}#
                               #{w\ 10462}#
                               #{s\ 10463}#
                               #{mod\ 10465}#)))))))
                 (if (pair? #{e\ 10460}#)
                   (let ((#{first\ 10491}# (car #{e\ 10460}#)))
                     (call-with-values
                       (lambda ()
                         (#{syntax-type\ 9157}#
                           #{first\ 10491}#
                           #{r\ 10461}#
                           #{w\ 10462}#
                           #{s\ 10463}#
                           #{rib\ 10464}#
                           #{mod\ 10465}#
                           #t))
                       (lambda (#{ftype\ 10492}#
                                #{fval\ 10493}#
                                #{fe\ 10494}#
                                #{fw\ 10495}#
                                #{fs\ 10496}#
                                #{fmod\ 10497}#)
                         (if (memv #{ftype\ 10492}# (quote (lexical)))
                           (values
                             'lexical-call
                             #{fval\ 10493}#
                             #{e\ 10460}#
                             #{w\ 10462}#
                             #{s\ 10463}#
                             #{mod\ 10465}#)
                           (if (memv #{ftype\ 10492}# (quote (global)))
                             (values
                               'global-call
                               (#{make-syntax-object\ 9038}#
                                 #{fval\ 10493}#
                                 #{w\ 10462}#
                                 #{fmod\ 10497}#)
                               #{e\ 10460}#
                               #{w\ 10462}#
                               #{s\ 10463}#
                               #{mod\ 10465}#)
                             (if (memv #{ftype\ 10492}# (quote (macro)))
                               (#{syntax-type\ 9157}#
                                 (#{chi-macro\ 9167}#
                                   #{fval\ 10493}#
                                   #{e\ 10460}#
                                   #{r\ 10461}#
                                   #{w\ 10462}#
                                   #{rib\ 10464}#
                                   #{mod\ 10465}#)
                                 #{r\ 10461}#
                                 '(())
                                 #{s\ 10463}#
                                 #{rib\ 10464}#
                                 #{mod\ 10465}#
                                 #{for-car?\ 10466}#)
                               (if (memv #{ftype\ 10492}# (quote (module-ref)))
                                 (call-with-values
                                   (lambda () (#{fval\ 10493}# #{e\ 10460}#))
                                   (lambda (#{sym\ 10509}# #{mod\ 10510}#)
                                     (#{syntax-type\ 9157}#
                                       #{sym\ 10509}#
                                       #{r\ 10461}#
                                       #{w\ 10462}#
                                       #{s\ 10463}#
                                       #{rib\ 10464}#
                                       #{mod\ 10510}#
                                       #{for-car?\ 10466}#)))
                                 (if (memv #{ftype\ 10492}# (quote (core)))
                                   (values
                                     'core-form
                                     #{fval\ 10493}#
                                     #{e\ 10460}#
                                     #{w\ 10462}#
                                     #{s\ 10463}#
                                     #{mod\ 10465}#)
                                   (if (memv #{ftype\ 10492}#
                                             '(local-syntax))
                                     (values
                                       'local-syntax-form
                                       #{fval\ 10493}#
                                       #{e\ 10460}#
                                       #{w\ 10462}#
                                       #{s\ 10463}#
                                       #{mod\ 10465}#)
                                     (if (memv #{ftype\ 10492}#
                                               '(begin))
                                       (values
                                         'begin-form
                                         #f
                                         #{e\ 10460}#
                                         #{w\ 10462}#
                                         #{s\ 10463}#
                                         #{mod\ 10465}#)
                                       (if (memv #{ftype\ 10492}#
                                                 '(eval-when))
                                         (values
                                           'eval-when-form
                                           #f
                                           #{e\ 10460}#
                                           #{w\ 10462}#
                                           #{s\ 10463}#
                                           #{mod\ 10465}#)
                                         (if (memv #{ftype\ 10492}#
                                                   '(define))
                                           ((lambda (#{tmp\ 10518}#)
                                              ((lambda (#{tmp\ 10519}#)
                                                 (if (if #{tmp\ 10519}#
                                                       (apply (lambda (#{_\ 10523}#
                                                                       #{name\ 10524}#
                                                                       #{val\ 10525}#)
                                                                (#{id?\ 9076}#
                                                                  #{name\ 10524}#))
                                                              #{tmp\ 10519}#)
                                                       #f)
                                                   (apply (lambda (#{_\ 10529}#
                                                                   #{name\ 10530}#
                                                                   #{val\ 10531}#)
                                                            (values
                                                              'define-form
                                                              #{name\ 10530}#
                                                              #{val\ 10531}#
                                                              #{w\ 10462}#
                                                              #{s\ 10463}#
                                                              #{mod\ 10465}#))
                                                          #{tmp\ 10519}#)
                                                   ((lambda (#{tmp\ 10532}#)
                                                      (if (if #{tmp\ 10532}#
                                                            (apply (lambda (#{_\ 10538}#
                                                                            #{name\ 10539}#
                                                                            #{args\ 10540}#
                                                                            #{e1\ 10541}#
                                                                            #{e2\ 10542}#)
                                                                     (if (#{id?\ 9076}#
                                                                           #{name\ 10539}#)
                                                                       (#{valid-bound-ids?\ 9139}#
                                                                         (#{lambda-var-list\ 9191}#
                                                                           #{args\ 10540}#))
                                                                       #f))
                                                                   #{tmp\ 10532}#)
                                                            #f)
                                                        (apply (lambda (#{_\ 10550}#
                                                                        #{name\ 10551}#
                                                                        #{args\ 10552}#
                                                                        #{e1\ 10553}#
                                                                        #{e2\ 10554}#)
                                                                 (values
                                                                   'define-form
                                                                   (#{wrap\ 9145}#
                                                                     #{name\ 10551}#
                                                                     #{w\ 10462}#
                                                                     #{mod\ 10465}#)
                                                                   (#{decorate-source\ 8994}#
                                                                     (cons '#(syntax-object
                                                                              lambda
                                                                              ((top)
                                                                               #(ribcage
                                                                                 #(_
                                                                                   name
                                                                                   args
                                                                                   e1
                                                                                   e2)
                                                                                 #((top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top))
                                                                                 #("i10545"
                                                                                   "i10546"
                                                                                   "i10547"
                                                                                   "i10548"
                                                                                   "i10549"))
                                                                               #(ribcage
                                                                                 ()
                                                                                 ()
                                                                                 ())
                                                                               #(ribcage
                                                                                 ()
                                                                                 ()
                                                                                 ())
                                                                               #(ribcage
                                                                                 #(ftype
                                                                                   fval
                                                                                   fe
                                                                                   fw
                                                                                   fs
                                                                                   fmod)
                                                                                 #((top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top))
                                                                                 #("i10498"
                                                                                   "i10499"
                                                                                   "i10500"
                                                                                   "i10501"
                                                                                   "i10502"
                                                                                   "i10503"))
                                                                               #(ribcage
                                                                                 ()
                                                                                 ()
                                                                                 ())
                                                                               #(ribcage
                                                                                 #(first)
                                                                                 #((top))
                                                                                 #("i10490"))
                                                                               #(ribcage
                                                                                 ()
                                                                                 ()
                                                                                 ())
                                                                               #(ribcage
                                                                                 ()
                                                                                 ()
                                                                                 ())
                                                                               #(ribcage
                                                                                 ()
                                                                                 ()
                                                                                 ())
                                                                               #(ribcage
                                                                                 #(e
                                                                                   r
                                                                                   w
                                                                                   s
                                                                                   rib
                                                                                   mod
                                                                                   for-car?)
                                                                                 #((top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top))
                                                                                 #("i10467"
                                                                                   "i10468"
                                                                                   "i10469"
                                                                                   "i10470"
                                                                                   "i10471"
                                                                                   "i10472"
                                                                                   "i10473"))
                                                                               #(ribcage
                                                                                 (lambda-var-list
                                                                                   gen-var
                                                                                   strip
                                                                                   chi-lambda-case
                                                                                   lambda*-formals
                                                                                   chi-simple-lambda
                                                                                   lambda-formals
                                                                                   ellipsis?
                                                                                   chi-void
                                                                                   eval-local-transformer
                                                                                   chi-local-syntax
                                                                                   chi-body
                                                                                   chi-macro
                                                                                   chi-application
                                                                                   chi-expr
                                                                                   chi
                                                                                   chi-top
                                                                                   syntax-type
                                                                                   chi-when-list
                                                                                   chi-install-global
                                                                                   chi-top-sequence
                                                                                   chi-sequence
                                                                                   source-wrap
                                                                                   wrap
                                                                                   bound-id-member?
                                                                                   distinct-bound-ids?
                                                                                   valid-bound-ids?
                                                                                   bound-id=?
                                                                                   free-id=?
                                                                                   id-var-name
                                                                                   same-marks?
                                                                                   join-marks
                                                                                   join-wraps
                                                                                   smart-append
                                                                                   make-binding-wrap
                                                                                   extend-ribcage!
                                                                                   make-empty-ribcage
                                                                                   new-mark
                                                                                   anti-mark
                                                                                   the-anti-mark
                                                                                   top-marked?
                                                                                   top-wrap
                                                                                   empty-wrap
                                                                                   set-ribcage-labels!
                                                                                   set-ribcage-marks!
                                                                                   set-ribcage-symnames!
                                                                                   ribcage-labels
                                                                                   ribcage-marks
                                                                                   ribcage-symnames
                                                                                   ribcage?
                                                                                   make-ribcage
                                                                                   gen-labels
                                                                                   gen-label
                                                                                   make-rename
                                                                                   rename-marks
                                                                                   rename-new
                                                                                   rename-old
                                                                                   subst-rename?
                                                                                   wrap-subst
                                                                                   wrap-marks
                                                                                   make-wrap
                                                                                   id-sym-name&marks
                                                                                   id-sym-name
                                                                                   id?
                                                                                   nonsymbol-id?
                                                                                   global-extend
                                                                                   lookup
                                                                                   macros-only-env
                                                                                   extend-var-env
                                                                                   extend-env
                                                                                   null-env
                                                                                   binding-value
                                                                                   binding-type
                                                                                   make-binding
                                                                                   arg-check
                                                                                   source-annotation
                                                                                   no-source
                                                                                   set-syntax-object-module!
                                                                                   set-syntax-object-wrap!
                                                                                   set-syntax-object-expression!
                                                                                   syntax-object-module
                                                                                   syntax-object-wrap
                                                                                   syntax-object-expression
                                                                                   syntax-object?
                                                                                   make-syntax-object
                                                                                   build-lexical-var
                                                                                   build-letrec
                                                                                   build-named-let
                                                                                   build-let
                                                                                   build-sequence
                                                                                   build-data
                                                                                   build-primref
                                                                                   build-lambda-case
                                                                                   build-case-lambda
                                                                                   build-simple-lambda
                                                                                   build-global-definition
                                                                                   maybe-name-value!
                                                                                   build-global-assignment
                                                                                   build-global-reference
                                                                                   analyze-variable
                                                                                   build-lexical-assignment
                                                                                   build-lexical-reference
                                                                                   build-dynlet
                                                                                   build-conditional
                                                                                   build-application
                                                                                   build-void
                                                                                   decorate-source
                                                                                   get-global-definition-hook
                                                                                   put-global-definition-hook
                                                                                   gensym-hook
                                                                                   local-eval-hook
                                                                                   top-level-eval-hook
                                                                                   fx<
                                                                                   fx=
                                                                                   fx-
                                                                                   fx+
                                                                                   *mode*
                                                                                   noexpand)
                                                                                 ((top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top))
                                                                                 ("i9190"
                                                                                  "i9188"
                                                                                  "i9186"
                                                                                  "i9184"
                                                                                  "i9182"
                                                                                  "i9180"
                                                                                  "i9178"
                                                                                  "i9176"
                                                                                  "i9174"
                                                                                  "i9172"
                                                                                  "i9170"
                                                                                  "i9168"
                                                                                  "i9166"
                                                                                  "i9164"
                                                                                  "i9162"
                                                                                  "i9160"
                                                                                  "i9158"
                                                                                  "i9156"
                                                                                  "i9154"
                                                                                  "i9152"
                                                                                  "i9150"
                                                                                  "i9148"
                                                                                  "i9146"
                                                                                  "i9144"
                                                                                  "i9142"
                                                                                  "i9140"
                                                                                  "i9138"
                                                                                  "i9136"
                                                                                  "i9134"
                                                                                  "i9132"
                                                                                  "i9130"
                                                                                  "i9128"
                                                                                  "i9126"
                                                                                  "i9124"
                                                                                  "i9122"
                                                                                  "i9120"
                                                                                  "i9119"
                                                                                  "i9118"
                                                                                  "i9116"
                                                                                  "i9115"
                                                                                  "i9114"
                                                                                  "i9113"
                                                                                  "i9112"
                                                                                  "i9110"
                                                                                  "i9108"
                                                                                  "i9106"
                                                                                  "i9104"
                                                                                  "i9102"
                                                                                  "i9100"
                                                                                  "i9098"
                                                                                  "i9096"
                                                                                  "i9093"
                                                                                  "i9091"
                                                                                  "i9090"
                                                                                  "i9089"
                                                                                  "i9088"
                                                                                  "i9087"
                                                                                  "i9086"
                                                                                  "i9084"
                                                                                  "i9082"
                                                                                  "i9080"
                                                                                  "i9078"
                                                                                  "i9077"
                                                                                  "i9075"
                                                                                  "i9073"
                                                                                  "i9071"
                                                                                  "i9069"
                                                                                  "i9067"
                                                                                  "i9065"
                                                                                  "i9063"
                                                                                  "i9062"
                                                                                  "i9060"
                                                                                  "i9058"
                                                                                  "i9057"
                                                                                  "i9056"
                                                                                  "i9054"
                                                                                  "i9053"
                                                                                  "i9051"
                                                                                  "i9049"
                                                                                  "i9047"
                                                                                  "i9045"
                                                                                  "i9043"
                                                                                  "i9041"
                                                                                  "i9039"
                                                                                  "i9037"
                                                                                  "i9035"
                                                                                  "i9033"
                                                                                  "i9031"
                                                                                  "i9029"
                                                                                  "i9027"
                                                                                  "i9025"
                                                                                  "i9023"
                                                                                  "i9021"
                                                                                  "i9019"
                                                                                  "i9017"
                                                                                  "i9015"
                                                                                  "i9013"
                                                                                  "i9011"
                                                                                  "i9009"
                                                                                  "i9007"
                                                                                  "i9005"
                                                                                  "i9003"
                                                                                  "i9001"
                                                                                  "i8999"
                                                                                  "i8997"
                                                                                  "i8995"
                                                                                  "i8993"
                                                                                  "i8991"
                                                                                  "i8989"
                                                                                  "i8988"
                                                                                  "i8986"
                                                                                  "i8984"
                                                                                  "i8982"
                                                                                  "i8980"
                                                                                  "i8978"
                                                                                  "i8976"
                                                                                  "i8974"
                                                                                  "i8972"))
                                                                               #(ribcage
                                                                                 (define-structure
                                                                                   and-map*)
                                                                                 ((top)
                                                                                  (top))
                                                                                 ("i8875"
                                                                                  "i8873")))
                                                                              (hygiene
                                                                                guile))
                                                                           (#{wrap\ 9145}#
                                                                             (cons #{args\ 10552}#
                                                                                   (cons #{e1\ 10553}#
                                                                                         #{e2\ 10554}#))
                                                                             #{w\ 10462}#
                                                                             #{mod\ 10465}#))
                                                                     #{s\ 10463}#)
                                                                   '(())
                                                                   #{s\ 10463}#
                                                                   #{mod\ 10465}#))
                                                               #{tmp\ 10532}#)
                                                        ((lambda (#{tmp\ 10557}#)
                                                           (if (if #{tmp\ 10557}#
                                                                 (apply (lambda (#{_\ 10560}#
                                                                                 #{name\ 10561}#)
                                                                          (#{id?\ 9076}#
                                                                            #{name\ 10561}#))
                                                                        #{tmp\ 10557}#)
                                                                 #f)
                                                             (apply (lambda (#{_\ 10564}#
                                                                             #{name\ 10565}#)
                                                                      (values
                                                                        'define-form
                                                                        (#{wrap\ 9145}#
                                                                          #{name\ 10565}#
                                                                          #{w\ 10462}#
                                                                          #{mod\ 10465}#)
                                                                        '(#(syntax-object
                                                                            if
                                                                            ((top)
                                                                             #(ribcage
                                                                               #(_
                                                                                 name)
                                                                               #((top)
                                                                                 (top))
                                                                               #("i10562"
                                                                                 "i10563"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(ftype
                                                                                 fval
                                                                                 fe
                                                                                 fw
                                                                                 fs
                                                                                 fmod)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i10498"
                                                                                 "i10499"
                                                                                 "i10500"
                                                                                 "i10501"
                                                                                 "i10502"
                                                                                 "i10503"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(first)
                                                                               #((top))
                                                                               #("i10490"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(e
                                                                                 r
                                                                                 w
                                                                                 s
                                                                                 rib
                                                                                 mod
                                                                                 for-car?)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i10467"
                                                                                 "i10468"
                                                                                 "i10469"
                                                                                 "i10470"
                                                                                 "i10471"
                                                                                 "i10472"
                                                                                 "i10473"))
                                                                             #(ribcage
                                                                               (lambda-var-list
                                                                                 gen-var
                                                                                 strip
                                                                                 chi-lambda-case
                                                                                 lambda*-formals
                                                                                 chi-simple-lambda
                                                                                 lambda-formals
                                                                                 ellipsis?
                                                                                 chi-void
                                                                                 eval-local-transformer
                                                                                 chi-local-syntax
                                                                                 chi-body
                                                                                 chi-macro
                                                                                 chi-application
                                                                                 chi-expr
                                                                                 chi
                                                                                 chi-top
                                                                                 syntax-type
                                                                                 chi-when-list
                                                                                 chi-install-global
                                                                                 chi-top-sequence
                                                                                 chi-sequence
                                                                                 source-wrap
                                                                                 wrap
                                                                                 bound-id-member?
                                                                                 distinct-bound-ids?
                                                                                 valid-bound-ids?
                                                                                 bound-id=?
                                                                                 free-id=?
                                                                                 id-var-name
                                                                                 same-marks?
                                                                                 join-marks
                                                                                 join-wraps
                                                                                 smart-append
                                                                                 make-binding-wrap
                                                                                 extend-ribcage!
                                                                                 make-empty-ribcage
                                                                                 new-mark
                                                                                 anti-mark
                                                                                 the-anti-mark
                                                                                 top-marked?
                                                                                 top-wrap
                                                                                 empty-wrap
                                                                                 set-ribcage-labels!
                                                                                 set-ribcage-marks!
                                                                                 set-ribcage-symnames!
                                                                                 ribcage-labels
                                                                                 ribcage-marks
                                                                                 ribcage-symnames
                                                                                 ribcage?
                                                                                 make-ribcage
                                                                                 gen-labels
                                                                                 gen-label
                                                                                 make-rename
                                                                                 rename-marks
                                                                                 rename-new
                                                                                 rename-old
                                                                                 subst-rename?
                                                                                 wrap-subst
                                                                                 wrap-marks
                                                                                 make-wrap
                                                                                 id-sym-name&marks
                                                                                 id-sym-name
                                                                                 id?
                                                                                 nonsymbol-id?
                                                                                 global-extend
                                                                                 lookup
                                                                                 macros-only-env
                                                                                 extend-var-env
                                                                                 extend-env
                                                                                 null-env
                                                                                 binding-value
                                                                                 binding-type
                                                                                 make-binding
                                                                                 arg-check
                                                                                 source-annotation
                                                                                 no-source
                                                                                 set-syntax-object-module!
                                                                                 set-syntax-object-wrap!
                                                                                 set-syntax-object-expression!
                                                                                 syntax-object-module
                                                                                 syntax-object-wrap
                                                                                 syntax-object-expression
                                                                                 syntax-object?
                                                                                 make-syntax-object
                                                                                 build-lexical-var
                                                                                 build-letrec
                                                                                 build-named-let
                                                                                 build-let
                                                                                 build-sequence
                                                                                 build-data
                                                                                 build-primref
                                                                                 build-lambda-case
                                                                                 build-case-lambda
                                                                                 build-simple-lambda
                                                                                 build-global-definition
                                                                                 maybe-name-value!
                                                                                 build-global-assignment
                                                                                 build-global-reference
                                                                                 analyze-variable
                                                                                 build-lexical-assignment
                                                                                 build-lexical-reference
                                                                                 build-dynlet
                                                                                 build-conditional
                                                                                 build-application
                                                                                 build-void
                                                                                 decorate-source
                                                                                 get-global-definition-hook
                                                                                 put-global-definition-hook
                                                                                 gensym-hook
                                                                                 local-eval-hook
                                                                                 top-level-eval-hook
                                                                                 fx<
                                                                                 fx=
                                                                                 fx-
                                                                                 fx+
                                                                                 *mode*
                                                                                 noexpand)
                                                                               ((top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top))
                                                                               ("i9190"
                                                                                "i9188"
                                                                                "i9186"
                                                                                "i9184"
                                                                                "i9182"
                                                                                "i9180"
                                                                                "i9178"
                                                                                "i9176"
                                                                                "i9174"
                                                                                "i9172"
                                                                                "i9170"
                                                                                "i9168"
                                                                                "i9166"
                                                                                "i9164"
                                                                                "i9162"
                                                                                "i9160"
                                                                                "i9158"
                                                                                "i9156"
                                                                                "i9154"
                                                                                "i9152"
                                                                                "i9150"
                                                                                "i9148"
                                                                                "i9146"
                                                                                "i9144"
                                                                                "i9142"
                                                                                "i9140"
                                                                                "i9138"
                                                                                "i9136"
                                                                                "i9134"
                                                                                "i9132"
                                                                                "i9130"
                                                                                "i9128"
                                                                                "i9126"
                                                                                "i9124"
                                                                                "i9122"
                                                                                "i9120"
                                                                                "i9119"
                                                                                "i9118"
                                                                                "i9116"
                                                                                "i9115"
                                                                                "i9114"
                                                                                "i9113"
                                                                                "i9112"
                                                                                "i9110"
                                                                                "i9108"
                                                                                "i9106"
                                                                                "i9104"
                                                                                "i9102"
                                                                                "i9100"
                                                                                "i9098"
                                                                                "i9096"
                                                                                "i9093"
                                                                                "i9091"
                                                                                "i9090"
                                                                                "i9089"
                                                                                "i9088"
                                                                                "i9087"
                                                                                "i9086"
                                                                                "i9084"
                                                                                "i9082"
                                                                                "i9080"
                                                                                "i9078"
                                                                                "i9077"
                                                                                "i9075"
                                                                                "i9073"
                                                                                "i9071"
                                                                                "i9069"
                                                                                "i9067"
                                                                                "i9065"
                                                                                "i9063"
                                                                                "i9062"
                                                                                "i9060"
                                                                                "i9058"
                                                                                "i9057"
                                                                                "i9056"
                                                                                "i9054"
                                                                                "i9053"
                                                                                "i9051"
                                                                                "i9049"
                                                                                "i9047"
                                                                                "i9045"
                                                                                "i9043"
                                                                                "i9041"
                                                                                "i9039"
                                                                                "i9037"
                                                                                "i9035"
                                                                                "i9033"
                                                                                "i9031"
                                                                                "i9029"
                                                                                "i9027"
                                                                                "i9025"
                                                                                "i9023"
                                                                                "i9021"
                                                                                "i9019"
                                                                                "i9017"
                                                                                "i9015"
                                                                                "i9013"
                                                                                "i9011"
                                                                                "i9009"
                                                                                "i9007"
                                                                                "i9005"
                                                                                "i9003"
                                                                                "i9001"
                                                                                "i8999"
                                                                                "i8997"
                                                                                "i8995"
                                                                                "i8993"
                                                                                "i8991"
                                                                                "i8989"
                                                                                "i8988"
                                                                                "i8986"
                                                                                "i8984"
                                                                                "i8982"
                                                                                "i8980"
                                                                                "i8978"
                                                                                "i8976"
                                                                                "i8974"
                                                                                "i8972"))
                                                                             #(ribcage
                                                                               (define-structure
                                                                                 and-map*)
                                                                               ((top)
                                                                                (top))
                                                                               ("i8875"
                                                                                "i8873")))
                                                                            (hygiene
                                                                              guile))
                                                                          #(syntax-object
                                                                            #f
                                                                            ((top)
                                                                             #(ribcage
                                                                               #(_
                                                                                 name)
                                                                               #((top)
                                                                                 (top))
                                                                               #("i10562"
                                                                                 "i10563"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(ftype
                                                                                 fval
                                                                                 fe
                                                                                 fw
                                                                                 fs
                                                                                 fmod)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i10498"
                                                                                 "i10499"
                                                                                 "i10500"
                                                                                 "i10501"
                                                                                 "i10502"
                                                                                 "i10503"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(first)
                                                                               #((top))
                                                                               #("i10490"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(e
                                                                                 r
                                                                                 w
                                                                                 s
                                                                                 rib
                                                                                 mod
                                                                                 for-car?)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i10467"
                                                                                 "i10468"
                                                                                 "i10469"
                                                                                 "i10470"
                                                                                 "i10471"
                                                                                 "i10472"
                                                                                 "i10473"))
                                                                             #(ribcage
                                                                               (lambda-var-list
                                                                                 gen-var
                                                                                 strip
                                                                                 chi-lambda-case
                                                                                 lambda*-formals
                                                                                 chi-simple-lambda
                                                                                 lambda-formals
                                                                                 ellipsis?
                                                                                 chi-void
                                                                                 eval-local-transformer
                                                                                 chi-local-syntax
                                                                                 chi-body
                                                                                 chi-macro
                                                                                 chi-application
                                                                                 chi-expr
                                                                                 chi
                                                                                 chi-top
                                                                                 syntax-type
                                                                                 chi-when-list
                                                                                 chi-install-global
                                                                                 chi-top-sequence
                                                                                 chi-sequence
                                                                                 source-wrap
                                                                                 wrap
                                                                                 bound-id-member?
                                                                                 distinct-bound-ids?
                                                                                 valid-bound-ids?
                                                                                 bound-id=?
                                                                                 free-id=?
                                                                                 id-var-name
                                                                                 same-marks?
                                                                                 join-marks
                                                                                 join-wraps
                                                                                 smart-append
                                                                                 make-binding-wrap
                                                                                 extend-ribcage!
                                                                                 make-empty-ribcage
                                                                                 new-mark
                                                                                 anti-mark
                                                                                 the-anti-mark
                                                                                 top-marked?
                                                                                 top-wrap
                                                                                 empty-wrap
                                                                                 set-ribcage-labels!
                                                                                 set-ribcage-marks!
                                                                                 set-ribcage-symnames!
                                                                                 ribcage-labels
                                                                                 ribcage-marks
                                                                                 ribcage-symnames
                                                                                 ribcage?
                                                                                 make-ribcage
                                                                                 gen-labels
                                                                                 gen-label
                                                                                 make-rename
                                                                                 rename-marks
                                                                                 rename-new
                                                                                 rename-old
                                                                                 subst-rename?
                                                                                 wrap-subst
                                                                                 wrap-marks
                                                                                 make-wrap
                                                                                 id-sym-name&marks
                                                                                 id-sym-name
                                                                                 id?
                                                                                 nonsymbol-id?
                                                                                 global-extend
                                                                                 lookup
                                                                                 macros-only-env
                                                                                 extend-var-env
                                                                                 extend-env
                                                                                 null-env
                                                                                 binding-value
                                                                                 binding-type
                                                                                 make-binding
                                                                                 arg-check
                                                                                 source-annotation
                                                                                 no-source
                                                                                 set-syntax-object-module!
                                                                                 set-syntax-object-wrap!
                                                                                 set-syntax-object-expression!
                                                                                 syntax-object-module
                                                                                 syntax-object-wrap
                                                                                 syntax-object-expression
                                                                                 syntax-object?
                                                                                 make-syntax-object
                                                                                 build-lexical-var
                                                                                 build-letrec
                                                                                 build-named-let
                                                                                 build-let
                                                                                 build-sequence
                                                                                 build-data
                                                                                 build-primref
                                                                                 build-lambda-case
                                                                                 build-case-lambda
                                                                                 build-simple-lambda
                                                                                 build-global-definition
                                                                                 maybe-name-value!
                                                                                 build-global-assignment
                                                                                 build-global-reference
                                                                                 analyze-variable
                                                                                 build-lexical-assignment
                                                                                 build-lexical-reference
                                                                                 build-dynlet
                                                                                 build-conditional
                                                                                 build-application
                                                                                 build-void
                                                                                 decorate-source
                                                                                 get-global-definition-hook
                                                                                 put-global-definition-hook
                                                                                 gensym-hook
                                                                                 local-eval-hook
                                                                                 top-level-eval-hook
                                                                                 fx<
                                                                                 fx=
                                                                                 fx-
                                                                                 fx+
                                                                                 *mode*
                                                                                 noexpand)
                                                                               ((top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top))
                                                                               ("i9190"
                                                                                "i9188"
                                                                                "i9186"
                                                                                "i9184"
                                                                                "i9182"
                                                                                "i9180"
                                                                                "i9178"
                                                                                "i9176"
                                                                                "i9174"
                                                                                "i9172"
                                                                                "i9170"
                                                                                "i9168"
                                                                                "i9166"
                                                                                "i9164"
                                                                                "i9162"
                                                                                "i9160"
                                                                                "i9158"
                                                                                "i9156"
                                                                                "i9154"
                                                                                "i9152"
                                                                                "i9150"
                                                                                "i9148"
                                                                                "i9146"
                                                                                "i9144"
                                                                                "i9142"
                                                                                "i9140"
                                                                                "i9138"
                                                                                "i9136"
                                                                                "i9134"
                                                                                "i9132"
                                                                                "i9130"
                                                                                "i9128"
                                                                                "i9126"
                                                                                "i9124"
                                                                                "i9122"
                                                                                "i9120"
                                                                                "i9119"
                                                                                "i9118"
                                                                                "i9116"
                                                                                "i9115"
                                                                                "i9114"
                                                                                "i9113"
                                                                                "i9112"
                                                                                "i9110"
                                                                                "i9108"
                                                                                "i9106"
                                                                                "i9104"
                                                                                "i9102"
                                                                                "i9100"
                                                                                "i9098"
                                                                                "i9096"
                                                                                "i9093"
                                                                                "i9091"
                                                                                "i9090"
                                                                                "i9089"
                                                                                "i9088"
                                                                                "i9087"
                                                                                "i9086"
                                                                                "i9084"
                                                                                "i9082"
                                                                                "i9080"
                                                                                "i9078"
                                                                                "i9077"
                                                                                "i9075"
                                                                                "i9073"
                                                                                "i9071"
                                                                                "i9069"
                                                                                "i9067"
                                                                                "i9065"
                                                                                "i9063"
                                                                                "i9062"
                                                                                "i9060"
                                                                                "i9058"
                                                                                "i9057"
                                                                                "i9056"
                                                                                "i9054"
                                                                                "i9053"
                                                                                "i9051"
                                                                                "i9049"
                                                                                "i9047"
                                                                                "i9045"
                                                                                "i9043"
                                                                                "i9041"
                                                                                "i9039"
                                                                                "i9037"
                                                                                "i9035"
                                                                                "i9033"
                                                                                "i9031"
                                                                                "i9029"
                                                                                "i9027"
                                                                                "i9025"
                                                                                "i9023"
                                                                                "i9021"
                                                                                "i9019"
                                                                                "i9017"
                                                                                "i9015"
                                                                                "i9013"
                                                                                "i9011"
                                                                                "i9009"
                                                                                "i9007"
                                                                                "i9005"
                                                                                "i9003"
                                                                                "i9001"
                                                                                "i8999"
                                                                                "i8997"
                                                                                "i8995"
                                                                                "i8993"
                                                                                "i8991"
                                                                                "i8989"
                                                                                "i8988"
                                                                                "i8986"
                                                                                "i8984"
                                                                                "i8982"
                                                                                "i8980"
                                                                                "i8978"
                                                                                "i8976"
                                                                                "i8974"
                                                                                "i8972"))
                                                                             #(ribcage
                                                                               (define-structure
                                                                                 and-map*)
                                                                               ((top)
                                                                                (top))
                                                                               ("i8875"
                                                                                "i8873")))
                                                                            (hygiene
                                                                              guile))
                                                                          #(syntax-object
                                                                            #f
                                                                            ((top)
                                                                             #(ribcage
                                                                               #(_
                                                                                 name)
                                                                               #((top)
                                                                                 (top))
                                                                               #("i10562"
                                                                                 "i10563"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(ftype
                                                                                 fval
                                                                                 fe
                                                                                 fw
                                                                                 fs
                                                                                 fmod)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i10498"
                                                                                 "i10499"
                                                                                 "i10500"
                                                                                 "i10501"
                                                                                 "i10502"
                                                                                 "i10503"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(first)
                                                                               #((top))
                                                                               #("i10490"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(e
                                                                                 r
                                                                                 w
                                                                                 s
                                                                                 rib
                                                                                 mod
                                                                                 for-car?)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i10467"
                                                                                 "i10468"
                                                                                 "i10469"
                                                                                 "i10470"
                                                                                 "i10471"
                                                                                 "i10472"
                                                                                 "i10473"))
                                                                             #(ribcage
                                                                               (lambda-var-list
                                                                                 gen-var
                                                                                 strip
                                                                                 chi-lambda-case
                                                                                 lambda*-formals
                                                                                 chi-simple-lambda
                                                                                 lambda-formals
                                                                                 ellipsis?
                                                                                 chi-void
                                                                                 eval-local-transformer
                                                                                 chi-local-syntax
                                                                                 chi-body
                                                                                 chi-macro
                                                                                 chi-application
                                                                                 chi-expr
                                                                                 chi
                                                                                 chi-top
                                                                                 syntax-type
                                                                                 chi-when-list
                                                                                 chi-install-global
                                                                                 chi-top-sequence
                                                                                 chi-sequence
                                                                                 source-wrap
                                                                                 wrap
                                                                                 bound-id-member?
                                                                                 distinct-bound-ids?
                                                                                 valid-bound-ids?
                                                                                 bound-id=?
                                                                                 free-id=?
                                                                                 id-var-name
                                                                                 same-marks?
                                                                                 join-marks
                                                                                 join-wraps
                                                                                 smart-append
                                                                                 make-binding-wrap
                                                                                 extend-ribcage!
                                                                                 make-empty-ribcage
                                                                                 new-mark
                                                                                 anti-mark
                                                                                 the-anti-mark
                                                                                 top-marked?
                                                                                 top-wrap
                                                                                 empty-wrap
                                                                                 set-ribcage-labels!
                                                                                 set-ribcage-marks!
                                                                                 set-ribcage-symnames!
                                                                                 ribcage-labels
                                                                                 ribcage-marks
                                                                                 ribcage-symnames
                                                                                 ribcage?
                                                                                 make-ribcage
                                                                                 gen-labels
                                                                                 gen-label
                                                                                 make-rename
                                                                                 rename-marks
                                                                                 rename-new
                                                                                 rename-old
                                                                                 subst-rename?
                                                                                 wrap-subst
                                                                                 wrap-marks
                                                                                 make-wrap
                                                                                 id-sym-name&marks
                                                                                 id-sym-name
                                                                                 id?
                                                                                 nonsymbol-id?
                                                                                 global-extend
                                                                                 lookup
                                                                                 macros-only-env
                                                                                 extend-var-env
                                                                                 extend-env
                                                                                 null-env
                                                                                 binding-value
                                                                                 binding-type
                                                                                 make-binding
                                                                                 arg-check
                                                                                 source-annotation
                                                                                 no-source
                                                                                 set-syntax-object-module!
                                                                                 set-syntax-object-wrap!
                                                                                 set-syntax-object-expression!
                                                                                 syntax-object-module
                                                                                 syntax-object-wrap
                                                                                 syntax-object-expression
                                                                                 syntax-object?
                                                                                 make-syntax-object
                                                                                 build-lexical-var
                                                                                 build-letrec
                                                                                 build-named-let
                                                                                 build-let
                                                                                 build-sequence
                                                                                 build-data
                                                                                 build-primref
                                                                                 build-lambda-case
                                                                                 build-case-lambda
                                                                                 build-simple-lambda
                                                                                 build-global-definition
                                                                                 maybe-name-value!
                                                                                 build-global-assignment
                                                                                 build-global-reference
                                                                                 analyze-variable
                                                                                 build-lexical-assignment
                                                                                 build-lexical-reference
                                                                                 build-dynlet
                                                                                 build-conditional
                                                                                 build-application
                                                                                 build-void
                                                                                 decorate-source
                                                                                 get-global-definition-hook
                                                                                 put-global-definition-hook
                                                                                 gensym-hook
                                                                                 local-eval-hook
                                                                                 top-level-eval-hook
                                                                                 fx<
                                                                                 fx=
                                                                                 fx-
                                                                                 fx+
                                                                                 *mode*
                                                                                 noexpand)
                                                                               ((top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top))
                                                                               ("i9190"
                                                                                "i9188"
                                                                                "i9186"
                                                                                "i9184"
                                                                                "i9182"
                                                                                "i9180"
                                                                                "i9178"
                                                                                "i9176"
                                                                                "i9174"
                                                                                "i9172"
                                                                                "i9170"
                                                                                "i9168"
                                                                                "i9166"
                                                                                "i9164"
                                                                                "i9162"
                                                                                "i9160"
                                                                                "i9158"
                                                                                "i9156"
                                                                                "i9154"
                                                                                "i9152"
                                                                                "i9150"
                                                                                "i9148"
                                                                                "i9146"
                                                                                "i9144"
                                                                                "i9142"
                                                                                "i9140"
                                                                                "i9138"
                                                                                "i9136"
                                                                                "i9134"
                                                                                "i9132"
                                                                                "i9130"
                                                                                "i9128"
                                                                                "i9126"
                                                                                "i9124"
                                                                                "i9122"
                                                                                "i9120"
                                                                                "i9119"
                                                                                "i9118"
                                                                                "i9116"
                                                                                "i9115"
                                                                                "i9114"
                                                                                "i9113"
                                                                                "i9112"
                                                                                "i9110"
                                                                                "i9108"
                                                                                "i9106"
                                                                                "i9104"
                                                                                "i9102"
                                                                                "i9100"
                                                                                "i9098"
                                                                                "i9096"
                                                                                "i9093"
                                                                                "i9091"
                                                                                "i9090"
                                                                                "i9089"
                                                                                "i9088"
                                                                                "i9087"
                                                                                "i9086"
                                                                                "i9084"
                                                                                "i9082"
                                                                                "i9080"
                                                                                "i9078"
                                                                                "i9077"
                                                                                "i9075"
                                                                                "i9073"
                                                                                "i9071"
                                                                                "i9069"
                                                                                "i9067"
                                                                                "i9065"
                                                                                "i9063"
                                                                                "i9062"
                                                                                "i9060"
                                                                                "i9058"
                                                                                "i9057"
                                                                                "i9056"
                                                                                "i9054"
                                                                                "i9053"
                                                                                "i9051"
                                                                                "i9049"
                                                                                "i9047"
                                                                                "i9045"
                                                                                "i9043"
                                                                                "i9041"
                                                                                "i9039"
                                                                                "i9037"
                                                                                "i9035"
                                                                                "i9033"
                                                                                "i9031"
                                                                                "i9029"
                                                                                "i9027"
                                                                                "i9025"
                                                                                "i9023"
                                                                                "i9021"
                                                                                "i9019"
                                                                                "i9017"
                                                                                "i9015"
                                                                                "i9013"
                                                                                "i9011"
                                                                                "i9009"
                                                                                "i9007"
                                                                                "i9005"
                                                                                "i9003"
                                                                                "i9001"
                                                                                "i8999"
                                                                                "i8997"
                                                                                "i8995"
                                                                                "i8993"
                                                                                "i8991"
                                                                                "i8989"
                                                                                "i8988"
                                                                                "i8986"
                                                                                "i8984"
                                                                                "i8982"
                                                                                "i8980"
                                                                                "i8978"
                                                                                "i8976"
                                                                                "i8974"
                                                                                "i8972"))
                                                                             #(ribcage
                                                                               (define-structure
                                                                                 and-map*)
                                                                               ((top)
                                                                                (top))
                                                                               ("i8875"
                                                                                "i8873")))
                                                                            (hygiene
                                                                              guile)))
                                                                        '(())
                                                                        #{s\ 10463}#
                                                                        #{mod\ 10465}#))
                                                                    #{tmp\ 10557}#)
                                                             (syntax-violation
                                                               #f
                                                               "source expression failed to match any pattern"
                                                               #{tmp\ 10518}#)))
                                                         ($sc-dispatch
                                                           #{tmp\ 10518}#
                                                           '(any any)))))
                                                    ($sc-dispatch
                                                      #{tmp\ 10518}#
                                                      '(any (any . any)
                                                            any
                                                            .
                                                            each-any)))))
                                               ($sc-dispatch
                                                 #{tmp\ 10518}#
                                                 '(any any any))))
                                            #{e\ 10460}#)
                                           (if (memv #{ftype\ 10492}#
                                                     '(define-syntax))
                                             ((lambda (#{tmp\ 10568}#)
                                                ((lambda (#{tmp\ 10569}#)
                                                   (if (if #{tmp\ 10569}#
                                                         (apply (lambda (#{_\ 10573}#
                                                                         #{name\ 10574}#
                                                                         #{val\ 10575}#)
                                                                  (#{id?\ 9076}#
                                                                    #{name\ 10574}#))
                                                                #{tmp\ 10569}#)
                                                         #f)
                                                     (apply (lambda (#{_\ 10579}#
                                                                     #{name\ 10580}#
                                                                     #{val\ 10581}#)
                                                              (values
                                                                'define-syntax-form
                                                                #{name\ 10580}#
                                                                #{val\ 10581}#
                                                                #{w\ 10462}#
                                                                #{s\ 10463}#
                                                                #{mod\ 10465}#))
                                                            #{tmp\ 10569}#)
                                                     (syntax-violation
                                                       #f
                                                       "source expression failed to match any pattern"
                                                       #{tmp\ 10568}#)))
                                                 ($sc-dispatch
                                                   #{tmp\ 10568}#
                                                   '(any any any))))
                                              #{e\ 10460}#)
                                             (values
                                               'call
                                               #f
                                               #{e\ 10460}#
                                               #{w\ 10462}#
                                               #{s\ 10463}#
                                               #{mod\ 10465}#))))))))))))))
                   (if (#{syntax-object?\ 9040}# #{e\ 10460}#)
                     (#{syntax-type\ 9157}#
                       (#{syntax-object-expression\ 9042}# #{e\ 10460}#)
                       #{r\ 10461}#
                       (#{join-wraps\ 9127}#
                         #{w\ 10462}#
                         (#{syntax-object-wrap\ 9044}# #{e\ 10460}#))
                       #{s\ 10463}#
                       #{rib\ 10464}#
                       (let ((#{t\ 10587}#
                               (#{syntax-object-module\ 9046}# #{e\ 10460}#)))
                         (if #{t\ 10587}# #{t\ 10587}# #{mod\ 10465}#))
                       #{for-car?\ 10466}#)
                     (if (self-evaluating? #{e\ 10460}#)
                       (values
                         'constant
                         #f
                         #{e\ 10460}#
                         #{w\ 10462}#
                         #{s\ 10463}#
                         #{mod\ 10465}#)
                       (values
                         'other
                         #f
                         #{e\ 10460}#
                         #{w\ 10462}#
                         #{s\ 10463}#
                         #{mod\ 10465}#)))))))
           (#{chi-when-list\ 9155}#
             (lambda (#{e\ 10592}# #{when-list\ 10593}# #{w\ 10594}#)
               (letrec ((#{f\ 10601}#
                          (lambda (#{when-list\ 10602}# #{situations\ 10603}#)
                            (if (null? #{when-list\ 10602}#)
                              #{situations\ 10603}#
                              (#{f\ 10601}#
                                (cdr #{when-list\ 10602}#)
                                (cons (let ((#{x\ 10605}#
                                              (car #{when-list\ 10602}#)))
                                        (if (#{free-id=?\ 9135}#
                                              #{x\ 10605}#
                                              '#(syntax-object
                                                 compile
                                                 ((top)
                                                  #(ribcage () () ())
                                                  #(ribcage () () ())
                                                  #(ribcage () () ())
                                                  #(ribcage
                                                    #(x)
                                                    #((top))
                                                    #("i10604"))
                                                  #(ribcage () () ())
                                                  #(ribcage
                                                    #(f when-list situations)
                                                    #((top) (top) (top))
                                                    #("i10598"
                                                      "i10599"
                                                      "i10600"))
                                                  #(ribcage () () ())
                                                  #(ribcage
                                                    #(e when-list w)
                                                    #((top) (top) (top))
                                                    #("i10595"
                                                      "i10596"
                                                      "i10597"))
                                                  #(ribcage
                                                    (lambda-var-list
                                                      gen-var
                                                      strip
                                                      chi-lambda-case
                                                      lambda*-formals
                                                      chi-simple-lambda
                                                      lambda-formals
                                                      ellipsis?
                                                      chi-void
                                                      eval-local-transformer
                                                      chi-local-syntax
                                                      chi-body
                                                      chi-macro
                                                      chi-application
                                                      chi-expr
                                                      chi
                                                      chi-top
                                                      syntax-type
                                                      chi-when-list
                                                      chi-install-global
                                                      chi-top-sequence
                                                      chi-sequence
                                                      source-wrap
                                                      wrap
                                                      bound-id-member?
                                                      distinct-bound-ids?
                                                      valid-bound-ids?
                                                      bound-id=?
                                                      free-id=?
                                                      id-var-name
                                                      same-marks?
                                                      join-marks
                                                      join-wraps
                                                      smart-append
                                                      make-binding-wrap
                                                      extend-ribcage!
                                                      make-empty-ribcage
                                                      new-mark
                                                      anti-mark
                                                      the-anti-mark
                                                      top-marked?
                                                      top-wrap
                                                      empty-wrap
                                                      set-ribcage-labels!
                                                      set-ribcage-marks!
                                                      set-ribcage-symnames!
                                                      ribcage-labels
                                                      ribcage-marks
                                                      ribcage-symnames
                                                      ribcage?
                                                      make-ribcage
                                                      gen-labels
                                                      gen-label
                                                      make-rename
                                                      rename-marks
                                                      rename-new
                                                      rename-old
                                                      subst-rename?
                                                      wrap-subst
                                                      wrap-marks
                                                      make-wrap
                                                      id-sym-name&marks
                                                      id-sym-name
                                                      id?
                                                      nonsymbol-id?
                                                      global-extend
                                                      lookup
                                                      macros-only-env
                                                      extend-var-env
                                                      extend-env
                                                      null-env
                                                      binding-value
                                                      binding-type
                                                      make-binding
                                                      arg-check
                                                      source-annotation
                                                      no-source
                                                      set-syntax-object-module!
                                                      set-syntax-object-wrap!
                                                      set-syntax-object-expression!
                                                      syntax-object-module
                                                      syntax-object-wrap
                                                      syntax-object-expression
                                                      syntax-object?
                                                      make-syntax-object
                                                      build-lexical-var
                                                      build-letrec
                                                      build-named-let
                                                      build-let
                                                      build-sequence
                                                      build-data
                                                      build-primref
                                                      build-lambda-case
                                                      build-case-lambda
                                                      build-simple-lambda
                                                      build-global-definition
                                                      maybe-name-value!
                                                      build-global-assignment
                                                      build-global-reference
                                                      analyze-variable
                                                      build-lexical-assignment
                                                      build-lexical-reference
                                                      build-dynlet
                                                      build-conditional
                                                      build-application
                                                      build-void
                                                      decorate-source
                                                      get-global-definition-hook
                                                      put-global-definition-hook
                                                      gensym-hook
                                                      local-eval-hook
                                                      top-level-eval-hook
                                                      fx<
                                                      fx=
                                                      fx-
                                                      fx+
                                                      *mode*
                                                      noexpand)
                                                    ((top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top))
                                                    ("i9190"
                                                     "i9188"
                                                     "i9186"
                                                     "i9184"
                                                     "i9182"
                                                     "i9180"
                                                     "i9178"
                                                     "i9176"
                                                     "i9174"
                                                     "i9172"
                                                     "i9170"
                                                     "i9168"
                                                     "i9166"
                                                     "i9164"
                                                     "i9162"
                                                     "i9160"
                                                     "i9158"
                                                     "i9156"
                                                     "i9154"
                                                     "i9152"
                                                     "i9150"
                                                     "i9148"
                                                     "i9146"
                                                     "i9144"
                                                     "i9142"
                                                     "i9140"
                                                     "i9138"
                                                     "i9136"
                                                     "i9134"
                                                     "i9132"
                                                     "i9130"
                                                     "i9128"
                                                     "i9126"
                                                     "i9124"
                                                     "i9122"
                                                     "i9120"
                                                     "i9119"
                                                     "i9118"
                                                     "i9116"
                                                     "i9115"
                                                     "i9114"
                                                     "i9113"
                                                     "i9112"
                                                     "i9110"
                                                     "i9108"
                                                     "i9106"
                                                     "i9104"
                                                     "i9102"
                                                     "i9100"
                                                     "i9098"
                                                     "i9096"
                                                     "i9093"
                                                     "i9091"
                                                     "i9090"
                                                     "i9089"
                                                     "i9088"
                                                     "i9087"
                                                     "i9086"
                                                     "i9084"
                                                     "i9082"
                                                     "i9080"
                                                     "i9078"
                                                     "i9077"
                                                     "i9075"
                                                     "i9073"
                                                     "i9071"
                                                     "i9069"
                                                     "i9067"
                                                     "i9065"
                                                     "i9063"
                                                     "i9062"
                                                     "i9060"
                                                     "i9058"
                                                     "i9057"
                                                     "i9056"
                                                     "i9054"
                                                     "i9053"
                                                     "i9051"
                                                     "i9049"
                                                     "i9047"
                                                     "i9045"
                                                     "i9043"
                                                     "i9041"
                                                     "i9039"
                                                     "i9037"
                                                     "i9035"
                                                     "i9033"
                                                     "i9031"
                                                     "i9029"
                                                     "i9027"
                                                     "i9025"
                                                     "i9023"
                                                     "i9021"
                                                     "i9019"
                                                     "i9017"
                                                     "i9015"
                                                     "i9013"
                                                     "i9011"
                                                     "i9009"
                                                     "i9007"
                                                     "i9005"
                                                     "i9003"
                                                     "i9001"
                                                     "i8999"
                                                     "i8997"
                                                     "i8995"
                                                     "i8993"
                                                     "i8991"
                                                     "i8989"
                                                     "i8988"
                                                     "i8986"
                                                     "i8984"
                                                     "i8982"
                                                     "i8980"
                                                     "i8978"
                                                     "i8976"
                                                     "i8974"
                                                     "i8972"))
                                                  #(ribcage
                                                    (define-structure and-map*)
                                                    ((top) (top))
                                                    ("i8875" "i8873")))
                                                 (hygiene guile)))
                                          'compile
                                          (if (#{free-id=?\ 9135}#
                                                #{x\ 10605}#
                                                '#(syntax-object
                                                   load
                                                   ((top)
                                                    #(ribcage () () ())
                                                    #(ribcage () () ())
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(x)
                                                      #((top))
                                                      #("i10604"))
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(f when-list situations)
                                                      #((top) (top) (top))
                                                      #("i10598"
                                                        "i10599"
                                                        "i10600"))
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(e when-list w)
                                                      #((top) (top) (top))
                                                      #("i10595"
                                                        "i10596"
                                                        "i10597"))
                                                    #(ribcage
                                                      (lambda-var-list
                                                        gen-var
                                                        strip
                                                        chi-lambda-case
                                                        lambda*-formals
                                                        chi-simple-lambda
                                                        lambda-formals
                                                        ellipsis?
                                                        chi-void
                                                        eval-local-transformer
                                                        chi-local-syntax
                                                        chi-body
                                                        chi-macro
                                                        chi-application
                                                        chi-expr
                                                        chi
                                                        chi-top
                                                        syntax-type
                                                        chi-when-list
                                                        chi-install-global
                                                        chi-top-sequence
                                                        chi-sequence
                                                        source-wrap
                                                        wrap
                                                        bound-id-member?
                                                        distinct-bound-ids?
                                                        valid-bound-ids?
                                                        bound-id=?
                                                        free-id=?
                                                        id-var-name
                                                        same-marks?
                                                        join-marks
                                                        join-wraps
                                                        smart-append
                                                        make-binding-wrap
                                                        extend-ribcage!
                                                        make-empty-ribcage
                                                        new-mark
                                                        anti-mark
                                                        the-anti-mark
                                                        top-marked?
                                                        top-wrap
                                                        empty-wrap
                                                        set-ribcage-labels!
                                                        set-ribcage-marks!
                                                        set-ribcage-symnames!
                                                        ribcage-labels
                                                        ribcage-marks
                                                        ribcage-symnames
                                                        ribcage?
                                                        make-ribcage
                                                        gen-labels
                                                        gen-label
                                                        make-rename
                                                        rename-marks
                                                        rename-new
                                                        rename-old
                                                        subst-rename?
                                                        wrap-subst
                                                        wrap-marks
                                                        make-wrap
                                                        id-sym-name&marks
                                                        id-sym-name
                                                        id?
                                                        nonsymbol-id?
                                                        global-extend
                                                        lookup
                                                        macros-only-env
                                                        extend-var-env
                                                        extend-env
                                                        null-env
                                                        binding-value
                                                        binding-type
                                                        make-binding
                                                        arg-check
                                                        source-annotation
                                                        no-source
                                                        set-syntax-object-module!
                                                        set-syntax-object-wrap!
                                                        set-syntax-object-expression!
                                                        syntax-object-module
                                                        syntax-object-wrap
                                                        syntax-object-expression
                                                        syntax-object?
                                                        make-syntax-object
                                                        build-lexical-var
                                                        build-letrec
                                                        build-named-let
                                                        build-let
                                                        build-sequence
                                                        build-data
                                                        build-primref
                                                        build-lambda-case
                                                        build-case-lambda
                                                        build-simple-lambda
                                                        build-global-definition
                                                        maybe-name-value!
                                                        build-global-assignment
                                                        build-global-reference
                                                        analyze-variable
                                                        build-lexical-assignment
                                                        build-lexical-reference
                                                        build-dynlet
                                                        build-conditional
                                                        build-application
                                                        build-void
                                                        decorate-source
                                                        get-global-definition-hook
                                                        put-global-definition-hook
                                                        gensym-hook
                                                        local-eval-hook
                                                        top-level-eval-hook
                                                        fx<
                                                        fx=
                                                        fx-
                                                        fx+
                                                        *mode*
                                                        noexpand)
                                                      ((top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top))
                                                      ("i9190"
                                                       "i9188"
                                                       "i9186"
                                                       "i9184"
                                                       "i9182"
                                                       "i9180"
                                                       "i9178"
                                                       "i9176"
                                                       "i9174"
                                                       "i9172"
                                                       "i9170"
                                                       "i9168"
                                                       "i9166"
                                                       "i9164"
                                                       "i9162"
                                                       "i9160"
                                                       "i9158"
                                                       "i9156"
                                                       "i9154"
                                                       "i9152"
                                                       "i9150"
                                                       "i9148"
                                                       "i9146"
                                                       "i9144"
                                                       "i9142"
                                                       "i9140"
                                                       "i9138"
                                                       "i9136"
                                                       "i9134"
                                                       "i9132"
                                                       "i9130"
                                                       "i9128"
                                                       "i9126"
                                                       "i9124"
                                                       "i9122"
                                                       "i9120"
                                                       "i9119"
                                                       "i9118"
                                                       "i9116"
                                                       "i9115"
                                                       "i9114"
                                                       "i9113"
                                                       "i9112"
                                                       "i9110"
                                                       "i9108"
                                                       "i9106"
                                                       "i9104"
                                                       "i9102"
                                                       "i9100"
                                                       "i9098"
                                                       "i9096"
                                                       "i9093"
                                                       "i9091"
                                                       "i9090"
                                                       "i9089"
                                                       "i9088"
                                                       "i9087"
                                                       "i9086"
                                                       "i9084"
                                                       "i9082"
                                                       "i9080"
                                                       "i9078"
                                                       "i9077"
                                                       "i9075"
                                                       "i9073"
                                                       "i9071"
                                                       "i9069"
                                                       "i9067"
                                                       "i9065"
                                                       "i9063"
                                                       "i9062"
                                                       "i9060"
                                                       "i9058"
                                                       "i9057"
                                                       "i9056"
                                                       "i9054"
                                                       "i9053"
                                                       "i9051"
                                                       "i9049"
                                                       "i9047"
                                                       "i9045"
                                                       "i9043"
                                                       "i9041"
                                                       "i9039"
                                                       "i9037"
                                                       "i9035"
                                                       "i9033"
                                                       "i9031"
                                                       "i9029"
                                                       "i9027"
                                                       "i9025"
                                                       "i9023"
                                                       "i9021"
                                                       "i9019"
                                                       "i9017"
                                                       "i9015"
                                                       "i9013"
                                                       "i9011"
                                                       "i9009"
                                                       "i9007"
                                                       "i9005"
                                                       "i9003"
                                                       "i9001"
                                                       "i8999"
                                                       "i8997"
                                                       "i8995"
                                                       "i8993"
                                                       "i8991"
                                                       "i8989"
                                                       "i8988"
                                                       "i8986"
                                                       "i8984"
                                                       "i8982"
                                                       "i8980"
                                                       "i8978"
                                                       "i8976"
                                                       "i8974"
                                                       "i8972"))
                                                    #(ribcage
                                                      (define-structure
                                                        and-map*)
                                                      ((top) (top))
                                                      ("i8875" "i8873")))
                                                   (hygiene guile)))
                                            'load
                                            (if (#{free-id=?\ 9135}#
                                                  #{x\ 10605}#
                                                  '#(syntax-object
                                                     eval
                                                     ((top)
                                                      #(ribcage () () ())
                                                      #(ribcage () () ())
                                                      #(ribcage () () ())
                                                      #(ribcage
                                                        #(x)
                                                        #((top))
                                                        #("i10604"))
                                                      #(ribcage () () ())
                                                      #(ribcage
                                                        #(f
                                                          when-list
                                                          situations)
                                                        #((top) (top) (top))
                                                        #("i10598"
                                                          "i10599"
                                                          "i10600"))
                                                      #(ribcage () () ())
                                                      #(ribcage
                                                        #(e when-list w)
                                                        #((top) (top) (top))
                                                        #("i10595"
                                                          "i10596"
                                                          "i10597"))
                                                      #(ribcage
                                                        (lambda-var-list
                                                          gen-var
                                                          strip
                                                          chi-lambda-case
                                                          lambda*-formals
                                                          chi-simple-lambda
                                                          lambda-formals
                                                          ellipsis?
                                                          chi-void
                                                          eval-local-transformer
                                                          chi-local-syntax
                                                          chi-body
                                                          chi-macro
                                                          chi-application
                                                          chi-expr
                                                          chi
                                                          chi-top
                                                          syntax-type
                                                          chi-when-list
                                                          chi-install-global
                                                          chi-top-sequence
                                                          chi-sequence
                                                          source-wrap
                                                          wrap
                                                          bound-id-member?
                                                          distinct-bound-ids?
                                                          valid-bound-ids?
                                                          bound-id=?
                                                          free-id=?
                                                          id-var-name
                                                          same-marks?
                                                          join-marks
                                                          join-wraps
                                                          smart-append
                                                          make-binding-wrap
                                                          extend-ribcage!
                                                          make-empty-ribcage
                                                          new-mark
                                                          anti-mark
                                                          the-anti-mark
                                                          top-marked?
                                                          top-wrap
                                                          empty-wrap
                                                          set-ribcage-labels!
                                                          set-ribcage-marks!
                                                          set-ribcage-symnames!
                                                          ribcage-labels
                                                          ribcage-marks
                                                          ribcage-symnames
                                                          ribcage?
                                                          make-ribcage
                                                          gen-labels
                                                          gen-label
                                                          make-rename
                                                          rename-marks
                                                          rename-new
                                                          rename-old
                                                          subst-rename?
                                                          wrap-subst
                                                          wrap-marks
                                                          make-wrap
                                                          id-sym-name&marks
                                                          id-sym-name
                                                          id?
                                                          nonsymbol-id?
                                                          global-extend
                                                          lookup
                                                          macros-only-env
                                                          extend-var-env
                                                          extend-env
                                                          null-env
                                                          binding-value
                                                          binding-type
                                                          make-binding
                                                          arg-check
                                                          source-annotation
                                                          no-source
                                                          set-syntax-object-module!
                                                          set-syntax-object-wrap!
                                                          set-syntax-object-expression!
                                                          syntax-object-module
                                                          syntax-object-wrap
                                                          syntax-object-expression
                                                          syntax-object?
                                                          make-syntax-object
                                                          build-lexical-var
                                                          build-letrec
                                                          build-named-let
                                                          build-let
                                                          build-sequence
                                                          build-data
                                                          build-primref
                                                          build-lambda-case
                                                          build-case-lambda
                                                          build-simple-lambda
                                                          build-global-definition
                                                          maybe-name-value!
                                                          build-global-assignment
                                                          build-global-reference
                                                          analyze-variable
                                                          build-lexical-assignment
                                                          build-lexical-reference
                                                          build-dynlet
                                                          build-conditional
                                                          build-application
                                                          build-void
                                                          decorate-source
                                                          get-global-definition-hook
                                                          put-global-definition-hook
                                                          gensym-hook
                                                          local-eval-hook
                                                          top-level-eval-hook
                                                          fx<
                                                          fx=
                                                          fx-
                                                          fx+
                                                          *mode*
                                                          noexpand)
                                                        ((top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top))
                                                        ("i9190"
                                                         "i9188"
                                                         "i9186"
                                                         "i9184"
                                                         "i9182"
                                                         "i9180"
                                                         "i9178"
                                                         "i9176"
                                                         "i9174"
                                                         "i9172"
                                                         "i9170"
                                                         "i9168"
                                                         "i9166"
                                                         "i9164"
                                                         "i9162"
                                                         "i9160"
                                                         "i9158"
                                                         "i9156"
                                                         "i9154"
                                                         "i9152"
                                                         "i9150"
                                                         "i9148"
                                                         "i9146"
                                                         "i9144"
                                                         "i9142"
                                                         "i9140"
                                                         "i9138"
                                                         "i9136"
                                                         "i9134"
                                                         "i9132"
                                                         "i9130"
                                                         "i9128"
                                                         "i9126"
                                                         "i9124"
                                                         "i9122"
                                                         "i9120"
                                                         "i9119"
                                                         "i9118"
                                                         "i9116"
                                                         "i9115"
                                                         "i9114"
                                                         "i9113"
                                                         "i9112"
                                                         "i9110"
                                                         "i9108"
                                                         "i9106"
                                                         "i9104"
                                                         "i9102"
                                                         "i9100"
                                                         "i9098"
                                                         "i9096"
                                                         "i9093"
                                                         "i9091"
                                                         "i9090"
                                                         "i9089"
                                                         "i9088"
                                                         "i9087"
                                                         "i9086"
                                                         "i9084"
                                                         "i9082"
                                                         "i9080"
                                                         "i9078"
                                                         "i9077"
                                                         "i9075"
                                                         "i9073"
                                                         "i9071"
                                                         "i9069"
                                                         "i9067"
                                                         "i9065"
                                                         "i9063"
                                                         "i9062"
                                                         "i9060"
                                                         "i9058"
                                                         "i9057"
                                                         "i9056"
                                                         "i9054"
                                                         "i9053"
                                                         "i9051"
                                                         "i9049"
                                                         "i9047"
                                                         "i9045"
                                                         "i9043"
                                                         "i9041"
                                                         "i9039"
                                                         "i9037"
                                                         "i9035"
                                                         "i9033"
                                                         "i9031"
                                                         "i9029"
                                                         "i9027"
                                                         "i9025"
                                                         "i9023"
                                                         "i9021"
                                                         "i9019"
                                                         "i9017"
                                                         "i9015"
                                                         "i9013"
                                                         "i9011"
                                                         "i9009"
                                                         "i9007"
                                                         "i9005"
                                                         "i9003"
                                                         "i9001"
                                                         "i8999"
                                                         "i8997"
                                                         "i8995"
                                                         "i8993"
                                                         "i8991"
                                                         "i8989"
                                                         "i8988"
                                                         "i8986"
                                                         "i8984"
                                                         "i8982"
                                                         "i8980"
                                                         "i8978"
                                                         "i8976"
                                                         "i8974"
                                                         "i8972"))
                                                      #(ribcage
                                                        (define-structure
                                                          and-map*)
                                                        ((top) (top))
                                                        ("i8875" "i8873")))
                                                     (hygiene guile)))
                                              'eval
                                              (syntax-violation
                                                'eval-when
                                                "invalid situation"
                                                #{e\ 10592}#
                                                (#{wrap\ 9145}#
                                                  #{x\ 10605}#
                                                  #{w\ 10594}#
                                                  #f))))))
                                      #{situations\ 10603}#))))))
                 (#{f\ 10601}# #{when-list\ 10593}# (quote ())))))
           (#{chi-install-global\ 9153}#
             (lambda (#{name\ 10613}# #{e\ 10614}#)
               (#{build-global-definition\ 9016}#
                 #f
                 #{name\ 10613}#
                 (#{build-application\ 8998}#
                   #f
                   (#{build-primref\ 9024}#
                     #f
                     'make-syntax-transformer)
                   (list (#{build-data\ 9026}# #f #{name\ 10613}#)
                         (#{build-data\ 9026}# #f (quote macro))
                         (#{build-application\ 8998}#
                           #f
                           (#{build-primref\ 9024}# #f (quote cons))
                           (list #{e\ 10614}#
                                 (#{build-application\ 8998}#
                                   #f
                                   (#{build-primref\ 9024}#
                                     #f
                                     'module-name)
                                   (list (#{build-application\ 8998}#
                                           #f
                                           (#{build-primref\ 9024}#
                                             #f
                                             'current-module)
                                           '()))))))))))
           (#{chi-top-sequence\ 9151}#
             (lambda (#{body\ 10628}#
                      #{r\ 10629}#
                      #{w\ 10630}#
                      #{s\ 10631}#
                      #{m\ 10632}#
                      #{esew\ 10633}#
                      #{mod\ 10634}#)
               (#{build-sequence\ 9028}#
                 #{s\ 10631}#
                 (letrec ((#{dobody\ 10651}#
                            (lambda (#{body\ 10652}#
                                     #{r\ 10653}#
                                     #{w\ 10654}#
                                     #{m\ 10655}#
                                     #{esew\ 10656}#
                                     #{mod\ 10657}#
                                     #{module\ 10658}#
                                     #{out\ 10659}#)
                              (if (null? #{body\ 10652}#)
                                (reverse #{out\ 10659}#)
                                (let ((#{first\ 10662}#
                                        (#{chi-top\ 9159}#
                                          (car #{body\ 10652}#)
                                          #{r\ 10653}#
                                          #{w\ 10654}#
                                          #{m\ 10655}#
                                          #{esew\ 10656}#
                                          #{mod\ 10657}#)))
                                  (let ((#{new-module\ 10664}#
                                          (current-module)))
                                    (#{dobody\ 10651}#
                                      (cdr #{body\ 10652}#)
                                      #{r\ 10653}#
                                      #{w\ 10654}#
                                      #{m\ 10655}#
                                      #{esew\ 10656}#
                                      (if (eq? #{module\ 10658}#
                                               #{new-module\ 10664}#)
                                        #{mod\ 10657}#
                                        (cons 'hygiene
                                              (module-name
                                                #{new-module\ 10664}#)))
                                      #{new-module\ 10664}#
                                      (cons #{first\ 10662}#
                                            #{out\ 10659}#))))))))
                   (#{dobody\ 10651}#
                     #{body\ 10628}#
                     #{r\ 10629}#
                     #{w\ 10630}#
                     #{m\ 10632}#
                     #{esew\ 10633}#
                     #{mod\ 10634}#
                     (current-module)
                     '())))))
           (#{chi-sequence\ 9149}#
             (lambda (#{body\ 10665}#
                      #{r\ 10666}#
                      #{w\ 10667}#
                      #{s\ 10668}#
                      #{mod\ 10669}#)
               (#{build-sequence\ 9028}#
                 #{s\ 10668}#
                 (letrec ((#{dobody\ 10680}#
                            (lambda (#{body\ 10681}#
                                     #{r\ 10682}#
                                     #{w\ 10683}#
                                     #{mod\ 10684}#)
                              (if (null? #{body\ 10681}#)
                                '()
                                (let ((#{first\ 10686}#
                                        (#{chi\ 9161}#
                                          (car #{body\ 10681}#)
                                          #{r\ 10682}#
                                          #{w\ 10683}#
                                          #{mod\ 10684}#)))
                                  (cons #{first\ 10686}#
                                        (#{dobody\ 10680}#
                                          (cdr #{body\ 10681}#)
                                          #{r\ 10682}#
                                          #{w\ 10683}#
                                          #{mod\ 10684}#)))))))
                   (#{dobody\ 10680}#
                     #{body\ 10665}#
                     #{r\ 10666}#
                     #{w\ 10667}#
                     #{mod\ 10669}#)))))
           (#{source-wrap\ 9147}#
             (lambda (#{x\ 10687}#
                      #{w\ 10688}#
                      #{s\ 10689}#
                      #{defmod\ 10690}#)
               (#{wrap\ 9145}#
                 (#{decorate-source\ 8994}#
                   #{x\ 10687}#
                   #{s\ 10689}#)
                 #{w\ 10688}#
                 #{defmod\ 10690}#)))
           (#{wrap\ 9145}#
             (lambda (#{x\ 10695}# #{w\ 10696}# #{defmod\ 10697}#)
               (if (if (null? (#{wrap-marks\ 9083}# #{w\ 10696}#))
                     (null? (#{wrap-subst\ 9085}# #{w\ 10696}#))
                     #f)
                 #{x\ 10695}#
                 (if (#{syntax-object?\ 9040}# #{x\ 10695}#)
                   (#{make-syntax-object\ 9038}#
                     (#{syntax-object-expression\ 9042}# #{x\ 10695}#)
                     (#{join-wraps\ 9127}#
                       #{w\ 10696}#
                       (#{syntax-object-wrap\ 9044}# #{x\ 10695}#))
                     (#{syntax-object-module\ 9046}# #{x\ 10695}#))
                   (if (null? #{x\ 10695}#)
                     #{x\ 10695}#
                     (#{make-syntax-object\ 9038}#
                       #{x\ 10695}#
                       #{w\ 10696}#
                       #{defmod\ 10697}#))))))
           (#{bound-id-member?\ 9143}#
             (lambda (#{x\ 10710}# #{list\ 10711}#)
               (if (not (null? #{list\ 10711}#))
                 (let ((#{t\ 10718}#
                         (#{bound-id=?\ 9137}#
                           #{x\ 10710}#
                           (car #{list\ 10711}#))))
                   (if #{t\ 10718}#
                     #{t\ 10718}#
                     (#{bound-id-member?\ 9143}#
                       #{x\ 10710}#
                       (cdr #{list\ 10711}#))))
                 #f)))
           (#{distinct-bound-ids?\ 9141}#
             (lambda (#{ids\ 10720}#)
               (letrec ((#{distinct?\ 10724}#
                          (lambda (#{ids\ 10725}#)
                            (let ((#{t\ 10728}# (null? #{ids\ 10725}#)))
                              (if #{t\ 10728}#
                                #{t\ 10728}#
                                (if (not (#{bound-id-member?\ 9143}#
                                           (car #{ids\ 10725}#)
                                           (cdr #{ids\ 10725}#)))
                                  (#{distinct?\ 10724}# (cdr #{ids\ 10725}#))
                                  #f))))))
                 (#{distinct?\ 10724}# #{ids\ 10720}#))))
           (#{valid-bound-ids?\ 9139}#
             (lambda (#{ids\ 10732}#)
               (if (letrec ((#{all-ids?\ 10737}#
                              (lambda (#{ids\ 10738}#)
                                (let ((#{t\ 10741}# (null? #{ids\ 10738}#)))
                                  (if #{t\ 10741}#
                                    #{t\ 10741}#
                                    (if (#{id?\ 9076}# (car #{ids\ 10738}#))
                                      (#{all-ids?\ 10737}#
                                        (cdr #{ids\ 10738}#))
                                      #f))))))
                     (#{all-ids?\ 10737}# #{ids\ 10732}#))
                 (#{distinct-bound-ids?\ 9141}# #{ids\ 10732}#)
                 #f)))
           (#{bound-id=?\ 9137}#
             (lambda (#{i\ 10746}# #{j\ 10747}#)
               (if (if (#{syntax-object?\ 9040}# #{i\ 10746}#)
                     (#{syntax-object?\ 9040}# #{j\ 10747}#)
                     #f)
                 (if (eq? (#{syntax-object-expression\ 9042}# #{i\ 10746}#)
                          (#{syntax-object-expression\ 9042}# #{j\ 10747}#))
                   (#{same-marks?\ 9131}#
                     (#{wrap-marks\ 9083}#
                       (#{syntax-object-wrap\ 9044}# #{i\ 10746}#))
                     (#{wrap-marks\ 9083}#
                       (#{syntax-object-wrap\ 9044}# #{j\ 10747}#)))
                   #f)
                 (eq? #{i\ 10746}# #{j\ 10747}#))))
           (#{free-id=?\ 9135}#
             (lambda (#{i\ 10754}# #{j\ 10755}#)
               (if (eq? (let ((#{x\ 10761}# #{i\ 10754}#))
                          (if (#{syntax-object?\ 9040}# #{x\ 10761}#)
                            (#{syntax-object-expression\ 9042}# #{x\ 10761}#)
                            #{x\ 10761}#))
                        (let ((#{x\ 10764}# #{j\ 10755}#))
                          (if (#{syntax-object?\ 9040}# #{x\ 10764}#)
                            (#{syntax-object-expression\ 9042}# #{x\ 10764}#)
                            #{x\ 10764}#)))
                 (eq? (#{id-var-name\ 9133}# #{i\ 10754}# (quote (())))
                      (#{id-var-name\ 9133}# #{j\ 10755}# (quote (()))))
                 #f)))
           (#{id-var-name\ 9133}#
             (lambda (#{id\ 10768}# #{w\ 10769}#)
               (letrec ((#{search-vector-rib\ 10778}#
                          (lambda (#{sym\ 10790}#
                                   #{subst\ 10791}#
                                   #{marks\ 10792}#
                                   #{symnames\ 10793}#
                                   #{ribcage\ 10794}#)
                            (let ((#{n\ 10801}#
                                    (vector-length #{symnames\ 10793}#)))
                              (letrec ((#{f\ 10804}#
                                         (lambda (#{i\ 10805}#)
                                           (if (#{fx=\ 8981}#
                                                 #{i\ 10805}#
                                                 #{n\ 10801}#)
                                             (#{search\ 10774}#
                                               #{sym\ 10790}#
                                               (cdr #{subst\ 10791}#)
                                               #{marks\ 10792}#)
                                             (if (if (eq? (vector-ref
                                                            #{symnames\ 10793}#
                                                            #{i\ 10805}#)
                                                          #{sym\ 10790}#)
                                                   (#{same-marks?\ 9131}#
                                                     #{marks\ 10792}#
                                                     (vector-ref
                                                       (#{ribcage-marks\ 9103}#
                                                         #{ribcage\ 10794}#)
                                                       #{i\ 10805}#))
                                                   #f)
                                               (values
                                                 (vector-ref
                                                   (#{ribcage-labels\ 9105}#
                                                     #{ribcage\ 10794}#)
                                                   #{i\ 10805}#)
                                                 #{marks\ 10792}#)
                                               (#{f\ 10804}#
                                                 (#{fx+\ 8977}#
                                                   #{i\ 10805}#
                                                   1)))))))
                                (#{f\ 10804}# 0)))))
                        (#{search-list-rib\ 10776}#
                          (lambda (#{sym\ 10813}#
                                   #{subst\ 10814}#
                                   #{marks\ 10815}#
                                   #{symnames\ 10816}#
                                   #{ribcage\ 10817}#)
                            (letrec ((#{f\ 10826}#
                                       (lambda (#{symnames\ 10827}#
                                                #{i\ 10828}#)
                                         (if (null? #{symnames\ 10827}#)
                                           (#{search\ 10774}#
                                             #{sym\ 10813}#
                                             (cdr #{subst\ 10814}#)
                                             #{marks\ 10815}#)
                                           (if (if (eq? (car #{symnames\ 10827}#)
                                                        #{sym\ 10813}#)
                                                 (#{same-marks?\ 9131}#
                                                   #{marks\ 10815}#
                                                   (list-ref
                                                     (#{ribcage-marks\ 9103}#
                                                       #{ribcage\ 10817}#)
                                                     #{i\ 10828}#))
                                                 #f)
                                             (values
                                               (list-ref
                                                 (#{ribcage-labels\ 9105}#
                                                   #{ribcage\ 10817}#)
                                                 #{i\ 10828}#)
                                               #{marks\ 10815}#)
                                             (#{f\ 10826}#
                                               (cdr #{symnames\ 10827}#)
                                               (#{fx+\ 8977}#
                                                 #{i\ 10828}#
                                                 1)))))))
                              (#{f\ 10826}# #{symnames\ 10816}# 0))))
                        (#{search\ 10774}#
                          (lambda (#{sym\ 10836}#
                                   #{subst\ 10837}#
                                   #{marks\ 10838}#)
                            (if (null? #{subst\ 10837}#)
                              (values #f #{marks\ 10838}#)
                              (let ((#{fst\ 10843}# (car #{subst\ 10837}#)))
                                (if (eq? #{fst\ 10843}# (quote shift))
                                  (#{search\ 10774}#
                                    #{sym\ 10836}#
                                    (cdr #{subst\ 10837}#)
                                    (cdr #{marks\ 10838}#))
                                  (let ((#{symnames\ 10845}#
                                          (#{ribcage-symnames\ 9101}#
                                            #{fst\ 10843}#)))
                                    (if (vector? #{symnames\ 10845}#)
                                      (#{search-vector-rib\ 10778}#
                                        #{sym\ 10836}#
                                        #{subst\ 10837}#
                                        #{marks\ 10838}#
                                        #{symnames\ 10845}#
                                        #{fst\ 10843}#)
                                      (#{search-list-rib\ 10776}#
                                        #{sym\ 10836}#
                                        #{subst\ 10837}#
                                        #{marks\ 10838}#
                                        #{symnames\ 10845}#
                                        #{fst\ 10843}#)))))))))
                 (if (symbol? #{id\ 10768}#)
                   (let ((#{t\ 10848}#
                           (call-with-values
                             (lambda ()
                               (#{search\ 10774}#
                                 #{id\ 10768}#
                                 (#{wrap-subst\ 9085}# #{w\ 10769}#)
                                 (#{wrap-marks\ 9083}# #{w\ 10769}#)))
                             (lambda (#{x\ 10850}# . #{ignore\ 10851}#)
                               #{x\ 10850}#))))
                     (if #{t\ 10848}# #{t\ 10848}# #{id\ 10768}#))
                   (if (#{syntax-object?\ 9040}# #{id\ 10768}#)
                     (let ((#{id\ 10859}#
                             (#{syntax-object-expression\ 9042}#
                               #{id\ 10768}#))
                           (#{w1\ 10860}#
                             (#{syntax-object-wrap\ 9044}# #{id\ 10768}#)))
                       (let ((#{marks\ 10862}#
                               (#{join-marks\ 9129}#
                                 (#{wrap-marks\ 9083}# #{w\ 10769}#)
                                 (#{wrap-marks\ 9083}# #{w1\ 10860}#))))
                         (call-with-values
                           (lambda ()
                             (#{search\ 10774}#
                               #{id\ 10859}#
                               (#{wrap-subst\ 9085}# #{w\ 10769}#)
                               #{marks\ 10862}#))
                           (lambda (#{new-id\ 10863}# #{marks\ 10864}#)
                             (let ((#{t\ 10869}# #{new-id\ 10863}#))
                               (if #{t\ 10869}#
                                 #{t\ 10869}#
                                 (let ((#{t\ 10872}#
                                         (call-with-values
                                           (lambda ()
                                             (#{search\ 10774}#
                                               #{id\ 10859}#
                                               (#{wrap-subst\ 9085}#
                                                 #{w1\ 10860}#)
                                               #{marks\ 10864}#))
                                           (lambda (#{x\ 10874}#
                                                    .
                                                    #{ignore\ 10875}#)
                                             #{x\ 10874}#))))
                                   (if #{t\ 10872}#
                                     #{t\ 10872}#
                                     #{id\ 10859}#))))))))
                     (syntax-violation
                       'id-var-name
                       "invalid id"
                       #{id\ 10768}#))))))
           (#{same-marks?\ 9131}#
             (lambda (#{x\ 10880}# #{y\ 10881}#)
               (let ((#{t\ 10886}# (eq? #{x\ 10880}# #{y\ 10881}#)))
                 (if #{t\ 10886}#
                   #{t\ 10886}#
                   (if (not (null? #{x\ 10880}#))
                     (if (not (null? #{y\ 10881}#))
                       (if (eq? (car #{x\ 10880}#) (car #{y\ 10881}#))
                         (#{same-marks?\ 9131}#
                           (cdr #{x\ 10880}#)
                           (cdr #{y\ 10881}#))
                         #f)
                       #f)
                     #f)))))
           (#{join-marks\ 9129}#
             (lambda (#{m1\ 10892}# #{m2\ 10893}#)
               (#{smart-append\ 9125}#
                 #{m1\ 10892}#
                 #{m2\ 10893}#)))
           (#{join-wraps\ 9127}#
             (lambda (#{w1\ 10896}# #{w2\ 10897}#)
               (let ((#{m1\ 10902}#
                       (#{wrap-marks\ 9083}# #{w1\ 10896}#))
                     (#{s1\ 10903}#
                       (#{wrap-subst\ 9085}# #{w1\ 10896}#)))
                 (if (null? #{m1\ 10902}#)
                   (if (null? #{s1\ 10903}#)
                     #{w2\ 10897}#
                     (#{make-wrap\ 9081}#
                       (#{wrap-marks\ 9083}# #{w2\ 10897}#)
                       (#{smart-append\ 9125}#
                         #{s1\ 10903}#
                         (#{wrap-subst\ 9085}# #{w2\ 10897}#))))
                   (#{make-wrap\ 9081}#
                     (#{smart-append\ 9125}#
                       #{m1\ 10902}#
                       (#{wrap-marks\ 9083}# #{w2\ 10897}#))
                     (#{smart-append\ 9125}#
                       #{s1\ 10903}#
                       (#{wrap-subst\ 9085}# #{w2\ 10897}#)))))))
           (#{smart-append\ 9125}#
             (lambda (#{m1\ 10904}# #{m2\ 10905}#)
               (if (null? #{m2\ 10905}#)
                 #{m1\ 10904}#
                 (append #{m1\ 10904}# #{m2\ 10905}#))))
           (#{make-binding-wrap\ 9123}#
             (lambda (#{ids\ 10908}# #{labels\ 10909}# #{w\ 10910}#)
               (if (null? #{ids\ 10908}#)
                 #{w\ 10910}#
                 (#{make-wrap\ 9081}#
                   (#{wrap-marks\ 9083}# #{w\ 10910}#)
                   (cons (let ((#{labelvec\ 10915}#
                                 (list->vector #{labels\ 10909}#)))
                           (let ((#{n\ 10917}#
                                   (vector-length #{labelvec\ 10915}#)))
                             (let ((#{symnamevec\ 10920}#
                                     (make-vector #{n\ 10917}#))
                                   (#{marksvec\ 10921}#
                                     (make-vector #{n\ 10917}#)))
                               (begin
                                 (letrec ((#{f\ 10925}#
                                            (lambda (#{ids\ 10926}#
                                                     #{i\ 10927}#)
                                              (if (not (null? #{ids\ 10926}#))
                                                (call-with-values
                                                  (lambda ()
                                                    (#{id-sym-name&marks\ 9079}#
                                                      (car #{ids\ 10926}#)
                                                      #{w\ 10910}#))
                                                  (lambda (#{symname\ 10928}#
                                                           #{marks\ 10929}#)
                                                    (begin
                                                      (vector-set!
                                                        #{symnamevec\ 10920}#
                                                        #{i\ 10927}#
                                                        #{symname\ 10928}#)
                                                      (vector-set!
                                                        #{marksvec\ 10921}#
                                                        #{i\ 10927}#
                                                        #{marks\ 10929}#)
                                                      (#{f\ 10925}#
                                                        (cdr #{ids\ 10926}#)
                                                        (#{fx+\ 8977}#
                                                          #{i\ 10927}#
                                                          1)))))))))
                                   (#{f\ 10925}# #{ids\ 10908}# 0))
                                 (#{make-ribcage\ 9097}#
                                   #{symnamevec\ 10920}#
                                   #{marksvec\ 10921}#
                                   #{labelvec\ 10915}#)))))
                         (#{wrap-subst\ 9085}# #{w\ 10910}#))))))
           (#{extend-ribcage!\ 9121}#
             (lambda (#{ribcage\ 10932}#
                      #{id\ 10933}#
                      #{label\ 10934}#)
               (begin
                 (#{set-ribcage-symnames!\ 9107}#
                   #{ribcage\ 10932}#
                   (cons (#{syntax-object-expression\ 9042}#
                           #{id\ 10933}#)
                         (#{ribcage-symnames\ 9101}# #{ribcage\ 10932}#)))
                 (#{set-ribcage-marks!\ 9109}#
                   #{ribcage\ 10932}#
                   (cons (#{wrap-marks\ 9083}#
                           (#{syntax-object-wrap\ 9044}# #{id\ 10933}#))
                         (#{ribcage-marks\ 9103}# #{ribcage\ 10932}#)))
                 (#{set-ribcage-labels!\ 9111}#
                   #{ribcage\ 10932}#
                   (cons #{label\ 10934}#
                         (#{ribcage-labels\ 9105}# #{ribcage\ 10932}#))))))
           (#{anti-mark\ 9117}#
             (lambda (#{w\ 10938}#)
               (#{make-wrap\ 9081}#
                 (cons #f (#{wrap-marks\ 9083}# #{w\ 10938}#))
                 (cons 'shift
                       (#{wrap-subst\ 9085}# #{w\ 10938}#)))))
           (#{set-ribcage-labels!\ 9111}#
             (lambda (#{x\ 10941}# #{update\ 10942}#)
               (vector-set! #{x\ 10941}# 3 #{update\ 10942}#)))
           (#{set-ribcage-marks!\ 9109}#
             (lambda (#{x\ 10945}# #{update\ 10946}#)
               (vector-set! #{x\ 10945}# 2 #{update\ 10946}#)))
           (#{set-ribcage-symnames!\ 9107}#
             (lambda (#{x\ 10949}# #{update\ 10950}#)
               (vector-set! #{x\ 10949}# 1 #{update\ 10950}#)))
           (#{ribcage-labels\ 9105}#
             (lambda (#{x\ 10953}#)
               (vector-ref #{x\ 10953}# 3)))
           (#{ribcage-marks\ 9103}#
             (lambda (#{x\ 10955}#)
               (vector-ref #{x\ 10955}# 2)))
           (#{ribcage-symnames\ 9101}#
             (lambda (#{x\ 10957}#)
               (vector-ref #{x\ 10957}# 1)))
           (#{ribcage?\ 9099}#
             (lambda (#{x\ 10959}#)
               (if (vector? #{x\ 10959}#)
                 (if (= (vector-length #{x\ 10959}#) 4)
                   (eq? (vector-ref #{x\ 10959}# 0) (quote ribcage))
                   #f)
                 #f)))
           (#{make-ribcage\ 9097}#
             (lambda (#{symnames\ 10964}#
                      #{marks\ 10965}#
                      #{labels\ 10966}#)
               (vector
                 'ribcage
                 #{symnames\ 10964}#
                 #{marks\ 10965}#
                 #{labels\ 10966}#)))
           (#{gen-labels\ 9094}#
             (lambda (#{ls\ 10970}#)
               (if (null? #{ls\ 10970}#)
                 '()
                 (cons (#{gen-label\ 9092}#)
                       (#{gen-labels\ 9094}# (cdr #{ls\ 10970}#))))))
           (#{gen-label\ 9092}#
             (lambda () (symbol->string (gensym "i"))))
           (#{wrap-subst\ 9085}# cdr)
           (#{wrap-marks\ 9083}# car)
           (#{make-wrap\ 9081}# cons)
           (#{id-sym-name&marks\ 9079}#
             (lambda (#{x\ 10972}# #{w\ 10973}#)
               (if (#{syntax-object?\ 9040}# #{x\ 10972}#)
                 (values
                   (#{syntax-object-expression\ 9042}# #{x\ 10972}#)
                   (#{join-marks\ 9129}#
                     (#{wrap-marks\ 9083}# #{w\ 10973}#)
                     (#{wrap-marks\ 9083}#
                       (#{syntax-object-wrap\ 9044}# #{x\ 10972}#))))
                 (values
                   #{x\ 10972}#
                   (#{wrap-marks\ 9083}# #{w\ 10973}#)))))
           (#{id?\ 9076}#
             (lambda (#{x\ 10976}#)
               (if (symbol? #{x\ 10976}#)
                 #t
                 (if (#{syntax-object?\ 9040}# #{x\ 10976}#)
                   (symbol?
                     (#{syntax-object-expression\ 9042}# #{x\ 10976}#))
                   #f))))
           (#{nonsymbol-id?\ 9074}#
             (lambda (#{x\ 10983}#)
               (if (#{syntax-object?\ 9040}# #{x\ 10983}#)
                 (symbol?
                   (#{syntax-object-expression\ 9042}# #{x\ 10983}#))
                 #f)))
           (#{global-extend\ 9072}#
             (lambda (#{type\ 10987}# #{sym\ 10988}# #{val\ 10989}#)
               (#{put-global-definition-hook\ 8990}#
                 #{sym\ 10988}#
                 #{type\ 10987}#
                 #{val\ 10989}#)))
           (#{lookup\ 9070}#
             (lambda (#{x\ 10993}# #{r\ 10994}# #{mod\ 10995}#)
               (let ((#{t\ 11001}# (assq #{x\ 10993}# #{r\ 10994}#)))
                 (if #{t\ 11001}#
                   (cdr #{t\ 11001}#)
                   (if (symbol? #{x\ 10993}#)
                     (let ((#{t\ 11007}#
                             (#{get-global-definition-hook\ 8992}#
                               #{x\ 10993}#
                               #{mod\ 10995}#)))
                       (if #{t\ 11007}# #{t\ 11007}# (quote (global))))
                     '(displaced-lexical))))))
           (#{macros-only-env\ 9068}#
             (lambda (#{r\ 11012}#)
               (if (null? #{r\ 11012}#)
                 '()
                 (let ((#{a\ 11015}# (car #{r\ 11012}#)))
                   (if (eq? (cadr #{a\ 11015}#) (quote macro))
                     (cons #{a\ 11015}#
                           (#{macros-only-env\ 9068}# (cdr #{r\ 11012}#)))
                     (#{macros-only-env\ 9068}# (cdr #{r\ 11012}#)))))))
           (#{extend-var-env\ 9066}#
             (lambda (#{labels\ 11016}# #{vars\ 11017}# #{r\ 11018}#)
               (if (null? #{labels\ 11016}#)
                 #{r\ 11018}#
                 (#{extend-var-env\ 9066}#
                   (cdr #{labels\ 11016}#)
                   (cdr #{vars\ 11017}#)
                   (cons (cons (car #{labels\ 11016}#)
                               (cons (quote lexical) (car #{vars\ 11017}#)))
                         #{r\ 11018}#)))))
           (#{extend-env\ 9064}#
             (lambda (#{labels\ 11023}#
                      #{bindings\ 11024}#
                      #{r\ 11025}#)
               (if (null? #{labels\ 11023}#)
                 #{r\ 11025}#
                 (#{extend-env\ 9064}#
                   (cdr #{labels\ 11023}#)
                   (cdr #{bindings\ 11024}#)
                   (cons (cons (car #{labels\ 11023}#)
                               (car #{bindings\ 11024}#))
                         #{r\ 11025}#)))))
           (#{binding-value\ 9061}# cdr)
           (#{binding-type\ 9059}# car)
           (#{source-annotation\ 9055}#
             (lambda (#{x\ 11029}#)
               (if (#{syntax-object?\ 9040}# #{x\ 11029}#)
                 (#{source-annotation\ 9055}#
                   (#{syntax-object-expression\ 9042}# #{x\ 11029}#))
                 (if (pair? #{x\ 11029}#)
                   (let ((#{props\ 11036}#
                           (source-properties #{x\ 11029}#)))
                     (if (pair? #{props\ 11036}#) #{props\ 11036}# #f))
                   #f))))
           (#{set-syntax-object-module!\ 9052}#
             (lambda (#{x\ 11038}# #{update\ 11039}#)
               (vector-set! #{x\ 11038}# 3 #{update\ 11039}#)))
           (#{set-syntax-object-wrap!\ 9050}#
             (lambda (#{x\ 11042}# #{update\ 11043}#)
               (vector-set! #{x\ 11042}# 2 #{update\ 11043}#)))
           (#{set-syntax-object-expression!\ 9048}#
             (lambda (#{x\ 11046}# #{update\ 11047}#)
               (vector-set! #{x\ 11046}# 1 #{update\ 11047}#)))
           (#{syntax-object-module\ 9046}#
             (lambda (#{x\ 11050}#)
               (vector-ref #{x\ 11050}# 3)))
           (#{syntax-object-wrap\ 9044}#
             (lambda (#{x\ 11052}#)
               (vector-ref #{x\ 11052}# 2)))
           (#{syntax-object-expression\ 9042}#
             (lambda (#{x\ 11054}#)
               (vector-ref #{x\ 11054}# 1)))
           (#{syntax-object?\ 9040}#
             (lambda (#{x\ 11056}#)
               (if (vector? #{x\ 11056}#)
                 (if (= (vector-length #{x\ 11056}#) 4)
                   (eq? (vector-ref #{x\ 11056}# 0)
                        'syntax-object)
                   #f)
                 #f)))
           (#{make-syntax-object\ 9038}#
             (lambda (#{expression\ 11061}#
                      #{wrap\ 11062}#
                      #{module\ 11063}#)
               (vector
                 'syntax-object
                 #{expression\ 11061}#
                 #{wrap\ 11062}#
                 #{module\ 11063}#)))
           (#{build-letrec\ 9034}#
             (lambda (#{src\ 11067}#
                      #{ids\ 11068}#
                      #{vars\ 11069}#
                      #{val-exps\ 11070}#
                      #{body-exp\ 11071}#)
               (if (null? #{vars\ 11069}#)
                 #{body-exp\ 11071}#
                 (let ((#{atom-key\ 11079}#
                         (fluid-ref #{*mode*\ 8975}#)))
                   (if (memv #{atom-key\ 11079}# (quote (c)))
                     (begin
                       (for-each
                         #{maybe-name-value!\ 9014}#
                         #{ids\ 11068}#
                         #{val-exps\ 11070}#)
                       ((@ (language tree-il) make-letrec)
                        #{src\ 11067}#
                        #{ids\ 11068}#
                        #{vars\ 11069}#
                        #{val-exps\ 11070}#
                        #{body-exp\ 11071}#))
                     (#{decorate-source\ 8994}#
                       (list 'letrec
                             (map list #{vars\ 11069}# #{val-exps\ 11070}#)
                             #{body-exp\ 11071}#)
                       #{src\ 11067}#))))))
           (#{build-named-let\ 9032}#
             (lambda (#{src\ 11083}#
                      #{ids\ 11084}#
                      #{vars\ 11085}#
                      #{val-exps\ 11086}#
                      #{body-exp\ 11087}#)
               (let ((#{f\ 11097}# (car #{vars\ 11085}#))
                     (#{f-name\ 11098}# (car #{ids\ 11084}#))
                     (#{vars\ 11099}# (cdr #{vars\ 11085}#))
                     (#{ids\ 11100}# (cdr #{ids\ 11084}#)))
                 (let ((#{atom-key\ 11103}#
                         (fluid-ref #{*mode*\ 8975}#)))
                   (if (memv #{atom-key\ 11103}# (quote (c)))
                     (let ((#{proc\ 11106}#
                             (#{build-simple-lambda\ 9018}#
                               #{src\ 11083}#
                               #{ids\ 11100}#
                               #f
                               #{vars\ 11099}#
                               '()
                               #{body-exp\ 11087}#)))
                       (begin
                         (#{maybe-name-value!\ 9014}#
                           #{f-name\ 11098}#
                           #{proc\ 11106}#)
                         (for-each
                           #{maybe-name-value!\ 9014}#
                           #{ids\ 11100}#
                           #{val-exps\ 11086}#)
                         ((@ (language tree-il) make-letrec)
                          #{src\ 11083}#
                          (list #{f-name\ 11098}#)
                          (list #{f\ 11097}#)
                          (list #{proc\ 11106}#)
                          (#{build-application\ 8998}#
                            #{src\ 11083}#
                            (#{build-lexical-reference\ 9004}#
                              'fun
                              #{src\ 11083}#
                              #{f-name\ 11098}#
                              #{f\ 11097}#)
                            #{val-exps\ 11086}#))))
                     (#{decorate-source\ 8994}#
                       (list 'letrec
                             (list (list #{f\ 11097}#
                                         (list 'lambda
                                               #{vars\ 11099}#
                                               #{body-exp\ 11087}#)))
                             (cons #{f\ 11097}# #{val-exps\ 11086}#))
                       #{src\ 11083}#))))))
           (#{build-let\ 9030}#
             (lambda (#{src\ 11109}#
                      #{ids\ 11110}#
                      #{vars\ 11111}#
                      #{val-exps\ 11112}#
                      #{body-exp\ 11113}#)
               (if (null? #{vars\ 11111}#)
                 #{body-exp\ 11113}#
                 (let ((#{atom-key\ 11121}#
                         (fluid-ref #{*mode*\ 8975}#)))
                   (if (memv #{atom-key\ 11121}# (quote (c)))
                     (begin
                       (for-each
                         #{maybe-name-value!\ 9014}#
                         #{ids\ 11110}#
                         #{val-exps\ 11112}#)
                       ((@ (language tree-il) make-let)
                        #{src\ 11109}#
                        #{ids\ 11110}#
                        #{vars\ 11111}#
                        #{val-exps\ 11112}#
                        #{body-exp\ 11113}#))
                     (#{decorate-source\ 8994}#
                       (list 'let
                             (map list #{vars\ 11111}# #{val-exps\ 11112}#)
                             #{body-exp\ 11113}#)
                       #{src\ 11109}#))))))
           (#{build-sequence\ 9028}#
             (lambda (#{src\ 11125}# #{exps\ 11126}#)
               (if (null? (cdr #{exps\ 11126}#))
                 (car #{exps\ 11126}#)
                 (let ((#{atom-key\ 11131}#
                         (fluid-ref #{*mode*\ 8975}#)))
                   (if (memv #{atom-key\ 11131}# (quote (c)))
                     ((@ (language tree-il) make-sequence)
                      #{src\ 11125}#
                      #{exps\ 11126}#)
                     (#{decorate-source\ 8994}#
                       (cons (quote begin) #{exps\ 11126}#)
                       #{src\ 11125}#))))))
           (#{build-data\ 9026}#
             (lambda (#{src\ 11135}# #{exp\ 11136}#)
               (let ((#{atom-key\ 11141}#
                       (fluid-ref #{*mode*\ 8975}#)))
                 (if (memv #{atom-key\ 11141}# (quote (c)))
                   ((@ (language tree-il) make-const)
                    #{src\ 11135}#
                    #{exp\ 11136}#)
                   (#{decorate-source\ 8994}#
                     (if (if (self-evaluating? #{exp\ 11136}#)
                           (not (vector? #{exp\ 11136}#))
                           #f)
                       #{exp\ 11136}#
                       (list (quote quote) #{exp\ 11136}#))
                     #{src\ 11135}#)))))
           (#{build-primref\ 9024}#
             (lambda (#{src\ 11146}# #{name\ 11147}#)
               (if (equal?
                     (module-name (current-module))
                     '(guile))
                 (let ((#{atom-key\ 11152}#
                         (fluid-ref #{*mode*\ 8975}#)))
                   (if (memv #{atom-key\ 11152}# (quote (c)))
                     ((@ (language tree-il) make-toplevel-ref)
                      #{src\ 11146}#
                      #{name\ 11147}#)
                     (#{decorate-source\ 8994}#
                       #{name\ 11147}#
                       #{src\ 11146}#)))
                 (let ((#{atom-key\ 11157}#
                         (fluid-ref #{*mode*\ 8975}#)))
                   (if (memv #{atom-key\ 11157}# (quote (c)))
                     ((@ (language tree-il) make-module-ref)
                      #{src\ 11146}#
                      '(guile)
                      #{name\ 11147}#
                      #f)
                     (#{decorate-source\ 8994}#
                       (list (quote @@) (quote (guile)) #{name\ 11147}#)
                       #{src\ 11146}#))))))
           (#{build-lambda-case\ 9022}#
             (lambda (#{src\ 11161}#
                      #{req\ 11162}#
                      #{opt\ 11163}#
                      #{rest\ 11164}#
                      #{kw\ 11165}#
                      #{inits\ 11166}#
                      #{vars\ 11167}#
                      #{body\ 11168}#
                      #{else-case\ 11169}#)
               (let ((#{atom-key\ 11181}#
                       (fluid-ref #{*mode*\ 8975}#)))
                 (if (memv #{atom-key\ 11181}# (quote (c)))
                   ((@ (language tree-il) make-lambda-case)
                    #{src\ 11161}#
                    #{req\ 11162}#
                    #{opt\ 11163}#
                    #{rest\ 11164}#
                    #{kw\ 11165}#
                    #{inits\ 11166}#
                    #{vars\ 11167}#
                    #{body\ 11168}#
                    #{else-case\ 11169}#)
                   (let ((#{nreq\ 11186}# (length #{req\ 11162}#)))
                     (let ((#{nopt\ 11188}#
                             (if #{opt\ 11163}# (length #{opt\ 11163}#) 0)))
                       (let ((#{rest-idx\ 11190}#
                               (if #{rest\ 11164}#
                                 (+ #{nreq\ 11186}# #{nopt\ 11188}#)
                                 #f)))
                         (let ((#{allow-other-keys?\ 11194}#
                                 (if #{kw\ 11165}# (car #{kw\ 11165}#) #f)))
                           (let ((#{kw-indices\ 11196}#
                                   (map (lambda (#{x\ 11197}#)
                                          (cons (car #{x\ 11197}#)
                                                (list-index
                                                  #{vars\ 11167}#
                                                  (caddr #{x\ 11197}#))))
                                        (if #{kw\ 11165}#
                                          (cdr #{kw\ 11165}#)
                                          '()))))
                             (let ((#{nargs\ 11200}#
                                     (apply max
                                            (+ #{nreq\ 11186}#
                                               #{nopt\ 11188}#
                                               (if #{rest\ 11164}# 1 0))
                                            (map 1+
                                                 (map cdr
                                                      #{kw-indices\ 11196}#)))))
                               (begin
                                 (let ((#{t\ 11203}#
                                         (= #{nargs\ 11200}#
                                            (length #{vars\ 11167}#)
                                            (+ #{nreq\ 11186}#
                                               (length #{inits\ 11166}#)
                                               (if #{rest\ 11164}# 1 0)))))
                                   (if #{t\ 11203}#
                                     #{t\ 11203}#
                                     (error "something went wrong"
                                            #{req\ 11162}#
                                            #{opt\ 11163}#
                                            #{rest\ 11164}#
                                            #{kw\ 11165}#
                                            #{inits\ 11166}#
                                            #{vars\ 11167}#
                                            #{nreq\ 11186}#
                                            #{nopt\ 11188}#
                                            #{kw-indices\ 11196}#
                                            #{nargs\ 11200}#)))
                                 (#{decorate-source\ 8994}#
                                   (cons (list (cons '(@@ (ice-9 optargs)
                                                          parse-lambda-case)
                                                     (cons (list 'quote
                                                                 (list #{nreq\ 11186}#
                                                                       #{nopt\ 11188}#
                                                                       #{rest-idx\ 11190}#
                                                                       #{nargs\ 11200}#
                                                                       #{allow-other-keys?\ 11194}#
                                                                       #{kw-indices\ 11196}#))
                                                           (cons (cons 'list
                                                                       (map (lambda (#{i\ 11206}#)
                                                                              (list 'lambda
                                                                                    #{vars\ 11167}#
                                                                                    #{i\ 11206}#))
                                                                            #{inits\ 11166}#))
                                                                 '(%%args))))
                                               '=>
                                               (list 'lambda
                                                     '(%%args)
                                                     (cons 'apply
                                                           (cons (list 'lambda
                                                                       #{vars\ 11167}#
                                                                       #{body\ 11168}#)
                                                                 '(%%args)))))
                                         (let ((#{t\ 11211}#
                                                 #{else-case\ 11169}#))
                                           (if #{t\ 11211}#
                                             #{t\ 11211}#
                                             '((%%args
                                                 (scm-error
                                                   'wrong-number-of-args
                                                   #f
                                                   "Wrong number of arguments"
                                                   '()
                                                   %%args))))))
                                   #{src\ 11161}#))))))))))))
           (#{build-case-lambda\ 9020}#
             (lambda (#{src\ 11214}# #{meta\ 11215}# #{body\ 11216}#)
               (let ((#{atom-key\ 11222}#
                       (fluid-ref #{*mode*\ 8975}#)))
                 (if (memv #{atom-key\ 11222}# (quote (c)))
                   ((@ (language tree-il) make-lambda)
                    #{src\ 11214}#
                    #{meta\ 11215}#
                    #{body\ 11216}#)
                   (#{decorate-source\ 8994}#
                     (list 'lambda
                           '%%args
                           (cons (quote cond) #{body\ 11216}#))
                     #{src\ 11214}#)))))
           (#{build-simple-lambda\ 9018}#
             (lambda (#{src\ 11226}#
                      #{req\ 11227}#
                      #{rest\ 11228}#
                      #{vars\ 11229}#
                      #{meta\ 11230}#
                      #{exp\ 11231}#)
               (let ((#{atom-key\ 11240}#
                       (fluid-ref #{*mode*\ 8975}#)))
                 (if (memv #{atom-key\ 11240}# (quote (c)))
                   ((@ (language tree-il) make-lambda)
                    #{src\ 11226}#
                    #{meta\ 11230}#
                    ((@ (language tree-il) make-lambda-case)
                     #{src\ 11226}#
                     #{req\ 11227}#
                     #f
                     #{rest\ 11228}#
                     #f
                     '()
                     #{vars\ 11229}#
                     #{exp\ 11231}#
                     #f))
                   (#{decorate-source\ 8994}#
                     (list 'lambda
                           (if #{rest\ 11228}#
                             (apply cons* #{vars\ 11229}#)
                             #{vars\ 11229}#)
                           #{exp\ 11231}#)
                     #{src\ 11226}#)))))
           (#{build-global-definition\ 9016}#
             (lambda (#{source\ 11244}# #{var\ 11245}# #{exp\ 11246}#)
               (let ((#{atom-key\ 11252}#
                       (fluid-ref #{*mode*\ 8975}#)))
                 (if (memv #{atom-key\ 11252}# (quote (c)))
                   (begin
                     (#{maybe-name-value!\ 9014}#
                       #{var\ 11245}#
                       #{exp\ 11246}#)
                     ((@ (language tree-il) make-toplevel-define)
                      #{source\ 11244}#
                      #{var\ 11245}#
                      #{exp\ 11246}#))
                   (#{decorate-source\ 8994}#
                     (list 'define
                           #{var\ 11245}#
                           #{exp\ 11246}#)
                     #{source\ 11244}#)))))
           (#{maybe-name-value!\ 9014}#
             (lambda (#{name\ 11256}# #{val\ 11257}#)
               (if ((@ (language tree-il) lambda?) #{val\ 11257}#)
                 (let ((#{meta\ 11263}#
                         ((@ (language tree-il) lambda-meta)
                          #{val\ 11257}#)))
                   (if (not (assq (quote name) #{meta\ 11263}#))
                     ((setter (@ (language tree-il) lambda-meta))
                      #{val\ 11257}#
                      (acons 'name
                             #{name\ 11256}#
                             #{meta\ 11263}#)))))))
           (#{build-global-assignment\ 9012}#
             (lambda (#{source\ 11264}#
                      #{var\ 11265}#
                      #{exp\ 11266}#
                      #{mod\ 11267}#)
               (#{analyze-variable\ 9008}#
                 #{mod\ 11267}#
                 #{var\ 11265}#
                 (lambda (#{mod\ 11272}#
                          #{var\ 11273}#
                          #{public?\ 11274}#)
                   (let ((#{atom-key\ 11280}#
                           (fluid-ref #{*mode*\ 8975}#)))
                     (if (memv #{atom-key\ 11280}# (quote (c)))
                       ((@ (language tree-il) make-module-set)
                        #{source\ 11264}#
                        #{mod\ 11272}#
                        #{var\ 11273}#
                        #{public?\ 11274}#
                        #{exp\ 11266}#)
                       (#{decorate-source\ 8994}#
                         (list 'set!
                               (list (if #{public?\ 11274}#
                                       '@
                                       '@@)
                                     #{mod\ 11272}#
                                     #{var\ 11273}#)
                               #{exp\ 11266}#)
                         #{source\ 11264}#))))
                 (lambda (#{var\ 11284}#)
                   (let ((#{atom-key\ 11288}#
                           (fluid-ref #{*mode*\ 8975}#)))
                     (if (memv #{atom-key\ 11288}# (quote (c)))
                       ((@ (language tree-il) make-toplevel-set)
                        #{source\ 11264}#
                        #{var\ 11284}#
                        #{exp\ 11266}#)
                       (#{decorate-source\ 8994}#
                         (list (quote set!) #{var\ 11284}# #{exp\ 11266}#)
                         #{source\ 11264}#)))))))
           (#{build-global-reference\ 9010}#
             (lambda (#{source\ 11292}# #{var\ 11293}# #{mod\ 11294}#)
               (#{analyze-variable\ 9008}#
                 #{mod\ 11294}#
                 #{var\ 11293}#
                 (lambda (#{mod\ 11298}#
                          #{var\ 11299}#
                          #{public?\ 11300}#)
                   (let ((#{atom-key\ 11306}#
                           (fluid-ref #{*mode*\ 8975}#)))
                     (if (memv #{atom-key\ 11306}# (quote (c)))
                       ((@ (language tree-il) make-module-ref)
                        #{source\ 11292}#
                        #{mod\ 11298}#
                        #{var\ 11299}#
                        #{public?\ 11300}#)
                       (#{decorate-source\ 8994}#
                         (list (if #{public?\ 11300}# (quote @) (quote @@))
                               #{mod\ 11298}#
                               #{var\ 11299}#)
                         #{source\ 11292}#))))
                 (lambda (#{var\ 11309}#)
                   (let ((#{atom-key\ 11313}#
                           (fluid-ref #{*mode*\ 8975}#)))
                     (if (memv #{atom-key\ 11313}# (quote (c)))
                       ((@ (language tree-il) make-toplevel-ref)
                        #{source\ 11292}#
                        #{var\ 11309}#)
                       (#{decorate-source\ 8994}#
                         #{var\ 11309}#
                         #{source\ 11292}#)))))))
           (#{analyze-variable\ 9008}#
             (lambda (#{mod\ 11316}#
                      #{var\ 11317}#
                      #{modref-cont\ 11318}#
                      #{bare-cont\ 11319}#)
               (if (not #{mod\ 11316}#)
                 (#{bare-cont\ 11319}# #{var\ 11317}#)
                 (let ((#{kind\ 11326}# (car #{mod\ 11316}#))
                       (#{mod\ 11327}# (cdr #{mod\ 11316}#)))
                   (if (memv #{kind\ 11326}# (quote (public)))
                     (#{modref-cont\ 11318}#
                       #{mod\ 11327}#
                       #{var\ 11317}#
                       #t)
                     (if (memv #{kind\ 11326}# (quote (private)))
                       (if (not (equal?
                                  #{mod\ 11327}#
                                  (module-name (current-module))))
                         (#{modref-cont\ 11318}#
                           #{mod\ 11327}#
                           #{var\ 11317}#
                           #f)
                         (#{bare-cont\ 11319}# #{var\ 11317}#))
                       (if (memv #{kind\ 11326}# (quote (bare)))
                         (#{bare-cont\ 11319}# #{var\ 11317}#)
                         (if (memv #{kind\ 11326}# (quote (hygiene)))
                           (if (if (not (equal?
                                          #{mod\ 11327}#
                                          (module-name (current-module))))
                                 (module-variable
                                   (resolve-module #{mod\ 11327}#)
                                   #{var\ 11317}#)
                                 #f)
                             (#{modref-cont\ 11318}#
                               #{mod\ 11327}#
                               #{var\ 11317}#
                               #f)
                             (#{bare-cont\ 11319}# #{var\ 11317}#))
                           (syntax-violation
                             #f
                             "bad module kind"
                             #{var\ 11317}#
                             #{mod\ 11327}#)))))))))
           (#{build-lexical-assignment\ 9006}#
             (lambda (#{source\ 11335}#
                      #{name\ 11336}#
                      #{var\ 11337}#
                      #{exp\ 11338}#)
               (let ((#{atom-key\ 11345}#
                       (fluid-ref #{*mode*\ 8975}#)))
                 (if (memv #{atom-key\ 11345}# (quote (c)))
                   ((@ (language tree-il) make-lexical-set)
                    #{source\ 11335}#
                    #{name\ 11336}#
                    #{var\ 11337}#
                    #{exp\ 11338}#)
                   (#{decorate-source\ 8994}#
                     (list (quote set!) #{var\ 11337}# #{exp\ 11338}#)
                     #{source\ 11335}#)))))
           (#{build-lexical-reference\ 9004}#
             (lambda (#{type\ 11349}#
                      #{source\ 11350}#
                      #{name\ 11351}#
                      #{var\ 11352}#)
               (let ((#{atom-key\ 11359}#
                       (fluid-ref #{*mode*\ 8975}#)))
                 (if (memv #{atom-key\ 11359}# (quote (c)))
                   ((@ (language tree-il) make-lexical-ref)
                    #{source\ 11350}#
                    #{name\ 11351}#
                    #{var\ 11352}#)
                   (#{decorate-source\ 8994}#
                     #{var\ 11352}#
                     #{source\ 11350}#)))))
           (#{build-dynlet\ 9002}#
             (lambda (#{source\ 11362}#
                      #{fluids\ 11363}#
                      #{vals\ 11364}#
                      #{body\ 11365}#)
               (let ((#{atom-key\ 11372}#
                       (fluid-ref #{*mode*\ 8975}#)))
                 (if (memv #{atom-key\ 11372}# (quote (c)))
                   ((@ (language tree-il) make-dynlet)
                    #{source\ 11362}#
                    #{fluids\ 11363}#
                    #{vals\ 11364}#
                    #{body\ 11365}#)
                   (#{decorate-source\ 8994}#
                     (list 'with-fluids
                           (map list #{fluids\ 11363}# #{vals\ 11364}#)
                           #{body\ 11365}#)
                     #{source\ 11362}#)))))
           (#{build-conditional\ 9000}#
             (lambda (#{source\ 11376}#
                      #{test-exp\ 11377}#
                      #{then-exp\ 11378}#
                      #{else-exp\ 11379}#)
               (let ((#{atom-key\ 11386}#
                       (fluid-ref #{*mode*\ 8975}#)))
                 (if (memv #{atom-key\ 11386}# (quote (c)))
                   ((@ (language tree-il) make-conditional)
                    #{source\ 11376}#
                    #{test-exp\ 11377}#
                    #{then-exp\ 11378}#
                    #{else-exp\ 11379}#)
                   (#{decorate-source\ 8994}#
                     (if (equal? #{else-exp\ 11379}# (quote (if #f #f)))
                       (list 'if
                             #{test-exp\ 11377}#
                             #{then-exp\ 11378}#)
                       (list 'if
                             #{test-exp\ 11377}#
                             #{then-exp\ 11378}#
                             #{else-exp\ 11379}#))
                     #{source\ 11376}#)))))
           (#{build-application\ 8998}#
             (lambda (#{source\ 11391}#
                      #{fun-exp\ 11392}#
                      #{arg-exps\ 11393}#)
               (let ((#{atom-key\ 11399}#
                       (fluid-ref #{*mode*\ 8975}#)))
                 (if (memv #{atom-key\ 11399}# (quote (c)))
                   ((@ (language tree-il) make-application)
                    #{source\ 11391}#
                    #{fun-exp\ 11392}#
                    #{arg-exps\ 11393}#)
                   (#{decorate-source\ 8994}#
                     (cons #{fun-exp\ 11392}# #{arg-exps\ 11393}#)
                     #{source\ 11391}#)))))
           (#{build-void\ 8996}#
             (lambda (#{source\ 11403}#)
               (let ((#{atom-key\ 11407}#
                       (fluid-ref #{*mode*\ 8975}#)))
                 (if (memv #{atom-key\ 11407}# (quote (c)))
                   ((@ (language tree-il) make-void)
                    #{source\ 11403}#)
                   (#{decorate-source\ 8994}#
                     '(if #f #f)
                     #{source\ 11403}#)))))
           (#{decorate-source\ 8994}#
             (lambda (#{e\ 11410}# #{s\ 11411}#)
               (begin
                 (if (if (pair? #{e\ 11410}#) #{s\ 11411}# #f)
                   (set-source-properties!
                     #{e\ 11410}#
                     #{s\ 11411}#))
                 #{e\ 11410}#)))
           (#{get-global-definition-hook\ 8992}#
             (lambda (#{symbol\ 11416}# #{module\ 11417}#)
               (begin
                 (if (if (not #{module\ 11417}#) (current-module) #f)
                   (warn "module system is booted, we should have a module"
                         #{symbol\ 11416}#))
                 (let ((#{v\ 11423}#
                         (module-variable
                           (if #{module\ 11417}#
                             (resolve-module (cdr #{module\ 11417}#))
                             (current-module))
                           #{symbol\ 11416}#)))
                   (if #{v\ 11423}#
                     (if (variable-bound? #{v\ 11423}#)
                       (let ((#{val\ 11428}# (variable-ref #{v\ 11423}#)))
                         (if (macro? #{val\ 11428}#)
                           (if (macro-type #{val\ 11428}#)
                             (cons (macro-type #{val\ 11428}#)
                                   (macro-binding #{val\ 11428}#))
                             #f)
                           #f))
                       #f)
                     #f)))))
           (#{put-global-definition-hook\ 8990}#
             (lambda (#{symbol\ 11432}#
                      #{type\ 11433}#
                      #{val\ 11434}#)
               (module-define!
                 (current-module)
                 #{symbol\ 11432}#
                 (make-syntax-transformer
                   #{symbol\ 11432}#
                   #{type\ 11433}#
                   #{val\ 11434}#))))
           (#{local-eval-hook\ 8987}#
             (lambda (#{x\ 11438}# #{mod\ 11439}#)
               (primitive-eval
                 (list #{noexpand\ 8973}#
                       (let ((#{atom-key\ 11445}#
                               (fluid-ref #{*mode*\ 8975}#)))
                         (if (memv #{atom-key\ 11445}# (quote (c)))
                           ((@ (language tree-il) tree-il->scheme)
                            #{x\ 11438}#)
                           #{x\ 11438}#))))))
           (#{top-level-eval-hook\ 8985}#
             (lambda (#{x\ 11448}# #{mod\ 11449}#)
               (primitive-eval
                 (list #{noexpand\ 8973}#
                       (let ((#{atom-key\ 11455}#
                               (fluid-ref #{*mode*\ 8975}#)))
                         (if (memv #{atom-key\ 11455}# (quote (c)))
                           ((@ (language tree-il) tree-il->scheme)
                            #{x\ 11448}#)
                           #{x\ 11448}#))))))
           (#{fx<\ 8983}# <)
           (#{fx=\ 8981}# =)
           (#{fx-\ 8979}# -)
           (#{fx+\ 8977}# +)
           (#{*mode*\ 8975}# (make-fluid))
           (#{noexpand\ 8973}# "noexpand"))
    (begin
      (#{global-extend\ 9072}#
        'local-syntax
        'letrec-syntax
        #t)
      (#{global-extend\ 9072}#
        'local-syntax
        'let-syntax
        #f)
      (#{global-extend\ 9072}#
        'core
        'fluid-let-syntax
        (lambda (#{e\ 11458}#
                 #{r\ 11459}#
                 #{w\ 11460}#
                 #{s\ 11461}#
                 #{mod\ 11462}#)
          ((lambda (#{tmp\ 11468}#)
             ((lambda (#{tmp\ 11469}#)
                (if (if #{tmp\ 11469}#
                      (apply (lambda (#{_\ 11475}#
                                      #{var\ 11476}#
                                      #{val\ 11477}#
                                      #{e1\ 11478}#
                                      #{e2\ 11479}#)
                               (#{valid-bound-ids?\ 9139}# #{var\ 11476}#))
                             #{tmp\ 11469}#)
                      #f)
                  (apply (lambda (#{_\ 11486}#
                                  #{var\ 11487}#
                                  #{val\ 11488}#
                                  #{e1\ 11489}#
                                  #{e2\ 11490}#)
                           (let ((#{names\ 11492}#
                                   (map (lambda (#{x\ 11493}#)
                                          (#{id-var-name\ 9133}#
                                            #{x\ 11493}#
                                            #{w\ 11460}#))
                                        #{var\ 11487}#)))
                             (begin
                               (for-each
                                 (lambda (#{id\ 11496}# #{n\ 11497}#)
                                   (let ((#{atom-key\ 11502}#
                                           (#{binding-type\ 9059}#
                                             (#{lookup\ 9070}#
                                               #{n\ 11497}#
                                               #{r\ 11459}#
                                               #{mod\ 11462}#))))
                                     (if (memv #{atom-key\ 11502}#
                                               '(displaced-lexical))
                                       (syntax-violation
                                         'fluid-let-syntax
                                         "identifier out of context"
                                         #{e\ 11458}#
                                         (#{source-wrap\ 9147}#
                                           #{id\ 11496}#
                                           #{w\ 11460}#
                                           #{s\ 11461}#
                                           #{mod\ 11462}#)))))
                                 #{var\ 11487}#
                                 #{names\ 11492}#)
                               (#{chi-body\ 9169}#
                                 (cons #{e1\ 11489}# #{e2\ 11490}#)
                                 (#{source-wrap\ 9147}#
                                   #{e\ 11458}#
                                   #{w\ 11460}#
                                   #{s\ 11461}#
                                   #{mod\ 11462}#)
                                 (#{extend-env\ 9064}#
                                   #{names\ 11492}#
                                   (let ((#{trans-r\ 11507}#
                                           (#{macros-only-env\ 9068}#
                                             #{r\ 11459}#)))
                                     (map (lambda (#{x\ 11508}#)
                                            (cons 'macro
                                                  (#{eval-local-transformer\ 9173}#
                                                    (#{chi\ 9161}#
                                                      #{x\ 11508}#
                                                      #{trans-r\ 11507}#
                                                      #{w\ 11460}#
                                                      #{mod\ 11462}#)
                                                    #{mod\ 11462}#)))
                                          #{val\ 11488}#))
                                   #{r\ 11459}#)
                                 #{w\ 11460}#
                                 #{mod\ 11462}#))))
                         #{tmp\ 11469}#)
                  ((lambda (#{_\ 11513}#)
                     (syntax-violation
                       'fluid-let-syntax
                       "bad syntax"
                       (#{source-wrap\ 9147}#
                         #{e\ 11458}#
                         #{w\ 11460}#
                         #{s\ 11461}#
                         #{mod\ 11462}#)))
                   #{tmp\ 11468}#)))
              ($sc-dispatch
                #{tmp\ 11468}#
                '(any #(each (any any)) any . each-any))))
           #{e\ 11458}#)))
      (#{global-extend\ 9072}#
        'core
        'quote
        (lambda (#{e\ 11514}#
                 #{r\ 11515}#
                 #{w\ 11516}#
                 #{s\ 11517}#
                 #{mod\ 11518}#)
          ((lambda (#{tmp\ 11524}#)
             ((lambda (#{tmp\ 11525}#)
                (if #{tmp\ 11525}#
                  (apply (lambda (#{_\ 11528}# #{e\ 11529}#)
                           (#{build-data\ 9026}#
                             #{s\ 11517}#
                             (#{strip\ 9187}# #{e\ 11529}# #{w\ 11516}#)))
                         #{tmp\ 11525}#)
                  ((lambda (#{_\ 11531}#)
                     (syntax-violation
                       'quote
                       "bad syntax"
                       (#{source-wrap\ 9147}#
                         #{e\ 11514}#
                         #{w\ 11516}#
                         #{s\ 11517}#
                         #{mod\ 11518}#)))
                   #{tmp\ 11524}#)))
              ($sc-dispatch #{tmp\ 11524}# (quote (any any)))))
           #{e\ 11514}#)))
      (#{global-extend\ 9072}#
        'core
        'syntax
        (letrec ((#{regen\ 11547}#
                   (lambda (#{x\ 11548}#)
                     (let ((#{atom-key\ 11552}# (car #{x\ 11548}#)))
                       (if (memv #{atom-key\ 11552}# (quote (ref)))
                         (#{build-lexical-reference\ 9004}#
                           'value
                           #f
                           (cadr #{x\ 11548}#)
                           (cadr #{x\ 11548}#))
                         (if (memv #{atom-key\ 11552}# (quote (primitive)))
                           (#{build-primref\ 9024}# #f (cadr #{x\ 11548}#))
                           (if (memv #{atom-key\ 11552}# (quote (quote)))
                             (#{build-data\ 9026}# #f (cadr #{x\ 11548}#))
                             (if (memv #{atom-key\ 11552}# (quote (lambda)))
                               (if (list? (cadr #{x\ 11548}#))
                                 (#{build-simple-lambda\ 9018}#
                                   #f
                                   (cadr #{x\ 11548}#)
                                   #f
                                   (cadr #{x\ 11548}#)
                                   '()
                                   (#{regen\ 11547}# (caddr #{x\ 11548}#)))
                                 (error "how did we get here" #{x\ 11548}#))
                               (#{build-application\ 8998}#
                                 #f
                                 (#{build-primref\ 9024}#
                                   #f
                                   (car #{x\ 11548}#))
                                 (map #{regen\ 11547}#
                                      (cdr #{x\ 11548}#))))))))))
                 (#{gen-vector\ 11545}#
                   (lambda (#{x\ 11564}#)
                     (if (eq? (car #{x\ 11564}#) (quote list))
                       (cons (quote vector) (cdr #{x\ 11564}#))
                       (if (eq? (car #{x\ 11564}#) (quote quote))
                         (list 'quote
                               (list->vector (cadr #{x\ 11564}#)))
                         (list (quote list->vector) #{x\ 11564}#)))))
                 (#{gen-append\ 11543}#
                   (lambda (#{x\ 11574}# #{y\ 11575}#)
                     (if (equal? #{y\ 11575}# (quote (quote ())))
                       #{x\ 11574}#
                       (list (quote append) #{x\ 11574}# #{y\ 11575}#))))
                 (#{gen-cons\ 11541}#
                   (lambda (#{x\ 11579}# #{y\ 11580}#)
                     (let ((#{atom-key\ 11585}# (car #{y\ 11580}#)))
                       (if (memv #{atom-key\ 11585}# (quote (quote)))
                         (if (eq? (car #{x\ 11579}#) (quote quote))
                           (list 'quote
                                 (cons (cadr #{x\ 11579}#)
                                       (cadr #{y\ 11580}#)))
                           (if (eq? (cadr #{y\ 11580}#) (quote ()))
                             (list (quote list) #{x\ 11579}#)
                             (list (quote cons) #{x\ 11579}# #{y\ 11580}#)))
                         (if (memv #{atom-key\ 11585}# (quote (list)))
                           (cons 'list
                                 (cons #{x\ 11579}# (cdr #{y\ 11580}#)))
                           (list (quote cons) #{x\ 11579}# #{y\ 11580}#))))))
                 (#{gen-map\ 11539}#
                   (lambda (#{e\ 11594}# #{map-env\ 11595}#)
                     (let ((#{formals\ 11600}# (map cdr #{map-env\ 11595}#))
                           (#{actuals\ 11601}#
                             (map (lambda (#{x\ 11602}#)
                                    (list (quote ref) (car #{x\ 11602}#)))
                                  #{map-env\ 11595}#)))
                       (if (eq? (car #{e\ 11594}#) (quote ref))
                         (car #{actuals\ 11601}#)
                         (if (and-map
                               (lambda (#{x\ 11609}#)
                                 (if (eq? (car #{x\ 11609}#) (quote ref))
                                   (memq (cadr #{x\ 11609}#)
                                         #{formals\ 11600}#)
                                   #f))
                               (cdr #{e\ 11594}#))
                           (cons 'map
                                 (cons (list 'primitive
                                             (car #{e\ 11594}#))
                                       (map (let ((#{r\ 11615}#
                                                    (map cons
                                                         #{formals\ 11600}#
                                                         #{actuals\ 11601}#)))
                                              (lambda (#{x\ 11616}#)
                                                (cdr (assq (cadr #{x\ 11616}#)
                                                           #{r\ 11615}#))))
                                            (cdr #{e\ 11594}#))))
                           (cons 'map
                                 (cons (list 'lambda
                                             #{formals\ 11600}#
                                             #{e\ 11594}#)
                                       #{actuals\ 11601}#)))))))
                 (#{gen-mappend\ 11537}#
                   (lambda (#{e\ 11620}# #{map-env\ 11621}#)
                     (list 'apply
                           '(primitive append)
                           (#{gen-map\ 11539}#
                             #{e\ 11620}#
                             #{map-env\ 11621}#))))
                 (#{gen-ref\ 11535}#
                   (lambda (#{src\ 11625}#
                            #{var\ 11626}#
                            #{level\ 11627}#
                            #{maps\ 11628}#)
                     (if (#{fx=\ 8981}# #{level\ 11627}# 0)
                       (values #{var\ 11626}# #{maps\ 11628}#)
                       (if (null? #{maps\ 11628}#)
                         (syntax-violation
                           'syntax
                           "missing ellipsis"
                           #{src\ 11625}#)
                         (call-with-values
                           (lambda ()
                             (#{gen-ref\ 11535}#
                               #{src\ 11625}#
                               #{var\ 11626}#
                               (#{fx-\ 8979}# #{level\ 11627}# 1)
                               (cdr #{maps\ 11628}#)))
                           (lambda (#{outer-var\ 11633}# #{outer-maps\ 11634}#)
                             (let ((#{b\ 11638}#
                                     (assq #{outer-var\ 11633}#
                                           (car #{maps\ 11628}#))))
                               (if #{b\ 11638}#
                                 (values (cdr #{b\ 11638}#) #{maps\ 11628}#)
                                 (let ((#{inner-var\ 11640}#
                                         (#{gen-var\ 9189}# (quote tmp))))
                                   (values
                                     #{inner-var\ 11640}#
                                     (cons (cons (cons #{outer-var\ 11633}#
                                                       #{inner-var\ 11640}#)
                                                 (car #{maps\ 11628}#))
                                           #{outer-maps\ 11634}#)))))))))))
                 (#{gen-syntax\ 11533}#
                   (lambda (#{src\ 11641}#
                            #{e\ 11642}#
                            #{r\ 11643}#
                            #{maps\ 11644}#
                            #{ellipsis?\ 11645}#
                            #{mod\ 11646}#)
                     (if (#{id?\ 9076}# #{e\ 11642}#)
                       (let ((#{label\ 11654}#
                               (#{id-var-name\ 9133}#
                                 #{e\ 11642}#
                                 '(()))))
                         (let ((#{b\ 11657}#
                                 (#{lookup\ 9070}#
                                   #{label\ 11654}#
                                   #{r\ 11643}#
                                   #{mod\ 11646}#)))
                           (if (eq? (#{binding-type\ 9059}# #{b\ 11657}#)
                                    'syntax)
                             (call-with-values
                               (lambda ()
                                 (let ((#{var.lev\ 11659}#
                                         (#{binding-value\ 9061}#
                                           #{b\ 11657}#)))
                                   (#{gen-ref\ 11535}#
                                     #{src\ 11641}#
                                     (car #{var.lev\ 11659}#)
                                     (cdr #{var.lev\ 11659}#)
                                     #{maps\ 11644}#)))
                               (lambda (#{var\ 11660}# #{maps\ 11661}#)
                                 (values
                                   (list (quote ref) #{var\ 11660}#)
                                   #{maps\ 11661}#)))
                             (if (#{ellipsis?\ 11645}# #{e\ 11642}#)
                               (syntax-violation
                                 'syntax
                                 "misplaced ellipsis"
                                 #{src\ 11641}#)
                               (values
                                 (list (quote quote) #{e\ 11642}#)
                                 #{maps\ 11644}#)))))
                       ((lambda (#{tmp\ 11666}#)
                          ((lambda (#{tmp\ 11667}#)
                             (if (if #{tmp\ 11667}#
                                   (apply (lambda (#{dots\ 11670}#
                                                   #{e\ 11671}#)
                                            (#{ellipsis?\ 11645}#
                                              #{dots\ 11670}#))
                                          #{tmp\ 11667}#)
                                   #f)
                               (apply (lambda (#{dots\ 11674}# #{e\ 11675}#)
                                        (#{gen-syntax\ 11533}#
                                          #{src\ 11641}#
                                          #{e\ 11675}#
                                          #{r\ 11643}#
                                          #{maps\ 11644}#
                                          (lambda (#{x\ 11676}#) #f)
                                          #{mod\ 11646}#))
                                      #{tmp\ 11667}#)
                               ((lambda (#{tmp\ 11678}#)
                                  (if (if #{tmp\ 11678}#
                                        (apply (lambda (#{x\ 11682}#
                                                        #{dots\ 11683}#
                                                        #{y\ 11684}#)
                                                 (#{ellipsis?\ 11645}#
                                                   #{dots\ 11683}#))
                                               #{tmp\ 11678}#)
                                        #f)
                                    (apply (lambda (#{x\ 11688}#
                                                    #{dots\ 11689}#
                                                    #{y\ 11690}#)
                                             (letrec ((#{f\ 11694}#
                                                        (lambda (#{y\ 11695}#
                                                                 #{k\ 11696}#)
                                                          ((lambda (#{tmp\ 11703}#)
                                                             ((lambda (#{tmp\ 11704}#)
                                                                (if (if #{tmp\ 11704}#
                                                                      (apply (lambda (#{dots\ 11707}#
                                                                                      #{y\ 11708}#)
                                                                               (#{ellipsis?\ 11645}#
                                                                                 #{dots\ 11707}#))
                                                                             #{tmp\ 11704}#)
                                                                      #f)
                                                                  (apply (lambda (#{dots\ 11711}#
                                                                                  #{y\ 11712}#)
                                                                           (#{f\ 11694}#
                                                                             #{y\ 11712}#
                                                                             (lambda (#{maps\ 11713}#)
                                                                               (call-with-values
                                                                                 (lambda ()
                                                                                   (#{k\ 11696}#
                                                                                     (cons '()
                                                                                           #{maps\ 11713}#)))
                                                                                 (lambda (#{x\ 11715}#
                                                                                          #{maps\ 11716}#)
                                                                                   (if (null? (car #{maps\ 11716}#))
                                                                                     (syntax-violation
                                                                                       'syntax
                                                                                       "extra ellipsis"
                                                                                       #{src\ 11641}#)
                                                                                     (values
                                                                                       (#{gen-mappend\ 11537}#
                                                                                         #{x\ 11715}#
                                                                                         (car #{maps\ 11716}#))
                                                                                       (cdr #{maps\ 11716}#))))))))
                                                                         #{tmp\ 11704}#)
                                                                  ((lambda (#{_\ 11720}#)
                                                                     (call-with-values
                                                                       (lambda ()
                                                                         (#{gen-syntax\ 11533}#
                                                                           #{src\ 11641}#
                                                                           #{y\ 11695}#
                                                                           #{r\ 11643}#
                                                                           #{maps\ 11644}#
                                                                           #{ellipsis?\ 11645}#
                                                                           #{mod\ 11646}#))
                                                                       (lambda (#{y\ 11721}#
                                                                                #{maps\ 11722}#)
                                                                         (call-with-values
                                                                           (lambda ()
                                                                             (#{k\ 11696}#
                                                                               #{maps\ 11722}#))
                                                                           (lambda (#{x\ 11725}#
                                                                                    #{maps\ 11726}#)
                                                                             (values
                                                                               (#{gen-append\ 11543}#
                                                                                 #{x\ 11725}#
                                                                                 #{y\ 11721}#)
                                                                               #{maps\ 11726}#))))))
                                                                   #{tmp\ 11703}#)))
                                                              ($sc-dispatch
                                                                #{tmp\ 11703}#
                                                                '(any . any))))
                                                           #{y\ 11695}#))))
                                               (#{f\ 11694}#
                                                 #{y\ 11690}#
                                                 (lambda (#{maps\ 11697}#)
                                                   (call-with-values
                                                     (lambda ()
                                                       (#{gen-syntax\ 11533}#
                                                         #{src\ 11641}#
                                                         #{x\ 11688}#
                                                         #{r\ 11643}#
                                                         (cons '()
                                                               #{maps\ 11697}#)
                                                         #{ellipsis?\ 11645}#
                                                         #{mod\ 11646}#))
                                                     (lambda (#{x\ 11699}#
                                                              #{maps\ 11700}#)
                                                       (if (null? (car #{maps\ 11700}#))
                                                         (syntax-violation
                                                           'syntax
                                                           "extra ellipsis"
                                                           #{src\ 11641}#)
                                                         (values
                                                           (#{gen-map\ 11539}#
                                                             #{x\ 11699}#
                                                             (car #{maps\ 11700}#))
                                                           (cdr #{maps\ 11700}#)))))))))
                                           #{tmp\ 11678}#)
                                    ((lambda (#{tmp\ 11729}#)
                                       (if #{tmp\ 11729}#
                                         (apply (lambda (#{x\ 11732}#
                                                         #{y\ 11733}#)
                                                  (call-with-values
                                                    (lambda ()
                                                      (#{gen-syntax\ 11533}#
                                                        #{src\ 11641}#
                                                        #{x\ 11732}#
                                                        #{r\ 11643}#
                                                        #{maps\ 11644}#
                                                        #{ellipsis?\ 11645}#
                                                        #{mod\ 11646}#))
                                                    (lambda (#{x\ 11734}#
                                                             #{maps\ 11735}#)
                                                      (call-with-values
                                                        (lambda ()
                                                          (#{gen-syntax\ 11533}#
                                                            #{src\ 11641}#
                                                            #{y\ 11733}#
                                                            #{r\ 11643}#
                                                            #{maps\ 11735}#
                                                            #{ellipsis?\ 11645}#
                                                            #{mod\ 11646}#))
                                                        (lambda (#{y\ 11738}#
                                                                 #{maps\ 11739}#)
                                                          (values
                                                            (#{gen-cons\ 11541}#
                                                              #{x\ 11734}#
                                                              #{y\ 11738}#)
                                                            #{maps\ 11739}#))))))
                                                #{tmp\ 11729}#)
                                         ((lambda (#{tmp\ 11742}#)
                                            (if #{tmp\ 11742}#
                                              (apply (lambda (#{e1\ 11745}#
                                                              #{e2\ 11746}#)
                                                       (call-with-values
                                                         (lambda ()
                                                           (#{gen-syntax\ 11533}#
                                                             #{src\ 11641}#
                                                             (cons #{e1\ 11745}#
                                                                   #{e2\ 11746}#)
                                                             #{r\ 11643}#
                                                             #{maps\ 11644}#
                                                             #{ellipsis?\ 11645}#
                                                             #{mod\ 11646}#))
                                                         (lambda (#{e\ 11748}#
                                                                  #{maps\ 11749}#)
                                                           (values
                                                             (#{gen-vector\ 11545}#
                                                               #{e\ 11748}#)
                                                             #{maps\ 11749}#))))
                                                     #{tmp\ 11742}#)
                                              ((lambda (#{_\ 11753}#)
                                                 (values
                                                   (list 'quote
                                                         #{e\ 11642}#)
                                                   #{maps\ 11644}#))
                                               #{tmp\ 11666}#)))
                                          ($sc-dispatch
                                            #{tmp\ 11666}#
                                            '#(vector (any . each-any))))))
                                     ($sc-dispatch
                                       #{tmp\ 11666}#
                                       '(any . any)))))
                                ($sc-dispatch
                                  #{tmp\ 11666}#
                                  '(any any . any)))))
                           ($sc-dispatch #{tmp\ 11666}# (quote (any any)))))
                        #{e\ 11642}#)))))
          (lambda (#{e\ 11755}#
                   #{r\ 11756}#
                   #{w\ 11757}#
                   #{s\ 11758}#
                   #{mod\ 11759}#)
            (let ((#{e\ 11766}#
                    (#{source-wrap\ 9147}#
                      #{e\ 11755}#
                      #{w\ 11757}#
                      #{s\ 11758}#
                      #{mod\ 11759}#)))
              ((lambda (#{tmp\ 11767}#)
                 ((lambda (#{tmp\ 11768}#)
                    (if #{tmp\ 11768}#
                      (apply (lambda (#{_\ 11771}# #{x\ 11772}#)
                               (call-with-values
                                 (lambda ()
                                   (#{gen-syntax\ 11533}#
                                     #{e\ 11766}#
                                     #{x\ 11772}#
                                     #{r\ 11756}#
                                     '()
                                     #{ellipsis?\ 9177}#
                                     #{mod\ 11759}#))
                                 (lambda (#{e\ 11773}# #{maps\ 11774}#)
                                   (#{regen\ 11547}# #{e\ 11773}#))))
                             #{tmp\ 11768}#)
                      ((lambda (#{_\ 11778}#)
                         (syntax-violation
                           'syntax
                           "bad `syntax' form"
                           #{e\ 11766}#))
                       #{tmp\ 11767}#)))
                  ($sc-dispatch #{tmp\ 11767}# (quote (any any)))))
               #{e\ 11766}#)))))
      (#{global-extend\ 9072}#
        'core
        'lambda
        (lambda (#{e\ 11779}#
                 #{r\ 11780}#
                 #{w\ 11781}#
                 #{s\ 11782}#
                 #{mod\ 11783}#)
          ((lambda (#{tmp\ 11789}#)
             ((lambda (#{tmp\ 11790}#)
                (if #{tmp\ 11790}#
                  (apply (lambda (#{_\ 11795}#
                                  #{args\ 11796}#
                                  #{e1\ 11797}#
                                  #{e2\ 11798}#)
                           (call-with-values
                             (lambda ()
                               (#{lambda-formals\ 9179}# #{args\ 11796}#))
                             (lambda (#{req\ 11799}#
                                      #{opt\ 11800}#
                                      #{rest\ 11801}#
                                      #{kw\ 11802}#)
                               (letrec ((#{lp\ 11810}#
                                          (lambda (#{body\ 11811}#
                                                   #{meta\ 11812}#)
                                            ((lambda (#{tmp\ 11814}#)
                                               ((lambda (#{tmp\ 11815}#)
                                                  (if (if #{tmp\ 11815}#
                                                        (apply (lambda (#{docstring\ 11819}#
                                                                        #{e1\ 11820}#
                                                                        #{e2\ 11821}#)
                                                                 (string?
                                                                   (syntax->datum
                                                                     #{docstring\ 11819}#)))
                                                               #{tmp\ 11815}#)
                                                        #f)
                                                    (apply (lambda (#{docstring\ 11825}#
                                                                    #{e1\ 11826}#
                                                                    #{e2\ 11827}#)
                                                             (#{lp\ 11810}#
                                                               (cons #{e1\ 11826}#
                                                                     #{e2\ 11827}#)
                                                               (append
                                                                 #{meta\ 11812}#
                                                                 (list (cons 'documentation
                                                                             (syntax->datum
                                                                               #{docstring\ 11825}#))))))
                                                           #{tmp\ 11815}#)
                                                    ((lambda (#{tmp\ 11830}#)
                                                       (if #{tmp\ 11830}#
                                                         (apply (lambda (#{k\ 11835}#
                                                                         #{v\ 11836}#
                                                                         #{e1\ 11837}#
                                                                         #{e2\ 11838}#)
                                                                  (#{lp\ 11810}#
                                                                    (cons #{e1\ 11837}#
                                                                          #{e2\ 11838}#)
                                                                    (append
                                                                      #{meta\ 11812}#
                                                                      (syntax->datum
                                                                        (map cons
                                                                             #{k\ 11835}#
                                                                             #{v\ 11836}#)))))
                                                                #{tmp\ 11830}#)
                                                         ((lambda (#{_\ 11843}#)
                                                            (#{chi-simple-lambda\ 9181}#
                                                              #{e\ 11779}#
                                                              #{r\ 11780}#
                                                              #{w\ 11781}#
                                                              #{s\ 11782}#
                                                              #{mod\ 11783}#
                                                              #{req\ 11799}#
                                                              #{rest\ 11801}#
                                                              #{meta\ 11812}#
                                                              #{body\ 11811}#))
                                                          #{tmp\ 11814}#)))
                                                     ($sc-dispatch
                                                       #{tmp\ 11814}#
                                                       '(#(vector
                                                           #(each (any . any)))
                                                         any
                                                         .
                                                         each-any)))))
                                                ($sc-dispatch
                                                  #{tmp\ 11814}#
                                                  '(any any . each-any))))
                                             #{body\ 11811}#))))
                                 (#{lp\ 11810}#
                                   (cons #{e1\ 11797}# #{e2\ 11798}#)
                                   '())))))
                         #{tmp\ 11790}#)
                  ((lambda (#{_\ 11845}#)
                     (syntax-violation
                       'lambda
                       "bad lambda"
                       #{e\ 11779}#))
                   #{tmp\ 11789}#)))
              ($sc-dispatch
                #{tmp\ 11789}#
                '(any any any . each-any))))
           #{e\ 11779}#)))
      (#{global-extend\ 9072}#
        'core
        'lambda*
        (lambda (#{e\ 11846}#
                 #{r\ 11847}#
                 #{w\ 11848}#
                 #{s\ 11849}#
                 #{mod\ 11850}#)
          ((lambda (#{tmp\ 11856}#)
             ((lambda (#{tmp\ 11857}#)
                (if #{tmp\ 11857}#
                  (apply (lambda (#{_\ 11862}#
                                  #{args\ 11863}#
                                  #{e1\ 11864}#
                                  #{e2\ 11865}#)
                           (call-with-values
                             (lambda ()
                               (#{chi-lambda-case\ 9185}#
                                 #{e\ 11846}#
                                 #{r\ 11847}#
                                 #{w\ 11848}#
                                 #{s\ 11849}#
                                 #{mod\ 11850}#
                                 #{lambda*-formals\ 9183}#
                                 (list (cons #{args\ 11863}#
                                             (cons #{e1\ 11864}#
                                                   #{e2\ 11865}#)))))
                             (lambda (#{meta\ 11867}# #{lcase\ 11868}#)
                               (#{build-case-lambda\ 9020}#
                                 #{s\ 11849}#
                                 #{meta\ 11867}#
                                 #{lcase\ 11868}#))))
                         #{tmp\ 11857}#)
                  ((lambda (#{_\ 11872}#)
                     (syntax-violation
                       'lambda
                       "bad lambda*"
                       #{e\ 11846}#))
                   #{tmp\ 11856}#)))
              ($sc-dispatch
                #{tmp\ 11856}#
                '(any any any . each-any))))
           #{e\ 11846}#)))
      (#{global-extend\ 9072}#
        'core
        'case-lambda
        (lambda (#{e\ 11873}#
                 #{r\ 11874}#
                 #{w\ 11875}#
                 #{s\ 11876}#
                 #{mod\ 11877}#)
          ((lambda (#{tmp\ 11883}#)
             ((lambda (#{tmp\ 11884}#)
                (if #{tmp\ 11884}#
                  (apply (lambda (#{_\ 11892}#
                                  #{args\ 11893}#
                                  #{e1\ 11894}#
                                  #{e2\ 11895}#
                                  #{args*\ 11896}#
                                  #{e1*\ 11897}#
                                  #{e2*\ 11898}#)
                           (call-with-values
                             (lambda ()
                               (#{chi-lambda-case\ 9185}#
                                 #{e\ 11873}#
                                 #{r\ 11874}#
                                 #{w\ 11875}#
                                 #{s\ 11876}#
                                 #{mod\ 11877}#
                                 #{lambda-formals\ 9179}#
                                 (cons (cons #{args\ 11893}#
                                             (cons #{e1\ 11894}#
                                                   #{e2\ 11895}#))
                                       (map (lambda (#{tmp\ 11902}#
                                                     #{tmp\ 11901}#
                                                     #{tmp\ 11900}#)
                                              (cons #{tmp\ 11900}#
                                                    (cons #{tmp\ 11901}#
                                                          #{tmp\ 11902}#)))
                                            #{e2*\ 11898}#
                                            #{e1*\ 11897}#
                                            #{args*\ 11896}#))))
                             (lambda (#{meta\ 11904}# #{lcase\ 11905}#)
                               (#{build-case-lambda\ 9020}#
                                 #{s\ 11876}#
                                 #{meta\ 11904}#
                                 #{lcase\ 11905}#))))
                         #{tmp\ 11884}#)
                  ((lambda (#{_\ 11909}#)
                     (syntax-violation
                       'case-lambda
                       "bad case-lambda"
                       #{e\ 11873}#))
                   #{tmp\ 11883}#)))
              ($sc-dispatch
                #{tmp\ 11883}#
                '(any (any any . each-any)
                      .
                      #(each (any any . each-any))))))
           #{e\ 11873}#)))
      (#{global-extend\ 9072}#
        'core
        'case-lambda*
        (lambda (#{e\ 11910}#
                 #{r\ 11911}#
                 #{w\ 11912}#
                 #{s\ 11913}#
                 #{mod\ 11914}#)
          ((lambda (#{tmp\ 11920}#)
             ((lambda (#{tmp\ 11921}#)
                (if #{tmp\ 11921}#
                  (apply (lambda (#{_\ 11929}#
                                  #{args\ 11930}#
                                  #{e1\ 11931}#
                                  #{e2\ 11932}#
                                  #{args*\ 11933}#
                                  #{e1*\ 11934}#
                                  #{e2*\ 11935}#)
                           (call-with-values
                             (lambda ()
                               (#{chi-lambda-case\ 9185}#
                                 #{e\ 11910}#
                                 #{r\ 11911}#
                                 #{w\ 11912}#
                                 #{s\ 11913}#
                                 #{mod\ 11914}#
                                 #{lambda*-formals\ 9183}#
                                 (cons (cons #{args\ 11930}#
                                             (cons #{e1\ 11931}#
                                                   #{e2\ 11932}#))
                                       (map (lambda (#{tmp\ 11939}#
                                                     #{tmp\ 11938}#
                                                     #{tmp\ 11937}#)
                                              (cons #{tmp\ 11937}#
                                                    (cons #{tmp\ 11938}#
                                                          #{tmp\ 11939}#)))
                                            #{e2*\ 11935}#
                                            #{e1*\ 11934}#
                                            #{args*\ 11933}#))))
                             (lambda (#{meta\ 11941}# #{lcase\ 11942}#)
                               (#{build-case-lambda\ 9020}#
                                 #{s\ 11913}#
                                 #{meta\ 11941}#
                                 #{lcase\ 11942}#))))
                         #{tmp\ 11921}#)
                  ((lambda (#{_\ 11946}#)
                     (syntax-violation
                       'case-lambda
                       "bad case-lambda*"
                       #{e\ 11910}#))
                   #{tmp\ 11920}#)))
              ($sc-dispatch
                #{tmp\ 11920}#
                '(any (any any . each-any)
                      .
                      #(each (any any . each-any))))))
           #{e\ 11910}#)))
      (#{global-extend\ 9072}#
        'core
        'let
        (letrec ((#{chi-let\ 11948}#
                   (lambda (#{e\ 11949}#
                            #{r\ 11950}#
                            #{w\ 11951}#
                            #{s\ 11952}#
                            #{mod\ 11953}#
                            #{constructor\ 11954}#
                            #{ids\ 11955}#
                            #{vals\ 11956}#
                            #{exps\ 11957}#)
                     (if (not (#{valid-bound-ids?\ 9139}# #{ids\ 11955}#))
                       (syntax-violation
                         'let
                         "duplicate bound variable"
                         #{e\ 11949}#)
                       (let ((#{labels\ 11969}#
                               (#{gen-labels\ 9094}# #{ids\ 11955}#))
                             (#{new-vars\ 11970}#
                               (map #{gen-var\ 9189}# #{ids\ 11955}#)))
                         (let ((#{nw\ 11973}#
                                 (#{make-binding-wrap\ 9123}#
                                   #{ids\ 11955}#
                                   #{labels\ 11969}#
                                   #{w\ 11951}#))
                               (#{nr\ 11974}#
                                 (#{extend-var-env\ 9066}#
                                   #{labels\ 11969}#
                                   #{new-vars\ 11970}#
                                   #{r\ 11950}#)))
                           (#{constructor\ 11954}#
                             #{s\ 11952}#
                             (map syntax->datum #{ids\ 11955}#)
                             #{new-vars\ 11970}#
                             (map (lambda (#{x\ 11975}#)
                                    (#{chi\ 9161}#
                                      #{x\ 11975}#
                                      #{r\ 11950}#
                                      #{w\ 11951}#
                                      #{mod\ 11953}#))
                                  #{vals\ 11956}#)
                             (#{chi-body\ 9169}#
                               #{exps\ 11957}#
                               (#{source-wrap\ 9147}#
                                 #{e\ 11949}#
                                 #{nw\ 11973}#
                                 #{s\ 11952}#
                                 #{mod\ 11953}#)
                               #{nr\ 11974}#
                               #{nw\ 11973}#
                               #{mod\ 11953}#))))))))
          (lambda (#{e\ 11977}#
                   #{r\ 11978}#
                   #{w\ 11979}#
                   #{s\ 11980}#
                   #{mod\ 11981}#)
            ((lambda (#{tmp\ 11987}#)
               ((lambda (#{tmp\ 11988}#)
                  (if (if #{tmp\ 11988}#
                        (apply (lambda (#{_\ 11994}#
                                        #{id\ 11995}#
                                        #{val\ 11996}#
                                        #{e1\ 11997}#
                                        #{e2\ 11998}#)
                                 (and-map #{id?\ 9076}# #{id\ 11995}#))
                               #{tmp\ 11988}#)
                        #f)
                    (apply (lambda (#{_\ 12005}#
                                    #{id\ 12006}#
                                    #{val\ 12007}#
                                    #{e1\ 12008}#
                                    #{e2\ 12009}#)
                             (#{chi-let\ 11948}#
                               #{e\ 11977}#
                               #{r\ 11978}#
                               #{w\ 11979}#
                               #{s\ 11980}#
                               #{mod\ 11981}#
                               #{build-let\ 9030}#
                               #{id\ 12006}#
                               #{val\ 12007}#
                               (cons #{e1\ 12008}# #{e2\ 12009}#)))
                           #{tmp\ 11988}#)
                    ((lambda (#{tmp\ 12013}#)
                       (if (if #{tmp\ 12013}#
                             (apply (lambda (#{_\ 12020}#
                                             #{f\ 12021}#
                                             #{id\ 12022}#
                                             #{val\ 12023}#
                                             #{e1\ 12024}#
                                             #{e2\ 12025}#)
                                      (if (#{id?\ 9076}# #{f\ 12021}#)
                                        (and-map #{id?\ 9076}# #{id\ 12022}#)
                                        #f))
                                    #{tmp\ 12013}#)
                             #f)
                         (apply (lambda (#{_\ 12035}#
                                         #{f\ 12036}#
                                         #{id\ 12037}#
                                         #{val\ 12038}#
                                         #{e1\ 12039}#
                                         #{e2\ 12040}#)
                                  (#{chi-let\ 11948}#
                                    #{e\ 11977}#
                                    #{r\ 11978}#
                                    #{w\ 11979}#
                                    #{s\ 11980}#
                                    #{mod\ 11981}#
                                    #{build-named-let\ 9032}#
                                    (cons #{f\ 12036}# #{id\ 12037}#)
                                    #{val\ 12038}#
                                    (cons #{e1\ 12039}# #{e2\ 12040}#)))
                                #{tmp\ 12013}#)
                         ((lambda (#{_\ 12045}#)
                            (syntax-violation
                              'let
                              "bad let"
                              (#{source-wrap\ 9147}#
                                #{e\ 11977}#
                                #{w\ 11979}#
                                #{s\ 11980}#
                                #{mod\ 11981}#)))
                          #{tmp\ 11987}#)))
                     ($sc-dispatch
                       #{tmp\ 11987}#
                       '(any any #(each (any any)) any . each-any)))))
                ($sc-dispatch
                  #{tmp\ 11987}#
                  '(any #(each (any any)) any . each-any))))
             #{e\ 11977}#))))
      (#{global-extend\ 9072}#
        'core
        'letrec
        (lambda (#{e\ 12046}#
                 #{r\ 12047}#
                 #{w\ 12048}#
                 #{s\ 12049}#
                 #{mod\ 12050}#)
          ((lambda (#{tmp\ 12056}#)
             ((lambda (#{tmp\ 12057}#)
                (if (if #{tmp\ 12057}#
                      (apply (lambda (#{_\ 12063}#
                                      #{id\ 12064}#
                                      #{val\ 12065}#
                                      #{e1\ 12066}#
                                      #{e2\ 12067}#)
                               (and-map #{id?\ 9076}# #{id\ 12064}#))
                             #{tmp\ 12057}#)
                      #f)
                  (apply (lambda (#{_\ 12074}#
                                  #{id\ 12075}#
                                  #{val\ 12076}#
                                  #{e1\ 12077}#
                                  #{e2\ 12078}#)
                           (let ((#{ids\ 12080}# #{id\ 12075}#))
                             (if (not (#{valid-bound-ids?\ 9139}#
                                        #{ids\ 12080}#))
                               (syntax-violation
                                 'letrec
                                 "duplicate bound variable"
                                 #{e\ 12046}#)
                               (let ((#{labels\ 12084}#
                                       (#{gen-labels\ 9094}# #{ids\ 12080}#))
                                     (#{new-vars\ 12085}#
                                       (map #{gen-var\ 9189}# #{ids\ 12080}#)))
                                 (let ((#{w\ 12088}#
                                         (#{make-binding-wrap\ 9123}#
                                           #{ids\ 12080}#
                                           #{labels\ 12084}#
                                           #{w\ 12048}#))
                                       (#{r\ 12089}#
                                         (#{extend-var-env\ 9066}#
                                           #{labels\ 12084}#
                                           #{new-vars\ 12085}#
                                           #{r\ 12047}#)))
                                   (#{build-letrec\ 9034}#
                                     #{s\ 12049}#
                                     (map syntax->datum #{ids\ 12080}#)
                                     #{new-vars\ 12085}#
                                     (map (lambda (#{x\ 12090}#)
                                            (#{chi\ 9161}#
                                              #{x\ 12090}#
                                              #{r\ 12089}#
                                              #{w\ 12088}#
                                              #{mod\ 12050}#))
                                          #{val\ 12076}#)
                                     (#{chi-body\ 9169}#
                                       (cons #{e1\ 12077}# #{e2\ 12078}#)
                                       (#{source-wrap\ 9147}#
                                         #{e\ 12046}#
                                         #{w\ 12088}#
                                         #{s\ 12049}#
                                         #{mod\ 12050}#)
                                       #{r\ 12089}#
                                       #{w\ 12088}#
                                       #{mod\ 12050}#)))))))
                         #{tmp\ 12057}#)
                  ((lambda (#{_\ 12095}#)
                     (syntax-violation
                       'letrec
                       "bad letrec"
                       (#{source-wrap\ 9147}#
                         #{e\ 12046}#
                         #{w\ 12048}#
                         #{s\ 12049}#
                         #{mod\ 12050}#)))
                   #{tmp\ 12056}#)))
              ($sc-dispatch
                #{tmp\ 12056}#
                '(any #(each (any any)) any . each-any))))
           #{e\ 12046}#)))
      (#{global-extend\ 9072}#
        'core
        'set!
        (lambda (#{e\ 12096}#
                 #{r\ 12097}#
                 #{w\ 12098}#
                 #{s\ 12099}#
                 #{mod\ 12100}#)
          ((lambda (#{tmp\ 12106}#)
             ((lambda (#{tmp\ 12107}#)
                (if (if #{tmp\ 12107}#
                      (apply (lambda (#{_\ 12111}#
                                      #{id\ 12112}#
                                      #{val\ 12113}#)
                               (#{id?\ 9076}# #{id\ 12112}#))
                             #{tmp\ 12107}#)
                      #f)
                  (apply (lambda (#{_\ 12117}# #{id\ 12118}# #{val\ 12119}#)
                           (let ((#{val\ 12122}#
                                   (#{chi\ 9161}#
                                     #{val\ 12119}#
                                     #{r\ 12097}#
                                     #{w\ 12098}#
                                     #{mod\ 12100}#))
                                 (#{n\ 12123}#
                                   (#{id-var-name\ 9133}#
                                     #{id\ 12118}#
                                     #{w\ 12098}#)))
                             (let ((#{b\ 12125}#
                                     (#{lookup\ 9070}#
                                       #{n\ 12123}#
                                       #{r\ 12097}#
                                       #{mod\ 12100}#)))
                               (let ((#{atom-key\ 12128}#
                                       (#{binding-type\ 9059}# #{b\ 12125}#)))
                                 (if (memv #{atom-key\ 12128}#
                                           '(lexical))
                                   (#{build-lexical-assignment\ 9006}#
                                     #{s\ 12099}#
                                     (syntax->datum #{id\ 12118}#)
                                     (#{binding-value\ 9061}# #{b\ 12125}#)
                                     #{val\ 12122}#)
                                   (if (memv #{atom-key\ 12128}#
                                             '(global))
                                     (#{build-global-assignment\ 9012}#
                                       #{s\ 12099}#
                                       #{n\ 12123}#
                                       #{val\ 12122}#
                                       #{mod\ 12100}#)
                                     (if (memv #{atom-key\ 12128}#
                                               '(displaced-lexical))
                                       (syntax-violation
                                         'set!
                                         "identifier out of context"
                                         (#{wrap\ 9145}#
                                           #{id\ 12118}#
                                           #{w\ 12098}#
                                           #{mod\ 12100}#))
                                       (syntax-violation
                                         'set!
                                         "bad set!"
                                         (#{source-wrap\ 9147}#
                                           #{e\ 12096}#
                                           #{w\ 12098}#
                                           #{s\ 12099}#
                                           #{mod\ 12100}#)))))))))
                         #{tmp\ 12107}#)
                  ((lambda (#{tmp\ 12133}#)
                     (if #{tmp\ 12133}#
                       (apply (lambda (#{_\ 12138}#
                                       #{head\ 12139}#
                                       #{tail\ 12140}#
                                       #{val\ 12141}#)
                                (call-with-values
                                  (lambda ()
                                    (#{syntax-type\ 9157}#
                                      #{head\ 12139}#
                                      #{r\ 12097}#
                                      '(())
                                      #f
                                      #f
                                      #{mod\ 12100}#
                                      #t))
                                  (lambda (#{type\ 12144}#
                                           #{value\ 12145}#
                                           #{ee\ 12146}#
                                           #{ww\ 12147}#
                                           #{ss\ 12148}#
                                           #{modmod\ 12149}#)
                                    (if (memv #{type\ 12144}#
                                              '(module-ref))
                                      (let ((#{val\ 12158}#
                                              (#{chi\ 9161}#
                                                #{val\ 12141}#
                                                #{r\ 12097}#
                                                #{w\ 12098}#
                                                #{mod\ 12100}#)))
                                        (call-with-values
                                          (lambda ()
                                            (#{value\ 12145}#
                                              (cons #{head\ 12139}#
                                                    #{tail\ 12140}#)))
                                          (lambda (#{id\ 12160}#
                                                   #{mod\ 12161}#)
                                            (#{build-global-assignment\ 9012}#
                                              #{s\ 12099}#
                                              #{id\ 12160}#
                                              #{val\ 12158}#
                                              #{mod\ 12161}#))))
                                      (#{build-application\ 8998}#
                                        #{s\ 12099}#
                                        (#{chi\ 9161}#
                                          (list '#(syntax-object
                                                   setter
                                                   ((top)
                                                    #(ribcage () () ())
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(type
                                                        value
                                                        ee
                                                        ww
                                                        ss
                                                        modmod)
                                                      #((top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top))
                                                      #("i12150"
                                                        "i12151"
                                                        "i12152"
                                                        "i12153"
                                                        "i12154"
                                                        "i12155"))
                                                    #(ribcage
                                                      #(_ head tail val)
                                                      #((top)
                                                        (top)
                                                        (top)
                                                        (top))
                                                      #("i12134"
                                                        "i12135"
                                                        "i12136"
                                                        "i12137"))
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(e r w s mod)
                                                      #((top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top))
                                                      #("i12101"
                                                        "i12102"
                                                        "i12103"
                                                        "i12104"
                                                        "i12105"))
                                                    #(ribcage
                                                      (lambda-var-list
                                                        gen-var
                                                        strip
                                                        chi-lambda-case
                                                        lambda*-formals
                                                        chi-simple-lambda
                                                        lambda-formals
                                                        ellipsis?
                                                        chi-void
                                                        eval-local-transformer
                                                        chi-local-syntax
                                                        chi-body
                                                        chi-macro
                                                        chi-application
                                                        chi-expr
                                                        chi
                                                        chi-top
                                                        syntax-type
                                                        chi-when-list
                                                        chi-install-global
                                                        chi-top-sequence
                                                        chi-sequence
                                                        source-wrap
                                                        wrap
                                                        bound-id-member?
                                                        distinct-bound-ids?
                                                        valid-bound-ids?
                                                        bound-id=?
                                                        free-id=?
                                                        id-var-name
                                                        same-marks?
                                                        join-marks
                                                        join-wraps
                                                        smart-append
                                                        make-binding-wrap
                                                        extend-ribcage!
                                                        make-empty-ribcage
                                                        new-mark
                                                        anti-mark
                                                        the-anti-mark
                                                        top-marked?
                                                        top-wrap
                                                        empty-wrap
                                                        set-ribcage-labels!
                                                        set-ribcage-marks!
                                                        set-ribcage-symnames!
                                                        ribcage-labels
                                                        ribcage-marks
                                                        ribcage-symnames
                                                        ribcage?
                                                        make-ribcage
                                                        gen-labels
                                                        gen-label
                                                        make-rename
                                                        rename-marks
                                                        rename-new
                                                        rename-old
                                                        subst-rename?
                                                        wrap-subst
                                                        wrap-marks
                                                        make-wrap
                                                        id-sym-name&marks
                                                        id-sym-name
                                                        id?
                                                        nonsymbol-id?
                                                        global-extend
                                                        lookup
                                                        macros-only-env
                                                        extend-var-env
                                                        extend-env
                                                        null-env
                                                        binding-value
                                                        binding-type
                                                        make-binding
                                                        arg-check
                                                        source-annotation
                                                        no-source
                                                        set-syntax-object-module!
                                                        set-syntax-object-wrap!
                                                        set-syntax-object-expression!
                                                        syntax-object-module
                                                        syntax-object-wrap
                                                        syntax-object-expression
                                                        syntax-object?
                                                        make-syntax-object
                                                        build-lexical-var
                                                        build-letrec
                                                        build-named-let
                                                        build-let
                                                        build-sequence
                                                        build-data
                                                        build-primref
                                                        build-lambda-case
                                                        build-case-lambda
                                                        build-simple-lambda
                                                        build-global-definition
                                                        maybe-name-value!
                                                        build-global-assignment
                                                        build-global-reference
                                                        analyze-variable
                                                        build-lexical-assignment
                                                        build-lexical-reference
                                                        build-dynlet
                                                        build-conditional
                                                        build-application
                                                        build-void
                                                        decorate-source
                                                        get-global-definition-hook
                                                        put-global-definition-hook
                                                        gensym-hook
                                                        local-eval-hook
                                                        top-level-eval-hook
                                                        fx<
                                                        fx=
                                                        fx-
                                                        fx+
                                                        *mode*
                                                        noexpand)
                                                      ((top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top))
                                                      ("i9190"
                                                       "i9188"
                                                       "i9186"
                                                       "i9184"
                                                       "i9182"
                                                       "i9180"
                                                       "i9178"
                                                       "i9176"
                                                       "i9174"
                                                       "i9172"
                                                       "i9170"
                                                       "i9168"
                                                       "i9166"
                                                       "i9164"
                                                       "i9162"
                                                       "i9160"
                                                       "i9158"
                                                       "i9156"
                                                       "i9154"
                                                       "i9152"
                                                       "i9150"
                                                       "i9148"
                                                       "i9146"
                                                       "i9144"
                                                       "i9142"
                                                       "i9140"
                                                       "i9138"
                                                       "i9136"
                                                       "i9134"
                                                       "i9132"
                                                       "i9130"
                                                       "i9128"
                                                       "i9126"
                                                       "i9124"
                                                       "i9122"
                                                       "i9120"
                                                       "i9119"
                                                       "i9118"
                                                       "i9116"
                                                       "i9115"
                                                       "i9114"
                                                       "i9113"
                                                       "i9112"
                                                       "i9110"
                                                       "i9108"
                                                       "i9106"
                                                       "i9104"
                                                       "i9102"
                                                       "i9100"
                                                       "i9098"
                                                       "i9096"
                                                       "i9093"
                                                       "i9091"
                                                       "i9090"
                                                       "i9089"
                                                       "i9088"
                                                       "i9087"
                                                       "i9086"
                                                       "i9084"
                                                       "i9082"
                                                       "i9080"
                                                       "i9078"
                                                       "i9077"
                                                       "i9075"
                                                       "i9073"
                                                       "i9071"
                                                       "i9069"
                                                       "i9067"
                                                       "i9065"
                                                       "i9063"
                                                       "i9062"
                                                       "i9060"
                                                       "i9058"
                                                       "i9057"
                                                       "i9056"
                                                       "i9054"
                                                       "i9053"
                                                       "i9051"
                                                       "i9049"
                                                       "i9047"
                                                       "i9045"
                                                       "i9043"
                                                       "i9041"
                                                       "i9039"
                                                       "i9037"
                                                       "i9035"
                                                       "i9033"
                                                       "i9031"
                                                       "i9029"
                                                       "i9027"
                                                       "i9025"
                                                       "i9023"
                                                       "i9021"
                                                       "i9019"
                                                       "i9017"
                                                       "i9015"
                                                       "i9013"
                                                       "i9011"
                                                       "i9009"
                                                       "i9007"
                                                       "i9005"
                                                       "i9003"
                                                       "i9001"
                                                       "i8999"
                                                       "i8997"
                                                       "i8995"
                                                       "i8993"
                                                       "i8991"
                                                       "i8989"
                                                       "i8988"
                                                       "i8986"
                                                       "i8984"
                                                       "i8982"
                                                       "i8980"
                                                       "i8978"
                                                       "i8976"
                                                       "i8974"
                                                       "i8972"))
                                                    #(ribcage
                                                      (define-structure
                                                        and-map*)
                                                      ((top) (top))
                                                      ("i8875" "i8873")))
                                                   (hygiene guile))
                                                #{head\ 12139}#)
                                          #{r\ 12097}#
                                          #{w\ 12098}#
                                          #{mod\ 12100}#)
                                        (map (lambda (#{e\ 12165}#)
                                               (#{chi\ 9161}#
                                                 #{e\ 12165}#
                                                 #{r\ 12097}#
                                                 #{w\ 12098}#
                                                 #{mod\ 12100}#))
                                             (append
                                               #{tail\ 12140}#
                                               (list #{val\ 12141}#))))))))
                              #{tmp\ 12133}#)
                       ((lambda (#{_\ 12169}#)
                          (syntax-violation
                            'set!
                            "bad set!"
                            (#{source-wrap\ 9147}#
                              #{e\ 12096}#
                              #{w\ 12098}#
                              #{s\ 12099}#
                              #{mod\ 12100}#)))
                        #{tmp\ 12106}#)))
                   ($sc-dispatch
                     #{tmp\ 12106}#
                     '(any (any . each-any) any)))))
              ($sc-dispatch
                #{tmp\ 12106}#
                '(any any any))))
           #{e\ 12096}#)))
      (#{global-extend\ 9072}#
        'module-ref
        '@
        (lambda (#{e\ 12170}#)
          ((lambda (#{tmp\ 12172}#)
             ((lambda (#{tmp\ 12173}#)
                (if (if #{tmp\ 12173}#
                      (apply (lambda (#{_\ 12177}#
                                      #{mod\ 12178}#
                                      #{id\ 12179}#)
                               (if (and-map #{id?\ 9076}# #{mod\ 12178}#)
                                 (#{id?\ 9076}# #{id\ 12179}#)
                                 #f))
                             #{tmp\ 12173}#)
                      #f)
                  (apply (lambda (#{_\ 12186}# #{mod\ 12187}# #{id\ 12188}#)
                           (values
                             (syntax->datum #{id\ 12188}#)
                             (syntax->datum
                               (cons '#(syntax-object
                                        public
                                        ((top)
                                         #(ribcage
                                           #(_ mod id)
                                           #((top) (top) (top))
                                           #("i12183" "i12184" "i12185"))
                                         #(ribcage () () ())
                                         #(ribcage #(e) #((top)) #("i12171"))
                                         #(ribcage
                                           (lambda-var-list
                                             gen-var
                                             strip
                                             chi-lambda-case
                                             lambda*-formals
                                             chi-simple-lambda
                                             lambda-formals
                                             ellipsis?
                                             chi-void
                                             eval-local-transformer
                                             chi-local-syntax
                                             chi-body
                                             chi-macro
                                             chi-application
                                             chi-expr
                                             chi
                                             chi-top
                                             syntax-type
                                             chi-when-list
                                             chi-install-global
                                             chi-top-sequence
                                             chi-sequence
                                             source-wrap
                                             wrap
                                             bound-id-member?
                                             distinct-bound-ids?
                                             valid-bound-ids?
                                             bound-id=?
                                             free-id=?
                                             id-var-name
                                             same-marks?
                                             join-marks
                                             join-wraps
                                             smart-append
                                             make-binding-wrap
                                             extend-ribcage!
                                             make-empty-ribcage
                                             new-mark
                                             anti-mark
                                             the-anti-mark
                                             top-marked?
                                             top-wrap
                                             empty-wrap
                                             set-ribcage-labels!
                                             set-ribcage-marks!
                                             set-ribcage-symnames!
                                             ribcage-labels
                                             ribcage-marks
                                             ribcage-symnames
                                             ribcage?
                                             make-ribcage
                                             gen-labels
                                             gen-label
                                             make-rename
                                             rename-marks
                                             rename-new
                                             rename-old
                                             subst-rename?
                                             wrap-subst
                                             wrap-marks
                                             make-wrap
                                             id-sym-name&marks
                                             id-sym-name
                                             id?
                                             nonsymbol-id?
                                             global-extend
                                             lookup
                                             macros-only-env
                                             extend-var-env
                                             extend-env
                                             null-env
                                             binding-value
                                             binding-type
                                             make-binding
                                             arg-check
                                             source-annotation
                                             no-source
                                             set-syntax-object-module!
                                             set-syntax-object-wrap!
                                             set-syntax-object-expression!
                                             syntax-object-module
                                             syntax-object-wrap
                                             syntax-object-expression
                                             syntax-object?
                                             make-syntax-object
                                             build-lexical-var
                                             build-letrec
                                             build-named-let
                                             build-let
                                             build-sequence
                                             build-data
                                             build-primref
                                             build-lambda-case
                                             build-case-lambda
                                             build-simple-lambda
                                             build-global-definition
                                             maybe-name-value!
                                             build-global-assignment
                                             build-global-reference
                                             analyze-variable
                                             build-lexical-assignment
                                             build-lexical-reference
                                             build-dynlet
                                             build-conditional
                                             build-application
                                             build-void
                                             decorate-source
                                             get-global-definition-hook
                                             put-global-definition-hook
                                             gensym-hook
                                             local-eval-hook
                                             top-level-eval-hook
                                             fx<
                                             fx=
                                             fx-
                                             fx+
                                             *mode*
                                             noexpand)
                                           ((top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top))
                                           ("i9190"
                                            "i9188"
                                            "i9186"
                                            "i9184"
                                            "i9182"
                                            "i9180"
                                            "i9178"
                                            "i9176"
                                            "i9174"
                                            "i9172"
                                            "i9170"
                                            "i9168"
                                            "i9166"
                                            "i9164"
                                            "i9162"
                                            "i9160"
                                            "i9158"
                                            "i9156"
                                            "i9154"
                                            "i9152"
                                            "i9150"
                                            "i9148"
                                            "i9146"
                                            "i9144"
                                            "i9142"
                                            "i9140"
                                            "i9138"
                                            "i9136"
                                            "i9134"
                                            "i9132"
                                            "i9130"
                                            "i9128"
                                            "i9126"
                                            "i9124"
                                            "i9122"
                                            "i9120"
                                            "i9119"
                                            "i9118"
                                            "i9116"
                                            "i9115"
                                            "i9114"
                                            "i9113"
                                            "i9112"
                                            "i9110"
                                            "i9108"
                                            "i9106"
                                            "i9104"
                                            "i9102"
                                            "i9100"
                                            "i9098"
                                            "i9096"
                                            "i9093"
                                            "i9091"
                                            "i9090"
                                            "i9089"
                                            "i9088"
                                            "i9087"
                                            "i9086"
                                            "i9084"
                                            "i9082"
                                            "i9080"
                                            "i9078"
                                            "i9077"
                                            "i9075"
                                            "i9073"
                                            "i9071"
                                            "i9069"
                                            "i9067"
                                            "i9065"
                                            "i9063"
                                            "i9062"
                                            "i9060"
                                            "i9058"
                                            "i9057"
                                            "i9056"
                                            "i9054"
                                            "i9053"
                                            "i9051"
                                            "i9049"
                                            "i9047"
                                            "i9045"
                                            "i9043"
                                            "i9041"
                                            "i9039"
                                            "i9037"
                                            "i9035"
                                            "i9033"
                                            "i9031"
                                            "i9029"
                                            "i9027"
                                            "i9025"
                                            "i9023"
                                            "i9021"
                                            "i9019"
                                            "i9017"
                                            "i9015"
                                            "i9013"
                                            "i9011"
                                            "i9009"
                                            "i9007"
                                            "i9005"
                                            "i9003"
                                            "i9001"
                                            "i8999"
                                            "i8997"
                                            "i8995"
                                            "i8993"
                                            "i8991"
                                            "i8989"
                                            "i8988"
                                            "i8986"
                                            "i8984"
                                            "i8982"
                                            "i8980"
                                            "i8978"
                                            "i8976"
                                            "i8974"
                                            "i8972"))
                                         #(ribcage
                                           (define-structure and-map*)
                                           ((top) (top))
                                           ("i8875" "i8873")))
                                        (hygiene guile))
                                     #{mod\ 12187}#))))
                         #{tmp\ 12173}#)
                  (syntax-violation
                    #f
                    "source expression failed to match any pattern"
                    #{tmp\ 12172}#)))
              ($sc-dispatch
                #{tmp\ 12172}#
                '(any each-any any))))
           #{e\ 12170}#)))
      (#{global-extend\ 9072}#
        'module-ref
        '@@
        (lambda (#{e\ 12190}#)
          ((lambda (#{tmp\ 12192}#)
             ((lambda (#{tmp\ 12193}#)
                (if (if #{tmp\ 12193}#
                      (apply (lambda (#{_\ 12197}#
                                      #{mod\ 12198}#
                                      #{id\ 12199}#)
                               (if (and-map #{id?\ 9076}# #{mod\ 12198}#)
                                 (#{id?\ 9076}# #{id\ 12199}#)
                                 #f))
                             #{tmp\ 12193}#)
                      #f)
                  (apply (lambda (#{_\ 12206}# #{mod\ 12207}# #{id\ 12208}#)
                           (values
                             (syntax->datum #{id\ 12208}#)
                             (syntax->datum
                               (cons '#(syntax-object
                                        private
                                        ((top)
                                         #(ribcage
                                           #(_ mod id)
                                           #((top) (top) (top))
                                           #("i12203" "i12204" "i12205"))
                                         #(ribcage () () ())
                                         #(ribcage #(e) #((top)) #("i12191"))
                                         #(ribcage
                                           (lambda-var-list
                                             gen-var
                                             strip
                                             chi-lambda-case
                                             lambda*-formals
                                             chi-simple-lambda
                                             lambda-formals
                                             ellipsis?
                                             chi-void
                                             eval-local-transformer
                                             chi-local-syntax
                                             chi-body
                                             chi-macro
                                             chi-application
                                             chi-expr
                                             chi
                                             chi-top
                                             syntax-type
                                             chi-when-list
                                             chi-install-global
                                             chi-top-sequence
                                             chi-sequence
                                             source-wrap
                                             wrap
                                             bound-id-member?
                                             distinct-bound-ids?
                                             valid-bound-ids?
                                             bound-id=?
                                             free-id=?
                                             id-var-name
                                             same-marks?
                                             join-marks
                                             join-wraps
                                             smart-append
                                             make-binding-wrap
                                             extend-ribcage!
                                             make-empty-ribcage
                                             new-mark
                                             anti-mark
                                             the-anti-mark
                                             top-marked?
                                             top-wrap
                                             empty-wrap
                                             set-ribcage-labels!
                                             set-ribcage-marks!
                                             set-ribcage-symnames!
                                             ribcage-labels
                                             ribcage-marks
                                             ribcage-symnames
                                             ribcage?
                                             make-ribcage
                                             gen-labels
                                             gen-label
                                             make-rename
                                             rename-marks
                                             rename-new
                                             rename-old
                                             subst-rename?
                                             wrap-subst
                                             wrap-marks
                                             make-wrap
                                             id-sym-name&marks
                                             id-sym-name
                                             id?
                                             nonsymbol-id?
                                             global-extend
                                             lookup
                                             macros-only-env
                                             extend-var-env
                                             extend-env
                                             null-env
                                             binding-value
                                             binding-type
                                             make-binding
                                             arg-check
                                             source-annotation
                                             no-source
                                             set-syntax-object-module!
                                             set-syntax-object-wrap!
                                             set-syntax-object-expression!
                                             syntax-object-module
                                             syntax-object-wrap
                                             syntax-object-expression
                                             syntax-object?
                                             make-syntax-object
                                             build-lexical-var
                                             build-letrec
                                             build-named-let
                                             build-let
                                             build-sequence
                                             build-data
                                             build-primref
                                             build-lambda-case
                                             build-case-lambda
                                             build-simple-lambda
                                             build-global-definition
                                             maybe-name-value!
                                             build-global-assignment
                                             build-global-reference
                                             analyze-variable
                                             build-lexical-assignment
                                             build-lexical-reference
                                             build-dynlet
                                             build-conditional
                                             build-application
                                             build-void
                                             decorate-source
                                             get-global-definition-hook
                                             put-global-definition-hook
                                             gensym-hook
                                             local-eval-hook
                                             top-level-eval-hook
                                             fx<
                                             fx=
                                             fx-
                                             fx+
                                             *mode*
                                             noexpand)
                                           ((top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top))
                                           ("i9190"
                                            "i9188"
                                            "i9186"
                                            "i9184"
                                            "i9182"
                                            "i9180"
                                            "i9178"
                                            "i9176"
                                            "i9174"
                                            "i9172"
                                            "i9170"
                                            "i9168"
                                            "i9166"
                                            "i9164"
                                            "i9162"
                                            "i9160"
                                            "i9158"
                                            "i9156"
                                            "i9154"
                                            "i9152"
                                            "i9150"
                                            "i9148"
                                            "i9146"
                                            "i9144"
                                            "i9142"
                                            "i9140"
                                            "i9138"
                                            "i9136"
                                            "i9134"
                                            "i9132"
                                            "i9130"
                                            "i9128"
                                            "i9126"
                                            "i9124"
                                            "i9122"
                                            "i9120"
                                            "i9119"
                                            "i9118"
                                            "i9116"
                                            "i9115"
                                            "i9114"
                                            "i9113"
                                            "i9112"
                                            "i9110"
                                            "i9108"
                                            "i9106"
                                            "i9104"
                                            "i9102"
                                            "i9100"
                                            "i9098"
                                            "i9096"
                                            "i9093"
                                            "i9091"
                                            "i9090"
                                            "i9089"
                                            "i9088"
                                            "i9087"
                                            "i9086"
                                            "i9084"
                                            "i9082"
                                            "i9080"
                                            "i9078"
                                            "i9077"
                                            "i9075"
                                            "i9073"
                                            "i9071"
                                            "i9069"
                                            "i9067"
                                            "i9065"
                                            "i9063"
                                            "i9062"
                                            "i9060"
                                            "i9058"
                                            "i9057"
                                            "i9056"
                                            "i9054"
                                            "i9053"
                                            "i9051"
                                            "i9049"
                                            "i9047"
                                            "i9045"
                                            "i9043"
                                            "i9041"
                                            "i9039"
                                            "i9037"
                                            "i9035"
                                            "i9033"
                                            "i9031"
                                            "i9029"
                                            "i9027"
                                            "i9025"
                                            "i9023"
                                            "i9021"
                                            "i9019"
                                            "i9017"
                                            "i9015"
                                            "i9013"
                                            "i9011"
                                            "i9009"
                                            "i9007"
                                            "i9005"
                                            "i9003"
                                            "i9001"
                                            "i8999"
                                            "i8997"
                                            "i8995"
                                            "i8993"
                                            "i8991"
                                            "i8989"
                                            "i8988"
                                            "i8986"
                                            "i8984"
                                            "i8982"
                                            "i8980"
                                            "i8978"
                                            "i8976"
                                            "i8974"
                                            "i8972"))
                                         #(ribcage
                                           (define-structure and-map*)
                                           ((top) (top))
                                           ("i8875" "i8873")))
                                        (hygiene guile))
                                     #{mod\ 12207}#))))
                         #{tmp\ 12193}#)
                  (syntax-violation
                    #f
                    "source expression failed to match any pattern"
                    #{tmp\ 12192}#)))
              ($sc-dispatch
                #{tmp\ 12192}#
                '(any each-any any))))
           #{e\ 12190}#)))
      (#{global-extend\ 9072}#
        'core
        'if
        (lambda (#{e\ 12210}#
                 #{r\ 12211}#
                 #{w\ 12212}#
                 #{s\ 12213}#
                 #{mod\ 12214}#)
          ((lambda (#{tmp\ 12220}#)
             ((lambda (#{tmp\ 12221}#)
                (if #{tmp\ 12221}#
                  (apply (lambda (#{_\ 12225}# #{test\ 12226}# #{then\ 12227}#)
                           (#{build-conditional\ 9000}#
                             #{s\ 12213}#
                             (#{chi\ 9161}#
                               #{test\ 12226}#
                               #{r\ 12211}#
                               #{w\ 12212}#
                               #{mod\ 12214}#)
                             (#{chi\ 9161}#
                               #{then\ 12227}#
                               #{r\ 12211}#
                               #{w\ 12212}#
                               #{mod\ 12214}#)
                             (#{build-void\ 8996}# #f)))
                         #{tmp\ 12221}#)
                  ((lambda (#{tmp\ 12229}#)
                     (if #{tmp\ 12229}#
                       (apply (lambda (#{_\ 12234}#
                                       #{test\ 12235}#
                                       #{then\ 12236}#
                                       #{else\ 12237}#)
                                (#{build-conditional\ 9000}#
                                  #{s\ 12213}#
                                  (#{chi\ 9161}#
                                    #{test\ 12235}#
                                    #{r\ 12211}#
                                    #{w\ 12212}#
                                    #{mod\ 12214}#)
                                  (#{chi\ 9161}#
                                    #{then\ 12236}#
                                    #{r\ 12211}#
                                    #{w\ 12212}#
                                    #{mod\ 12214}#)
                                  (#{chi\ 9161}#
                                    #{else\ 12237}#
                                    #{r\ 12211}#
                                    #{w\ 12212}#
                                    #{mod\ 12214}#)))
                              #{tmp\ 12229}#)
                       (syntax-violation
                         #f
                         "source expression failed to match any pattern"
                         #{tmp\ 12220}#)))
                   ($sc-dispatch
                     #{tmp\ 12220}#
                     '(any any any any)))))
              ($sc-dispatch
                #{tmp\ 12220}#
                '(any any any))))
           #{e\ 12210}#)))
      (#{global-extend\ 9072}#
        'core
        'with-fluids
        (lambda (#{e\ 12238}#
                 #{r\ 12239}#
                 #{w\ 12240}#
                 #{s\ 12241}#
                 #{mod\ 12242}#)
          ((lambda (#{tmp\ 12248}#)
             ((lambda (#{tmp\ 12249}#)
                (if #{tmp\ 12249}#
                  (apply (lambda (#{_\ 12255}#
                                  #{fluid\ 12256}#
                                  #{val\ 12257}#
                                  #{b\ 12258}#
                                  #{b*\ 12259}#)
                           (#{build-dynlet\ 9002}#
                             #{s\ 12241}#
                             (map (lambda (#{x\ 12260}#)
                                    (#{chi\ 9161}#
                                      #{x\ 12260}#
                                      #{r\ 12239}#
                                      #{w\ 12240}#
                                      #{mod\ 12242}#))
                                  #{fluid\ 12256}#)
                             (map (lambda (#{x\ 12263}#)
                                    (#{chi\ 9161}#
                                      #{x\ 12263}#
                                      #{r\ 12239}#
                                      #{w\ 12240}#
                                      #{mod\ 12242}#))
                                  #{val\ 12257}#)
                             (#{chi-body\ 9169}#
                               (cons #{b\ 12258}# #{b*\ 12259}#)
                               (#{source-wrap\ 9147}#
                                 #{e\ 12238}#
                                 #{w\ 12240}#
                                 #{s\ 12241}#
                                 #{mod\ 12242}#)
                               #{r\ 12239}#
                               #{w\ 12240}#
                               #{mod\ 12242}#)))
                         #{tmp\ 12249}#)
                  (syntax-violation
                    #f
                    "source expression failed to match any pattern"
                    #{tmp\ 12248}#)))
              ($sc-dispatch
                #{tmp\ 12248}#
                '(any #(each (any any)) any . each-any))))
           #{e\ 12238}#)))
      (#{global-extend\ 9072}#
        'begin
        'begin
        '())
      (#{global-extend\ 9072}#
        'define
        'define
        '())
      (#{global-extend\ 9072}#
        'define-syntax
        'define-syntax
        '())
      (#{global-extend\ 9072}#
        'eval-when
        'eval-when
        '())
      (#{global-extend\ 9072}#
        'core
        'syntax-case
        (letrec ((#{gen-syntax-case\ 12274}#
                   (lambda (#{x\ 12275}#
                            #{keys\ 12276}#
                            #{clauses\ 12277}#
                            #{r\ 12278}#
                            #{mod\ 12279}#)
                     (if (null? #{clauses\ 12277}#)
                       (#{build-application\ 8998}#
                         #f
                         (#{build-primref\ 9024}#
                           #f
                           'syntax-violation)
                         (list (#{build-data\ 9026}# #f #f)
                               (#{build-data\ 9026}#
                                 #f
                                 "source expression failed to match any pattern")
                               #{x\ 12275}#))
                       ((lambda (#{tmp\ 12289}#)
                          ((lambda (#{tmp\ 12290}#)
                             (if #{tmp\ 12290}#
                               (apply (lambda (#{pat\ 12293}# #{exp\ 12294}#)
                                        (if (if (#{id?\ 9076}# #{pat\ 12293}#)
                                              (and-map
                                                (lambda (#{x\ 12297}#)
                                                  (not (#{free-id=?\ 9135}#
                                                         #{pat\ 12293}#
                                                         #{x\ 12297}#)))
                                                (cons '#(syntax-object
                                                         ...
                                                         ((top)
                                                          #(ribcage
                                                            #(pat exp)
                                                            #((top) (top))
                                                            #("i12291"
                                                              "i12292"))
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(x
                                                              keys
                                                              clauses
                                                              r
                                                              mod)
                                                            #((top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top))
                                                            #("i12280"
                                                              "i12281"
                                                              "i12282"
                                                              "i12283"
                                                              "i12284"))
                                                          #(ribcage
                                                            (gen-syntax-case
                                                              gen-clause
                                                              build-dispatch-call
                                                              convert-pattern)
                                                            ((top)
                                                             (top)
                                                             (top)
                                                             (top))
                                                            ("i12273"
                                                             "i12271"
                                                             "i12269"
                                                             "i12267"))
                                                          #(ribcage
                                                            (lambda-var-list
                                                              gen-var
                                                              strip
                                                              chi-lambda-case
                                                              lambda*-formals
                                                              chi-simple-lambda
                                                              lambda-formals
                                                              ellipsis?
                                                              chi-void
                                                              eval-local-transformer
                                                              chi-local-syntax
                                                              chi-body
                                                              chi-macro
                                                              chi-application
                                                              chi-expr
                                                              chi
                                                              chi-top
                                                              syntax-type
                                                              chi-when-list
                                                              chi-install-global
                                                              chi-top-sequence
                                                              chi-sequence
                                                              source-wrap
                                                              wrap
                                                              bound-id-member?
                                                              distinct-bound-ids?
                                                              valid-bound-ids?
                                                              bound-id=?
                                                              free-id=?
                                                              id-var-name
                                                              same-marks?
                                                              join-marks
                                                              join-wraps
                                                              smart-append
                                                              make-binding-wrap
                                                              extend-ribcage!
                                                              make-empty-ribcage
                                                              new-mark
                                                              anti-mark
                                                              the-anti-mark
                                                              top-marked?
                                                              top-wrap
                                                              empty-wrap
                                                              set-ribcage-labels!
                                                              set-ribcage-marks!
                                                              set-ribcage-symnames!
                                                              ribcage-labels
                                                              ribcage-marks
                                                              ribcage-symnames
                                                              ribcage?
                                                              make-ribcage
                                                              gen-labels
                                                              gen-label
                                                              make-rename
                                                              rename-marks
                                                              rename-new
                                                              rename-old
                                                              subst-rename?
                                                              wrap-subst
                                                              wrap-marks
                                                              make-wrap
                                                              id-sym-name&marks
                                                              id-sym-name
                                                              id?
                                                              nonsymbol-id?
                                                              global-extend
                                                              lookup
                                                              macros-only-env
                                                              extend-var-env
                                                              extend-env
                                                              null-env
                                                              binding-value
                                                              binding-type
                                                              make-binding
                                                              arg-check
                                                              source-annotation
                                                              no-source
                                                              set-syntax-object-module!
                                                              set-syntax-object-wrap!
                                                              set-syntax-object-expression!
                                                              syntax-object-module
                                                              syntax-object-wrap
                                                              syntax-object-expression
                                                              syntax-object?
                                                              make-syntax-object
                                                              build-lexical-var
                                                              build-letrec
                                                              build-named-let
                                                              build-let
                                                              build-sequence
                                                              build-data
                                                              build-primref
                                                              build-lambda-case
                                                              build-case-lambda
                                                              build-simple-lambda
                                                              build-global-definition
                                                              maybe-name-value!
                                                              build-global-assignment
                                                              build-global-reference
                                                              analyze-variable
                                                              build-lexical-assignment
                                                              build-lexical-reference
                                                              build-dynlet
                                                              build-conditional
                                                              build-application
                                                              build-void
                                                              decorate-source
                                                              get-global-definition-hook
                                                              put-global-definition-hook
                                                              gensym-hook
                                                              local-eval-hook
                                                              top-level-eval-hook
                                                              fx<
                                                              fx=
                                                              fx-
                                                              fx+
                                                              *mode*
                                                              noexpand)
                                                            ((top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top))
                                                            ("i9190"
                                                             "i9188"
                                                             "i9186"
                                                             "i9184"
                                                             "i9182"
                                                             "i9180"
                                                             "i9178"
                                                             "i9176"
                                                             "i9174"
                                                             "i9172"
                                                             "i9170"
                                                             "i9168"
                                                             "i9166"
                                                             "i9164"
                                                             "i9162"
                                                             "i9160"
                                                             "i9158"
                                                             "i9156"
                                                             "i9154"
                                                             "i9152"
                                                             "i9150"
                                                             "i9148"
                                                             "i9146"
                                                             "i9144"
                                                             "i9142"
                                                             "i9140"
                                                             "i9138"
                                                             "i9136"
                                                             "i9134"
                                                             "i9132"
                                                             "i9130"
                                                             "i9128"
                                                             "i9126"
                                                             "i9124"
                                                             "i9122"
                                                             "i9120"
                                                             "i9119"
                                                             "i9118"
                                                             "i9116"
                                                             "i9115"
                                                             "i9114"
                                                             "i9113"
                                                             "i9112"
                                                             "i9110"
                                                             "i9108"
                                                             "i9106"
                                                             "i9104"
                                                             "i9102"
                                                             "i9100"
                                                             "i9098"
                                                             "i9096"
                                                             "i9093"
                                                             "i9091"
                                                             "i9090"
                                                             "i9089"
                                                             "i9088"
                                                             "i9087"
                                                             "i9086"
                                                             "i9084"
                                                             "i9082"
                                                             "i9080"
                                                             "i9078"
                                                             "i9077"
                                                             "i9075"
                                                             "i9073"
                                                             "i9071"
                                                             "i9069"
                                                             "i9067"
                                                             "i9065"
                                                             "i9063"
                                                             "i9062"
                                                             "i9060"
                                                             "i9058"
                                                             "i9057"
                                                             "i9056"
                                                             "i9054"
                                                             "i9053"
                                                             "i9051"
                                                             "i9049"
                                                             "i9047"
                                                             "i9045"
                                                             "i9043"
                                                             "i9041"
                                                             "i9039"
                                                             "i9037"
                                                             "i9035"
                                                             "i9033"
                                                             "i9031"
                                                             "i9029"
                                                             "i9027"
                                                             "i9025"
                                                             "i9023"
                                                             "i9021"
                                                             "i9019"
                                                             "i9017"
                                                             "i9015"
                                                             "i9013"
                                                             "i9011"
                                                             "i9009"
                                                             "i9007"
                                                             "i9005"
                                                             "i9003"
                                                             "i9001"
                                                             "i8999"
                                                             "i8997"
                                                             "i8995"
                                                             "i8993"
                                                             "i8991"
                                                             "i8989"
                                                             "i8988"
                                                             "i8986"
                                                             "i8984"
                                                             "i8982"
                                                             "i8980"
                                                             "i8978"
                                                             "i8976"
                                                             "i8974"
                                                             "i8972"))
                                                          #(ribcage
                                                            (define-structure
                                                              and-map*)
                                                            ((top) (top))
                                                            ("i8875" "i8873")))
                                                         (hygiene guile))
                                                      #{keys\ 12276}#))
                                              #f)
                                          (let ((#{labels\ 12301}#
                                                  (list (#{gen-label\ 9092}#)))
                                                (#{var\ 12302}#
                                                  (#{gen-var\ 9189}#
                                                    #{pat\ 12293}#)))
                                            (#{build-application\ 8998}#
                                              #f
                                              (#{build-simple-lambda\ 9018}#
                                                #f
                                                (list (syntax->datum
                                                        #{pat\ 12293}#))
                                                #f
                                                (list #{var\ 12302}#)
                                                '()
                                                (#{chi\ 9161}#
                                                  #{exp\ 12294}#
                                                  (#{extend-env\ 9064}#
                                                    #{labels\ 12301}#
                                                    (list (cons 'syntax
                                                                (cons #{var\ 12302}#
                                                                      0)))
                                                    #{r\ 12278}#)
                                                  (#{make-binding-wrap\ 9123}#
                                                    (list #{pat\ 12293}#)
                                                    #{labels\ 12301}#
                                                    '(()))
                                                  #{mod\ 12279}#))
                                              (list #{x\ 12275}#)))
                                          (#{gen-clause\ 12272}#
                                            #{x\ 12275}#
                                            #{keys\ 12276}#
                                            (cdr #{clauses\ 12277}#)
                                            #{r\ 12278}#
                                            #{pat\ 12293}#
                                            #t
                                            #{exp\ 12294}#
                                            #{mod\ 12279}#)))
                                      #{tmp\ 12290}#)
                               ((lambda (#{tmp\ 12308}#)
                                  (if #{tmp\ 12308}#
                                    (apply (lambda (#{pat\ 12312}#
                                                    #{fender\ 12313}#
                                                    #{exp\ 12314}#)
                                             (#{gen-clause\ 12272}#
                                               #{x\ 12275}#
                                               #{keys\ 12276}#
                                               (cdr #{clauses\ 12277}#)
                                               #{r\ 12278}#
                                               #{pat\ 12312}#
                                               #{fender\ 12313}#
                                               #{exp\ 12314}#
                                               #{mod\ 12279}#))
                                           #{tmp\ 12308}#)
                                    ((lambda (#{_\ 12316}#)
                                       (syntax-violation
                                         'syntax-case
                                         "invalid clause"
                                         (car #{clauses\ 12277}#)))
                                     #{tmp\ 12289}#)))
                                ($sc-dispatch
                                  #{tmp\ 12289}#
                                  '(any any any)))))
                           ($sc-dispatch #{tmp\ 12289}# (quote (any any)))))
                        (car #{clauses\ 12277}#)))))
                 (#{gen-clause\ 12272}#
                   (lambda (#{x\ 12317}#
                            #{keys\ 12318}#
                            #{clauses\ 12319}#
                            #{r\ 12320}#
                            #{pat\ 12321}#
                            #{fender\ 12322}#
                            #{exp\ 12323}#
                            #{mod\ 12324}#)
                     (call-with-values
                       (lambda ()
                         (#{convert-pattern\ 12268}#
                           #{pat\ 12321}#
                           #{keys\ 12318}#))
                       (lambda (#{p\ 12333}# #{pvars\ 12334}#)
                         (if (not (#{distinct-bound-ids?\ 9141}#
                                    (map car #{pvars\ 12334}#)))
                           (syntax-violation
                             'syntax-case
                             "duplicate pattern variable"
                             #{pat\ 12321}#)
                           (if (not (and-map
                                      (lambda (#{x\ 12341}#)
                                        (not (#{ellipsis?\ 9177}#
                                               (car #{x\ 12341}#))))
                                      #{pvars\ 12334}#))
                             (syntax-violation
                               'syntax-case
                               "misplaced ellipsis"
                               #{pat\ 12321}#)
                             (let ((#{y\ 12345}#
                                     (#{gen-var\ 9189}# (quote tmp))))
                               (#{build-application\ 8998}#
                                 #f
                                 (#{build-simple-lambda\ 9018}#
                                   #f
                                   (list (quote tmp))
                                   #f
                                   (list #{y\ 12345}#)
                                   '()
                                   (let ((#{y\ 12349}#
                                           (#{build-lexical-reference\ 9004}#
                                             'value
                                             #f
                                             'tmp
                                             #{y\ 12345}#)))
                                     (#{build-conditional\ 9000}#
                                       #f
                                       ((lambda (#{tmp\ 12352}#)
                                          ((lambda (#{tmp\ 12353}#)
                                             (if #{tmp\ 12353}#
                                               (apply (lambda () #{y\ 12349}#)
                                                      #{tmp\ 12353}#)
                                               ((lambda (#{_\ 12355}#)
                                                  (#{build-conditional\ 9000}#
                                                    #f
                                                    #{y\ 12349}#
                                                    (#{build-dispatch-call\ 12270}#
                                                      #{pvars\ 12334}#
                                                      #{fender\ 12322}#
                                                      #{y\ 12349}#
                                                      #{r\ 12320}#
                                                      #{mod\ 12324}#)
                                                    (#{build-data\ 9026}#
                                                      #f
                                                      #f)))
                                                #{tmp\ 12352}#)))
                                           ($sc-dispatch
                                             #{tmp\ 12352}#
                                             '#(atom #t))))
                                        #{fender\ 12322}#)
                                       (#{build-dispatch-call\ 12270}#
                                         #{pvars\ 12334}#
                                         #{exp\ 12323}#
                                         #{y\ 12349}#
                                         #{r\ 12320}#
                                         #{mod\ 12324}#)
                                       (#{gen-syntax-case\ 12274}#
                                         #{x\ 12317}#
                                         #{keys\ 12318}#
                                         #{clauses\ 12319}#
                                         #{r\ 12320}#
                                         #{mod\ 12324}#))))
                                 (list (if (eq? #{p\ 12333}# (quote any))
                                         (#{build-application\ 8998}#
                                           #f
                                           (#{build-primref\ 9024}#
                                             #f
                                             'list)
                                           (list #{x\ 12317}#))
                                         (#{build-application\ 8998}#
                                           #f
                                           (#{build-primref\ 9024}#
                                             #f
                                             '$sc-dispatch)
                                           (list #{x\ 12317}#
                                                 (#{build-data\ 9026}#
                                                   #f
                                                   #{p\ 12333}#)))))))))))))
                 (#{build-dispatch-call\ 12270}#
                   (lambda (#{pvars\ 12363}#
                            #{exp\ 12364}#
                            #{y\ 12365}#
                            #{r\ 12366}#
                            #{mod\ 12367}#)
                     (let ((#{ids\ 12375}# (map car #{pvars\ 12363}#))
                           (#{levels\ 12376}# (map cdr #{pvars\ 12363}#)))
                       (let ((#{labels\ 12379}#
                               (#{gen-labels\ 9094}# #{ids\ 12375}#))
                             (#{new-vars\ 12380}#
                               (map #{gen-var\ 9189}# #{ids\ 12375}#)))
                         (#{build-application\ 8998}#
                           #f
                           (#{build-primref\ 9024}# #f (quote apply))
                           (list (#{build-simple-lambda\ 9018}#
                                   #f
                                   (map syntax->datum #{ids\ 12375}#)
                                   #f
                                   #{new-vars\ 12380}#
                                   '()
                                   (#{chi\ 9161}#
                                     #{exp\ 12364}#
                                     (#{extend-env\ 9064}#
                                       #{labels\ 12379}#
                                       (map (lambda (#{var\ 12384}#
                                                     #{level\ 12385}#)
                                              (cons 'syntax
                                                    (cons #{var\ 12384}#
                                                          #{level\ 12385}#)))
                                            #{new-vars\ 12380}#
                                            (map cdr #{pvars\ 12363}#))
                                       #{r\ 12366}#)
                                     (#{make-binding-wrap\ 9123}#
                                       #{ids\ 12375}#
                                       #{labels\ 12379}#
                                       '(()))
                                     #{mod\ 12367}#))
                                 #{y\ 12365}#))))))
                 (#{convert-pattern\ 12268}#
                   (lambda (#{pattern\ 12391}# #{keys\ 12392}#)
                     (letrec ((#{cvt\ 12398}#
                                (lambda (#{p\ 12399}#
                                         #{n\ 12400}#
                                         #{ids\ 12401}#)
                                  (if (#{id?\ 9076}# #{p\ 12399}#)
                                    (if (#{bound-id-member?\ 9143}#
                                          #{p\ 12399}#
                                          #{keys\ 12392}#)
                                      (values
                                        (vector (quote free-id) #{p\ 12399}#)
                                        #{ids\ 12401}#)
                                      (values
                                        'any
                                        (cons (cons #{p\ 12399}# #{n\ 12400}#)
                                              #{ids\ 12401}#)))
                                    ((lambda (#{tmp\ 12405}#)
                                       ((lambda (#{tmp\ 12406}#)
                                          (if (if #{tmp\ 12406}#
                                                (apply (lambda (#{x\ 12409}#
                                                                #{dots\ 12410}#)
                                                         (#{ellipsis?\ 9177}#
                                                           #{dots\ 12410}#))
                                                       #{tmp\ 12406}#)
                                                #f)
                                            (apply (lambda (#{x\ 12413}#
                                                            #{dots\ 12414}#)
                                                     (call-with-values
                                                       (lambda ()
                                                         (#{cvt\ 12398}#
                                                           #{x\ 12413}#
                                                           (#{fx+\ 8977}#
                                                             #{n\ 12400}#
                                                             1)
                                                           #{ids\ 12401}#))
                                                       (lambda (#{p\ 12415}#
                                                                #{ids\ 12416}#)
                                                         (values
                                                           (if (eq? #{p\ 12415}#
                                                                    'any)
                                                             'each-any
                                                             (vector
                                                               'each
                                                               #{p\ 12415}#))
                                                           #{ids\ 12416}#))))
                                                   #{tmp\ 12406}#)
                                            ((lambda (#{tmp\ 12419}#)
                                               (if (if #{tmp\ 12419}#
                                                     (apply (lambda (#{x\ 12423}#
                                                                     #{dots\ 12424}#
                                                                     #{ys\ 12425}#)
                                                              (#{ellipsis?\ 9177}#
                                                                #{dots\ 12424}#))
                                                            #{tmp\ 12419}#)
                                                     #f)
                                                 (apply (lambda (#{x\ 12429}#
                                                                 #{dots\ 12430}#
                                                                 #{ys\ 12431}#)
                                                          (call-with-values
                                                            (lambda ()
                                                              (#{cvt*\ 12396}#
                                                                #{ys\ 12431}#
                                                                #{n\ 12400}#
                                                                #{ids\ 12401}#))
                                                            (lambda (#{ys\ 12433}#
                                                                     #{ids\ 12434}#)
                                                              (call-with-values
                                                                (lambda ()
                                                                  (#{cvt\ 12398}#
                                                                    #{x\ 12429}#
                                                                    (+ #{n\ 12400}#
                                                                       1)
                                                                    #{ids\ 12434}#))
                                                                (lambda (#{x\ 12437}#
                                                                         #{ids\ 12438}#)
                                                                  (values
                                                                    (list->vector
                                                                      (cons 'each+
                                                                            (cons #{x\ 12437}#
                                                                                  (cons (reverse
                                                                                          #{ys\ 12433}#)
                                                                                        '(())))))
                                                                    #{ids\ 12438}#))))))
                                                        #{tmp\ 12419}#)
                                                 ((lambda (#{tmp\ 12442}#)
                                                    (if #{tmp\ 12442}#
                                                      (apply (lambda (#{x\ 12445}#
                                                                      #{y\ 12446}#)
                                                               (call-with-values
                                                                 (lambda ()
                                                                   (#{cvt\ 12398}#
                                                                     #{y\ 12446}#
                                                                     #{n\ 12400}#
                                                                     #{ids\ 12401}#))
                                                                 (lambda (#{y\ 12447}#
                                                                          #{ids\ 12448}#)
                                                                   (call-with-values
                                                                     (lambda ()
                                                                       (#{cvt\ 12398}#
                                                                         #{x\ 12445}#
                                                                         #{n\ 12400}#
                                                                         #{ids\ 12448}#))
                                                                     (lambda (#{x\ 12451}#
                                                                              #{ids\ 12452}#)
                                                                       (values
                                                                         (cons #{x\ 12451}#
                                                                               #{y\ 12447}#)
                                                                         #{ids\ 12452}#))))))
                                                             #{tmp\ 12442}#)
                                                      ((lambda (#{tmp\ 12455}#)
                                                         (if #{tmp\ 12455}#
                                                           (apply (lambda ()
                                                                    (values
                                                                      '()
                                                                      #{ids\ 12401}#))
                                                                  #{tmp\ 12455}#)
                                                           ((lambda (#{tmp\ 12456}#)
                                                              (if #{tmp\ 12456}#
                                                                (apply (lambda (#{x\ 12458}#)
                                                                         (call-with-values
                                                                           (lambda ()
                                                                             (#{cvt\ 12398}#
                                                                               #{x\ 12458}#
                                                                               #{n\ 12400}#
                                                                               #{ids\ 12401}#))
                                                                           (lambda (#{p\ 12460}#
                                                                                    #{ids\ 12461}#)
                                                                             (values
                                                                               (vector
                                                                                 'vector
                                                                                 #{p\ 12460}#)
                                                                               #{ids\ 12461}#))))
                                                                       #{tmp\ 12456}#)
                                                                ((lambda (#{x\ 12465}#)
                                                                   (values
                                                                     (vector
                                                                       'atom
                                                                       (#{strip\ 9187}#
                                                                         #{p\ 12399}#
                                                                         '(())))
                                                                     #{ids\ 12401}#))
                                                                 #{tmp\ 12405}#)))
                                                            ($sc-dispatch
                                                              #{tmp\ 12405}#
                                                              '#(vector
                                                                 each-any)))))
                                                       ($sc-dispatch
                                                         #{tmp\ 12405}#
                                                         '()))))
                                                  ($sc-dispatch
                                                    #{tmp\ 12405}#
                                                    '(any . any)))))
                                             ($sc-dispatch
                                               #{tmp\ 12405}#
                                               '(any any . each-any)))))
                                        ($sc-dispatch
                                          #{tmp\ 12405}#
                                          '(any any))))
                                     #{p\ 12399}#))))
                              (#{cvt*\ 12396}#
                                (lambda (#{p*\ 12467}#
                                         #{n\ 12468}#
                                         #{ids\ 12469}#)
                                  (if (null? #{p*\ 12467}#)
                                    (values (quote ()) #{ids\ 12469}#)
                                    (call-with-values
                                      (lambda ()
                                        (#{cvt*\ 12396}#
                                          (cdr #{p*\ 12467}#)
                                          #{n\ 12468}#
                                          #{ids\ 12469}#))
                                      (lambda (#{y\ 12473}# #{ids\ 12474}#)
                                        (call-with-values
                                          (lambda ()
                                            (#{cvt\ 12398}#
                                              (car #{p*\ 12467}#)
                                              #{n\ 12468}#
                                              #{ids\ 12474}#))
                                          (lambda (#{x\ 12477}# #{ids\ 12478}#)
                                            (values
                                              (cons #{x\ 12477}# #{y\ 12473}#)
                                              #{ids\ 12478}#)))))))))
                       (#{cvt\ 12398}# #{pattern\ 12391}# 0 (quote ()))))))
          (lambda (#{e\ 12481}#
                   #{r\ 12482}#
                   #{w\ 12483}#
                   #{s\ 12484}#
                   #{mod\ 12485}#)
            (let ((#{e\ 12492}#
                    (#{source-wrap\ 9147}#
                      #{e\ 12481}#
                      #{w\ 12483}#
                      #{s\ 12484}#
                      #{mod\ 12485}#)))
              ((lambda (#{tmp\ 12493}#)
                 ((lambda (#{tmp\ 12494}#)
                    (if #{tmp\ 12494}#
                      (apply (lambda (#{_\ 12499}#
                                      #{val\ 12500}#
                                      #{key\ 12501}#
                                      #{m\ 12502}#)
                               (if (and-map
                                     (lambda (#{x\ 12503}#)
                                       (if (#{id?\ 9076}# #{x\ 12503}#)
                                         (not (#{ellipsis?\ 9177}#
                                                #{x\ 12503}#))
                                         #f))
                                     #{key\ 12501}#)
                                 (let ((#{x\ 12509}#
                                         (#{gen-var\ 9189}# (quote tmp))))
                                   (#{build-application\ 8998}#
                                     #{s\ 12484}#
                                     (#{build-simple-lambda\ 9018}#
                                       #f
                                       (list (quote tmp))
                                       #f
                                       (list #{x\ 12509}#)
                                       '()
                                       (#{gen-syntax-case\ 12274}#
                                         (#{build-lexical-reference\ 9004}#
                                           'value
                                           #f
                                           'tmp
                                           #{x\ 12509}#)
                                         #{key\ 12501}#
                                         #{m\ 12502}#
                                         #{r\ 12482}#
                                         #{mod\ 12485}#))
                                     (list (#{chi\ 9161}#
                                             #{val\ 12500}#
                                             #{r\ 12482}#
                                             '(())
                                             #{mod\ 12485}#))))
                                 (syntax-violation
                                   'syntax-case
                                   "invalid literals list"
                                   #{e\ 12492}#)))
                             #{tmp\ 12494}#)
                      (syntax-violation
                        #f
                        "source expression failed to match any pattern"
                        #{tmp\ 12493}#)))
                  ($sc-dispatch
                    #{tmp\ 12493}#
                    '(any any each-any . each-any))))
               #{e\ 12492}#)))))
      (set! macroexpand
        (lambda (#{x\ 12515}# . #{rest\ 12516}#)
          (if (if (pair? #{x\ 12515}#)
                (equal? (car #{x\ 12515}#) #{noexpand\ 8973}#)
                #f)
            (cadr #{x\ 12515}#)
            (let ((#{m\ 12523}#
                    (if (null? #{rest\ 12516}#)
                      'e
                      (car #{rest\ 12516}#)))
                  (#{esew\ 12524}#
                    (if (let ((#{t\ 12527}# (null? #{rest\ 12516}#)))
                          (if #{t\ 12527}#
                            #{t\ 12527}#
                            (null? (cdr #{rest\ 12516}#))))
                      '(eval)
                      (cadr #{rest\ 12516}#))))
              (with-fluids
                ((#{*mode*\ 8975}# #{m\ 12523}#))
                (#{chi-top\ 9159}#
                  #{x\ 12515}#
                  '()
                  '((top))
                  #{m\ 12523}#
                  #{esew\ 12524}#
                  (cons 'hygiene
                        (module-name (current-module)))))))))
      (set! identifier?
        (lambda (#{x\ 12531}#)
          (#{nonsymbol-id?\ 9074}# #{x\ 12531}#)))
      (set! datum->syntax
        (lambda (#{id\ 12533}# #{datum\ 12534}#)
          (#{make-syntax-object\ 9038}#
            #{datum\ 12534}#
            (#{syntax-object-wrap\ 9044}# #{id\ 12533}#)
            #f)))
      (set! syntax->datum
        (lambda (#{x\ 12537}#)
          (#{strip\ 9187}# #{x\ 12537}# (quote (())))))
      (set! generate-temporaries
        (lambda (#{ls\ 12540}#)
          (begin
            (let ((#{x\ 12544}# #{ls\ 12540}#))
              (if (not (list? #{x\ 12544}#))
                (syntax-violation
                  'generate-temporaries
                  "invalid argument"
                  #{x\ 12544}#)))
            (map (lambda (#{x\ 12545}#)
                   (#{wrap\ 9145}# (gensym) (quote ((top))) #f))
                 #{ls\ 12540}#))))
      (set! free-identifier=?
        (lambda (#{x\ 12549}# #{y\ 12550}#)
          (begin
            (let ((#{x\ 12555}# #{x\ 12549}#))
              (if (not (#{nonsymbol-id?\ 9074}# #{x\ 12555}#))
                (syntax-violation
                  'free-identifier=?
                  "invalid argument"
                  #{x\ 12555}#)))
            (let ((#{x\ 12558}# #{y\ 12550}#))
              (if (not (#{nonsymbol-id?\ 9074}# #{x\ 12558}#))
                (syntax-violation
                  'free-identifier=?
                  "invalid argument"
                  #{x\ 12558}#)))
            (#{free-id=?\ 9135}# #{x\ 12549}# #{y\ 12550}#))))
      (set! bound-identifier=?
        (lambda (#{x\ 12559}# #{y\ 12560}#)
          (begin
            (let ((#{x\ 12565}# #{x\ 12559}#))
              (if (not (#{nonsymbol-id?\ 9074}# #{x\ 12565}#))
                (syntax-violation
                  'bound-identifier=?
                  "invalid argument"
                  #{x\ 12565}#)))
            (let ((#{x\ 12568}# #{y\ 12560}#))
              (if (not (#{nonsymbol-id?\ 9074}# #{x\ 12568}#))
                (syntax-violation
                  'bound-identifier=?
                  "invalid argument"
                  #{x\ 12568}#)))
            (#{bound-id=?\ 9137}# #{x\ 12559}# #{y\ 12560}#))))
      (set! syntax-violation
        (lambda (#{who\ 12569}#
                 #{message\ 12570}#
                 #{form\ 12571}#
                 .
                 #{subform\ 12572}#)
          (begin
            (let ((#{x\ 12579}# #{who\ 12569}#))
              (if (not ((lambda (#{x\ 12580}#)
                          (let ((#{t\ 12584}# (not #{x\ 12580}#)))
                            (if #{t\ 12584}#
                              #{t\ 12584}#
                              (let ((#{t\ 12587}# (string? #{x\ 12580}#)))
                                (if #{t\ 12587}#
                                  #{t\ 12587}#
                                  (symbol? #{x\ 12580}#))))))
                        #{x\ 12579}#))
                (syntax-violation
                  'syntax-violation
                  "invalid argument"
                  #{x\ 12579}#)))
            (let ((#{x\ 12591}# #{message\ 12570}#))
              (if (not (string? #{x\ 12591}#))
                (syntax-violation
                  'syntax-violation
                  "invalid argument"
                  #{x\ 12591}#)))
            (scm-error
              'syntax-error
              'macroexpand
              (string-append
                (if #{who\ 12569}# "~a: " "")
                "~a "
                (if (null? #{subform\ 12572}#)
                  "in ~a"
                  "in subform `~s' of `~s'"))
              (let ((#{tail\ 12593}#
                      (cons #{message\ 12570}#
                            (map (lambda (#{x\ 12594}#)
                                   (#{strip\ 9187}# #{x\ 12594}# (quote (()))))
                                 (append
                                   #{subform\ 12572}#
                                   (list #{form\ 12571}#))))))
                (if #{who\ 12569}#
                  (cons #{who\ 12569}# #{tail\ 12593}#)
                  #{tail\ 12593}#))
              #f))))
      (letrec ((#{match\ 12610}#
                 (lambda (#{e\ 12611}#
                          #{p\ 12612}#
                          #{w\ 12613}#
                          #{r\ 12614}#
                          #{mod\ 12615}#)
                   (if (not #{r\ 12614}#)
                     #f
                     (if (eq? #{p\ 12612}# (quote any))
                       (cons (#{wrap\ 9145}#
                               #{e\ 12611}#
                               #{w\ 12613}#
                               #{mod\ 12615}#)
                             #{r\ 12614}#)
                       (if (#{syntax-object?\ 9040}# #{e\ 12611}#)
                         (#{match*\ 12608}#
                           (#{syntax-object-expression\ 9042}# #{e\ 12611}#)
                           #{p\ 12612}#
                           (#{join-wraps\ 9127}#
                             #{w\ 12613}#
                             (#{syntax-object-wrap\ 9044}# #{e\ 12611}#))
                           #{r\ 12614}#
                           (#{syntax-object-module\ 9046}# #{e\ 12611}#))
                         (#{match*\ 12608}#
                           #{e\ 12611}#
                           #{p\ 12612}#
                           #{w\ 12613}#
                           #{r\ 12614}#
                           #{mod\ 12615}#))))))
               (#{match*\ 12608}#
                 (lambda (#{e\ 12628}#
                          #{p\ 12629}#
                          #{w\ 12630}#
                          #{r\ 12631}#
                          #{mod\ 12632}#)
                   (if (null? #{p\ 12629}#)
                     (if (null? #{e\ 12628}#) #{r\ 12631}# #f)
                     (if (pair? #{p\ 12629}#)
                       (if (pair? #{e\ 12628}#)
                         (#{match\ 12610}#
                           (car #{e\ 12628}#)
                           (car #{p\ 12629}#)
                           #{w\ 12630}#
                           (#{match\ 12610}#
                             (cdr #{e\ 12628}#)
                             (cdr #{p\ 12629}#)
                             #{w\ 12630}#
                             #{r\ 12631}#
                             #{mod\ 12632}#)
                           #{mod\ 12632}#)
                         #f)
                       (if (eq? #{p\ 12629}# (quote each-any))
                         (let ((#{l\ 12649}#
                                 (#{match-each-any\ 12602}#
                                   #{e\ 12628}#
                                   #{w\ 12630}#
                                   #{mod\ 12632}#)))
                           (if #{l\ 12649}#
                             (cons #{l\ 12649}# #{r\ 12631}#)
                             #f))
                         (let ((#{atom-key\ 12655}#
                                 (vector-ref #{p\ 12629}# 0)))
                           (if (memv #{atom-key\ 12655}# (quote (each)))
                             (if (null? #{e\ 12628}#)
                               (#{match-empty\ 12604}#
                                 (vector-ref #{p\ 12629}# 1)
                                 #{r\ 12631}#)
                               (let ((#{l\ 12658}#
                                       (#{match-each\ 12598}#
                                         #{e\ 12628}#
                                         (vector-ref #{p\ 12629}# 1)
                                         #{w\ 12630}#
                                         #{mod\ 12632}#)))
                                 (if #{l\ 12658}#
                                   (letrec ((#{collect\ 12663}#
                                              (lambda (#{l\ 12664}#)
                                                (if (null? (car #{l\ 12664}#))
                                                  #{r\ 12631}#
                                                  (cons (map car #{l\ 12664}#)
                                                        (#{collect\ 12663}#
                                                          (map cdr
                                                               #{l\ 12664}#)))))))
                                     (#{collect\ 12663}# #{l\ 12658}#))
                                   #f)))
                             (if (memv #{atom-key\ 12655}# (quote (each+)))
                               (call-with-values
                                 (lambda ()
                                   (#{match-each+\ 12600}#
                                     #{e\ 12628}#
                                     (vector-ref #{p\ 12629}# 1)
                                     (vector-ref #{p\ 12629}# 2)
                                     (vector-ref #{p\ 12629}# 3)
                                     #{w\ 12630}#
                                     #{r\ 12631}#
                                     #{mod\ 12632}#))
                                 (lambda (#{xr*\ 12666}#
                                          #{y-pat\ 12667}#
                                          #{r\ 12668}#)
                                   (if #{r\ 12668}#
                                     (if (null? #{y-pat\ 12667}#)
                                       (if (null? #{xr*\ 12666}#)
                                         (#{match-empty\ 12604}#
                                           (vector-ref #{p\ 12629}# 1)
                                           #{r\ 12668}#)
                                         (#{combine\ 12606}#
                                           #{xr*\ 12666}#
                                           #{r\ 12668}#))
                                       #f)
                                     #f)))
                               (if (memv #{atom-key\ 12655}# (quote (free-id)))
                                 (if (#{id?\ 9076}# #{e\ 12628}#)
                                   (if (#{free-id=?\ 9135}#
                                         (#{wrap\ 9145}#
                                           #{e\ 12628}#
                                           #{w\ 12630}#
                                           #{mod\ 12632}#)
                                         (vector-ref #{p\ 12629}# 1))
                                     #{r\ 12631}#
                                     #f)
                                   #f)
                                 (if (memv #{atom-key\ 12655}# (quote (atom)))
                                   (if (equal?
                                         (vector-ref #{p\ 12629}# 1)
                                         (#{strip\ 9187}#
                                           #{e\ 12628}#
                                           #{w\ 12630}#))
                                     #{r\ 12631}#
                                     #f)
                                   (if (memv #{atom-key\ 12655}#
                                             '(vector))
                                     (if (vector? #{e\ 12628}#)
                                       (#{match\ 12610}#
                                         (vector->list #{e\ 12628}#)
                                         (vector-ref #{p\ 12629}# 1)
                                         #{w\ 12630}#
                                         #{r\ 12631}#
                                         #{mod\ 12632}#)
                                       #f))))))))))))
               (#{combine\ 12606}#
                 (lambda (#{r*\ 12685}# #{r\ 12686}#)
                   (if (null? (car #{r*\ 12685}#))
                     #{r\ 12686}#
                     (cons (map car #{r*\ 12685}#)
                           (#{combine\ 12606}#
                             (map cdr #{r*\ 12685}#)
                             #{r\ 12686}#)))))
               (#{match-empty\ 12604}#
                 (lambda (#{p\ 12689}# #{r\ 12690}#)
                   (if (null? #{p\ 12689}#)
                     #{r\ 12690}#
                     (if (eq? #{p\ 12689}# (quote any))
                       (cons (quote ()) #{r\ 12690}#)
                       (if (pair? #{p\ 12689}#)
                         (#{match-empty\ 12604}#
                           (car #{p\ 12689}#)
                           (#{match-empty\ 12604}#
                             (cdr #{p\ 12689}#)
                             #{r\ 12690}#))
                         (if (eq? #{p\ 12689}# (quote each-any))
                           (cons (quote ()) #{r\ 12690}#)
                           (let ((#{atom-key\ 12704}#
                                   (vector-ref #{p\ 12689}# 0)))
                             (if (memv #{atom-key\ 12704}# (quote (each)))
                               (#{match-empty\ 12604}#
                                 (vector-ref #{p\ 12689}# 1)
                                 #{r\ 12690}#)
                               (if (memv #{atom-key\ 12704}# (quote (each+)))
                                 (#{match-empty\ 12604}#
                                   (vector-ref #{p\ 12689}# 1)
                                   (#{match-empty\ 12604}#
                                     (reverse (vector-ref #{p\ 12689}# 2))
                                     (#{match-empty\ 12604}#
                                       (vector-ref #{p\ 12689}# 3)
                                       #{r\ 12690}#)))
                                 (if (memv #{atom-key\ 12704}#
                                           '(free-id atom))
                                   #{r\ 12690}#
                                   (if (memv #{atom-key\ 12704}#
                                             '(vector))
                                     (#{match-empty\ 12604}#
                                       (vector-ref #{p\ 12689}# 1)
                                       #{r\ 12690}#))))))))))))
               (#{match-each-any\ 12602}#
                 (lambda (#{e\ 12709}# #{w\ 12710}# #{mod\ 12711}#)
                   (if (pair? #{e\ 12709}#)
                     (let ((#{l\ 12718}#
                             (#{match-each-any\ 12602}#
                               (cdr #{e\ 12709}#)
                               #{w\ 12710}#
                               #{mod\ 12711}#)))
                       (if #{l\ 12718}#
                         (cons (#{wrap\ 9145}#
                                 (car #{e\ 12709}#)
                                 #{w\ 12710}#
                                 #{mod\ 12711}#)
                               #{l\ 12718}#)
                         #f))
                     (if (null? #{e\ 12709}#)
                       '()
                       (if (#{syntax-object?\ 9040}# #{e\ 12709}#)
                         (#{match-each-any\ 12602}#
                           (#{syntax-object-expression\ 9042}# #{e\ 12709}#)
                           (#{join-wraps\ 9127}#
                             #{w\ 12710}#
                             (#{syntax-object-wrap\ 9044}# #{e\ 12709}#))
                           #{mod\ 12711}#)
                         #f)))))
               (#{match-each+\ 12600}#
                 (lambda (#{e\ 12726}#
                          #{x-pat\ 12727}#
                          #{y-pat\ 12728}#
                          #{z-pat\ 12729}#
                          #{w\ 12730}#
                          #{r\ 12731}#
                          #{mod\ 12732}#)
                   (letrec ((#{f\ 12743}#
                              (lambda (#{e\ 12744}# #{w\ 12745}#)
                                (if (pair? #{e\ 12744}#)
                                  (call-with-values
                                    (lambda ()
                                      (#{f\ 12743}#
                                        (cdr #{e\ 12744}#)
                                        #{w\ 12745}#))
                                    (lambda (#{xr*\ 12748}#
                                             #{y-pat\ 12749}#
                                             #{r\ 12750}#)
                                      (if #{r\ 12750}#
                                        (if (null? #{y-pat\ 12749}#)
                                          (let ((#{xr\ 12755}#
                                                  (#{match\ 12610}#
                                                    (car #{e\ 12744}#)
                                                    #{x-pat\ 12727}#
                                                    #{w\ 12745}#
                                                    '()
                                                    #{mod\ 12732}#)))
                                            (if #{xr\ 12755}#
                                              (values
                                                (cons #{xr\ 12755}#
                                                      #{xr*\ 12748}#)
                                                #{y-pat\ 12749}#
                                                #{r\ 12750}#)
                                              (values #f #f #f)))
                                          (values
                                            '()
                                            (cdr #{y-pat\ 12749}#)
                                            (#{match\ 12610}#
                                              (car #{e\ 12744}#)
                                              (car #{y-pat\ 12749}#)
                                              #{w\ 12745}#
                                              #{r\ 12750}#
                                              #{mod\ 12732}#)))
                                        (values #f #f #f))))
                                  (if (#{syntax-object?\ 9040}# #{e\ 12744}#)
                                    (#{f\ 12743}#
                                      (#{syntax-object-expression\ 9042}#
                                        #{e\ 12744}#)
                                      (#{join-wraps\ 9127}#
                                        #{w\ 12745}#
                                        #{e\ 12744}#))
                                    (values
                                      '()
                                      #{y-pat\ 12728}#
                                      (#{match\ 12610}#
                                        #{e\ 12744}#
                                        #{z-pat\ 12729}#
                                        #{w\ 12745}#
                                        #{r\ 12731}#
                                        #{mod\ 12732}#)))))))
                     (#{f\ 12743}# #{e\ 12726}# #{w\ 12730}#))))
               (#{match-each\ 12598}#
                 (lambda (#{e\ 12759}#
                          #{p\ 12760}#
                          #{w\ 12761}#
                          #{mod\ 12762}#)
                   (if (pair? #{e\ 12759}#)
                     (let ((#{first\ 12770}#
                             (#{match\ 12610}#
                               (car #{e\ 12759}#)
                               #{p\ 12760}#
                               #{w\ 12761}#
                               '()
                               #{mod\ 12762}#)))
                       (if #{first\ 12770}#
                         (let ((#{rest\ 12774}#
                                 (#{match-each\ 12598}#
                                   (cdr #{e\ 12759}#)
                                   #{p\ 12760}#
                                   #{w\ 12761}#
                                   #{mod\ 12762}#)))
                           (if #{rest\ 12774}#
                             (cons #{first\ 12770}# #{rest\ 12774}#)
                             #f))
                         #f))
                     (if (null? #{e\ 12759}#)
                       '()
                       (if (#{syntax-object?\ 9040}# #{e\ 12759}#)
                         (#{match-each\ 12598}#
                           (#{syntax-object-expression\ 9042}# #{e\ 12759}#)
                           #{p\ 12760}#
                           (#{join-wraps\ 9127}#
                             #{w\ 12761}#
                             (#{syntax-object-wrap\ 9044}# #{e\ 12759}#))
                           (#{syntax-object-module\ 9046}# #{e\ 12759}#))
                         #f))))))
        (set! $sc-dispatch
          (lambda (#{e\ 12782}# #{p\ 12783}#)
            (if (eq? #{p\ 12783}# (quote any))
              (list #{e\ 12782}#)
              (if (#{syntax-object?\ 9040}# #{e\ 12782}#)
                (#{match*\ 12608}#
                  (#{syntax-object-expression\ 9042}# #{e\ 12782}#)
                  #{p\ 12783}#
                  (#{syntax-object-wrap\ 9044}# #{e\ 12782}#)
                  '()
                  (#{syntax-object-module\ 9046}# #{e\ 12782}#))
                (#{match*\ 12608}#
                  #{e\ 12782}#
                  #{p\ 12783}#
                  '(())
                  '()
                  #f)))))))))

(define with-syntax
  (make-syntax-transformer
    'with-syntax
    'macro
    (cons (lambda (#{x\ 12792}#)
            ((lambda (#{tmp\ 12794}#)
               ((lambda (#{tmp\ 12795}#)
                  (if #{tmp\ 12795}#
                    (apply (lambda (#{_\ 12799}# #{e1\ 12800}# #{e2\ 12801}#)
                             (cons '#(syntax-object
                                      begin
                                      ((top)
                                       #(ribcage
                                         #(_ e1 e2)
                                         #((top) (top) (top))
                                         #("i12796" "i12797" "i12798"))
                                       #(ribcage () () ())
                                       #(ribcage #(x) #((top)) #("i12793")))
                                      (hygiene guile))
                                   (cons #{e1\ 12800}# #{e2\ 12801}#)))
                           #{tmp\ 12795}#)
                    ((lambda (#{tmp\ 12803}#)
                       (if #{tmp\ 12803}#
                         (apply (lambda (#{_\ 12809}#
                                         #{out\ 12810}#
                                         #{in\ 12811}#
                                         #{e1\ 12812}#
                                         #{e2\ 12813}#)
                                  (list '#(syntax-object
                                           syntax-case
                                           ((top)
                                            #(ribcage
                                              #(_ out in e1 e2)
                                              #((top) (top) (top) (top) (top))
                                              #("i12804"
                                                "i12805"
                                                "i12806"
                                                "i12807"
                                                "i12808"))
                                            #(ribcage () () ())
                                            #(ribcage
                                              #(x)
                                              #((top))
                                              #("i12793")))
                                           (hygiene guile))
                                        #{in\ 12811}#
                                        '()
                                        (list #{out\ 12810}#
                                              (cons '#(syntax-object
                                                       begin
                                                       ((top)
                                                        #(ribcage
                                                          #(_ out in e1 e2)
                                                          #((top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top))
                                                          #("i12804"
                                                            "i12805"
                                                            "i12806"
                                                            "i12807"
                                                            "i12808"))
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(x)
                                                          #((top))
                                                          #("i12793")))
                                                       (hygiene guile))
                                                    (cons #{e1\ 12812}#
                                                          #{e2\ 12813}#)))))
                                #{tmp\ 12803}#)
                         ((lambda (#{tmp\ 12815}#)
                            (if #{tmp\ 12815}#
                              (apply (lambda (#{_\ 12821}#
                                              #{out\ 12822}#
                                              #{in\ 12823}#
                                              #{e1\ 12824}#
                                              #{e2\ 12825}#)
                                       (list '#(syntax-object
                                                syntax-case
                                                ((top)
                                                 #(ribcage
                                                   #(_ out in e1 e2)
                                                   #((top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top))
                                                   #("i12816"
                                                     "i12817"
                                                     "i12818"
                                                     "i12819"
                                                     "i12820"))
                                                 #(ribcage () () ())
                                                 #(ribcage
                                                   #(x)
                                                   #((top))
                                                   #("i12793")))
                                                (hygiene guile))
                                             (cons '#(syntax-object
                                                      list
                                                      ((top)
                                                       #(ribcage
                                                         #(_ out in e1 e2)
                                                         #((top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top))
                                                         #("i12816"
                                                           "i12817"
                                                           "i12818"
                                                           "i12819"
                                                           "i12820"))
                                                       #(ribcage () () ())
                                                       #(ribcage
                                                         #(x)
                                                         #((top))
                                                         #("i12793")))
                                                      (hygiene guile))
                                                   #{in\ 12823}#)
                                             '()
                                             (list #{out\ 12822}#
                                                   (cons '#(syntax-object
                                                            begin
                                                            ((top)
                                                             #(ribcage
                                                               #(_
                                                                 out
                                                                 in
                                                                 e1
                                                                 e2)
                                                               #((top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top))
                                                               #("i12816"
                                                                 "i12817"
                                                                 "i12818"
                                                                 "i12819"
                                                                 "i12820"))
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               #(x)
                                                               #((top))
                                                               #("i12793")))
                                                            (hygiene guile))
                                                         (cons #{e1\ 12824}#
                                                               #{e2\ 12825}#)))))
                                     #{tmp\ 12815}#)
                              (syntax-violation
                                #f
                                "source expression failed to match any pattern"
                                #{tmp\ 12794}#)))
                          ($sc-dispatch
                            #{tmp\ 12794}#
                            '(any #(each (any any)) any . each-any)))))
                     ($sc-dispatch
                       #{tmp\ 12794}#
                       '(any ((any any)) any . each-any)))))
                ($sc-dispatch
                  #{tmp\ 12794}#
                  '(any () any . each-any))))
             #{x\ 12792}#))
          (module-name (current-module)))))

(define syntax-rules
  (make-syntax-transformer
    'syntax-rules
    'macro
    (cons (lambda (#{x\ 12829}#)
            ((lambda (#{tmp\ 12831}#)
               ((lambda (#{tmp\ 12832}#)
                  (if #{tmp\ 12832}#
                    (apply (lambda (#{_\ 12838}#
                                    #{k\ 12839}#
                                    #{keyword\ 12840}#
                                    #{pattern\ 12841}#
                                    #{template\ 12842}#)
                             (list '#(syntax-object
                                      lambda
                                      ((top)
                                       #(ribcage
                                         #(_ k keyword pattern template)
                                         #((top) (top) (top) (top) (top))
                                         #("i12833"
                                           "i12834"
                                           "i12835"
                                           "i12836"
                                           "i12837"))
                                       #(ribcage () () ())
                                       #(ribcage #(x) #((top)) #("i12830")))
                                      (hygiene guile))
                                   '(#(syntax-object
                                       x
                                       ((top)
                                        #(ribcage
                                          #(_ k keyword pattern template)
                                          #((top) (top) (top) (top) (top))
                                          #("i12833"
                                            "i12834"
                                            "i12835"
                                            "i12836"
                                            "i12837"))
                                        #(ribcage () () ())
                                        #(ribcage #(x) #((top)) #("i12830")))
                                       (hygiene guile)))
                                   (vector
                                     '(#(syntax-object
                                         macro-type
                                         ((top)
                                          #(ribcage
                                            #(_ k keyword pattern template)
                                            #((top) (top) (top) (top) (top))
                                            #("i12833"
                                              "i12834"
                                              "i12835"
                                              "i12836"
                                              "i12837"))
                                          #(ribcage () () ())
                                          #(ribcage #(x) #((top)) #("i12830")))
                                         (hygiene guile))
                                       .
                                       #(syntax-object
                                         syntax-rules
                                         ((top)
                                          #(ribcage
                                            #(_ k keyword pattern template)
                                            #((top) (top) (top) (top) (top))
                                            #("i12833"
                                              "i12834"
                                              "i12835"
                                              "i12836"
                                              "i12837"))
                                          #(ribcage () () ())
                                          #(ribcage #(x) #((top)) #("i12830")))
                                         (hygiene guile)))
                                     (cons '#(syntax-object
                                              patterns
                                              ((top)
                                               #(ribcage
                                                 #(_
                                                   k
                                                   keyword
                                                   pattern
                                                   template)
                                                 #((top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top))
                                                 #("i12833"
                                                   "i12834"
                                                   "i12835"
                                                   "i12836"
                                                   "i12837"))
                                               #(ribcage () () ())
                                               #(ribcage
                                                 #(x)
                                                 #((top))
                                                 #("i12830")))
                                              (hygiene guile))
                                           #{pattern\ 12841}#))
                                   (cons '#(syntax-object
                                            syntax-case
                                            ((top)
                                             #(ribcage
                                               #(_ k keyword pattern template)
                                               #((top) (top) (top) (top) (top))
                                               #("i12833"
                                                 "i12834"
                                                 "i12835"
                                                 "i12836"
                                                 "i12837"))
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(x)
                                               #((top))
                                               #("i12830")))
                                            (hygiene guile))
                                         (cons '#(syntax-object
                                                  x
                                                  ((top)
                                                   #(ribcage
                                                     #(_
                                                       k
                                                       keyword
                                                       pattern
                                                       template)
                                                     #((top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top))
                                                     #("i12833"
                                                       "i12834"
                                                       "i12835"
                                                       "i12836"
                                                       "i12837"))
                                                   #(ribcage () () ())
                                                   #(ribcage
                                                     #(x)
                                                     #((top))
                                                     #("i12830")))
                                                  (hygiene guile))
                                               (cons #{k\ 12839}#
                                                     (map (lambda (#{tmp\ 12846}#
                                                                   #{tmp\ 12845}#)
                                                            (list (cons '#(syntax-object
                                                                           dummy
                                                                           ((top)
                                                                            #(ribcage
                                                                              #(_
                                                                                k
                                                                                keyword
                                                                                pattern
                                                                                template)
                                                                              #((top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top))
                                                                              #("i12833"
                                                                                "i12834"
                                                                                "i12835"
                                                                                "i12836"
                                                                                "i12837"))
                                                                            #(ribcage
                                                                              ()
                                                                              ()
                                                                              ())
                                                                            #(ribcage
                                                                              #(x)
                                                                              #((top))
                                                                              #("i12830")))
                                                                           (hygiene
                                                                             guile))
                                                                        #{tmp\ 12845}#)
                                                                  (list '#(syntax-object
                                                                           syntax
                                                                           ((top)
                                                                            #(ribcage
                                                                              #(_
                                                                                k
                                                                                keyword
                                                                                pattern
                                                                                template)
                                                                              #((top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top))
                                                                              #("i12833"
                                                                                "i12834"
                                                                                "i12835"
                                                                                "i12836"
                                                                                "i12837"))
                                                                            #(ribcage
                                                                              ()
                                                                              ()
                                                                              ())
                                                                            #(ribcage
                                                                              #(x)
                                                                              #((top))
                                                                              #("i12830")))
                                                                           (hygiene
                                                                             guile))
                                                                        #{tmp\ 12846}#)))
                                                          #{template\ 12842}#
                                                          #{pattern\ 12841}#))))))
                           #{tmp\ 12832}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 12831}#)))
                ($sc-dispatch
                  #{tmp\ 12831}#
                  '(any each-any . #(each ((any . any) any))))))
             #{x\ 12829}#))
          (module-name (current-module)))))

(define let*
  (make-syntax-transformer
    'let*
    'macro
    (cons (lambda (#{x\ 12847}#)
            ((lambda (#{tmp\ 12849}#)
               ((lambda (#{tmp\ 12850}#)
                  (if (if #{tmp\ 12850}#
                        (apply (lambda (#{let*\ 12856}#
                                        #{x\ 12857}#
                                        #{v\ 12858}#
                                        #{e1\ 12859}#
                                        #{e2\ 12860}#)
                                 (and-map identifier? #{x\ 12857}#))
                               #{tmp\ 12850}#)
                        #f)
                    (apply (lambda (#{let*\ 12867}#
                                    #{x\ 12868}#
                                    #{v\ 12869}#
                                    #{e1\ 12870}#
                                    #{e2\ 12871}#)
                             (letrec ((#{f\ 12874}#
                                        (lambda (#{bindings\ 12875}#)
                                          (if (null? #{bindings\ 12875}#)
                                            (cons '#(syntax-object
                                                     let
                                                     ((top)
                                                      #(ribcage () () ())
                                                      #(ribcage
                                                        #(f bindings)
                                                        #((top) (top))
                                                        #("i12872" "i12873"))
                                                      #(ribcage
                                                        #(let* x v e1 e2)
                                                        #((top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top))
                                                        #("i12862"
                                                          "i12863"
                                                          "i12864"
                                                          "i12865"
                                                          "i12866"))
                                                      #(ribcage () () ())
                                                      #(ribcage
                                                        #(x)
                                                        #((top))
                                                        #("i12848")))
                                                     (hygiene guile))
                                                  (cons '()
                                                        (cons #{e1\ 12870}#
                                                              #{e2\ 12871}#)))
                                            ((lambda (#{tmp\ 12880}#)
                                               ((lambda (#{tmp\ 12881}#)
                                                  (if #{tmp\ 12881}#
                                                    (apply (lambda (#{body\ 12884}#
                                                                    #{binding\ 12885}#)
                                                             (list '#(syntax-object
                                                                      let
                                                                      ((top)
                                                                       #(ribcage
                                                                         #(body
                                                                           binding)
                                                                         #((top)
                                                                           (top))
                                                                         #("i12882"
                                                                           "i12883"))
                                                                       #(ribcage
                                                                         ()
                                                                         ()
                                                                         ())
                                                                       #(ribcage
                                                                         #(f
                                                                           bindings)
                                                                         #((top)
                                                                           (top))
                                                                         #("i12872"
                                                                           "i12873"))
                                                                       #(ribcage
                                                                         #(let*
                                                                           x
                                                                           v
                                                                           e1
                                                                           e2)
                                                                         #((top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top))
                                                                         #("i12862"
                                                                           "i12863"
                                                                           "i12864"
                                                                           "i12865"
                                                                           "i12866"))
                                                                       #(ribcage
                                                                         ()
                                                                         ()
                                                                         ())
                                                                       #(ribcage
                                                                         #(x)
                                                                         #((top))
                                                                         #("i12848")))
                                                                      (hygiene
                                                                        guile))
                                                                   (list #{binding\ 12885}#)
                                                                   #{body\ 12884}#))
                                                           #{tmp\ 12881}#)
                                                    (syntax-violation
                                                      #f
                                                      "source expression failed to match any pattern"
                                                      #{tmp\ 12880}#)))
                                                ($sc-dispatch
                                                  #{tmp\ 12880}#
                                                  '(any any))))
                                             (list (#{f\ 12874}#
                                                     (cdr #{bindings\ 12875}#))
                                                   (car #{bindings\ 12875}#)))))))
                               (#{f\ 12874}#
                                 (map list #{x\ 12868}# #{v\ 12869}#))))
                           #{tmp\ 12850}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 12849}#)))
                ($sc-dispatch
                  #{tmp\ 12849}#
                  '(any #(each (any any)) any . each-any))))
             #{x\ 12847}#))
          (module-name (current-module)))))

(define do
  (make-syntax-transformer
    'do
    'macro
    (cons (lambda (#{orig-x\ 12886}#)
            ((lambda (#{tmp\ 12888}#)
               ((lambda (#{tmp\ 12889}#)
                  (if #{tmp\ 12889}#
                    (apply (lambda (#{_\ 12897}#
                                    #{var\ 12898}#
                                    #{init\ 12899}#
                                    #{step\ 12900}#
                                    #{e0\ 12901}#
                                    #{e1\ 12902}#
                                    #{c\ 12903}#)
                             ((lambda (#{tmp\ 12905}#)
                                ((lambda (#{tmp\ 12906}#)
                                   (if #{tmp\ 12906}#
                                     (apply (lambda (#{step\ 12908}#)
                                              ((lambda (#{tmp\ 12909}#)
                                                 ((lambda (#{tmp\ 12910}#)
                                                    (if #{tmp\ 12910}#
                                                      (apply (lambda ()
                                                               (list '#(syntax-object
                                                                        let
                                                                        ((top)
                                                                         #(ribcage
                                                                           #(step)
                                                                           #((top))
                                                                           #("i12907"))
                                                                         #(ribcage
                                                                           #(_
                                                                             var
                                                                             init
                                                                             step
                                                                             e0
                                                                             e1
                                                                             c)
                                                                           #((top)
                                                                             (top)
                                                                             (top)
                                                                             (top)
                                                                             (top)
                                                                             (top)
                                                                             (top))
                                                                           #("i12890"
                                                                             "i12891"
                                                                             "i12892"
                                                                             "i12893"
                                                                             "i12894"
                                                                             "i12895"
                                                                             "i12896"))
                                                                         #(ribcage
                                                                           ()
                                                                           ()
                                                                           ())
                                                                         #(ribcage
                                                                           #(orig-x)
                                                                           #((top))
                                                                           #("i12887")))
                                                                        (hygiene
                                                                          guile))
                                                                     '#(syntax-object
                                                                        doloop
                                                                        ((top)
                                                                         #(ribcage
                                                                           #(step)
                                                                           #((top))
                                                                           #("i12907"))
                                                                         #(ribcage
                                                                           #(_
                                                                             var
                                                                             init
                                                                             step
                                                                             e0
                                                                             e1
                                                                             c)
                                                                           #((top)
                                                                             (top)
                                                                             (top)
                                                                             (top)
                                                                             (top)
                                                                             (top)
                                                                             (top))
                                                                           #("i12890"
                                                                             "i12891"
                                                                             "i12892"
                                                                             "i12893"
                                                                             "i12894"
                                                                             "i12895"
                                                                             "i12896"))
                                                                         #(ribcage
                                                                           ()
                                                                           ()
                                                                           ())
                                                                         #(ribcage
                                                                           #(orig-x)
                                                                           #((top))
                                                                           #("i12887")))
                                                                        (hygiene
                                                                          guile))
                                                                     (map list
                                                                          #{var\ 12898}#
                                                                          #{init\ 12899}#)
                                                                     (list '#(syntax-object
                                                                              if
                                                                              ((top)
                                                                               #(ribcage
                                                                                 #(step)
                                                                                 #((top))
                                                                                 #("i12907"))
                                                                               #(ribcage
                                                                                 #(_
                                                                                   var
                                                                                   init
                                                                                   step
                                                                                   e0
                                                                                   e1
                                                                                   c)
                                                                                 #((top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top))
                                                                                 #("i12890"
                                                                                   "i12891"
                                                                                   "i12892"
                                                                                   "i12893"
                                                                                   "i12894"
                                                                                   "i12895"
                                                                                   "i12896"))
                                                                               #(ribcage
                                                                                 ()
                                                                                 ()
                                                                                 ())
                                                                               #(ribcage
                                                                                 #(orig-x)
                                                                                 #((top))
                                                                                 #("i12887")))
                                                                              (hygiene
                                                                                guile))
                                                                           (list '#(syntax-object
                                                                                    not
                                                                                    ((top)
                                                                                     #(ribcage
                                                                                       #(step)
                                                                                       #((top))
                                                                                       #("i12907"))
                                                                                     #(ribcage
                                                                                       #(_
                                                                                         var
                                                                                         init
                                                                                         step
                                                                                         e0
                                                                                         e1
                                                                                         c)
                                                                                       #((top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top))
                                                                                       #("i12890"
                                                                                         "i12891"
                                                                                         "i12892"
                                                                                         "i12893"
                                                                                         "i12894"
                                                                                         "i12895"
                                                                                         "i12896"))
                                                                                     #(ribcage
                                                                                       ()
                                                                                       ()
                                                                                       ())
                                                                                     #(ribcage
                                                                                       #(orig-x)
                                                                                       #((top))
                                                                                       #("i12887")))
                                                                                    (hygiene
                                                                                      guile))
                                                                                 #{e0\ 12901}#)
                                                                           (cons '#(syntax-object
                                                                                    begin
                                                                                    ((top)
                                                                                     #(ribcage
                                                                                       #(step)
                                                                                       #((top))
                                                                                       #("i12907"))
                                                                                     #(ribcage
                                                                                       #(_
                                                                                         var
                                                                                         init
                                                                                         step
                                                                                         e0
                                                                                         e1
                                                                                         c)
                                                                                       #((top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top))
                                                                                       #("i12890"
                                                                                         "i12891"
                                                                                         "i12892"
                                                                                         "i12893"
                                                                                         "i12894"
                                                                                         "i12895"
                                                                                         "i12896"))
                                                                                     #(ribcage
                                                                                       ()
                                                                                       ()
                                                                                       ())
                                                                                     #(ribcage
                                                                                       #(orig-x)
                                                                                       #((top))
                                                                                       #("i12887")))
                                                                                    (hygiene
                                                                                      guile))
                                                                                 (append
                                                                                   #{c\ 12903}#
                                                                                   (list (cons '#(syntax-object
                                                                                                  doloop
                                                                                                  ((top)
                                                                                                   #(ribcage
                                                                                                     #(step)
                                                                                                     #((top))
                                                                                                     #("i12907"))
                                                                                                   #(ribcage
                                                                                                     #(_
                                                                                                       var
                                                                                                       init
                                                                                                       step
                                                                                                       e0
                                                                                                       e1
                                                                                                       c)
                                                                                                     #((top)
                                                                                                       (top)
                                                                                                       (top)
                                                                                                       (top)
                                                                                                       (top)
                                                                                                       (top)
                                                                                                       (top))
                                                                                                     #("i12890"
                                                                                                       "i12891"
                                                                                                       "i12892"
                                                                                                       "i12893"
                                                                                                       "i12894"
                                                                                                       "i12895"
                                                                                                       "i12896"))
                                                                                                   #(ribcage
                                                                                                     ()
                                                                                                     ()
                                                                                                     ())
                                                                                                   #(ribcage
                                                                                                     #(orig-x)
                                                                                                     #((top))
                                                                                                     #("i12887")))
                                                                                                  (hygiene
                                                                                                    guile))
                                                                                               #{step\ 12908}#)))))))
                                                             #{tmp\ 12910}#)
                                                      ((lambda (#{tmp\ 12915}#)
                                                         (if #{tmp\ 12915}#
                                                           (apply (lambda (#{e1\ 12918}#
                                                                           #{e2\ 12919}#)
                                                                    (list '#(syntax-object
                                                                             let
                                                                             ((top)
                                                                              #(ribcage
                                                                                #(e1
                                                                                  e2)
                                                                                #((top)
                                                                                  (top))
                                                                                #("i12916"
                                                                                  "i12917"))
                                                                              #(ribcage
                                                                                #(step)
                                                                                #((top))
                                                                                #("i12907"))
                                                                              #(ribcage
                                                                                #(_
                                                                                  var
                                                                                  init
                                                                                  step
                                                                                  e0
                                                                                  e1
                                                                                  c)
                                                                                #((top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top))
                                                                                #("i12890"
                                                                                  "i12891"
                                                                                  "i12892"
                                                                                  "i12893"
                                                                                  "i12894"
                                                                                  "i12895"
                                                                                  "i12896"))
                                                                              #(ribcage
                                                                                ()
                                                                                ()
                                                                                ())
                                                                              #(ribcage
                                                                                #(orig-x)
                                                                                #((top))
                                                                                #("i12887")))
                                                                             (hygiene
                                                                               guile))
                                                                          '#(syntax-object
                                                                             doloop
                                                                             ((top)
                                                                              #(ribcage
                                                                                #(e1
                                                                                  e2)
                                                                                #((top)
                                                                                  (top))
                                                                                #("i12916"
                                                                                  "i12917"))
                                                                              #(ribcage
                                                                                #(step)
                                                                                #((top))
                                                                                #("i12907"))
                                                                              #(ribcage
                                                                                #(_
                                                                                  var
                                                                                  init
                                                                                  step
                                                                                  e0
                                                                                  e1
                                                                                  c)
                                                                                #((top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top))
                                                                                #("i12890"
                                                                                  "i12891"
                                                                                  "i12892"
                                                                                  "i12893"
                                                                                  "i12894"
                                                                                  "i12895"
                                                                                  "i12896"))
                                                                              #(ribcage
                                                                                ()
                                                                                ()
                                                                                ())
                                                                              #(ribcage
                                                                                #(orig-x)
                                                                                #((top))
                                                                                #("i12887")))
                                                                             (hygiene
                                                                               guile))
                                                                          (map list
                                                                               #{var\ 12898}#
                                                                               #{init\ 12899}#)
                                                                          (list '#(syntax-object
                                                                                   if
                                                                                   ((top)
                                                                                    #(ribcage
                                                                                      #(e1
                                                                                        e2)
                                                                                      #((top)
                                                                                        (top))
                                                                                      #("i12916"
                                                                                        "i12917"))
                                                                                    #(ribcage
                                                                                      #(step)
                                                                                      #((top))
                                                                                      #("i12907"))
                                                                                    #(ribcage
                                                                                      #(_
                                                                                        var
                                                                                        init
                                                                                        step
                                                                                        e0
                                                                                        e1
                                                                                        c)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i12890"
                                                                                        "i12891"
                                                                                        "i12892"
                                                                                        "i12893"
                                                                                        "i12894"
                                                                                        "i12895"
                                                                                        "i12896"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(orig-x)
                                                                                      #((top))
                                                                                      #("i12887")))
                                                                                   (hygiene
                                                                                     guile))
                                                                                #{e0\ 12901}#
                                                                                (cons '#(syntax-object
                                                                                         begin
                                                                                         ((top)
                                                                                          #(ribcage
                                                                                            #(e1
                                                                                              e2)
                                                                                            #((top)
                                                                                              (top))
                                                                                            #("i12916"
                                                                                              "i12917"))
                                                                                          #(ribcage
                                                                                            #(step)
                                                                                            #((top))
                                                                                            #("i12907"))
                                                                                          #(ribcage
                                                                                            #(_
                                                                                              var
                                                                                              init
                                                                                              step
                                                                                              e0
                                                                                              e1
                                                                                              c)
                                                                                            #((top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top))
                                                                                            #("i12890"
                                                                                              "i12891"
                                                                                              "i12892"
                                                                                              "i12893"
                                                                                              "i12894"
                                                                                              "i12895"
                                                                                              "i12896"))
                                                                                          #(ribcage
                                                                                            ()
                                                                                            ()
                                                                                            ())
                                                                                          #(ribcage
                                                                                            #(orig-x)
                                                                                            #((top))
                                                                                            #("i12887")))
                                                                                         (hygiene
                                                                                           guile))
                                                                                      (cons #{e1\ 12918}#
                                                                                            #{e2\ 12919}#))
                                                                                (cons '#(syntax-object
                                                                                         begin
                                                                                         ((top)
                                                                                          #(ribcage
                                                                                            #(e1
                                                                                              e2)
                                                                                            #((top)
                                                                                              (top))
                                                                                            #("i12916"
                                                                                              "i12917"))
                                                                                          #(ribcage
                                                                                            #(step)
                                                                                            #((top))
                                                                                            #("i12907"))
                                                                                          #(ribcage
                                                                                            #(_
                                                                                              var
                                                                                              init
                                                                                              step
                                                                                              e0
                                                                                              e1
                                                                                              c)
                                                                                            #((top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top))
                                                                                            #("i12890"
                                                                                              "i12891"
                                                                                              "i12892"
                                                                                              "i12893"
                                                                                              "i12894"
                                                                                              "i12895"
                                                                                              "i12896"))
                                                                                          #(ribcage
                                                                                            ()
                                                                                            ()
                                                                                            ())
                                                                                          #(ribcage
                                                                                            #(orig-x)
                                                                                            #((top))
                                                                                            #("i12887")))
                                                                                         (hygiene
                                                                                           guile))
                                                                                      (append
                                                                                        #{c\ 12903}#
                                                                                        (list (cons '#(syntax-object
                                                                                                       doloop
                                                                                                       ((top)
                                                                                                        #(ribcage
                                                                                                          #(e1
                                                                                                            e2)
                                                                                                          #((top)
                                                                                                            (top))
                                                                                                          #("i12916"
                                                                                                            "i12917"))
                                                                                                        #(ribcage
                                                                                                          #(step)
                                                                                                          #((top))
                                                                                                          #("i12907"))
                                                                                                        #(ribcage
                                                                                                          #(_
                                                                                                            var
                                                                                                            init
                                                                                                            step
                                                                                                            e0
                                                                                                            e1
                                                                                                            c)
                                                                                                          #((top)
                                                                                                            (top)
                                                                                                            (top)
                                                                                                            (top)
                                                                                                            (top)
                                                                                                            (top)
                                                                                                            (top))
                                                                                                          #("i12890"
                                                                                                            "i12891"
                                                                                                            "i12892"
                                                                                                            "i12893"
                                                                                                            "i12894"
                                                                                                            "i12895"
                                                                                                            "i12896"))
                                                                                                        #(ribcage
                                                                                                          ()
                                                                                                          ()
                                                                                                          ())
                                                                                                        #(ribcage
                                                                                                          #(orig-x)
                                                                                                          #((top))
                                                                                                          #("i12887")))
                                                                                                       (hygiene
                                                                                                         guile))
                                                                                                    #{step\ 12908}#)))))))
                                                                  #{tmp\ 12915}#)
                                                           (syntax-violation
                                                             #f
                                                             "source expression failed to match any pattern"
                                                             #{tmp\ 12909}#)))
                                                       ($sc-dispatch
                                                         #{tmp\ 12909}#
                                                         '(any . each-any)))))
                                                  ($sc-dispatch
                                                    #{tmp\ 12909}#
                                                    '())))
                                               #{e1\ 12902}#))
                                            #{tmp\ 12906}#)
                                     (syntax-violation
                                       #f
                                       "source expression failed to match any pattern"
                                       #{tmp\ 12905}#)))
                                 ($sc-dispatch
                                   #{tmp\ 12905}#
                                   'each-any)))
                              (map (lambda (#{v\ 12926}# #{s\ 12927}#)
                                     ((lambda (#{tmp\ 12930}#)
                                        ((lambda (#{tmp\ 12931}#)
                                           (if #{tmp\ 12931}#
                                             (apply (lambda () #{v\ 12926}#)
                                                    #{tmp\ 12931}#)
                                             ((lambda (#{tmp\ 12932}#)
                                                (if #{tmp\ 12932}#
                                                  (apply (lambda (#{e\ 12934}#)
                                                           #{e\ 12934}#)
                                                         #{tmp\ 12932}#)
                                                  ((lambda (#{_\ 12936}#)
                                                     (syntax-violation
                                                       'do
                                                       "bad step expression"
                                                       #{orig-x\ 12886}#
                                                       #{s\ 12927}#))
                                                   #{tmp\ 12930}#)))
                                              ($sc-dispatch
                                                #{tmp\ 12930}#
                                                '(any)))))
                                         ($sc-dispatch
                                           #{tmp\ 12930}#
                                           '())))
                                      #{s\ 12927}#))
                                   #{var\ 12898}#
                                   #{step\ 12900}#)))
                           #{tmp\ 12889}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 12888}#)))
                ($sc-dispatch
                  #{tmp\ 12888}#
                  '(any #(each (any any . any))
                        (any . each-any)
                        .
                        each-any))))
             #{orig-x\ 12886}#))
          (module-name (current-module)))))

(define quasiquote
  (make-syntax-transformer
    'quasiquote
    'macro
    (cons (letrec ((#{quasicons\ 12943}#
                     (lambda (#{x\ 12947}# #{y\ 12948}#)
                       ((lambda (#{tmp\ 12952}#)
                          ((lambda (#{tmp\ 12953}#)
                             (if #{tmp\ 12953}#
                               (apply (lambda (#{x\ 12956}# #{y\ 12957}#)
                                        ((lambda (#{tmp\ 12958}#)
                                           ((lambda (#{tmp\ 12959}#)
                                              (if #{tmp\ 12959}#
                                                (apply (lambda (#{dy\ 12961}#)
                                                         ((lambda (#{tmp\ 12962}#)
                                                            ((lambda (#{tmp\ 12963}#)
                                                               (if #{tmp\ 12963}#
                                                                 (apply (lambda (#{dx\ 12965}#)
                                                                          (list '#(syntax-object
                                                                                   quote
                                                                                   ((top)
                                                                                    #(ribcage
                                                                                      #(dx)
                                                                                      #((top))
                                                                                      #("i12964"))
                                                                                    #(ribcage
                                                                                      #(dy)
                                                                                      #((top))
                                                                                      #("i12960"))
                                                                                    #(ribcage
                                                                                      #(x
                                                                                        y)
                                                                                      #((top)
                                                                                        (top))
                                                                                      #("i12954"
                                                                                        "i12955"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(x
                                                                                        y)
                                                                                      #((top)
                                                                                        (top))
                                                                                      #("i12949"
                                                                                        "i12950"))
                                                                                    #(ribcage
                                                                                      #(quasicons
                                                                                        quasiappend
                                                                                        quasivector
                                                                                        quasi)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i12939"
                                                                                        "i12940"
                                                                                        "i12941"
                                                                                        "i12942")))
                                                                                   (hygiene
                                                                                     guile))
                                                                                (cons #{dx\ 12965}#
                                                                                      #{dy\ 12961}#)))
                                                                        #{tmp\ 12963}#)
                                                                 ((lambda (#{_\ 12967}#)
                                                                    (if (null? #{dy\ 12961}#)
                                                                      (list '#(syntax-object
                                                                               list
                                                                               ((top)
                                                                                #(ribcage
                                                                                  #(_)
                                                                                  #((top))
                                                                                  #("i12966"))
                                                                                #(ribcage
                                                                                  #(dy)
                                                                                  #((top))
                                                                                  #("i12960"))
                                                                                #(ribcage
                                                                                  #(x
                                                                                    y)
                                                                                  #((top)
                                                                                    (top))
                                                                                  #("i12954"
                                                                                    "i12955"))
                                                                                #(ribcage
                                                                                  ()
                                                                                  ()
                                                                                  ())
                                                                                #(ribcage
                                                                                  ()
                                                                                  ()
                                                                                  ())
                                                                                #(ribcage
                                                                                  #(x
                                                                                    y)
                                                                                  #((top)
                                                                                    (top))
                                                                                  #("i12949"
                                                                                    "i12950"))
                                                                                #(ribcage
                                                                                  #(quasicons
                                                                                    quasiappend
                                                                                    quasivector
                                                                                    quasi)
                                                                                  #((top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top))
                                                                                  #("i12939"
                                                                                    "i12940"
                                                                                    "i12941"
                                                                                    "i12942")))
                                                                               (hygiene
                                                                                 guile))
                                                                            #{x\ 12956}#)
                                                                      (list '#(syntax-object
                                                                               cons
                                                                               ((top)
                                                                                #(ribcage
                                                                                  #(_)
                                                                                  #((top))
                                                                                  #("i12966"))
                                                                                #(ribcage
                                                                                  #(dy)
                                                                                  #((top))
                                                                                  #("i12960"))
                                                                                #(ribcage
                                                                                  #(x
                                                                                    y)
                                                                                  #((top)
                                                                                    (top))
                                                                                  #("i12954"
                                                                                    "i12955"))
                                                                                #(ribcage
                                                                                  ()
                                                                                  ()
                                                                                  ())
                                                                                #(ribcage
                                                                                  ()
                                                                                  ()
                                                                                  ())
                                                                                #(ribcage
                                                                                  #(x
                                                                                    y)
                                                                                  #((top)
                                                                                    (top))
                                                                                  #("i12949"
                                                                                    "i12950"))
                                                                                #(ribcage
                                                                                  #(quasicons
                                                                                    quasiappend
                                                                                    quasivector
                                                                                    quasi)
                                                                                  #((top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top))
                                                                                  #("i12939"
                                                                                    "i12940"
                                                                                    "i12941"
                                                                                    "i12942")))
                                                                               (hygiene
                                                                                 guile))
                                                                            #{x\ 12956}#
                                                                            #{y\ 12957}#)))
                                                                  #{tmp\ 12962}#)))
                                                             ($sc-dispatch
                                                               #{tmp\ 12962}#
                                                               '(#(free-id
                                                                   #(syntax-object
                                                                     quote
                                                                     ((top)
                                                                      #(ribcage
                                                                        #(dy)
                                                                        #((top))
                                                                        #("i12960"))
                                                                      #(ribcage
                                                                        #(x y)
                                                                        #((top)
                                                                          (top))
                                                                        #("i12954"
                                                                          "i12955"))
                                                                      #(ribcage
                                                                        ()
                                                                        ()
                                                                        ())
                                                                      #(ribcage
                                                                        ()
                                                                        ()
                                                                        ())
                                                                      #(ribcage
                                                                        #(x y)
                                                                        #((top)
                                                                          (top))
                                                                        #("i12949"
                                                                          "i12950"))
                                                                      #(ribcage
                                                                        #(quasicons
                                                                          quasiappend
                                                                          quasivector
                                                                          quasi)
                                                                        #((top)
                                                                          (top)
                                                                          (top)
                                                                          (top))
                                                                        #("i12939"
                                                                          "i12940"
                                                                          "i12941"
                                                                          "i12942")))
                                                                     (hygiene
                                                                       guile)))
                                                                 any))))
                                                          #{x\ 12956}#))
                                                       #{tmp\ 12959}#)
                                                ((lambda (#{tmp\ 12968}#)
                                                   (if #{tmp\ 12968}#
                                                     (apply (lambda (#{stuff\ 12970}#)
                                                              (cons '#(syntax-object
                                                                       list
                                                                       ((top)
                                                                        #(ribcage
                                                                          #(stuff)
                                                                          #((top))
                                                                          #("i12969"))
                                                                        #(ribcage
                                                                          #(x
                                                                            y)
                                                                          #((top)
                                                                            (top))
                                                                          #("i12954"
                                                                            "i12955"))
                                                                        #(ribcage
                                                                          ()
                                                                          ()
                                                                          ())
                                                                        #(ribcage
                                                                          ()
                                                                          ()
                                                                          ())
                                                                        #(ribcage
                                                                          #(x
                                                                            y)
                                                                          #((top)
                                                                            (top))
                                                                          #("i12949"
                                                                            "i12950"))
                                                                        #(ribcage
                                                                          #(quasicons
                                                                            quasiappend
                                                                            quasivector
                                                                            quasi)
                                                                          #((top)
                                                                            (top)
                                                                            (top)
                                                                            (top))
                                                                          #("i12939"
                                                                            "i12940"
                                                                            "i12941"
                                                                            "i12942")))
                                                                       (hygiene
                                                                         guile))
                                                                    (cons #{x\ 12956}#
                                                                          #{stuff\ 12970}#)))
                                                            #{tmp\ 12968}#)
                                                     ((lambda (#{else\ 12972}#)
                                                        (list '#(syntax-object
                                                                 cons
                                                                 ((top)
                                                                  #(ribcage
                                                                    #(else)
                                                                    #((top))
                                                                    #("i12971"))
                                                                  #(ribcage
                                                                    #(x y)
                                                                    #((top)
                                                                      (top))
                                                                    #("i12954"
                                                                      "i12955"))
                                                                  #(ribcage
                                                                    ()
                                                                    ()
                                                                    ())
                                                                  #(ribcage
                                                                    ()
                                                                    ()
                                                                    ())
                                                                  #(ribcage
                                                                    #(x y)
                                                                    #((top)
                                                                      (top))
                                                                    #("i12949"
                                                                      "i12950"))
                                                                  #(ribcage
                                                                    #(quasicons
                                                                      quasiappend
                                                                      quasivector
                                                                      quasi)
                                                                    #((top)
                                                                      (top)
                                                                      (top)
                                                                      (top))
                                                                    #("i12939"
                                                                      "i12940"
                                                                      "i12941"
                                                                      "i12942")))
                                                                 (hygiene
                                                                   guile))
                                                              #{x\ 12956}#
                                                              #{y\ 12957}#))
                                                      #{tmp\ 12958}#)))
                                                 ($sc-dispatch
                                                   #{tmp\ 12958}#
                                                   '(#(free-id
                                                       #(syntax-object
                                                         list
                                                         ((top)
                                                          #(ribcage
                                                            #(x y)
                                                            #((top) (top))
                                                            #("i12954"
                                                              "i12955"))
                                                          #(ribcage () () ())
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(x y)
                                                            #((top) (top))
                                                            #("i12949"
                                                              "i12950"))
                                                          #(ribcage
                                                            #(quasicons
                                                              quasiappend
                                                              quasivector
                                                              quasi)
                                                            #((top)
                                                              (top)
                                                              (top)
                                                              (top))
                                                            #("i12939"
                                                              "i12940"
                                                              "i12941"
                                                              "i12942")))
                                                         (hygiene guile)))
                                                     .
                                                     any)))))
                                            ($sc-dispatch
                                              #{tmp\ 12958}#
                                              '(#(free-id
                                                  #(syntax-object
                                                    quote
                                                    ((top)
                                                     #(ribcage
                                                       #(x y)
                                                       #((top) (top))
                                                       #("i12954" "i12955"))
                                                     #(ribcage () () ())
                                                     #(ribcage () () ())
                                                     #(ribcage
                                                       #(x y)
                                                       #((top) (top))
                                                       #("i12949" "i12950"))
                                                     #(ribcage
                                                       #(quasicons
                                                         quasiappend
                                                         quasivector
                                                         quasi)
                                                       #((top)
                                                         (top)
                                                         (top)
                                                         (top))
                                                       #("i12939"
                                                         "i12940"
                                                         "i12941"
                                                         "i12942")))
                                                    (hygiene guile)))
                                                any))))
                                         #{y\ 12957}#))
                                      #{tmp\ 12953}#)
                               (syntax-violation
                                 #f
                                 "source expression failed to match any pattern"
                                 #{tmp\ 12952}#)))
                           ($sc-dispatch #{tmp\ 12952}# (quote (any any)))))
                        (list #{x\ 12947}# #{y\ 12948}#))))
                   (#{quasiappend\ 12944}#
                     (lambda (#{x\ 12973}# #{y\ 12974}#)
                       ((lambda (#{tmp\ 12978}#)
                          ((lambda (#{tmp\ 12979}#)
                             (if #{tmp\ 12979}#
                               (apply (lambda (#{x\ 12982}# #{y\ 12983}#)
                                        ((lambda (#{tmp\ 12984}#)
                                           ((lambda (#{tmp\ 12985}#)
                                              (if #{tmp\ 12985}#
                                                (apply (lambda () #{x\ 12982}#)
                                                       #{tmp\ 12985}#)
                                                ((lambda (#{_\ 12987}#)
                                                   (list '#(syntax-object
                                                            append
                                                            ((top)
                                                             #(ribcage
                                                               #(_)
                                                               #((top))
                                                               #("i12986"))
                                                             #(ribcage
                                                               #(x y)
                                                               #((top) (top))
                                                               #("i12980"
                                                                 "i12981"))
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               #(x y)
                                                               #((top) (top))
                                                               #("i12975"
                                                                 "i12976"))
                                                             #(ribcage
                                                               #(quasicons
                                                                 quasiappend
                                                                 quasivector
                                                                 quasi)
                                                               #((top)
                                                                 (top)
                                                                 (top)
                                                                 (top))
                                                               #("i12939"
                                                                 "i12940"
                                                                 "i12941"
                                                                 "i12942")))
                                                            (hygiene guile))
                                                         #{x\ 12982}#
                                                         #{y\ 12983}#))
                                                 #{tmp\ 12984}#)))
                                            ($sc-dispatch
                                              #{tmp\ 12984}#
                                              '(#(free-id
                                                  #(syntax-object
                                                    quote
                                                    ((top)
                                                     #(ribcage
                                                       #(x y)
                                                       #((top) (top))
                                                       #("i12980" "i12981"))
                                                     #(ribcage () () ())
                                                     #(ribcage () () ())
                                                     #(ribcage
                                                       #(x y)
                                                       #((top) (top))
                                                       #("i12975" "i12976"))
                                                     #(ribcage
                                                       #(quasicons
                                                         quasiappend
                                                         quasivector
                                                         quasi)
                                                       #((top)
                                                         (top)
                                                         (top)
                                                         (top))
                                                       #("i12939"
                                                         "i12940"
                                                         "i12941"
                                                         "i12942")))
                                                    (hygiene guile)))
                                                ()))))
                                         #{y\ 12983}#))
                                      #{tmp\ 12979}#)
                               (syntax-violation
                                 #f
                                 "source expression failed to match any pattern"
                                 #{tmp\ 12978}#)))
                           ($sc-dispatch #{tmp\ 12978}# (quote (any any)))))
                        (list #{x\ 12973}# #{y\ 12974}#))))
                   (#{quasivector\ 12945}#
                     (lambda (#{x\ 12988}#)
                       ((lambda (#{tmp\ 12991}#)
                          ((lambda (#{x\ 12993}#)
                             ((lambda (#{tmp\ 12994}#)
                                ((lambda (#{tmp\ 12995}#)
                                   (if #{tmp\ 12995}#
                                     (apply (lambda (#{x\ 12997}#)
                                              (list '#(syntax-object
                                                       quote
                                                       ((top)
                                                        #(ribcage
                                                          #(x)
                                                          #((top))
                                                          #("i12996"))
                                                        #(ribcage
                                                          #(x)
                                                          #((top))
                                                          #("i12992"))
                                                        #(ribcage () () ())
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(x)
                                                          #((top))
                                                          #("i12989"))
                                                        #(ribcage
                                                          #(quasicons
                                                            quasiappend
                                                            quasivector
                                                            quasi)
                                                          #((top)
                                                            (top)
                                                            (top)
                                                            (top))
                                                          #("i12939"
                                                            "i12940"
                                                            "i12941"
                                                            "i12942")))
                                                       (hygiene guile))
                                                    (list->vector
                                                      #{x\ 12997}#)))
                                            #{tmp\ 12995}#)
                                     ((lambda (#{tmp\ 12999}#)
                                        (if #{tmp\ 12999}#
                                          (apply (lambda (#{x\ 13001}#)
                                                   (cons '#(syntax-object
                                                            vector
                                                            ((top)
                                                             #(ribcage
                                                               #(x)
                                                               #((top))
                                                               #("i13000"))
                                                             #(ribcage
                                                               #(x)
                                                               #((top))
                                                               #("i12992"))
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               #(x)
                                                               #((top))
                                                               #("i12989"))
                                                             #(ribcage
                                                               #(quasicons
                                                                 quasiappend
                                                                 quasivector
                                                                 quasi)
                                                               #((top)
                                                                 (top)
                                                                 (top)
                                                                 (top))
                                                               #("i12939"
                                                                 "i12940"
                                                                 "i12941"
                                                                 "i12942")))
                                                            (hygiene guile))
                                                         #{x\ 13001}#))
                                                 #{tmp\ 12999}#)
                                          ((lambda (#{_\ 13004}#)
                                             (list '#(syntax-object
                                                      list->vector
                                                      ((top)
                                                       #(ribcage
                                                         #(_)
                                                         #((top))
                                                         #("i13003"))
                                                       #(ribcage
                                                         #(x)
                                                         #((top))
                                                         #("i12992"))
                                                       #(ribcage () () ())
                                                       #(ribcage () () ())
                                                       #(ribcage
                                                         #(x)
                                                         #((top))
                                                         #("i12989"))
                                                       #(ribcage
                                                         #(quasicons
                                                           quasiappend
                                                           quasivector
                                                           quasi)
                                                         #((top)
                                                           (top)
                                                           (top)
                                                           (top))
                                                         #("i12939"
                                                           "i12940"
                                                           "i12941"
                                                           "i12942")))
                                                      (hygiene guile))
                                                   #{x\ 12993}#))
                                           #{tmp\ 12994}#)))
                                      ($sc-dispatch
                                        #{tmp\ 12994}#
                                        '(#(free-id
                                            #(syntax-object
                                              list
                                              ((top)
                                               #(ribcage
                                                 #(x)
                                                 #((top))
                                                 #("i12992"))
                                               #(ribcage () () ())
                                               #(ribcage () () ())
                                               #(ribcage
                                                 #(x)
                                                 #((top))
                                                 #("i12989"))
                                               #(ribcage
                                                 #(quasicons
                                                   quasiappend
                                                   quasivector
                                                   quasi)
                                                 #((top) (top) (top) (top))
                                                 #("i12939"
                                                   "i12940"
                                                   "i12941"
                                                   "i12942")))
                                              (hygiene guile)))
                                          .
                                          each-any)))))
                                 ($sc-dispatch
                                   #{tmp\ 12994}#
                                   '(#(free-id
                                       #(syntax-object
                                         quote
                                         ((top)
                                          #(ribcage #(x) #((top)) #("i12992"))
                                          #(ribcage () () ())
                                          #(ribcage () () ())
                                          #(ribcage #(x) #((top)) #("i12989"))
                                          #(ribcage
                                            #(quasicons
                                              quasiappend
                                              quasivector
                                              quasi)
                                            #((top) (top) (top) (top))
                                            #("i12939"
                                              "i12940"
                                              "i12941"
                                              "i12942")))
                                         (hygiene guile)))
                                     each-any))))
                              #{x\ 12993}#))
                           #{tmp\ 12991}#))
                        #{x\ 12988}#)))
                   (#{quasi\ 12946}#
                     (lambda (#{p\ 13005}# #{lev\ 13006}#)
                       ((lambda (#{tmp\ 13009}#)
                          ((lambda (#{tmp\ 13010}#)
                             (if #{tmp\ 13010}#
                               (apply (lambda (#{p\ 13012}#)
                                        (if (= #{lev\ 13006}# 0)
                                          #{p\ 13012}#
                                          (#{quasicons\ 12943}#
                                            '(#(syntax-object
                                                quote
                                                ((top)
                                                 #(ribcage
                                                   #(p)
                                                   #((top))
                                                   #("i13011"))
                                                 #(ribcage () () ())
                                                 #(ribcage
                                                   #(p lev)
                                                   #((top) (top))
                                                   #("i13007" "i13008"))
                                                 #(ribcage
                                                   #(quasicons
                                                     quasiappend
                                                     quasivector
                                                     quasi)
                                                   #((top) (top) (top) (top))
                                                   #("i12939"
                                                     "i12940"
                                                     "i12941"
                                                     "i12942")))
                                                (hygiene guile))
                                              #(syntax-object
                                                unquote
                                                ((top)
                                                 #(ribcage
                                                   #(p)
                                                   #((top))
                                                   #("i13011"))
                                                 #(ribcage () () ())
                                                 #(ribcage
                                                   #(p lev)
                                                   #((top) (top))
                                                   #("i13007" "i13008"))
                                                 #(ribcage
                                                   #(quasicons
                                                     quasiappend
                                                     quasivector
                                                     quasi)
                                                   #((top) (top) (top) (top))
                                                   #("i12939"
                                                     "i12940"
                                                     "i12941"
                                                     "i12942")))
                                                (hygiene guile)))
                                            (#{quasi\ 12946}#
                                              (list #{p\ 13012}#)
                                              (- #{lev\ 13006}# 1)))))
                                      #{tmp\ 13010}#)
                               ((lambda (#{tmp\ 13013}#)
                                  (if (if #{tmp\ 13013}#
                                        (apply (lambda (#{args\ 13015}#)
                                                 (= #{lev\ 13006}# 0))
                                               #{tmp\ 13013}#)
                                        #f)
                                    (apply (lambda (#{args\ 13017}#)
                                             (syntax-violation
                                               'unquote
                                               "unquote takes exactly one argument"
                                               #{p\ 13005}#
                                               (cons '#(syntax-object
                                                        unquote
                                                        ((top)
                                                         #(ribcage
                                                           #(args)
                                                           #((top))
                                                           #("i13016"))
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(p lev)
                                                           #((top) (top))
                                                           #("i13007"
                                                             "i13008"))
                                                         #(ribcage
                                                           #(quasicons
                                                             quasiappend
                                                             quasivector
                                                             quasi)
                                                           #((top)
                                                             (top)
                                                             (top)
                                                             (top))
                                                           #("i12939"
                                                             "i12940"
                                                             "i12941"
                                                             "i12942")))
                                                        (hygiene guile))
                                                     #{args\ 13017}#)))
                                           #{tmp\ 13013}#)
                                    ((lambda (#{tmp\ 13018}#)
                                       (if #{tmp\ 13018}#
                                         (apply (lambda (#{p\ 13021}#
                                                         #{q\ 13022}#)
                                                  (if (= #{lev\ 13006}# 0)
                                                    (#{quasiappend\ 12944}#
                                                      #{p\ 13021}#
                                                      (#{quasi\ 12946}#
                                                        #{q\ 13022}#
                                                        #{lev\ 13006}#))
                                                    (#{quasicons\ 12943}#
                                                      (#{quasicons\ 12943}#
                                                        '(#(syntax-object
                                                            quote
                                                            ((top)
                                                             #(ribcage
                                                               #(p q)
                                                               #((top) (top))
                                                               #("i13019"
                                                                 "i13020"))
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               #(p lev)
                                                               #((top) (top))
                                                               #("i13007"
                                                                 "i13008"))
                                                             #(ribcage
                                                               #(quasicons
                                                                 quasiappend
                                                                 quasivector
                                                                 quasi)
                                                               #((top)
                                                                 (top)
                                                                 (top)
                                                                 (top))
                                                               #("i12939"
                                                                 "i12940"
                                                                 "i12941"
                                                                 "i12942")))
                                                            (hygiene guile))
                                                          #(syntax-object
                                                            unquote-splicing
                                                            ((top)
                                                             #(ribcage
                                                               #(p q)
                                                               #((top) (top))
                                                               #("i13019"
                                                                 "i13020"))
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               #(p lev)
                                                               #((top) (top))
                                                               #("i13007"
                                                                 "i13008"))
                                                             #(ribcage
                                                               #(quasicons
                                                                 quasiappend
                                                                 quasivector
                                                                 quasi)
                                                               #((top)
                                                                 (top)
                                                                 (top)
                                                                 (top))
                                                               #("i12939"
                                                                 "i12940"
                                                                 "i12941"
                                                                 "i12942")))
                                                            (hygiene guile)))
                                                        (#{quasi\ 12946}#
                                                          (list #{p\ 13021}#)
                                                          (- #{lev\ 13006}#
                                                             1)))
                                                      (#{quasi\ 12946}#
                                                        #{q\ 13022}#
                                                        #{lev\ 13006}#))))
                                                #{tmp\ 13018}#)
                                         ((lambda (#{tmp\ 13023}#)
                                            (if (if #{tmp\ 13023}#
                                                  (apply (lambda (#{args\ 13026}#
                                                                  #{q\ 13027}#)
                                                           (= #{lev\ 13006}#
                                                              0))
                                                         #{tmp\ 13023}#)
                                                  #f)
                                              (apply (lambda (#{args\ 13030}#
                                                              #{q\ 13031}#)
                                                       (syntax-violation
                                                         'unquote-splicing
                                                         "unquote-splicing takes exactly one argument"
                                                         #{p\ 13005}#
                                                         (cons '#(syntax-object
                                                                  unquote-splicing
                                                                  ((top)
                                                                   #(ribcage
                                                                     #(args q)
                                                                     #((top)
                                                                       (top))
                                                                     #("i13028"
                                                                       "i13029"))
                                                                   #(ribcage
                                                                     ()
                                                                     ()
                                                                     ())
                                                                   #(ribcage
                                                                     #(p lev)
                                                                     #((top)
                                                                       (top))
                                                                     #("i13007"
                                                                       "i13008"))
                                                                   #(ribcage
                                                                     #(quasicons
                                                                       quasiappend
                                                                       quasivector
                                                                       quasi)
                                                                     #((top)
                                                                       (top)
                                                                       (top)
                                                                       (top))
                                                                     #("i12939"
                                                                       "i12940"
                                                                       "i12941"
                                                                       "i12942")))
                                                                  (hygiene
                                                                    guile))
                                                               #{args\ 13030}#)))
                                                     #{tmp\ 13023}#)
                                              ((lambda (#{tmp\ 13032}#)
                                                 (if #{tmp\ 13032}#
                                                   (apply (lambda (#{p\ 13034}#)
                                                            (#{quasicons\ 12943}#
                                                              '(#(syntax-object
                                                                  quote
                                                                  ((top)
                                                                   #(ribcage
                                                                     #(p)
                                                                     #((top))
                                                                     #("i13033"))
                                                                   #(ribcage
                                                                     ()
                                                                     ()
                                                                     ())
                                                                   #(ribcage
                                                                     #(p lev)
                                                                     #((top)
                                                                       (top))
                                                                     #("i13007"
                                                                       "i13008"))
                                                                   #(ribcage
                                                                     #(quasicons
                                                                       quasiappend
                                                                       quasivector
                                                                       quasi)
                                                                     #((top)
                                                                       (top)
                                                                       (top)
                                                                       (top))
                                                                     #("i12939"
                                                                       "i12940"
                                                                       "i12941"
                                                                       "i12942")))
                                                                  (hygiene
                                                                    guile))
                                                                #(syntax-object
                                                                  quasiquote
                                                                  ((top)
                                                                   #(ribcage
                                                                     #(p)
                                                                     #((top))
                                                                     #("i13033"))
                                                                   #(ribcage
                                                                     ()
                                                                     ()
                                                                     ())
                                                                   #(ribcage
                                                                     #(p lev)
                                                                     #((top)
                                                                       (top))
                                                                     #("i13007"
                                                                       "i13008"))
                                                                   #(ribcage
                                                                     #(quasicons
                                                                       quasiappend
                                                                       quasivector
                                                                       quasi)
                                                                     #((top)
                                                                       (top)
                                                                       (top)
                                                                       (top))
                                                                     #("i12939"
                                                                       "i12940"
                                                                       "i12941"
                                                                       "i12942")))
                                                                  (hygiene
                                                                    guile)))
                                                              (#{quasi\ 12946}#
                                                                (list #{p\ 13034}#)
                                                                (+ #{lev\ 13006}#
                                                                   1))))
                                                          #{tmp\ 13032}#)
                                                   ((lambda (#{tmp\ 13035}#)
                                                      (if #{tmp\ 13035}#
                                                        (apply (lambda (#{p\ 13038}#
                                                                        #{q\ 13039}#)
                                                                 (#{quasicons\ 12943}#
                                                                   (#{quasi\ 12946}#
                                                                     #{p\ 13038}#
                                                                     #{lev\ 13006}#)
                                                                   (#{quasi\ 12946}#
                                                                     #{q\ 13039}#
                                                                     #{lev\ 13006}#)))
                                                               #{tmp\ 13035}#)
                                                        ((lambda (#{tmp\ 13040}#)
                                                           (if #{tmp\ 13040}#
                                                             (apply (lambda (#{x\ 13042}#)
                                                                      (#{quasivector\ 12945}#
                                                                        (#{quasi\ 12946}#
                                                                          #{x\ 13042}#
                                                                          #{lev\ 13006}#)))
                                                                    #{tmp\ 13040}#)
                                                             ((lambda (#{p\ 13045}#)
                                                                (list '#(syntax-object
                                                                         quote
                                                                         ((top)
                                                                          #(ribcage
                                                                            #(p)
                                                                            #((top))
                                                                            #("i13044"))
                                                                          #(ribcage
                                                                            ()
                                                                            ()
                                                                            ())
                                                                          #(ribcage
                                                                            #(p
                                                                              lev)
                                                                            #((top)
                                                                              (top))
                                                                            #("i13007"
                                                                              "i13008"))
                                                                          #(ribcage
                                                                            #(quasicons
                                                                              quasiappend
                                                                              quasivector
                                                                              quasi)
                                                                            #((top)
                                                                              (top)
                                                                              (top)
                                                                              (top))
                                                                            #("i12939"
                                                                              "i12940"
                                                                              "i12941"
                                                                              "i12942")))
                                                                         (hygiene
                                                                           guile))
                                                                      #{p\ 13045}#))
                                                              #{tmp\ 13009}#)))
                                                         ($sc-dispatch
                                                           #{tmp\ 13009}#
                                                           '#(vector
                                                              each-any)))))
                                                    ($sc-dispatch
                                                      #{tmp\ 13009}#
                                                      '(any . any)))))
                                               ($sc-dispatch
                                                 #{tmp\ 13009}#
                                                 '(#(free-id
                                                     #(syntax-object
                                                       quasiquote
                                                       ((top)
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(p lev)
                                                          #((top) (top))
                                                          #("i13007" "i13008"))
                                                        #(ribcage
                                                          #(quasicons
                                                            quasiappend
                                                            quasivector
                                                            quasi)
                                                          #((top)
                                                            (top)
                                                            (top)
                                                            (top))
                                                          #("i12939"
                                                            "i12940"
                                                            "i12941"
                                                            "i12942")))
                                                       (hygiene guile)))
                                                   any)))))
                                          ($sc-dispatch
                                            #{tmp\ 13009}#
                                            '((#(free-id
                                                 #(syntax-object
                                                   unquote-splicing
                                                   ((top)
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(p lev)
                                                      #((top) (top))
                                                      #("i13007" "i13008"))
                                                    #(ribcage
                                                      #(quasicons
                                                        quasiappend
                                                        quasivector
                                                        quasi)
                                                      #((top)
                                                        (top)
                                                        (top)
                                                        (top))
                                                      #("i12939"
                                                        "i12940"
                                                        "i12941"
                                                        "i12942")))
                                                   (hygiene guile)))
                                               .
                                               any)
                                              .
                                              any)))))
                                     ($sc-dispatch
                                       #{tmp\ 13009}#
                                       '((#(free-id
                                            #(syntax-object
                                              unquote-splicing
                                              ((top)
                                               #(ribcage () () ())
                                               #(ribcage
                                                 #(p lev)
                                                 #((top) (top))
                                                 #("i13007" "i13008"))
                                               #(ribcage
                                                 #(quasicons
                                                   quasiappend
                                                   quasivector
                                                   quasi)
                                                 #((top) (top) (top) (top))
                                                 #("i12939"
                                                   "i12940"
                                                   "i12941"
                                                   "i12942")))
                                              (hygiene guile)))
                                          any)
                                         .
                                         any)))))
                                ($sc-dispatch
                                  #{tmp\ 13009}#
                                  '(#(free-id
                                      #(syntax-object
                                        unquote
                                        ((top)
                                         #(ribcage () () ())
                                         #(ribcage
                                           #(p lev)
                                           #((top) (top))
                                           #("i13007" "i13008"))
                                         #(ribcage
                                           #(quasicons
                                             quasiappend
                                             quasivector
                                             quasi)
                                           #((top) (top) (top) (top))
                                           #("i12939"
                                             "i12940"
                                             "i12941"
                                             "i12942")))
                                        (hygiene guile)))
                                    .
                                    any)))))
                           ($sc-dispatch
                             #{tmp\ 13009}#
                             '(#(free-id
                                 #(syntax-object
                                   unquote
                                   ((top)
                                    #(ribcage () () ())
                                    #(ribcage
                                      #(p lev)
                                      #((top) (top))
                                      #("i13007" "i13008"))
                                    #(ribcage
                                      #(quasicons
                                        quasiappend
                                        quasivector
                                        quasi)
                                      #((top) (top) (top) (top))
                                      #("i12939" "i12940" "i12941" "i12942")))
                                   (hygiene guile)))
                               any))))
                        #{p\ 13005}#))))
            (lambda (#{x\ 13046}#)
              ((lambda (#{tmp\ 13048}#)
                 ((lambda (#{tmp\ 13049}#)
                    (if #{tmp\ 13049}#
                      (apply (lambda (#{_\ 13052}# #{e\ 13053}#)
                               (#{quasi\ 12946}# #{e\ 13053}# 0))
                             #{tmp\ 13049}#)
                      (syntax-violation
                        #f
                        "source expression failed to match any pattern"
                        #{tmp\ 13048}#)))
                  ($sc-dispatch #{tmp\ 13048}# (quote (any any)))))
               #{x\ 13046}#)))
          (module-name (current-module)))))

(define include
  (make-syntax-transformer
    'include
    'macro
    (cons (lambda (#{x\ 13054}#)
            (letrec ((#{read-file\ 13057}#
                       (lambda (#{fn\ 13058}# #{k\ 13059}#)
                         (let ((#{p\ 13063}# (open-input-file #{fn\ 13058}#)))
                           (letrec ((#{f\ 13067}#
                                      (lambda (#{x\ 13068}# #{result\ 13069}#)
                                        (if (eof-object? #{x\ 13068}#)
                                          (begin
                                            (close-input-port #{p\ 13063}#)
                                            (reverse #{result\ 13069}#))
                                          (#{f\ 13067}#
                                            (read #{p\ 13063}#)
                                            (cons (datum->syntax
                                                    #{k\ 13059}#
                                                    #{x\ 13068}#)
                                                  #{result\ 13069}#))))))
                             (#{f\ 13067}# (read #{p\ 13063}#) (quote ())))))))
              ((lambda (#{tmp\ 13070}#)
                 ((lambda (#{tmp\ 13071}#)
                    (if #{tmp\ 13071}#
                      (apply (lambda (#{k\ 13074}# #{filename\ 13075}#)
                               (let ((#{fn\ 13077}#
                                       (syntax->datum #{filename\ 13075}#)))
                                 ((lambda (#{tmp\ 13079}#)
                                    ((lambda (#{tmp\ 13080}#)
                                       (if #{tmp\ 13080}#
                                         (apply (lambda (#{exp\ 13082}#)
                                                  (cons '#(syntax-object
                                                           begin
                                                           ((top)
                                                            #(ribcage
                                                              #(exp)
                                                              #((top))
                                                              #("i13081"))
                                                            #(ribcage () () ())
                                                            #(ribcage () () ())
                                                            #(ribcage
                                                              #(fn)
                                                              #((top))
                                                              #("i13076"))
                                                            #(ribcage
                                                              #(k filename)
                                                              #((top) (top))
                                                              #("i13072"
                                                                "i13073"))
                                                            #(ribcage
                                                              (read-file)
                                                              ((top))
                                                              ("i13056"))
                                                            #(ribcage
                                                              #(x)
                                                              #((top))
                                                              #("i13055")))
                                                           (hygiene guile))
                                                        #{exp\ 13082}#))
                                                #{tmp\ 13080}#)
                                         (syntax-violation
                                           #f
                                           "source expression failed to match any pattern"
                                           #{tmp\ 13079}#)))
                                     ($sc-dispatch
                                       #{tmp\ 13079}#
                                       'each-any)))
                                  (#{read-file\ 13057}#
                                    #{fn\ 13077}#
                                    #{k\ 13074}#))))
                             #{tmp\ 13071}#)
                      (syntax-violation
                        #f
                        "source expression failed to match any pattern"
                        #{tmp\ 13070}#)))
                  ($sc-dispatch #{tmp\ 13070}# (quote (any any)))))
               #{x\ 13054}#)))
          (module-name (current-module)))))

(define include-from-path
  (make-syntax-transformer
    'include-from-path
    'macro
    (cons (lambda (#{x\ 13084}#)
            ((lambda (#{tmp\ 13086}#)
               ((lambda (#{tmp\ 13087}#)
                  (if #{tmp\ 13087}#
                    (apply (lambda (#{k\ 13090}# #{filename\ 13091}#)
                             (let ((#{fn\ 13093}#
                                     (syntax->datum #{filename\ 13091}#)))
                               ((lambda (#{tmp\ 13095}#)
                                  ((lambda (#{fn\ 13097}#)
                                     (list '#(syntax-object
                                              include
                                              ((top)
                                               #(ribcage
                                                 #(fn)
                                                 #((top))
                                                 #("i13096"))
                                               #(ribcage () () ())
                                               #(ribcage () () ())
                                               #(ribcage
                                                 #(fn)
                                                 #((top))
                                                 #("i13092"))
                                               #(ribcage
                                                 #(k filename)
                                                 #((top) (top))
                                                 #("i13088" "i13089"))
                                               #(ribcage () () ())
                                               #(ribcage
                                                 #(x)
                                                 #((top))
                                                 #("i13085")))
                                              (hygiene guile))
                                           #{fn\ 13097}#))
                                   #{tmp\ 13095}#))
                                (let ((#{t\ 13100}#
                                        (%search-load-path #{fn\ 13093}#)))
                                  (if #{t\ 13100}#
                                    #{t\ 13100}#
                                    (syntax-violation
                                      'include-from-path
                                      "file not found in path"
                                      #{x\ 13084}#
                                      #{filename\ 13091}#))))))
                           #{tmp\ 13087}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 13086}#)))
                ($sc-dispatch #{tmp\ 13086}# (quote (any any)))))
             #{x\ 13084}#))
          (module-name (current-module)))))

(define unquote
  (make-syntax-transformer
    'unquote
    'macro
    (cons (lambda (#{x\ 13102}#)
            ((lambda (#{tmp\ 13104}#)
               ((lambda (#{tmp\ 13105}#)
                  (if #{tmp\ 13105}#
                    (apply (lambda (#{_\ 13108}# #{e\ 13109}#)
                             (syntax-violation
                               'unquote
                               "expression not valid outside of quasiquote"
                               #{x\ 13102}#))
                           #{tmp\ 13105}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 13104}#)))
                ($sc-dispatch #{tmp\ 13104}# (quote (any any)))))
             #{x\ 13102}#))
          (module-name (current-module)))))

(define unquote-splicing
  (make-syntax-transformer
    'unquote-splicing
    'macro
    (cons (lambda (#{x\ 13110}#)
            ((lambda (#{tmp\ 13112}#)
               ((lambda (#{tmp\ 13113}#)
                  (if #{tmp\ 13113}#
                    (apply (lambda (#{_\ 13116}# #{e\ 13117}#)
                             (syntax-violation
                               'unquote-splicing
                               "expression not valid outside of quasiquote"
                               #{x\ 13110}#))
                           #{tmp\ 13113}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 13112}#)))
                ($sc-dispatch #{tmp\ 13112}# (quote (any any)))))
             #{x\ 13110}#))
          (module-name (current-module)))))

(define case
  (make-syntax-transformer
    'case
    'macro
    (cons (lambda (#{x\ 13118}#)
            ((lambda (#{tmp\ 13120}#)
               ((lambda (#{tmp\ 13121}#)
                  (if #{tmp\ 13121}#
                    (apply (lambda (#{_\ 13126}#
                                    #{e\ 13127}#
                                    #{m1\ 13128}#
                                    #{m2\ 13129}#)
                             ((lambda (#{tmp\ 13131}#)
                                ((lambda (#{body\ 13133}#)
                                   (list '#(syntax-object
                                            let
                                            ((top)
                                             #(ribcage
                                               #(body)
                                               #((top))
                                               #("i13132"))
                                             #(ribcage
                                               #(_ e m1 m2)
                                               #((top) (top) (top) (top))
                                               #("i13122"
                                                 "i13123"
                                                 "i13124"
                                                 "i13125"))
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(x)
                                               #((top))
                                               #("i13119")))
                                            (hygiene guile))
                                         (list (list '#(syntax-object
                                                        t
                                                        ((top)
                                                         #(ribcage
                                                           #(body)
                                                           #((top))
                                                           #("i13132"))
                                                         #(ribcage
                                                           #(_ e m1 m2)
                                                           #((top)
                                                             (top)
                                                             (top)
                                                             (top))
                                                           #("i13122"
                                                             "i13123"
                                                             "i13124"
                                                             "i13125"))
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(x)
                                                           #((top))
                                                           #("i13119")))
                                                        (hygiene guile))
                                                     #{e\ 13127}#))
                                         #{body\ 13133}#))
                                 #{tmp\ 13131}#))
                              (letrec ((#{f\ 13137}#
                                         (lambda (#{clause\ 13138}#
                                                  #{clauses\ 13139}#)
                                           (if (null? #{clauses\ 13139}#)
                                             ((lambda (#{tmp\ 13141}#)
                                                ((lambda (#{tmp\ 13142}#)
                                                   (if #{tmp\ 13142}#
                                                     (apply (lambda (#{e1\ 13145}#
                                                                     #{e2\ 13146}#)
                                                              (cons '#(syntax-object
                                                                       begin
                                                                       ((top)
                                                                        #(ribcage
                                                                          #(e1
                                                                            e2)
                                                                          #((top)
                                                                            (top))
                                                                          #("i13143"
                                                                            "i13144"))
                                                                        #(ribcage
                                                                          ()
                                                                          ()
                                                                          ())
                                                                        #(ribcage
                                                                          #(f
                                                                            clause
                                                                            clauses)
                                                                          #((top)
                                                                            (top)
                                                                            (top))
                                                                          #("i13134"
                                                                            "i13135"
                                                                            "i13136"))
                                                                        #(ribcage
                                                                          #(_
                                                                            e
                                                                            m1
                                                                            m2)
                                                                          #((top)
                                                                            (top)
                                                                            (top)
                                                                            (top))
                                                                          #("i13122"
                                                                            "i13123"
                                                                            "i13124"
                                                                            "i13125"))
                                                                        #(ribcage
                                                                          ()
                                                                          ()
                                                                          ())
                                                                        #(ribcage
                                                                          #(x)
                                                                          #((top))
                                                                          #("i13119")))
                                                                       (hygiene
                                                                         guile))
                                                                    (cons #{e1\ 13145}#
                                                                          #{e2\ 13146}#)))
                                                            #{tmp\ 13142}#)
                                                     ((lambda (#{tmp\ 13148}#)
                                                        (if #{tmp\ 13148}#
                                                          (apply (lambda (#{k\ 13152}#
                                                                          #{e1\ 13153}#
                                                                          #{e2\ 13154}#)
                                                                   (list '#(syntax-object
                                                                            if
                                                                            ((top)
                                                                             #(ribcage
                                                                               #(k
                                                                                 e1
                                                                                 e2)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i13149"
                                                                                 "i13150"
                                                                                 "i13151"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(f
                                                                                 clause
                                                                                 clauses)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i13134"
                                                                                 "i13135"
                                                                                 "i13136"))
                                                                             #(ribcage
                                                                               #(_
                                                                                 e
                                                                                 m1
                                                                                 m2)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i13122"
                                                                                 "i13123"
                                                                                 "i13124"
                                                                                 "i13125"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(x)
                                                                               #((top))
                                                                               #("i13119")))
                                                                            (hygiene
                                                                              guile))
                                                                         (list '#(syntax-object
                                                                                  memv
                                                                                  ((top)
                                                                                   #(ribcage
                                                                                     #(k
                                                                                       e1
                                                                                       e2)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i13149"
                                                                                       "i13150"
                                                                                       "i13151"))
                                                                                   #(ribcage
                                                                                     ()
                                                                                     ()
                                                                                     ())
                                                                                   #(ribcage
                                                                                     #(f
                                                                                       clause
                                                                                       clauses)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i13134"
                                                                                       "i13135"
                                                                                       "i13136"))
                                                                                   #(ribcage
                                                                                     #(_
                                                                                       e
                                                                                       m1
                                                                                       m2)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i13122"
                                                                                       "i13123"
                                                                                       "i13124"
                                                                                       "i13125"))
                                                                                   #(ribcage
                                                                                     ()
                                                                                     ()
                                                                                     ())
                                                                                   #(ribcage
                                                                                     #(x)
                                                                                     #((top))
                                                                                     #("i13119")))
                                                                                  (hygiene
                                                                                    guile))
                                                                               '#(syntax-object
                                                                                  t
                                                                                  ((top)
                                                                                   #(ribcage
                                                                                     #(k
                                                                                       e1
                                                                                       e2)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i13149"
                                                                                       "i13150"
                                                                                       "i13151"))
                                                                                   #(ribcage
                                                                                     ()
                                                                                     ()
                                                                                     ())
                                                                                   #(ribcage
                                                                                     #(f
                                                                                       clause
                                                                                       clauses)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i13134"
                                                                                       "i13135"
                                                                                       "i13136"))
                                                                                   #(ribcage
                                                                                     #(_
                                                                                       e
                                                                                       m1
                                                                                       m2)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i13122"
                                                                                       "i13123"
                                                                                       "i13124"
                                                                                       "i13125"))
                                                                                   #(ribcage
                                                                                     ()
                                                                                     ()
                                                                                     ())
                                                                                   #(ribcage
                                                                                     #(x)
                                                                                     #((top))
                                                                                     #("i13119")))
                                                                                  (hygiene
                                                                                    guile))
                                                                               (list '#(syntax-object
                                                                                        quote
                                                                                        ((top)
                                                                                         #(ribcage
                                                                                           #(k
                                                                                             e1
                                                                                             e2)
                                                                                           #((top)
                                                                                             (top)
                                                                                             (top))
                                                                                           #("i13149"
                                                                                             "i13150"
                                                                                             "i13151"))
                                                                                         #(ribcage
                                                                                           ()
                                                                                           ()
                                                                                           ())
                                                                                         #(ribcage
                                                                                           #(f
                                                                                             clause
                                                                                             clauses)
                                                                                           #((top)
                                                                                             (top)
                                                                                             (top))
                                                                                           #("i13134"
                                                                                             "i13135"
                                                                                             "i13136"))
                                                                                         #(ribcage
                                                                                           #(_
                                                                                             e
                                                                                             m1
                                                                                             m2)
                                                                                           #((top)
                                                                                             (top)
                                                                                             (top)
                                                                                             (top))
                                                                                           #("i13122"
                                                                                             "i13123"
                                                                                             "i13124"
                                                                                             "i13125"))
                                                                                         #(ribcage
                                                                                           ()
                                                                                           ()
                                                                                           ())
                                                                                         #(ribcage
                                                                                           #(x)
                                                                                           #((top))
                                                                                           #("i13119")))
                                                                                        (hygiene
                                                                                          guile))
                                                                                     #{k\ 13152}#))
                                                                         (cons '#(syntax-object
                                                                                  begin
                                                                                  ((top)
                                                                                   #(ribcage
                                                                                     #(k
                                                                                       e1
                                                                                       e2)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i13149"
                                                                                       "i13150"
                                                                                       "i13151"))
                                                                                   #(ribcage
                                                                                     ()
                                                                                     ()
                                                                                     ())
                                                                                   #(ribcage
                                                                                     #(f
                                                                                       clause
                                                                                       clauses)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i13134"
                                                                                       "i13135"
                                                                                       "i13136"))
                                                                                   #(ribcage
                                                                                     #(_
                                                                                       e
                                                                                       m1
                                                                                       m2)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i13122"
                                                                                       "i13123"
                                                                                       "i13124"
                                                                                       "i13125"))
                                                                                   #(ribcage
                                                                                     ()
                                                                                     ()
                                                                                     ())
                                                                                   #(ribcage
                                                                                     #(x)
                                                                                     #((top))
                                                                                     #("i13119")))
                                                                                  (hygiene
                                                                                    guile))
                                                                               (cons #{e1\ 13153}#
                                                                                     #{e2\ 13154}#))))
                                                                 #{tmp\ 13148}#)
                                                          ((lambda (#{_\ 13158}#)
                                                             (syntax-violation
                                                               'case
                                                               "bad clause"
                                                               #{x\ 13118}#
                                                               #{clause\ 13138}#))
                                                           #{tmp\ 13141}#)))
                                                      ($sc-dispatch
                                                        #{tmp\ 13141}#
                                                        '(each-any
                                                           any
                                                           .
                                                           each-any)))))
                                                 ($sc-dispatch
                                                   #{tmp\ 13141}#
                                                   '(#(free-id
                                                       #(syntax-object
                                                         else
                                                         ((top)
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(f clause clauses)
                                                            #((top)
                                                              (top)
                                                              (top))
                                                            #("i13134"
                                                              "i13135"
                                                              "i13136"))
                                                          #(ribcage
                                                            #(_ e m1 m2)
                                                            #((top)
                                                              (top)
                                                              (top)
                                                              (top))
                                                            #("i13122"
                                                              "i13123"
                                                              "i13124"
                                                              "i13125"))
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(x)
                                                            #((top))
                                                            #("i13119")))
                                                         (hygiene guile)))
                                                     any
                                                     .
                                                     each-any))))
                                              #{clause\ 13138}#)
                                             ((lambda (#{tmp\ 13160}#)
                                                ((lambda (#{rest\ 13162}#)
                                                   ((lambda (#{tmp\ 13163}#)
                                                      ((lambda (#{tmp\ 13164}#)
                                                         (if #{tmp\ 13164}#
                                                           (apply (lambda (#{k\ 13168}#
                                                                           #{e1\ 13169}#
                                                                           #{e2\ 13170}#)
                                                                    (list '#(syntax-object
                                                                             if
                                                                             ((top)
                                                                              #(ribcage
                                                                                #(k
                                                                                  e1
                                                                                  e2)
                                                                                #((top)
                                                                                  (top)
                                                                                  (top))
                                                                                #("i13165"
                                                                                  "i13166"
                                                                                  "i13167"))
                                                                              #(ribcage
                                                                                #(rest)
                                                                                #((top))
                                                                                #("i13161"))
                                                                              #(ribcage
                                                                                ()
                                                                                ()
                                                                                ())
                                                                              #(ribcage
                                                                                #(f
                                                                                  clause
                                                                                  clauses)
                                                                                #((top)
                                                                                  (top)
                                                                                  (top))
                                                                                #("i13134"
                                                                                  "i13135"
                                                                                  "i13136"))
                                                                              #(ribcage
                                                                                #(_
                                                                                  e
                                                                                  m1
                                                                                  m2)
                                                                                #((top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top))
                                                                                #("i13122"
                                                                                  "i13123"
                                                                                  "i13124"
                                                                                  "i13125"))
                                                                              #(ribcage
                                                                                ()
                                                                                ()
                                                                                ())
                                                                              #(ribcage
                                                                                #(x)
                                                                                #((top))
                                                                                #("i13119")))
                                                                             (hygiene
                                                                               guile))
                                                                          (list '#(syntax-object
                                                                                   memv
                                                                                   ((top)
                                                                                    #(ribcage
                                                                                      #(k
                                                                                        e1
                                                                                        e2)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i13165"
                                                                                        "i13166"
                                                                                        "i13167"))
                                                                                    #(ribcage
                                                                                      #(rest)
                                                                                      #((top))
                                                                                      #("i13161"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(f
                                                                                        clause
                                                                                        clauses)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i13134"
                                                                                        "i13135"
                                                                                        "i13136"))
                                                                                    #(ribcage
                                                                                      #(_
                                                                                        e
                                                                                        m1
                                                                                        m2)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i13122"
                                                                                        "i13123"
                                                                                        "i13124"
                                                                                        "i13125"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(x)
                                                                                      #((top))
                                                                                      #("i13119")))
                                                                                   (hygiene
                                                                                     guile))
                                                                                '#(syntax-object
                                                                                   t
                                                                                   ((top)
                                                                                    #(ribcage
                                                                                      #(k
                                                                                        e1
                                                                                        e2)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i13165"
                                                                                        "i13166"
                                                                                        "i13167"))
                                                                                    #(ribcage
                                                                                      #(rest)
                                                                                      #((top))
                                                                                      #("i13161"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(f
                                                                                        clause
                                                                                        clauses)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i13134"
                                                                                        "i13135"
                                                                                        "i13136"))
                                                                                    #(ribcage
                                                                                      #(_
                                                                                        e
                                                                                        m1
                                                                                        m2)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i13122"
                                                                                        "i13123"
                                                                                        "i13124"
                                                                                        "i13125"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(x)
                                                                                      #((top))
                                                                                      #("i13119")))
                                                                                   (hygiene
                                                                                     guile))
                                                                                (list '#(syntax-object
                                                                                         quote
                                                                                         ((top)
                                                                                          #(ribcage
                                                                                            #(k
                                                                                              e1
                                                                                              e2)
                                                                                            #((top)
                                                                                              (top)
                                                                                              (top))
                                                                                            #("i13165"
                                                                                              "i13166"
                                                                                              "i13167"))
                                                                                          #(ribcage
                                                                                            #(rest)
                                                                                            #((top))
                                                                                            #("i13161"))
                                                                                          #(ribcage
                                                                                            ()
                                                                                            ()
                                                                                            ())
                                                                                          #(ribcage
                                                                                            #(f
                                                                                              clause
                                                                                              clauses)
                                                                                            #((top)
                                                                                              (top)
                                                                                              (top))
                                                                                            #("i13134"
                                                                                              "i13135"
                                                                                              "i13136"))
                                                                                          #(ribcage
                                                                                            #(_
                                                                                              e
                                                                                              m1
                                                                                              m2)
                                                                                            #((top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top))
                                                                                            #("i13122"
                                                                                              "i13123"
                                                                                              "i13124"
                                                                                              "i13125"))
                                                                                          #(ribcage
                                                                                            ()
                                                                                            ()
                                                                                            ())
                                                                                          #(ribcage
                                                                                            #(x)
                                                                                            #((top))
                                                                                            #("i13119")))
                                                                                         (hygiene
                                                                                           guile))
                                                                                      #{k\ 13168}#))
                                                                          (cons '#(syntax-object
                                                                                   begin
                                                                                   ((top)
                                                                                    #(ribcage
                                                                                      #(k
                                                                                        e1
                                                                                        e2)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i13165"
                                                                                        "i13166"
                                                                                        "i13167"))
                                                                                    #(ribcage
                                                                                      #(rest)
                                                                                      #((top))
                                                                                      #("i13161"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(f
                                                                                        clause
                                                                                        clauses)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i13134"
                                                                                        "i13135"
                                                                                        "i13136"))
                                                                                    #(ribcage
                                                                                      #(_
                                                                                        e
                                                                                        m1
                                                                                        m2)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i13122"
                                                                                        "i13123"
                                                                                        "i13124"
                                                                                        "i13125"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(x)
                                                                                      #((top))
                                                                                      #("i13119")))
                                                                                   (hygiene
                                                                                     guile))
                                                                                (cons #{e1\ 13169}#
                                                                                      #{e2\ 13170}#))
                                                                          #{rest\ 13162}#))
                                                                  #{tmp\ 13164}#)
                                                           ((lambda (#{_\ 13174}#)
                                                              (syntax-violation
                                                                'case
                                                                "bad clause"
                                                                #{x\ 13118}#
                                                                #{clause\ 13138}#))
                                                            #{tmp\ 13163}#)))
                                                       ($sc-dispatch
                                                         #{tmp\ 13163}#
                                                         '(each-any
                                                            any
                                                            .
                                                            each-any))))
                                                    #{clause\ 13138}#))
                                                 #{tmp\ 13160}#))
                                              (#{f\ 13137}#
                                                (car #{clauses\ 13139}#)
                                                (cdr #{clauses\ 13139}#)))))))
                                (#{f\ 13137}# #{m1\ 13128}# #{m2\ 13129}#))))
                           #{tmp\ 13121}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 13120}#)))
                ($sc-dispatch
                  #{tmp\ 13120}#
                  '(any any any . each-any))))
             #{x\ 13118}#))
          (module-name (current-module)))))

(define identifier-syntax
  (make-syntax-transformer
    'identifier-syntax
    'macro
    (cons (lambda (#{x\ 13175}#)
            ((lambda (#{tmp\ 13177}#)
               ((lambda (#{tmp\ 13178}#)
                  (if #{tmp\ 13178}#
                    (apply (lambda (#{_\ 13181}# #{e\ 13182}#)
                             (list '#(syntax-object
                                      lambda
                                      ((top)
                                       #(ribcage
                                         #(_ e)
                                         #((top) (top))
                                         #("i13179" "i13180"))
                                       #(ribcage () () ())
                                       #(ribcage #(x) #((top)) #("i13176")))
                                      (hygiene guile))
                                   '(#(syntax-object
                                       x
                                       ((top)
                                        #(ribcage
                                          #(_ e)
                                          #((top) (top))
                                          #("i13179" "i13180"))
                                        #(ribcage () () ())
                                        #(ribcage #(x) #((top)) #("i13176")))
                                       (hygiene guile)))
                                   '#((#(syntax-object
                                         macro-type
                                         ((top)
                                          #(ribcage
                                            #(_ e)
                                            #((top) (top))
                                            #("i13179" "i13180"))
                                          #(ribcage () () ())
                                          #(ribcage #(x) #((top)) #("i13176")))
                                         (hygiene guile))
                                       .
                                       #(syntax-object
                                         identifier-syntax
                                         ((top)
                                          #(ribcage
                                            #(_ e)
                                            #((top) (top))
                                            #("i13179" "i13180"))
                                          #(ribcage () () ())
                                          #(ribcage #(x) #((top)) #("i13176")))
                                         (hygiene guile))))
                                   (list '#(syntax-object
                                            syntax-case
                                            ((top)
                                             #(ribcage
                                               #(_ e)
                                               #((top) (top))
                                               #("i13179" "i13180"))
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(x)
                                               #((top))
                                               #("i13176")))
                                            (hygiene guile))
                                         '#(syntax-object
                                            x
                                            ((top)
                                             #(ribcage
                                               #(_ e)
                                               #((top) (top))
                                               #("i13179" "i13180"))
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(x)
                                               #((top))
                                               #("i13176")))
                                            (hygiene guile))
                                         '()
                                         (list '#(syntax-object
                                                  id
                                                  ((top)
                                                   #(ribcage
                                                     #(_ e)
                                                     #((top) (top))
                                                     #("i13179" "i13180"))
                                                   #(ribcage () () ())
                                                   #(ribcage
                                                     #(x)
                                                     #((top))
                                                     #("i13176")))
                                                  (hygiene guile))
                                               '(#(syntax-object
                                                   identifier?
                                                   ((top)
                                                    #(ribcage
                                                      #(_ e)
                                                      #((top) (top))
                                                      #("i13179" "i13180"))
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(x)
                                                      #((top))
                                                      #("i13176")))
                                                   (hygiene guile))
                                                 (#(syntax-object
                                                    syntax
                                                    ((top)
                                                     #(ribcage
                                                       #(_ e)
                                                       #((top) (top))
                                                       #("i13179" "i13180"))
                                                     #(ribcage () () ())
                                                     #(ribcage
                                                       #(x)
                                                       #((top))
                                                       #("i13176")))
                                                    (hygiene guile))
                                                  #(syntax-object
                                                    id
                                                    ((top)
                                                     #(ribcage
                                                       #(_ e)
                                                       #((top) (top))
                                                       #("i13179" "i13180"))
                                                     #(ribcage () () ())
                                                     #(ribcage
                                                       #(x)
                                                       #((top))
                                                       #("i13176")))
                                                    (hygiene guile))))
                                               (list '#(syntax-object
                                                        syntax
                                                        ((top)
                                                         #(ribcage
                                                           #(_ e)
                                                           #((top) (top))
                                                           #("i13179"
                                                             "i13180"))
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(x)
                                                           #((top))
                                                           #("i13176")))
                                                        (hygiene guile))
                                                     #{e\ 13182}#))
                                         (list (cons #{_\ 13181}#
                                                     '(#(syntax-object
                                                         x
                                                         ((top)
                                                          #(ribcage
                                                            #(_ e)
                                                            #((top) (top))
                                                            #("i13179"
                                                              "i13180"))
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(x)
                                                            #((top))
                                                            #("i13176")))
                                                         (hygiene guile))
                                                       #(syntax-object
                                                         ...
                                                         ((top)
                                                          #(ribcage
                                                            #(_ e)
                                                            #((top) (top))
                                                            #("i13179"
                                                              "i13180"))
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(x)
                                                            #((top))
                                                            #("i13176")))
                                                         (hygiene guile))))
                                               (list '#(syntax-object
                                                        syntax
                                                        ((top)
                                                         #(ribcage
                                                           #(_ e)
                                                           #((top) (top))
                                                           #("i13179"
                                                             "i13180"))
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(x)
                                                           #((top))
                                                           #("i13176")))
                                                        (hygiene guile))
                                                     (cons #{e\ 13182}#
                                                           '(#(syntax-object
                                                               x
                                                               ((top)
                                                                #(ribcage
                                                                  #(_ e)
                                                                  #((top)
                                                                    (top))
                                                                  #("i13179"
                                                                    "i13180"))
                                                                #(ribcage
                                                                  ()
                                                                  ()
                                                                  ())
                                                                #(ribcage
                                                                  #(x)
                                                                  #((top))
                                                                  #("i13176")))
                                                               (hygiene guile))
                                                             #(syntax-object
                                                               ...
                                                               ((top)
                                                                #(ribcage
                                                                  #(_ e)
                                                                  #((top)
                                                                    (top))
                                                                  #("i13179"
                                                                    "i13180"))
                                                                #(ribcage
                                                                  ()
                                                                  ()
                                                                  ())
                                                                #(ribcage
                                                                  #(x)
                                                                  #((top))
                                                                  #("i13176")))
                                                               (hygiene
                                                                 guile)))))))))
                           #{tmp\ 13178}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 13177}#)))
                ($sc-dispatch #{tmp\ 13177}# (quote (any any)))))
             #{x\ 13175}#))
          (module-name (current-module)))))

(define define*
  (make-syntax-transformer
    'define*
    'macro
    (cons (lambda (#{x\ 13183}#)
            ((lambda (#{tmp\ 13185}#)
               ((lambda (#{tmp\ 13186}#)
                  (if #{tmp\ 13186}#
                    (apply (lambda (#{_\ 13192}#
                                    #{id\ 13193}#
                                    #{args\ 13194}#
                                    #{b0\ 13195}#
                                    #{b1\ 13196}#)
                             (list '#(syntax-object
                                      define
                                      ((top)
                                       #(ribcage
                                         #(_ id args b0 b1)
                                         #((top) (top) (top) (top) (top))
                                         #("i13187"
                                           "i13188"
                                           "i13189"
                                           "i13190"
                                           "i13191"))
                                       #(ribcage () () ())
                                       #(ribcage #(x) #((top)) #("i13184")))
                                      (hygiene guile))
                                   #{id\ 13193}#
                                   (cons '#(syntax-object
                                            lambda*
                                            ((top)
                                             #(ribcage
                                               #(_ id args b0 b1)
                                               #((top) (top) (top) (top) (top))
                                               #("i13187"
                                                 "i13188"
                                                 "i13189"
                                                 "i13190"
                                                 "i13191"))
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(x)
                                               #((top))
                                               #("i13184")))
                                            (hygiene guile))
                                         (cons #{args\ 13194}#
                                               (cons #{b0\ 13195}#
                                                     #{b1\ 13196}#)))))
                           #{tmp\ 13186}#)
                    ((lambda (#{tmp\ 13198}#)
                       (if (if #{tmp\ 13198}#
                             (apply (lambda (#{_\ 13202}#
                                             #{id\ 13203}#
                                             #{val\ 13204}#)
                                      (identifier?
                                        '#(syntax-object
                                           x
                                           ((top)
                                            #(ribcage
                                              #(_ id val)
                                              #((top) (top) (top))
                                              #("i13199" "i13200" "i13201"))
                                            #(ribcage () () ())
                                            #(ribcage
                                              #(x)
                                              #((top))
                                              #("i13184")))
                                           (hygiene guile))))
                                    #{tmp\ 13198}#)
                             #f)
                         (apply (lambda (#{_\ 13208}#
                                         #{id\ 13209}#
                                         #{val\ 13210}#)
                                  (list '#(syntax-object
                                           define
                                           ((top)
                                            #(ribcage
                                              #(_ id val)
                                              #((top) (top) (top))
                                              #("i13205" "i13206" "i13207"))
                                            #(ribcage () () ())
                                            #(ribcage
                                              #(x)
                                              #((top))
                                              #("i13184")))
                                           (hygiene guile))
                                        #{id\ 13209}#
                                        #{val\ 13210}#))
                                #{tmp\ 13198}#)
                         (syntax-violation
                           #f
                           "source expression failed to match any pattern"
                           #{tmp\ 13185}#)))
                     ($sc-dispatch
                       #{tmp\ 13185}#
                       '(any any any)))))
                ($sc-dispatch
                  #{tmp\ 13185}#
                  '(any (any . any) any . each-any))))
             #{x\ 13183}#))
          (module-name (current-module)))))

