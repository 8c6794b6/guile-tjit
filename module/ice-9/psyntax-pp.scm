(eval-when (compile) (set-current-module (resolve-module (quote (guile)))))
(if #f #f)

(letrec*
  ((#{make-void 207}#
     (lambda (#{src 778}#)
       (make-struct/no-tail
         (vector-ref %expanded-vtables 0)
         #{src 778}#)))
   (#{make-const 209}#
     (lambda (#{src 780}# #{exp 781}#)
       (make-struct/no-tail
         (vector-ref %expanded-vtables 1)
         #{src 780}#
         #{exp 781}#)))
   (#{make-lexical-ref 213}#
     (lambda (#{src 788}# #{name 789}# #{gensym 790}#)
       (make-struct/no-tail
         (vector-ref %expanded-vtables 3)
         #{src 788}#
         #{name 789}#
         #{gensym 790}#)))
   (#{make-lexical-set 215}#
     (lambda (#{src 794}#
              #{name 795}#
              #{gensym 796}#
              #{exp 797}#)
       (make-struct/no-tail
         (vector-ref %expanded-vtables 4)
         #{src 794}#
         #{name 795}#
         #{gensym 796}#
         #{exp 797}#)))
   (#{make-module-ref 217}#
     (lambda (#{src 802}#
              #{mod 803}#
              #{name 804}#
              #{public? 805}#)
       (make-struct/no-tail
         (vector-ref %expanded-vtables 5)
         #{src 802}#
         #{mod 803}#
         #{name 804}#
         #{public? 805}#)))
   (#{make-module-set 219}#
     (lambda (#{src 810}#
              #{mod 811}#
              #{name 812}#
              #{public? 813}#
              #{exp 814}#)
       (make-struct/no-tail
         (vector-ref %expanded-vtables 6)
         #{src 810}#
         #{mod 811}#
         #{name 812}#
         #{public? 813}#
         #{exp 814}#)))
   (#{make-toplevel-ref 221}#
     (lambda (#{src 820}# #{name 821}#)
       (make-struct/no-tail
         (vector-ref %expanded-vtables 7)
         #{src 820}#
         #{name 821}#)))
   (#{make-toplevel-set 223}#
     (lambda (#{src 824}# #{name 825}# #{exp 826}#)
       (make-struct/no-tail
         (vector-ref %expanded-vtables 8)
         #{src 824}#
         #{name 825}#
         #{exp 826}#)))
   (#{make-toplevel-define 225}#
     (lambda (#{src 830}# #{name 831}# #{exp 832}#)
       (make-struct/no-tail
         (vector-ref %expanded-vtables 9)
         #{src 830}#
         #{name 831}#
         #{exp 832}#)))
   (#{make-conditional 227}#
     (lambda (#{src 836}#
              #{test 837}#
              #{consequent 838}#
              #{alternate 839}#)
       (make-struct/no-tail
         (vector-ref %expanded-vtables 10)
         #{src 836}#
         #{test 837}#
         #{consequent 838}#
         #{alternate 839}#)))
   (#{make-application 229}#
     (lambda (#{src 844}# #{proc 845}# #{args 846}#)
       (make-struct/no-tail
         (vector-ref %expanded-vtables 11)
         #{src 844}#
         #{proc 845}#
         #{args 846}#)))
   (#{make-sequence 231}#
     (lambda (#{src 850}# #{exps 851}#)
       (make-struct/no-tail
         (vector-ref %expanded-vtables 12)
         #{src 850}#
         #{exps 851}#)))
   (#{make-lambda 233}#
     (lambda (#{src 854}# #{meta 855}# #{body 856}#)
       (make-struct/no-tail
         (vector-ref %expanded-vtables 13)
         #{src 854}#
         #{meta 855}#
         #{body 856}#)))
   (#{make-lambda-case 235}#
     (lambda (#{src 860}#
              #{req 861}#
              #{opt 862}#
              #{rest 863}#
              #{kw 864}#
              #{inits 865}#
              #{gensyms 866}#
              #{body 867}#
              #{alternate 868}#)
       (make-struct/no-tail
         (vector-ref %expanded-vtables 14)
         #{src 860}#
         #{req 861}#
         #{opt 862}#
         #{rest 863}#
         #{kw 864}#
         #{inits 865}#
         #{gensyms 866}#
         #{body 867}#
         #{alternate 868}#)))
   (#{make-let 237}#
     (lambda (#{src 878}#
              #{names 879}#
              #{gensyms 880}#
              #{vals 881}#
              #{body 882}#)
       (make-struct/no-tail
         (vector-ref %expanded-vtables 15)
         #{src 878}#
         #{names 879}#
         #{gensyms 880}#
         #{vals 881}#
         #{body 882}#)))
   (#{make-letrec 239}#
     (lambda (#{src 888}#
              #{in-order? 889}#
              #{names 890}#
              #{gensyms 891}#
              #{vals 892}#
              #{body 893}#)
       (make-struct/no-tail
         (vector-ref %expanded-vtables 16)
         #{src 888}#
         #{in-order? 889}#
         #{names 890}#
         #{gensyms 891}#
         #{vals 892}#
         #{body 893}#)))
   (#{make-dynlet 241}#
     (lambda (#{src 900}#
              #{fluids 901}#
              #{vals 902}#
              #{body 903}#)
       (make-struct/no-tail
         (vector-ref %expanded-vtables 17)
         #{src 900}#
         #{fluids 901}#
         #{vals 902}#
         #{body 903}#)))
   (#{lambda? 244}#
     (lambda (#{x 908}#)
       (if (struct? #{x 908}#)
         (eq? (struct-vtable #{x 908}#)
              (vector-ref %expanded-vtables 13))
         #f)))
   (#{lambda-meta 246}#
     (lambda (#{x 912}#) (struct-ref #{x 912}# 1)))
   (#{set-lambda-meta! 248}#
     (lambda (#{x 914}# #{v 915}#)
       (struct-set! #{x 914}# 1 #{v 915}#)))
   (#{top-level-eval-hook 254}#
     (lambda (#{x 918}# #{mod 919}#)
       (primitive-eval #{x 918}#)))
   (#{local-eval-hook 256}#
     (lambda (#{x 922}# #{mod 923}#)
       (primitive-eval #{x 922}#)))
   (#{put-global-definition-hook 260}#
     (lambda (#{symbol 926}# #{type 927}# #{val 928}#)
       (module-define!
         (current-module)
         #{symbol 926}#
         (make-syntax-transformer
           #{symbol 926}#
           #{type 927}#
           #{val 928}#))))
   (#{get-global-definition-hook 262}#
     (lambda (#{symbol 932}# #{module 933}#)
       (begin
         (if (if (not #{module 933}#) (current-module) #f)
           (warn "module system is booted, we should have a module"
                 #{symbol 932}#))
         (begin
           (let ((#{v 939}# (module-variable
                              (if #{module 933}#
                                (resolve-module (cdr #{module 933}#))
                                (current-module))
                              #{symbol 932}#)))
             (if #{v 939}#
               (if (variable-bound? #{v 939}#)
                 (begin
                   (let ((#{val 944}# (variable-ref #{v 939}#)))
                     (if (macro? #{val 944}#)
                       (if (macro-type #{val 944}#)
                         (cons (macro-type #{val 944}#)
                               (macro-binding #{val 944}#))
                         #f)
                       #f)))
                 #f)
               #f))))))
   (#{decorate-source 264}#
     (lambda (#{e 948}# #{s 949}#)
       (begin
         (if (if (pair? #{e 948}#) #{s 949}# #f)
           (set-source-properties! #{e 948}# #{s 949}#))
         #{e 948}#)))
   (#{maybe-name-value! 266}#
     (lambda (#{name 954}# #{val 955}#)
       (if (#{lambda? 244}# #{val 955}#)
         (begin
           (let ((#{meta 959}# (#{lambda-meta 246}# #{val 955}#)))
             (if (not (assq 'name #{meta 959}#))
               (#{set-lambda-meta! 248}#
                 #{val 955}#
                 (cons (cons 'name #{name 954}#) #{meta 959}#))))))))
   (#{build-void 268}#
     (lambda (#{source 960}#)
       (#{make-void 207}# #{source 960}#)))
   (#{build-application 270}#
     (lambda (#{source 962}# #{fun-exp 963}# #{arg-exps 964}#)
       (#{make-application 229}#
         #{source 962}#
         #{fun-exp 963}#
         #{arg-exps 964}#)))
   (#{build-conditional 272}#
     (lambda (#{source 968}#
              #{test-exp 969}#
              #{then-exp 970}#
              #{else-exp 971}#)
       (#{make-conditional 227}#
         #{source 968}#
         #{test-exp 969}#
         #{then-exp 970}#
         #{else-exp 971}#)))
   (#{build-lexical-reference 276}#
     (lambda (#{type 984}#
              #{source 985}#
              #{name 986}#
              #{var 987}#)
       (#{make-lexical-ref 213}#
         #{source 985}#
         #{name 986}#
         #{var 987}#)))
   (#{analyze-variable 280}#
     (lambda (#{mod 1000}#
              #{var 1001}#
              #{modref-cont 1002}#
              #{bare-cont 1003}#)
       (if (not #{mod 1000}#)
         (#{bare-cont 1003}# #{var 1001}#)
         (begin
           (let ((#{kind 1010}# (car #{mod 1000}#))
                 (#{mod 1011}# (cdr #{mod 1000}#)))
             (if (eqv? #{kind 1010}# 'public)
               (#{modref-cont 1002}#
                 #{mod 1011}#
                 #{var 1001}#
                 #t)
               (if (eqv? #{kind 1010}# 'private)
                 (if (not (equal?
                            #{mod 1011}#
                            (module-name (current-module))))
                   (#{modref-cont 1002}#
                     #{mod 1011}#
                     #{var 1001}#
                     #f)
                   (#{bare-cont 1003}# #{var 1001}#))
                 (if (eqv? #{kind 1010}# 'bare)
                   (#{bare-cont 1003}# #{var 1001}#)
                   (if (eqv? #{kind 1010}# 'hygiene)
                     (if (if (not (equal?
                                    #{mod 1011}#
                                    (module-name (current-module))))
                           (module-variable
                             (resolve-module #{mod 1011}#)
                             #{var 1001}#)
                           #f)
                       (#{modref-cont 1002}#
                         #{mod 1011}#
                         #{var 1001}#
                         #f)
                       (#{bare-cont 1003}# #{var 1001}#))
                     (syntax-violation
                       #f
                       "bad module kind"
                       #{var 1001}#
                       #{mod 1011}#))))))))))
   (#{build-global-reference 282}#
     (lambda (#{source 1019}# #{var 1020}# #{mod 1021}#)
       (#{analyze-variable 280}#
         #{mod 1021}#
         #{var 1020}#
         (lambda (#{mod 1025}# #{var 1026}# #{public? 1027}#)
           (#{make-module-ref 217}#
             #{source 1019}#
             #{mod 1025}#
             #{var 1026}#
             #{public? 1027}#))
         (lambda (#{var 1031}#)
           (#{make-toplevel-ref 221}#
             #{source 1019}#
             #{var 1031}#)))))
   (#{build-global-assignment 284}#
     (lambda (#{source 1033}#
              #{var 1034}#
              #{exp 1035}#
              #{mod 1036}#)
       (begin
         (#{maybe-name-value! 266}#
           #{var 1034}#
           #{exp 1035}#)
         (#{analyze-variable 280}#
           #{mod 1036}#
           #{var 1034}#
           (lambda (#{mod 1041}# #{var 1042}# #{public? 1043}#)
             (#{make-module-set 219}#
               #{source 1033}#
               #{mod 1041}#
               #{var 1042}#
               #{public? 1043}#
               #{exp 1035}#))
           (lambda (#{var 1047}#)
             (#{make-toplevel-set 223}#
               #{source 1033}#
               #{var 1047}#
               #{exp 1035}#))))))
   (#{build-global-definition 286}#
     (lambda (#{source 1049}# #{var 1050}# #{exp 1051}#)
       (begin
         (#{maybe-name-value! 266}#
           #{var 1050}#
           #{exp 1051}#)
         (#{make-toplevel-define 225}#
           #{source 1049}#
           #{var 1050}#
           #{exp 1051}#))))
   (#{build-simple-lambda 288}#
     (lambda (#{src 1055}#
              #{req 1056}#
              #{rest 1057}#
              #{vars 1058}#
              #{meta 1059}#
              #{exp 1060}#)
       (#{make-lambda 233}#
         #{src 1055}#
         #{meta 1059}#
         (#{make-lambda-case 235}#
           #{src 1055}#
           #{req 1056}#
           #f
           #{rest 1057}#
           #f
           '()
           #{vars 1058}#
           #{exp 1060}#
           #f))))
   (#{build-lambda-case 292}#
     (lambda (#{src 1073}#
              #{req 1074}#
              #{opt 1075}#
              #{rest 1076}#
              #{kw 1077}#
              #{inits 1078}#
              #{vars 1079}#
              #{body 1080}#
              #{else-case 1081}#)
       (#{make-lambda-case 235}#
         #{src 1073}#
         #{req 1074}#
         #{opt 1075}#
         #{rest 1076}#
         #{kw 1077}#
         #{inits 1078}#
         #{vars 1079}#
         #{body 1080}#
         #{else-case 1081}#)))
   (#{build-primref 294}#
     (lambda (#{src 1091}# #{name 1092}#)
       (if (equal? (module-name (current-module)) '(guile))
         (#{make-toplevel-ref 221}#
           #{src 1091}#
           #{name 1092}#)
         (#{make-module-ref 217}#
           #{src 1091}#
           '(guile)
           #{name 1092}#
           #f))))
   (#{build-data 296}#
     (lambda (#{src 1095}# #{exp 1096}#)
       (#{make-const 209}# #{src 1095}# #{exp 1096}#)))
   (#{build-sequence 298}#
     (lambda (#{src 1099}# #{exps 1100}#)
       (if (null? (cdr #{exps 1100}#))
         (car #{exps 1100}#)
         (#{make-sequence 231}#
           #{src 1099}#
           #{exps 1100}#))))
   (#{build-letrec 304}#
     (lambda (#{src 1133}#
              #{in-order? 1134}#
              #{ids 1135}#
              #{vars 1136}#
              #{val-exps 1137}#
              #{body-exp 1138}#)
       (if (null? #{vars 1136}#)
         #{body-exp 1138}#
         (begin
           (for-each
             #{maybe-name-value! 266}#
             #{ids 1135}#
             #{val-exps 1137}#)
           (#{make-letrec 239}#
             #{src 1133}#
             #{in-order? 1134}#
             #{ids 1135}#
             #{vars 1136}#
             #{val-exps 1137}#
             #{body-exp 1138}#)))))
   (#{make-syntax-object 309}#
     (lambda (#{expression 1145}#
              #{wrap 1146}#
              #{module 1147}#)
       (vector
         'syntax-object
         #{expression 1145}#
         #{wrap 1146}#
         #{module 1147}#)))
   (#{syntax-object? 311}#
     (lambda (#{x 1151}#)
       (if (vector? #{x 1151}#)
         (if (= (vector-length #{x 1151}#) 4)
           (eq? (vector-ref #{x 1151}# 0) 'syntax-object)
           #f)
         #f)))
   (#{syntax-object-expression 313}#
     (lambda (#{x 1156}#) (vector-ref #{x 1156}# 1)))
   (#{syntax-object-wrap 315}#
     (lambda (#{x 1158}#) (vector-ref #{x 1158}# 2)))
   (#{syntax-object-module 317}#
     (lambda (#{x 1160}#) (vector-ref #{x 1160}# 3)))
   (#{source-annotation 326}#
     (lambda (#{x 1174}#)
       (if (#{syntax-object? 311}# #{x 1174}#)
         (#{source-annotation 326}#
           (#{syntax-object-expression 313}# #{x 1174}#))
         (if (pair? #{x 1174}#)
           (begin
             (let ((#{props 1181}# (source-properties #{x 1174}#)))
               (if (pair? #{props 1181}#) #{props 1181}# #f)))
           #f))))
   (#{extend-env 336}#
     (lambda (#{labels 1183}# #{bindings 1184}# #{r 1185}#)
       (if (null? #{labels 1183}#)
         #{r 1185}#
         (#{extend-env 336}#
           (cdr #{labels 1183}#)
           (cdr #{bindings 1184}#)
           (cons (cons (car #{labels 1183}#)
                       (car #{bindings 1184}#))
                 #{r 1185}#)))))
   (#{extend-var-env 338}#
     (lambda (#{labels 1189}# #{vars 1190}# #{r 1191}#)
       (if (null? #{labels 1189}#)
         #{r 1191}#
         (#{extend-var-env 338}#
           (cdr #{labels 1189}#)
           (cdr #{vars 1190}#)
           (cons (cons (car #{labels 1189}#)
                       (cons 'lexical (car #{vars 1190}#)))
                 #{r 1191}#)))))
   (#{macros-only-env 340}#
     (lambda (#{r 1196}#)
       (if (null? #{r 1196}#)
         '()
         (begin
           (let ((#{a 1199}# (car #{r 1196}#)))
             (if (eq? (car (cdr #{a 1199}#)) 'macro)
               (cons #{a 1199}#
                     (#{macros-only-env 340}# (cdr #{r 1196}#)))
               (#{macros-only-env 340}# (cdr #{r 1196}#))))))))
   (#{lookup 342}#
     (lambda (#{x 1200}# #{r 1201}# #{mod 1202}#)
       (begin
         (let ((#{t 1208}# (assq #{x 1200}# #{r 1201}#)))
           (if #{t 1208}#
             (cdr #{t 1208}#)
             (if (symbol? #{x 1200}#)
               (begin
                 (let ((#{t 1214}#
                         (#{get-global-definition-hook 262}#
                           #{x 1200}#
                           #{mod 1202}#)))
                   (if #{t 1214}# #{t 1214}# '(global))))
               '(displaced-lexical)))))))
   (#{global-extend 344}#
     (lambda (#{type 1219}# #{sym 1220}# #{val 1221}#)
       (#{put-global-definition-hook 260}#
         #{sym 1220}#
         #{type 1219}#
         #{val 1221}#)))
   (#{nonsymbol-id? 346}#
     (lambda (#{x 1225}#)
       (if (#{syntax-object? 311}# #{x 1225}#)
         (symbol?
           (#{syntax-object-expression 313}# #{x 1225}#))
         #f)))
   (#{id? 348}#
     (lambda (#{x 1229}#)
       (if (symbol? #{x 1229}#)
         #t
         (if (#{syntax-object? 311}# #{x 1229}#)
           (symbol?
             (#{syntax-object-expression 313}# #{x 1229}#))
           #f))))
   (#{id-sym-name&marks 352}#
     (lambda (#{x 1236}# #{w 1237}#)
       (if (#{syntax-object? 311}# #{x 1236}#)
         (values
           (#{syntax-object-expression 313}# #{x 1236}#)
           (#{join-marks 406}#
             (car #{w 1237}#)
             (car (#{syntax-object-wrap 315}# #{x 1236}#))))
         (values #{x 1236}# (car #{w 1237}#)))))
   (#{gen-label 366}#
     (lambda () (symbol->string (gensym "i"))))
   (#{gen-labels 368}#
     (lambda (#{ls 1243}#)
       (if (null? #{ls 1243}#)
         '()
         (cons (#{gen-label 366}#)
               (#{gen-labels 368}# (cdr #{ls 1243}#))))))
   (#{make-ribcage 371}#
     (lambda (#{symnames 1245}#
              #{marks 1246}#
              #{labels 1247}#)
       (vector
         'ribcage
         #{symnames 1245}#
         #{marks 1246}#
         #{labels 1247}#)))
   (#{ribcage-symnames 375}#
     (lambda (#{x 1256}#) (vector-ref #{x 1256}# 1)))
   (#{ribcage-marks 377}#
     (lambda (#{x 1258}#) (vector-ref #{x 1258}# 2)))
   (#{ribcage-labels 379}#
     (lambda (#{x 1260}#) (vector-ref #{x 1260}# 3)))
   (#{set-ribcage-symnames! 381}#
     (lambda (#{x 1262}# #{update 1263}#)
       (vector-set! #{x 1262}# 1 #{update 1263}#)))
   (#{set-ribcage-marks! 383}#
     (lambda (#{x 1266}# #{update 1267}#)
       (vector-set! #{x 1266}# 2 #{update 1267}#)))
   (#{set-ribcage-labels! 385}#
     (lambda (#{x 1270}# #{update 1271}#)
       (vector-set! #{x 1270}# 3 #{update 1271}#)))
   (#{anti-mark 392}#
     (lambda (#{w 1274}#)
       (cons (cons #f (car #{w 1274}#))
             (cons 'shift (cdr #{w 1274}#)))))
   (#{extend-ribcage! 398}#
     (lambda (#{ribcage 1280}# #{id 1281}# #{label 1282}#)
       (begin
         (#{set-ribcage-symnames! 381}#
           #{ribcage 1280}#
           (cons (#{syntax-object-expression 313}# #{id 1281}#)
                 (#{ribcage-symnames 375}# #{ribcage 1280}#)))
         (#{set-ribcage-marks! 383}#
           #{ribcage 1280}#
           (cons (car (#{syntax-object-wrap 315}# #{id 1281}#))
                 (#{ribcage-marks 377}# #{ribcage 1280}#)))
         (#{set-ribcage-labels! 385}#
           #{ribcage 1280}#
           (cons #{label 1282}#
                 (#{ribcage-labels 379}# #{ribcage 1280}#))))))
   (#{make-binding-wrap 400}#
     (lambda (#{ids 1287}# #{labels 1288}# #{w 1289}#)
       (if (null? #{ids 1287}#)
         #{w 1289}#
         (cons (car #{w 1289}#)
               (cons (begin
                       (let ((#{labelvec 1296}#
                               (list->vector #{labels 1288}#)))
                         (begin
                           (let ((#{n 1298}#
                                   (vector-length #{labelvec 1296}#)))
                             (begin
                               (let ((#{symnamevec 1301}#
                                       (make-vector #{n 1298}#))
                                     (#{marksvec 1302}#
                                       (make-vector #{n 1298}#)))
                                 (begin
                                   (letrec*
                                     ((#{f 1306}#
                                        (lambda (#{ids 1307}# #{i 1308}#)
                                          (if (not (null? #{ids 1307}#))
                                            (call-with-values
                                              (lambda ()
                                                (#{id-sym-name&marks 352}#
                                                  (car #{ids 1307}#)
                                                  #{w 1289}#))
                                              (lambda (#{symname 1309}#
                                                       #{marks 1310}#)
                                                (begin
                                                  (vector-set!
                                                    #{symnamevec 1301}#
                                                    #{i 1308}#
                                                    #{symname 1309}#)
                                                  (vector-set!
                                                    #{marksvec 1302}#
                                                    #{i 1308}#
                                                    #{marks 1310}#)
                                                  (#{f 1306}#
                                                    (cdr #{ids 1307}#)
                                                    (#{1+}# #{i 1308}#)))))))))
                                     (begin (#{f 1306}# #{ids 1287}# 0)))
                                   (#{make-ribcage 371}#
                                     #{symnamevec 1301}#
                                     #{marksvec 1302}#
                                     #{labelvec 1296}#))))))))
                     (cdr #{w 1289}#))))))
   (#{smart-append 402}#
     (lambda (#{m1 1315}# #{m2 1316}#)
       (if (null? #{m2 1316}#)
         #{m1 1315}#
         (append #{m1 1315}# #{m2 1316}#))))
   (#{join-wraps 404}#
     (lambda (#{w1 1319}# #{w2 1320}#)
       (begin
         (let ((#{m1 1325}# (car #{w1 1319}#))
               (#{s1 1326}# (cdr #{w1 1319}#)))
           (if (null? #{m1 1325}#)
             (if (null? #{s1 1326}#)
               #{w2 1320}#
               (cons (car #{w2 1320}#)
                     (#{smart-append 402}#
                       #{s1 1326}#
                       (cdr #{w2 1320}#))))
             (cons (#{smart-append 402}#
                     #{m1 1325}#
                     (car #{w2 1320}#))
                   (#{smart-append 402}#
                     #{s1 1326}#
                     (cdr #{w2 1320}#))))))))
   (#{join-marks 406}#
     (lambda (#{m1 1335}# #{m2 1336}#)
       (#{smart-append 402}# #{m1 1335}# #{m2 1336}#)))
   (#{same-marks? 408}#
     (lambda (#{x 1339}# #{y 1340}#)
       (if (eq? #{x 1339}# #{y 1340}#)
         (eq? #{x 1339}# #{y 1340}#)
         (if (not (null? #{x 1339}#))
           (if (not (null? #{y 1340}#))
             (if (eq? (car #{x 1339}#) (car #{y 1340}#))
               (#{same-marks? 408}#
                 (cdr #{x 1339}#)
                 (cdr #{y 1340}#))
               #f)
             #f)
           #f))))
   (#{id-var-name 410}#
     (lambda (#{id 1351}# #{w 1352}#)
       (letrec*
         ((#{search 1358}#
            (lambda (#{sym 1374}# #{subst 1375}# #{marks 1376}#)
              (if (null? #{subst 1375}#)
                (values #f #{marks 1376}#)
                (begin
                  (let ((#{fst 1381}# (car #{subst 1375}#)))
                    (if (eq? #{fst 1381}# 'shift)
                      (#{search 1358}#
                        #{sym 1374}#
                        (cdr #{subst 1375}#)
                        (cdr #{marks 1376}#))
                      (begin
                        (let ((#{symnames 1383}#
                                (#{ribcage-symnames 375}# #{fst 1381}#)))
                          (if (vector? #{symnames 1383}#)
                            (#{search-vector-rib 1362}#
                              #{sym 1374}#
                              #{subst 1375}#
                              #{marks 1376}#
                              #{symnames 1383}#
                              #{fst 1381}#)
                            (#{search-list-rib 1360}#
                              #{sym 1374}#
                              #{subst 1375}#
                              #{marks 1376}#
                              #{symnames 1383}#
                              #{fst 1381}#))))))))))
          (#{search-list-rib 1360}#
            (lambda (#{sym 1384}#
                     #{subst 1385}#
                     #{marks 1386}#
                     #{symnames 1387}#
                     #{ribcage 1388}#)
              (letrec*
                ((#{f 1397}#
                   (lambda (#{symnames 1398}# #{i 1399}#)
                     (if (null? #{symnames 1398}#)
                       (#{search 1358}#
                         #{sym 1384}#
                         (cdr #{subst 1385}#)
                         #{marks 1386}#)
                       (if (if (eq? (car #{symnames 1398}#) #{sym 1384}#)
                             (#{same-marks? 408}#
                               #{marks 1386}#
                               (list-ref
                                 (#{ribcage-marks 377}# #{ribcage 1388}#)
                                 #{i 1399}#))
                             #f)
                         (values
                           (list-ref
                             (#{ribcage-labels 379}# #{ribcage 1388}#)
                             #{i 1399}#)
                           #{marks 1386}#)
                         (#{f 1397}#
                           (cdr #{symnames 1398}#)
                           (#{1+}# #{i 1399}#)))))))
                (begin (#{f 1397}# #{symnames 1387}# 0)))))
          (#{search-vector-rib 1362}#
            (lambda (#{sym 1408}#
                     #{subst 1409}#
                     #{marks 1410}#
                     #{symnames 1411}#
                     #{ribcage 1412}#)
              (begin
                (let ((#{n 1419}# (vector-length #{symnames 1411}#)))
                  (letrec*
                    ((#{f 1422}#
                       (lambda (#{i 1423}#)
                         (if (= #{i 1423}# #{n 1419}#)
                           (#{search 1358}#
                             #{sym 1408}#
                             (cdr #{subst 1409}#)
                             #{marks 1410}#)
                           (if (if (eq? (vector-ref
                                          #{symnames 1411}#
                                          #{i 1423}#)
                                        #{sym 1408}#)
                                 (#{same-marks? 408}#
                                   #{marks 1410}#
                                   (vector-ref
                                     (#{ribcage-marks 377}# #{ribcage 1412}#)
                                     #{i 1423}#))
                                 #f)
                             (values
                               (vector-ref
                                 (#{ribcage-labels 379}# #{ribcage 1412}#)
                                 #{i 1423}#)
                               #{marks 1410}#)
                             (#{f 1422}# (#{1+}# #{i 1423}#)))))))
                    (begin (#{f 1422}# 0))))))))
         (begin
           (if (symbol? #{id 1351}#)
             (begin
               (let ((#{t 1435}#
                       (#{search 1358}#
                         #{id 1351}#
                         (cdr #{w 1352}#)
                         (car #{w 1352}#))))
                 (if #{t 1435}# #{t 1435}# #{id 1351}#)))
             (if (#{syntax-object? 311}# #{id 1351}#)
               (begin
                 (let ((#{id 1444}#
                         (#{syntax-object-expression 313}# #{id 1351}#))
                       (#{w1 1445}#
                         (#{syntax-object-wrap 315}# #{id 1351}#)))
                   (begin
                     (let ((#{marks 1447}#
                             (#{join-marks 406}#
                               (car #{w 1352}#)
                               (car #{w1 1445}#))))
                       (call-with-values
                         (lambda ()
                           (#{search 1358}#
                             #{id 1444}#
                             (cdr #{w 1352}#)
                             #{marks 1447}#))
                         (lambda (#{new-id 1451}# #{marks 1452}#)
                           (if #{new-id 1451}#
                             #{new-id 1451}#
                             (begin
                               (let ((#{t 1460}#
                                       (#{search 1358}#
                                         #{id 1444}#
                                         (cdr #{w1 1445}#)
                                         #{marks 1452}#)))
                                 (if #{t 1460}#
                                   #{t 1460}#
                                   #{id 1444}#))))))))))
               (syntax-violation
                 'id-var-name
                 "invalid id"
                 #{id 1351}#)))))))
   (#{free-id=? 412}#
     (lambda (#{i 1465}# #{j 1466}#)
       (if (eq? (if (#{syntax-object? 311}# #{i 1465}#)
                  (#{syntax-object-expression 313}# #{i 1465}#)
                  #{i 1465}#)
                (if (#{syntax-object? 311}# #{j 1466}#)
                  (#{syntax-object-expression 313}# #{j 1466}#)
                  #{j 1466}#))
         (eq? (#{id-var-name 410}# #{i 1465}# '(()))
              (#{id-var-name 410}# #{j 1466}# '(())))
         #f)))
   (#{bound-id=? 414}#
     (lambda (#{i 1479}# #{j 1480}#)
       (if (if (#{syntax-object? 311}# #{i 1479}#)
             (#{syntax-object? 311}# #{j 1480}#)
             #f)
         (if (eq? (#{syntax-object-expression 313}# #{i 1479}#)
                  (#{syntax-object-expression 313}# #{j 1480}#))
           (#{same-marks? 408}#
             (car (#{syntax-object-wrap 315}# #{i 1479}#))
             (car (#{syntax-object-wrap 315}# #{j 1480}#)))
           #f)
         (eq? #{i 1479}# #{j 1480}#))))
   (#{valid-bound-ids? 416}#
     (lambda (#{ids 1489}#)
       (if (letrec*
             ((#{all-ids? 1494}#
                (lambda (#{ids 1495}#)
                  (if (null? #{ids 1495}#)
                    (null? #{ids 1495}#)
                    (if (#{id? 348}# (car #{ids 1495}#))
                      (#{all-ids? 1494}# (cdr #{ids 1495}#))
                      #f)))))
             (begin (#{all-ids? 1494}# #{ids 1489}#)))
         (#{distinct-bound-ids? 418}# #{ids 1489}#)
         #f)))
   (#{distinct-bound-ids? 418}#
     (lambda (#{ids 1503}#)
       (letrec*
         ((#{distinct? 1507}#
            (lambda (#{ids 1508}#)
              (if (null? #{ids 1508}#)
                (null? #{ids 1508}#)
                (if (not (#{bound-id-member? 420}#
                           (car #{ids 1508}#)
                           (cdr #{ids 1508}#)))
                  (#{distinct? 1507}# (cdr #{ids 1508}#))
                  #f)))))
         (begin (#{distinct? 1507}# #{ids 1503}#)))))
   (#{bound-id-member? 420}#
     (lambda (#{x 1515}# #{list 1516}#)
       (if (not (null? #{list 1516}#))
         (begin
           (let ((#{t 1523}#
                   (#{bound-id=? 414}#
                     #{x 1515}#
                     (car #{list 1516}#))))
             (if #{t 1523}#
               #{t 1523}#
               (#{bound-id-member? 420}#
                 #{x 1515}#
                 (cdr #{list 1516}#)))))
         #f)))
   (#{wrap 422}#
     (lambda (#{x 1525}# #{w 1526}# #{defmod 1527}#)
       (if (if (null? (car #{w 1526}#))
             (null? (cdr #{w 1526}#))
             #f)
         #{x 1525}#
         (if (#{syntax-object? 311}# #{x 1525}#)
           (#{make-syntax-object 309}#
             (#{syntax-object-expression 313}# #{x 1525}#)
             (#{join-wraps 404}#
               #{w 1526}#
               (#{syntax-object-wrap 315}# #{x 1525}#))
             (#{syntax-object-module 317}# #{x 1525}#))
           (if (null? #{x 1525}#)
             #{x 1525}#
             (#{make-syntax-object 309}#
               #{x 1525}#
               #{w 1526}#
               #{defmod 1527}#))))))
   (#{source-wrap 424}#
     (lambda (#{x 1542}#
              #{w 1543}#
              #{s 1544}#
              #{defmod 1545}#)
       (#{wrap 422}#
         (#{decorate-source 264}# #{x 1542}# #{s 1544}#)
         #{w 1543}#
         #{defmod 1545}#)))
   (#{chi-sequence 426}#
     (lambda (#{body 1550}#
              #{r 1551}#
              #{w 1552}#
              #{s 1553}#
              #{mod 1554}#)
       (#{build-sequence 298}#
         #{s 1553}#
         (letrec*
           ((#{dobody 1565}#
              (lambda (#{body 1566}#
                       #{r 1567}#
                       #{w 1568}#
                       #{mod 1569}#)
                (if (null? #{body 1566}#)
                  '()
                  (begin
                    (let ((#{first 1571}#
                            (#{chi 436}#
                              (car #{body 1566}#)
                              #{r 1567}#
                              #{w 1568}#
                              #{mod 1569}#)))
                      (cons #{first 1571}#
                            (#{dobody 1565}#
                              (cdr #{body 1566}#)
                              #{r 1567}#
                              #{w 1568}#
                              #{mod 1569}#))))))))
           (begin
             (#{dobody 1565}#
               #{body 1550}#
               #{r 1551}#
               #{w 1552}#
               #{mod 1554}#))))))
   (#{chi-top-sequence 428}#
     (lambda (#{body 1572}#
              #{r 1573}#
              #{w 1574}#
              #{s 1575}#
              #{m 1576}#
              #{esew 1577}#
              #{mod 1578}#)
       (letrec*
         ((#{scan 1587}#
            (lambda (#{body 1588}#
                     #{r 1589}#
                     #{w 1590}#
                     #{s 1591}#
                     #{m 1592}#
                     #{esew 1593}#
                     #{mod 1594}#
                     #{exps 1595}#)
              (if (null? #{body 1588}#)
                #{exps 1595}#
                (call-with-values
                  (lambda ()
                    (call-with-values
                      (lambda ()
                        (begin
                          (let ((#{e 1608}# (car #{body 1588}#)))
                            (#{syntax-type 434}#
                              #{e 1608}#
                              #{r 1589}#
                              #{w 1590}#
                              (begin
                                (let ((#{t 1611}#
                                        (#{source-annotation 326}#
                                          #{e 1608}#)))
                                  (if #{t 1611}# #{t 1611}# #{s 1591}#)))
                              #f
                              #{mod 1594}#
                              #f))))
                      (lambda (#{type 1613}#
                               #{value 1614}#
                               #{e 1615}#
                               #{w 1616}#
                               #{s 1617}#
                               #{mod 1618}#)
                        (if (eqv? #{type 1613}# 'begin-form)
                          (begin
                            (let ((#{tmp 1627}#
                                    ($sc-dispatch #{e 1615}# '(_))))
                              (if #{tmp 1627}#
                                (@apply (lambda () #{exps 1595}#) #{tmp 1627}#)
                                (begin
                                  (let ((#{tmp 1628}#
                                          ($sc-dispatch
                                            #{e 1615}#
                                            '(_ any . each-any))))
                                    (if #{tmp 1628}#
                                      (@apply
                                        (lambda (#{e1 1631}# #{e2 1632}#)
                                          (#{scan 1587}#
                                            (cons #{e1 1631}# #{e2 1632}#)
                                            #{r 1589}#
                                            #{w 1616}#
                                            #{s 1617}#
                                            #{m 1592}#
                                            #{esew 1593}#
                                            #{mod 1618}#
                                            #{exps 1595}#))
                                        #{tmp 1628}#)
                                      (syntax-violation
                                        #f
                                        "source expression failed to match any pattern"
                                        #{e 1615}#)))))))
                          (if (eqv? #{type 1613}# 'local-syntax-form)
                            (#{chi-local-syntax 446}#
                              #{value 1614}#
                              #{e 1615}#
                              #{r 1589}#
                              #{w 1616}#
                              #{s 1617}#
                              #{mod 1618}#
                              (lambda (#{body 1635}#
                                       #{r 1636}#
                                       #{w 1637}#
                                       #{s 1638}#
                                       #{mod 1639}#)
                                (#{scan 1587}#
                                  #{body 1635}#
                                  #{r 1636}#
                                  #{w 1637}#
                                  #{s 1638}#
                                  #{m 1592}#
                                  #{esew 1593}#
                                  #{mod 1639}#
                                  #{exps 1595}#)))
                            (if (eqv? #{type 1613}# 'eval-when-form)
                              (begin
                                (let ((#{tmp 1647}#
                                        ($sc-dispatch
                                          #{e 1615}#
                                          '(_ each-any any . each-any))))
                                  (if #{tmp 1647}#
                                    (@apply
                                      (lambda (#{x 1651}#
                                               #{e1 1652}#
                                               #{e2 1653}#)
                                        (begin
                                          (let ((#{when-list 1656}#
                                                  (#{chi-when-list 432}#
                                                    #{e 1615}#
                                                    #{x 1651}#
                                                    #{w 1616}#))
                                                (#{body 1657}#
                                                  (cons #{e1 1652}#
                                                        #{e2 1653}#)))
                                            (if (eq? #{m 1592}# 'e)
                                              (if (memq 'eval
                                                        #{when-list 1656}#)
                                                (#{scan 1587}#
                                                  #{body 1657}#
                                                  #{r 1589}#
                                                  #{w 1616}#
                                                  #{s 1617}#
                                                  (if (memq 'expand
                                                            #{when-list 1656}#)
                                                    'c&e
                                                    'e)
                                                  '(eval)
                                                  #{mod 1618}#
                                                  #{exps 1595}#)
                                                (begin
                                                  (if (memq 'expand
                                                            #{when-list 1656}#)
                                                    (#{top-level-eval-hook 254}#
                                                      (#{chi-top-sequence 428}#
                                                        #{body 1657}#
                                                        #{r 1589}#
                                                        #{w 1616}#
                                                        #{s 1617}#
                                                        'e
                                                        '(eval)
                                                        #{mod 1618}#)
                                                      #{mod 1618}#))
                                                  (values #{exps 1595}#)))
                                              (if (memq 'load
                                                        #{when-list 1656}#)
                                                (if (begin
                                                      (let ((#{t 1666}#
                                                              (memq 'compile
                                                                    #{when-list 1656}#)))
                                                        (if #{t 1666}#
                                                          #{t 1666}#
                                                          (begin
                                                            (let ((#{t 1669}#
                                                                    (memq 'expand
                                                                          #{when-list 1656}#)))
                                                              (if #{t 1669}#
                                                                #{t 1669}#
                                                                (if (eq? #{m 1592}#
                                                                         'c&e)
                                                                  (memq 'eval
                                                                        #{when-list 1656}#)
                                                                  #f)))))))
                                                  (#{scan 1587}#
                                                    #{body 1657}#
                                                    #{r 1589}#
                                                    #{w 1616}#
                                                    #{s 1617}#
                                                    'c&e
                                                    '(compile load)
                                                    #{mod 1618}#
                                                    #{exps 1595}#)
                                                  (if (if (eq? #{m 1592}# 'c)
                                                        #t
                                                        (eq? #{m 1592}# 'c&e))
                                                    (#{scan 1587}#
                                                      #{body 1657}#
                                                      #{r 1589}#
                                                      #{w 1616}#
                                                      #{s 1617}#
                                                      'c
                                                      '(load)
                                                      #{mod 1618}#
                                                      #{exps 1595}#)
                                                    (values #{exps 1595}#)))
                                                (if (begin
                                                      (let ((#{t 1677}#
                                                              (memq 'compile
                                                                    #{when-list 1656}#)))
                                                        (if #{t 1677}#
                                                          #{t 1677}#
                                                          (begin
                                                            (let ((#{t 1680}#
                                                                    (memq 'expand
                                                                          #{when-list 1656}#)))
                                                              (if #{t 1680}#
                                                                #{t 1680}#
                                                                (if (eq? #{m 1592}#
                                                                         'c&e)
                                                                  (memq 'eval
                                                                        #{when-list 1656}#)
                                                                  #f)))))))
                                                  (begin
                                                    (#{top-level-eval-hook 254}#
                                                      (#{chi-top-sequence 428}#
                                                        #{body 1657}#
                                                        #{r 1589}#
                                                        #{w 1616}#
                                                        #{s 1617}#
                                                        'e
                                                        '(eval)
                                                        #{mod 1618}#)
                                                      #{mod 1618}#)
                                                    (values #{exps 1595}#))
                                                  (values #{exps 1595}#)))))))
                                      #{tmp 1647}#)
                                    (syntax-violation
                                      #f
                                      "source expression failed to match any pattern"
                                      #{e 1615}#))))
                              (if (eqv? #{type 1613}# 'define-syntax-form)
                                (begin
                                  (let ((#{n 1688}#
                                          (#{id-var-name 410}#
                                            #{value 1614}#
                                            #{w 1616}#))
                                        (#{r 1689}#
                                          (#{macros-only-env 340}#
                                            #{r 1589}#)))
                                    (if (eqv? #{m 1592}# 'c)
                                      (if (memq 'compile #{esew 1593}#)
                                        (begin
                                          (let ((#{e 1692}#
                                                  (#{chi-install-global 430}#
                                                    #{n 1688}#
                                                    (#{chi 436}#
                                                      #{e 1615}#
                                                      #{r 1689}#
                                                      #{w 1616}#
                                                      #{mod 1618}#))))
                                            (begin
                                              (#{top-level-eval-hook 254}#
                                                #{e 1692}#
                                                #{mod 1618}#)
                                              (if (memq 'load #{esew 1593}#)
                                                (values
                                                  (cons #{e 1692}#
                                                        #{exps 1595}#))
                                                (values #{exps 1595}#)))))
                                        (if (memq 'load #{esew 1593}#)
                                          (values
                                            (cons (#{chi-install-global 430}#
                                                    #{n 1688}#
                                                    (#{chi 436}#
                                                      #{e 1615}#
                                                      #{r 1689}#
                                                      #{w 1616}#
                                                      #{mod 1618}#))
                                                  #{exps 1595}#))
                                          (values #{exps 1595}#)))
                                      (if (eqv? #{m 1592}# 'c&e)
                                        (begin
                                          (let ((#{e 1695}#
                                                  (#{chi-install-global 430}#
                                                    #{n 1688}#
                                                    (#{chi 436}#
                                                      #{e 1615}#
                                                      #{r 1689}#
                                                      #{w 1616}#
                                                      #{mod 1618}#))))
                                            (begin
                                              (#{top-level-eval-hook 254}#
                                                #{e 1695}#
                                                #{mod 1618}#)
                                              (values
                                                (cons #{e 1695}#
                                                      #{exps 1595}#)))))
                                        (begin
                                          (if (memq 'eval #{esew 1593}#)
                                            (#{top-level-eval-hook 254}#
                                              (#{chi-install-global 430}#
                                                #{n 1688}#
                                                (#{chi 436}#
                                                  #{e 1615}#
                                                  #{r 1689}#
                                                  #{w 1616}#
                                                  #{mod 1618}#))
                                              #{mod 1618}#))
                                          (values #{exps 1595}#))))))
                                (if (eqv? #{type 1613}# 'define-form)
                                  (begin
                                    (let ((#{n 1700}#
                                            (#{id-var-name 410}#
                                              #{value 1614}#
                                              #{w 1616}#)))
                                      (begin
                                        (let ((#{type 1702}#
                                                (car (#{lookup 342}#
                                                       #{n 1700}#
                                                       #{r 1589}#
                                                       #{mod 1618}#))))
                                          (if (if (eqv? #{type 1702}# 'global)
                                                #t
                                                (if (eqv? #{type 1702}# 'core)
                                                  #t
                                                  (if (eqv? #{type 1702}#
                                                            'macro)
                                                    #t
                                                    (eqv? #{type 1702}#
                                                          'module-ref))))
                                            (begin
                                              (if (if (if (eq? #{m 1592}# 'c)
                                                        #t
                                                        (eq? #{m 1592}# 'c&e))
                                                    (if (not (module-local-variable
                                                               (current-module)
                                                               #{n 1700}#))
                                                      (current-module)
                                                      #f)
                                                    #f)
                                                (begin
                                                  (let ((#{old 1709}#
                                                          (module-variable
                                                            (current-module)
                                                            #{n 1700}#)))
                                                    (if (if (variable?
                                                              #{old 1709}#)
                                                          (variable-bound?
                                                            #{old 1709}#)
                                                          #f)
                                                      (module-define!
                                                        (current-module)
                                                        #{n 1700}#
                                                        (variable-ref
                                                          #{old 1709}#))
                                                      (module-add!
                                                        (current-module)
                                                        #{n 1700}#
                                                        (make-undefined-variable))))))
                                              (values
                                                (cons (if (eq? #{m 1592}# 'c&e)
                                                        (begin
                                                          (let ((#{x 1713}#
                                                                  (#{build-global-definition 286}#
                                                                    #{s 1617}#
                                                                    #{n 1700}#
                                                                    (#{chi 436}#
                                                                      #{e 1615}#
                                                                      #{r 1589}#
                                                                      #{w 1616}#
                                                                      #{mod 1618}#))))
                                                            (begin
                                                              (#{top-level-eval-hook 254}#
                                                                #{x 1713}#
                                                                #{mod 1618}#)
                                                              #{x 1713}#)))
                                                        (lambda ()
                                                          (#{build-global-definition 286}#
                                                            #{s 1617}#
                                                            #{n 1700}#
                                                            (#{chi 436}#
                                                              #{e 1615}#
                                                              #{r 1589}#
                                                              #{w 1616}#
                                                              #{mod 1618}#))))
                                                      #{exps 1595}#)))
                                            (if (eqv? #{type 1702}#
                                                      'displaced-lexical)
                                              (syntax-violation
                                                #f
                                                "identifier out of context"
                                                #{e 1615}#
                                                (#{wrap 422}#
                                                  #{value 1614}#
                                                  #{w 1616}#
                                                  #{mod 1618}#))
                                              (syntax-violation
                                                #f
                                                "cannot define keyword at top level"
                                                #{e 1615}#
                                                (#{wrap 422}#
                                                  #{value 1614}#
                                                  #{w 1616}#
                                                  #{mod 1618}#))))))))
                                  (values
                                    (cons (if (eq? #{m 1592}# 'c&e)
                                            (begin
                                              (let ((#{x 1718}#
                                                      (#{chi-expr 438}#
                                                        #{type 1613}#
                                                        #{value 1614}#
                                                        #{e 1615}#
                                                        #{r 1589}#
                                                        #{w 1616}#
                                                        #{s 1617}#
                                                        #{mod 1618}#)))
                                                (begin
                                                  (#{top-level-eval-hook 254}#
                                                    #{x 1718}#
                                                    #{mod 1618}#)
                                                  #{x 1718}#)))
                                            (lambda ()
                                              (#{chi-expr 438}#
                                                #{type 1613}#
                                                #{value 1614}#
                                                #{e 1615}#
                                                #{r 1589}#
                                                #{w 1616}#
                                                #{s 1617}#
                                                #{mod 1618}#)))
                                          #{exps 1595}#))))))))))
                  (lambda (#{exps 1719}#)
                    (#{scan 1587}#
                      (cdr #{body 1588}#)
                      #{r 1589}#
                      #{w 1590}#
                      #{s 1591}#
                      #{m 1592}#
                      #{esew 1593}#
                      #{mod 1594}#
                      #{exps 1719}#)))))))
         (begin
           (call-with-values
             (lambda ()
               (#{scan 1587}#
                 #{body 1572}#
                 #{r 1573}#
                 #{w 1574}#
                 #{s 1575}#
                 #{m 1576}#
                 #{esew 1577}#
                 #{mod 1578}#
                 '()))
             (lambda (#{exps 1721}#)
               (if (null? #{exps 1721}#)
                 (#{build-void 268}# #{s 1575}#)
                 (#{build-sequence 298}#
                   #{s 1575}#
                   (letrec*
                     ((#{lp 1726}#
                        (lambda (#{in 1727}# #{out 1728}#)
                          (if (null? #{in 1727}#)
                            #{out 1728}#
                            (begin
                              (let ((#{e 1730}# (car #{in 1727}#)))
                                (#{lp 1726}#
                                  (cdr #{in 1727}#)
                                  (cons (if (procedure? #{e 1730}#)
                                          (#{e 1730}#)
                                          #{e 1730}#)
                                        #{out 1728}#))))))))
                     (begin (#{lp 1726}# #{exps 1721}# '())))))))))))
   (#{chi-install-global 430}#
     (lambda (#{name 1731}# #{e 1732}#)
       (#{build-global-definition 286}#
         #f
         #{name 1731}#
         (#{build-application 270}#
           #f
           (#{build-primref 294}#
             #f
             'make-syntax-transformer)
           (list (#{build-data 296}# #f #{name 1731}#)
                 (#{build-data 296}# #f 'macro)
                 #{e 1732}#)))))
   (#{chi-when-list 432}#
     (lambda (#{e 1740}# #{when-list 1741}# #{w 1742}#)
       (letrec*
         ((#{f 1749}#
            (lambda (#{when-list 1750}# #{situations 1751}#)
              (if (null? #{when-list 1750}#)
                #{situations 1751}#
                (#{f 1749}#
                  (cdr #{when-list 1750}#)
                  (cons (begin
                          (let ((#{x 1753}# (car #{when-list 1750}#)))
                            (if (#{free-id=? 412}#
                                  #{x 1753}#
                                  '#(syntax-object
                                     compile
                                     ((top)
                                      #(ribcage () () ())
                                      #(ribcage () () ())
                                      #(ribcage () () ())
                                      #(ribcage #(x) #((top)) #("i1752"))
                                      #(ribcage () () ())
                                      #(ribcage
                                        #(f when-list situations)
                                        #((top) (top) (top))
                                        #("i1746" "i1747" "i1748"))
                                      #(ribcage () () ())
                                      #(ribcage
                                        #(e when-list w)
                                        #((top) (top) (top))
                                        #("i1743" "i1744" "i1745"))
                                      #(ribcage
                                        (lambda-var-list
                                          gen-var
                                          strip
                                          chi-lambda-case
                                          lambda*-formals
                                          chi-simple-lambda
                                          lambda-formals
                                          ellipsis?
                                          chi-void
                                          eval-local-transformer
                                          chi-local-syntax
                                          chi-body
                                          chi-macro
                                          chi-application
                                          chi-expr
                                          chi
                                          syntax-type
                                          chi-when-list
                                          chi-install-global
                                          chi-top-sequence
                                          chi-sequence
                                          source-wrap
                                          wrap
                                          bound-id-member?
                                          distinct-bound-ids?
                                          valid-bound-ids?
                                          bound-id=?
                                          free-id=?
                                          id-var-name
                                          same-marks?
                                          join-marks
                                          join-wraps
                                          smart-append
                                          make-binding-wrap
                                          extend-ribcage!
                                          make-empty-ribcage
                                          new-mark
                                          anti-mark
                                          the-anti-mark
                                          top-marked?
                                          top-wrap
                                          empty-wrap
                                          set-ribcage-labels!
                                          set-ribcage-marks!
                                          set-ribcage-symnames!
                                          ribcage-labels
                                          ribcage-marks
                                          ribcage-symnames
                                          ribcage?
                                          make-ribcage
                                          gen-labels
                                          gen-label
                                          make-rename
                                          rename-marks
                                          rename-new
                                          rename-old
                                          subst-rename?
                                          wrap-subst
                                          wrap-marks
                                          make-wrap
                                          id-sym-name&marks
                                          id-sym-name
                                          id?
                                          nonsymbol-id?
                                          global-extend
                                          lookup
                                          macros-only-env
                                          extend-var-env
                                          extend-env
                                          null-env
                                          binding-value
                                          binding-type
                                          make-binding
                                          arg-check
                                          source-annotation
                                          no-source
                                          set-syntax-object-module!
                                          set-syntax-object-wrap!
                                          set-syntax-object-expression!
                                          syntax-object-module
                                          syntax-object-wrap
                                          syntax-object-expression
                                          syntax-object?
                                          make-syntax-object
                                          build-lexical-var
                                          build-letrec
                                          build-named-let
                                          build-let
                                          build-sequence
                                          build-data
                                          build-primref
                                          build-lambda-case
                                          build-case-lambda
                                          build-simple-lambda
                                          build-global-definition
                                          build-global-assignment
                                          build-global-reference
                                          analyze-variable
                                          build-lexical-assignment
                                          build-lexical-reference
                                          build-dynlet
                                          build-conditional
                                          build-application
                                          build-void
                                          maybe-name-value!
                                          decorate-source
                                          get-global-definition-hook
                                          put-global-definition-hook
                                          gensym-hook
                                          local-eval-hook
                                          top-level-eval-hook
                                          fx<
                                          fx=
                                          fx-
                                          fx+
                                          set-lambda-meta!
                                          lambda-meta
                                          lambda?
                                          make-dynlet
                                          make-letrec
                                          make-let
                                          make-lambda-case
                                          make-lambda
                                          make-sequence
                                          make-application
                                          make-conditional
                                          make-toplevel-define
                                          make-toplevel-set
                                          make-toplevel-ref
                                          make-module-set
                                          make-module-ref
                                          make-lexical-set
                                          make-lexical-ref
                                          make-primitive-ref
                                          make-const
                                          make-void)
                                        ((top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top))
                                        ("i465"
                                         "i463"
                                         "i461"
                                         "i459"
                                         "i457"
                                         "i455"
                                         "i453"
                                         "i451"
                                         "i449"
                                         "i447"
                                         "i445"
                                         "i443"
                                         "i441"
                                         "i439"
                                         "i437"
                                         "i435"
                                         "i433"
                                         "i431"
                                         "i429"
                                         "i427"
                                         "i425"
                                         "i423"
                                         "i421"
                                         "i419"
                                         "i417"
                                         "i415"
                                         "i413"
                                         "i411"
                                         "i409"
                                         "i407"
                                         "i405"
                                         "i403"
                                         "i401"
                                         "i399"
                                         "i397"
                                         "i396"
                                         "i394"
                                         "i391"
                                         "i390"
                                         "i389"
                                         "i387"
                                         "i386"
                                         "i384"
                                         "i382"
                                         "i380"
                                         "i378"
                                         "i376"
                                         "i374"
                                         "i372"
                                         "i370"
                                         "i367"
                                         "i365"
                                         "i364"
                                         "i362"
                                         "i360"
                                         "i358"
                                         "i356"
                                         "i355"
                                         "i354"
                                         "i353"
                                         "i351"
                                         "i350"
                                         "i347"
                                         "i345"
                                         "i343"
                                         "i341"
                                         "i339"
                                         "i337"
                                         "i335"
                                         "i334"
                                         "i333"
                                         "i331"
                                         "i329"
                                         "i328"
                                         "i325"
                                         "i324"
                                         "i322"
                                         "i320"
                                         "i318"
                                         "i316"
                                         "i314"
                                         "i312"
                                         "i310"
                                         "i308"
                                         "i306"
                                         "i303"
                                         "i301"
                                         "i299"
                                         "i297"
                                         "i295"
                                         "i293"
                                         "i291"
                                         "i289"
                                         "i287"
                                         "i285"
                                         "i283"
                                         "i281"
                                         "i279"
                                         "i277"
                                         "i275"
                                         "i273"
                                         "i271"
                                         "i269"
                                         "i267"
                                         "i265"
                                         "i263"
                                         "i261"
                                         "i259"
                                         "i258"
                                         "i255"
                                         "i253"
                                         "i252"
                                         "i251"
                                         "i250"
                                         "i249"
                                         "i247"
                                         "i245"
                                         "i243"
                                         "i240"
                                         "i238"
                                         "i236"
                                         "i234"
                                         "i232"
                                         "i230"
                                         "i228"
                                         "i226"
                                         "i224"
                                         "i222"
                                         "i220"
                                         "i218"
                                         "i216"
                                         "i214"
                                         "i212"
                                         "i210"
                                         "i208"
                                         "i206"))
                                      #(ribcage
                                        (define-structure
                                          define-expansion-accessors
                                          define-expansion-constructors)
                                        ((top) (top) (top))
                                        ("i44" "i43" "i42")))
                                     (hygiene guile)))
                              'compile
                              (if (#{free-id=? 412}#
                                    #{x 1753}#
                                    '#(syntax-object
                                       load
                                       ((top)
                                        #(ribcage () () ())
                                        #(ribcage () () ())
                                        #(ribcage () () ())
                                        #(ribcage #(x) #((top)) #("i1752"))
                                        #(ribcage () () ())
                                        #(ribcage
                                          #(f when-list situations)
                                          #((top) (top) (top))
                                          #("i1746" "i1747" "i1748"))
                                        #(ribcage () () ())
                                        #(ribcage
                                          #(e when-list w)
                                          #((top) (top) (top))
                                          #("i1743" "i1744" "i1745"))
                                        #(ribcage
                                          (lambda-var-list
                                            gen-var
                                            strip
                                            chi-lambda-case
                                            lambda*-formals
                                            chi-simple-lambda
                                            lambda-formals
                                            ellipsis?
                                            chi-void
                                            eval-local-transformer
                                            chi-local-syntax
                                            chi-body
                                            chi-macro
                                            chi-application
                                            chi-expr
                                            chi
                                            syntax-type
                                            chi-when-list
                                            chi-install-global
                                            chi-top-sequence
                                            chi-sequence
                                            source-wrap
                                            wrap
                                            bound-id-member?
                                            distinct-bound-ids?
                                            valid-bound-ids?
                                            bound-id=?
                                            free-id=?
                                            id-var-name
                                            same-marks?
                                            join-marks
                                            join-wraps
                                            smart-append
                                            make-binding-wrap
                                            extend-ribcage!
                                            make-empty-ribcage
                                            new-mark
                                            anti-mark
                                            the-anti-mark
                                            top-marked?
                                            top-wrap
                                            empty-wrap
                                            set-ribcage-labels!
                                            set-ribcage-marks!
                                            set-ribcage-symnames!
                                            ribcage-labels
                                            ribcage-marks
                                            ribcage-symnames
                                            ribcage?
                                            make-ribcage
                                            gen-labels
                                            gen-label
                                            make-rename
                                            rename-marks
                                            rename-new
                                            rename-old
                                            subst-rename?
                                            wrap-subst
                                            wrap-marks
                                            make-wrap
                                            id-sym-name&marks
                                            id-sym-name
                                            id?
                                            nonsymbol-id?
                                            global-extend
                                            lookup
                                            macros-only-env
                                            extend-var-env
                                            extend-env
                                            null-env
                                            binding-value
                                            binding-type
                                            make-binding
                                            arg-check
                                            source-annotation
                                            no-source
                                            set-syntax-object-module!
                                            set-syntax-object-wrap!
                                            set-syntax-object-expression!
                                            syntax-object-module
                                            syntax-object-wrap
                                            syntax-object-expression
                                            syntax-object?
                                            make-syntax-object
                                            build-lexical-var
                                            build-letrec
                                            build-named-let
                                            build-let
                                            build-sequence
                                            build-data
                                            build-primref
                                            build-lambda-case
                                            build-case-lambda
                                            build-simple-lambda
                                            build-global-definition
                                            build-global-assignment
                                            build-global-reference
                                            analyze-variable
                                            build-lexical-assignment
                                            build-lexical-reference
                                            build-dynlet
                                            build-conditional
                                            build-application
                                            build-void
                                            maybe-name-value!
                                            decorate-source
                                            get-global-definition-hook
                                            put-global-definition-hook
                                            gensym-hook
                                            local-eval-hook
                                            top-level-eval-hook
                                            fx<
                                            fx=
                                            fx-
                                            fx+
                                            set-lambda-meta!
                                            lambda-meta
                                            lambda?
                                            make-dynlet
                                            make-letrec
                                            make-let
                                            make-lambda-case
                                            make-lambda
                                            make-sequence
                                            make-application
                                            make-conditional
                                            make-toplevel-define
                                            make-toplevel-set
                                            make-toplevel-ref
                                            make-module-set
                                            make-module-ref
                                            make-lexical-set
                                            make-lexical-ref
                                            make-primitive-ref
                                            make-const
                                            make-void)
                                          ((top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top))
                                          ("i465"
                                           "i463"
                                           "i461"
                                           "i459"
                                           "i457"
                                           "i455"
                                           "i453"
                                           "i451"
                                           "i449"
                                           "i447"
                                           "i445"
                                           "i443"
                                           "i441"
                                           "i439"
                                           "i437"
                                           "i435"
                                           "i433"
                                           "i431"
                                           "i429"
                                           "i427"
                                           "i425"
                                           "i423"
                                           "i421"
                                           "i419"
                                           "i417"
                                           "i415"
                                           "i413"
                                           "i411"
                                           "i409"
                                           "i407"
                                           "i405"
                                           "i403"
                                           "i401"
                                           "i399"
                                           "i397"
                                           "i396"
                                           "i394"
                                           "i391"
                                           "i390"
                                           "i389"
                                           "i387"
                                           "i386"
                                           "i384"
                                           "i382"
                                           "i380"
                                           "i378"
                                           "i376"
                                           "i374"
                                           "i372"
                                           "i370"
                                           "i367"
                                           "i365"
                                           "i364"
                                           "i362"
                                           "i360"
                                           "i358"
                                           "i356"
                                           "i355"
                                           "i354"
                                           "i353"
                                           "i351"
                                           "i350"
                                           "i347"
                                           "i345"
                                           "i343"
                                           "i341"
                                           "i339"
                                           "i337"
                                           "i335"
                                           "i334"
                                           "i333"
                                           "i331"
                                           "i329"
                                           "i328"
                                           "i325"
                                           "i324"
                                           "i322"
                                           "i320"
                                           "i318"
                                           "i316"
                                           "i314"
                                           "i312"
                                           "i310"
                                           "i308"
                                           "i306"
                                           "i303"
                                           "i301"
                                           "i299"
                                           "i297"
                                           "i295"
                                           "i293"
                                           "i291"
                                           "i289"
                                           "i287"
                                           "i285"
                                           "i283"
                                           "i281"
                                           "i279"
                                           "i277"
                                           "i275"
                                           "i273"
                                           "i271"
                                           "i269"
                                           "i267"
                                           "i265"
                                           "i263"
                                           "i261"
                                           "i259"
                                           "i258"
                                           "i255"
                                           "i253"
                                           "i252"
                                           "i251"
                                           "i250"
                                           "i249"
                                           "i247"
                                           "i245"
                                           "i243"
                                           "i240"
                                           "i238"
                                           "i236"
                                           "i234"
                                           "i232"
                                           "i230"
                                           "i228"
                                           "i226"
                                           "i224"
                                           "i222"
                                           "i220"
                                           "i218"
                                           "i216"
                                           "i214"
                                           "i212"
                                           "i210"
                                           "i208"
                                           "i206"))
                                        #(ribcage
                                          (define-structure
                                            define-expansion-accessors
                                            define-expansion-constructors)
                                          ((top) (top) (top))
                                          ("i44" "i43" "i42")))
                                       (hygiene guile)))
                                'load
                                (if (#{free-id=? 412}#
                                      #{x 1753}#
                                      '#(syntax-object
                                         eval
                                         ((top)
                                          #(ribcage () () ())
                                          #(ribcage () () ())
                                          #(ribcage () () ())
                                          #(ribcage #(x) #((top)) #("i1752"))
                                          #(ribcage () () ())
                                          #(ribcage
                                            #(f when-list situations)
                                            #((top) (top) (top))
                                            #("i1746" "i1747" "i1748"))
                                          #(ribcage () () ())
                                          #(ribcage
                                            #(e when-list w)
                                            #((top) (top) (top))
                                            #("i1743" "i1744" "i1745"))
                                          #(ribcage
                                            (lambda-var-list
                                              gen-var
                                              strip
                                              chi-lambda-case
                                              lambda*-formals
                                              chi-simple-lambda
                                              lambda-formals
                                              ellipsis?
                                              chi-void
                                              eval-local-transformer
                                              chi-local-syntax
                                              chi-body
                                              chi-macro
                                              chi-application
                                              chi-expr
                                              chi
                                              syntax-type
                                              chi-when-list
                                              chi-install-global
                                              chi-top-sequence
                                              chi-sequence
                                              source-wrap
                                              wrap
                                              bound-id-member?
                                              distinct-bound-ids?
                                              valid-bound-ids?
                                              bound-id=?
                                              free-id=?
                                              id-var-name
                                              same-marks?
                                              join-marks
                                              join-wraps
                                              smart-append
                                              make-binding-wrap
                                              extend-ribcage!
                                              make-empty-ribcage
                                              new-mark
                                              anti-mark
                                              the-anti-mark
                                              top-marked?
                                              top-wrap
                                              empty-wrap
                                              set-ribcage-labels!
                                              set-ribcage-marks!
                                              set-ribcage-symnames!
                                              ribcage-labels
                                              ribcage-marks
                                              ribcage-symnames
                                              ribcage?
                                              make-ribcage
                                              gen-labels
                                              gen-label
                                              make-rename
                                              rename-marks
                                              rename-new
                                              rename-old
                                              subst-rename?
                                              wrap-subst
                                              wrap-marks
                                              make-wrap
                                              id-sym-name&marks
                                              id-sym-name
                                              id?
                                              nonsymbol-id?
                                              global-extend
                                              lookup
                                              macros-only-env
                                              extend-var-env
                                              extend-env
                                              null-env
                                              binding-value
                                              binding-type
                                              make-binding
                                              arg-check
                                              source-annotation
                                              no-source
                                              set-syntax-object-module!
                                              set-syntax-object-wrap!
                                              set-syntax-object-expression!
                                              syntax-object-module
                                              syntax-object-wrap
                                              syntax-object-expression
                                              syntax-object?
                                              make-syntax-object
                                              build-lexical-var
                                              build-letrec
                                              build-named-let
                                              build-let
                                              build-sequence
                                              build-data
                                              build-primref
                                              build-lambda-case
                                              build-case-lambda
                                              build-simple-lambda
                                              build-global-definition
                                              build-global-assignment
                                              build-global-reference
                                              analyze-variable
                                              build-lexical-assignment
                                              build-lexical-reference
                                              build-dynlet
                                              build-conditional
                                              build-application
                                              build-void
                                              maybe-name-value!
                                              decorate-source
                                              get-global-definition-hook
                                              put-global-definition-hook
                                              gensym-hook
                                              local-eval-hook
                                              top-level-eval-hook
                                              fx<
                                              fx=
                                              fx-
                                              fx+
                                              set-lambda-meta!
                                              lambda-meta
                                              lambda?
                                              make-dynlet
                                              make-letrec
                                              make-let
                                              make-lambda-case
                                              make-lambda
                                              make-sequence
                                              make-application
                                              make-conditional
                                              make-toplevel-define
                                              make-toplevel-set
                                              make-toplevel-ref
                                              make-module-set
                                              make-module-ref
                                              make-lexical-set
                                              make-lexical-ref
                                              make-primitive-ref
                                              make-const
                                              make-void)
                                            ((top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top))
                                            ("i465"
                                             "i463"
                                             "i461"
                                             "i459"
                                             "i457"
                                             "i455"
                                             "i453"
                                             "i451"
                                             "i449"
                                             "i447"
                                             "i445"
                                             "i443"
                                             "i441"
                                             "i439"
                                             "i437"
                                             "i435"
                                             "i433"
                                             "i431"
                                             "i429"
                                             "i427"
                                             "i425"
                                             "i423"
                                             "i421"
                                             "i419"
                                             "i417"
                                             "i415"
                                             "i413"
                                             "i411"
                                             "i409"
                                             "i407"
                                             "i405"
                                             "i403"
                                             "i401"
                                             "i399"
                                             "i397"
                                             "i396"
                                             "i394"
                                             "i391"
                                             "i390"
                                             "i389"
                                             "i387"
                                             "i386"
                                             "i384"
                                             "i382"
                                             "i380"
                                             "i378"
                                             "i376"
                                             "i374"
                                             "i372"
                                             "i370"
                                             "i367"
                                             "i365"
                                             "i364"
                                             "i362"
                                             "i360"
                                             "i358"
                                             "i356"
                                             "i355"
                                             "i354"
                                             "i353"
                                             "i351"
                                             "i350"
                                             "i347"
                                             "i345"
                                             "i343"
                                             "i341"
                                             "i339"
                                             "i337"
                                             "i335"
                                             "i334"
                                             "i333"
                                             "i331"
                                             "i329"
                                             "i328"
                                             "i325"
                                             "i324"
                                             "i322"
                                             "i320"
                                             "i318"
                                             "i316"
                                             "i314"
                                             "i312"
                                             "i310"
                                             "i308"
                                             "i306"
                                             "i303"
                                             "i301"
                                             "i299"
                                             "i297"
                                             "i295"
                                             "i293"
                                             "i291"
                                             "i289"
                                             "i287"
                                             "i285"
                                             "i283"
                                             "i281"
                                             "i279"
                                             "i277"
                                             "i275"
                                             "i273"
                                             "i271"
                                             "i269"
                                             "i267"
                                             "i265"
                                             "i263"
                                             "i261"
                                             "i259"
                                             "i258"
                                             "i255"
                                             "i253"
                                             "i252"
                                             "i251"
                                             "i250"
                                             "i249"
                                             "i247"
                                             "i245"
                                             "i243"
                                             "i240"
                                             "i238"
                                             "i236"
                                             "i234"
                                             "i232"
                                             "i230"
                                             "i228"
                                             "i226"
                                             "i224"
                                             "i222"
                                             "i220"
                                             "i218"
                                             "i216"
                                             "i214"
                                             "i212"
                                             "i210"
                                             "i208"
                                             "i206"))
                                          #(ribcage
                                            (define-structure
                                              define-expansion-accessors
                                              define-expansion-constructors)
                                            ((top) (top) (top))
                                            ("i44" "i43" "i42")))
                                         (hygiene guile)))
                                  'eval
                                  (if (#{free-id=? 412}#
                                        #{x 1753}#
                                        '#(syntax-object
                                           expand
                                           ((top)
                                            #(ribcage () () ())
                                            #(ribcage () () ())
                                            #(ribcage () () ())
                                            #(ribcage #(x) #((top)) #("i1752"))
                                            #(ribcage () () ())
                                            #(ribcage
                                              #(f when-list situations)
                                              #((top) (top) (top))
                                              #("i1746" "i1747" "i1748"))
                                            #(ribcage () () ())
                                            #(ribcage
                                              #(e when-list w)
                                              #((top) (top) (top))
                                              #("i1743" "i1744" "i1745"))
                                            #(ribcage
                                              (lambda-var-list
                                                gen-var
                                                strip
                                                chi-lambda-case
                                                lambda*-formals
                                                chi-simple-lambda
                                                lambda-formals
                                                ellipsis?
                                                chi-void
                                                eval-local-transformer
                                                chi-local-syntax
                                                chi-body
                                                chi-macro
                                                chi-application
                                                chi-expr
                                                chi
                                                syntax-type
                                                chi-when-list
                                                chi-install-global
                                                chi-top-sequence
                                                chi-sequence
                                                source-wrap
                                                wrap
                                                bound-id-member?
                                                distinct-bound-ids?
                                                valid-bound-ids?
                                                bound-id=?
                                                free-id=?
                                                id-var-name
                                                same-marks?
                                                join-marks
                                                join-wraps
                                                smart-append
                                                make-binding-wrap
                                                extend-ribcage!
                                                make-empty-ribcage
                                                new-mark
                                                anti-mark
                                                the-anti-mark
                                                top-marked?
                                                top-wrap
                                                empty-wrap
                                                set-ribcage-labels!
                                                set-ribcage-marks!
                                                set-ribcage-symnames!
                                                ribcage-labels
                                                ribcage-marks
                                                ribcage-symnames
                                                ribcage?
                                                make-ribcage
                                                gen-labels
                                                gen-label
                                                make-rename
                                                rename-marks
                                                rename-new
                                                rename-old
                                                subst-rename?
                                                wrap-subst
                                                wrap-marks
                                                make-wrap
                                                id-sym-name&marks
                                                id-sym-name
                                                id?
                                                nonsymbol-id?
                                                global-extend
                                                lookup
                                                macros-only-env
                                                extend-var-env
                                                extend-env
                                                null-env
                                                binding-value
                                                binding-type
                                                make-binding
                                                arg-check
                                                source-annotation
                                                no-source
                                                set-syntax-object-module!
                                                set-syntax-object-wrap!
                                                set-syntax-object-expression!
                                                syntax-object-module
                                                syntax-object-wrap
                                                syntax-object-expression
                                                syntax-object?
                                                make-syntax-object
                                                build-lexical-var
                                                build-letrec
                                                build-named-let
                                                build-let
                                                build-sequence
                                                build-data
                                                build-primref
                                                build-lambda-case
                                                build-case-lambda
                                                build-simple-lambda
                                                build-global-definition
                                                build-global-assignment
                                                build-global-reference
                                                analyze-variable
                                                build-lexical-assignment
                                                build-lexical-reference
                                                build-dynlet
                                                build-conditional
                                                build-application
                                                build-void
                                                maybe-name-value!
                                                decorate-source
                                                get-global-definition-hook
                                                put-global-definition-hook
                                                gensym-hook
                                                local-eval-hook
                                                top-level-eval-hook
                                                fx<
                                                fx=
                                                fx-
                                                fx+
                                                set-lambda-meta!
                                                lambda-meta
                                                lambda?
                                                make-dynlet
                                                make-letrec
                                                make-let
                                                make-lambda-case
                                                make-lambda
                                                make-sequence
                                                make-application
                                                make-conditional
                                                make-toplevel-define
                                                make-toplevel-set
                                                make-toplevel-ref
                                                make-module-set
                                                make-module-ref
                                                make-lexical-set
                                                make-lexical-ref
                                                make-primitive-ref
                                                make-const
                                                make-void)
                                              ((top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top))
                                              ("i465"
                                               "i463"
                                               "i461"
                                               "i459"
                                               "i457"
                                               "i455"
                                               "i453"
                                               "i451"
                                               "i449"
                                               "i447"
                                               "i445"
                                               "i443"
                                               "i441"
                                               "i439"
                                               "i437"
                                               "i435"
                                               "i433"
                                               "i431"
                                               "i429"
                                               "i427"
                                               "i425"
                                               "i423"
                                               "i421"
                                               "i419"
                                               "i417"
                                               "i415"
                                               "i413"
                                               "i411"
                                               "i409"
                                               "i407"
                                               "i405"
                                               "i403"
                                               "i401"
                                               "i399"
                                               "i397"
                                               "i396"
                                               "i394"
                                               "i391"
                                               "i390"
                                               "i389"
                                               "i387"
                                               "i386"
                                               "i384"
                                               "i382"
                                               "i380"
                                               "i378"
                                               "i376"
                                               "i374"
                                               "i372"
                                               "i370"
                                               "i367"
                                               "i365"
                                               "i364"
                                               "i362"
                                               "i360"
                                               "i358"
                                               "i356"
                                               "i355"
                                               "i354"
                                               "i353"
                                               "i351"
                                               "i350"
                                               "i347"
                                               "i345"
                                               "i343"
                                               "i341"
                                               "i339"
                                               "i337"
                                               "i335"
                                               "i334"
                                               "i333"
                                               "i331"
                                               "i329"
                                               "i328"
                                               "i325"
                                               "i324"
                                               "i322"
                                               "i320"
                                               "i318"
                                               "i316"
                                               "i314"
                                               "i312"
                                               "i310"
                                               "i308"
                                               "i306"
                                               "i303"
                                               "i301"
                                               "i299"
                                               "i297"
                                               "i295"
                                               "i293"
                                               "i291"
                                               "i289"
                                               "i287"
                                               "i285"
                                               "i283"
                                               "i281"
                                               "i279"
                                               "i277"
                                               "i275"
                                               "i273"
                                               "i271"
                                               "i269"
                                               "i267"
                                               "i265"
                                               "i263"
                                               "i261"
                                               "i259"
                                               "i258"
                                               "i255"
                                               "i253"
                                               "i252"
                                               "i251"
                                               "i250"
                                               "i249"
                                               "i247"
                                               "i245"
                                               "i243"
                                               "i240"
                                               "i238"
                                               "i236"
                                               "i234"
                                               "i232"
                                               "i230"
                                               "i228"
                                               "i226"
                                               "i224"
                                               "i222"
                                               "i220"
                                               "i218"
                                               "i216"
                                               "i214"
                                               "i212"
                                               "i210"
                                               "i208"
                                               "i206"))
                                            #(ribcage
                                              (define-structure
                                                define-expansion-accessors
                                                define-expansion-constructors)
                                              ((top) (top) (top))
                                              ("i44" "i43" "i42")))
                                           (hygiene guile)))
                                    'expand
                                    (syntax-violation
                                      'eval-when
                                      "invalid situation"
                                      #{e 1740}#
                                      (#{wrap 422}#
                                        #{x 1753}#
                                        #{w 1742}#
                                        #f))))))))
                        #{situations 1751}#))))))
         (begin (#{f 1749}# #{when-list 1741}# '())))))
   (#{syntax-type 434}#
     (lambda (#{e 1763}#
              #{r 1764}#
              #{w 1765}#
              #{s 1766}#
              #{rib 1767}#
              #{mod 1768}#
              #{for-car? 1769}#)
       (if (symbol? #{e 1763}#)
         (begin
           (let ((#{n 1781}#
                   (#{id-var-name 410}# #{e 1763}# #{w 1765}#)))
             (begin
               (let ((#{b 1783}#
                       (#{lookup 342}#
                         #{n 1781}#
                         #{r 1764}#
                         #{mod 1768}#)))
                 (begin
                   (let ((#{type 1785}# (car #{b 1783}#)))
                     (if (eqv? #{type 1785}# 'lexical)
                       (values
                         #{type 1785}#
                         (cdr #{b 1783}#)
                         #{e 1763}#
                         #{w 1765}#
                         #{s 1766}#
                         #{mod 1768}#)
                       (if (eqv? #{type 1785}# 'global)
                         (values
                           #{type 1785}#
                           #{n 1781}#
                           #{e 1763}#
                           #{w 1765}#
                           #{s 1766}#
                           #{mod 1768}#)
                         (if (eqv? #{type 1785}# 'macro)
                           (if #{for-car? 1769}#
                             (values
                               #{type 1785}#
                               (cdr #{b 1783}#)
                               #{e 1763}#
                               #{w 1765}#
                               #{s 1766}#
                               #{mod 1768}#)
                             (#{syntax-type 434}#
                               (#{chi-macro 442}#
                                 (cdr #{b 1783}#)
                                 #{e 1763}#
                                 #{r 1764}#
                                 #{w 1765}#
                                 #{s 1766}#
                                 #{rib 1767}#
                                 #{mod 1768}#)
                               #{r 1764}#
                               '(())
                               #{s 1766}#
                               #{rib 1767}#
                               #{mod 1768}#
                               #f))
                           (values
                             #{type 1785}#
                             (cdr #{b 1783}#)
                             #{e 1763}#
                             #{w 1765}#
                             #{s 1766}#
                             #{mod 1768}#))))))))))
         (if (pair? #{e 1763}#)
           (begin
             (let ((#{first 1799}# (car #{e 1763}#)))
               (call-with-values
                 (lambda ()
                   (#{syntax-type 434}#
                     #{first 1799}#
                     #{r 1764}#
                     #{w 1765}#
                     #{s 1766}#
                     #{rib 1767}#
                     #{mod 1768}#
                     #t))
                 (lambda (#{ftype 1800}#
                          #{fval 1801}#
                          #{fe 1802}#
                          #{fw 1803}#
                          #{fs 1804}#
                          #{fmod 1805}#)
                   (if (eqv? #{ftype 1800}# 'lexical)
                     (values
                       'lexical-call
                       #{fval 1801}#
                       #{e 1763}#
                       #{w 1765}#
                       #{s 1766}#
                       #{mod 1768}#)
                     (if (eqv? #{ftype 1800}# 'global)
                       (values
                         'global-call
                         (#{make-syntax-object 309}#
                           #{fval 1801}#
                           #{w 1765}#
                           #{fmod 1805}#)
                         #{e 1763}#
                         #{w 1765}#
                         #{s 1766}#
                         #{mod 1768}#)
                       (if (eqv? #{ftype 1800}# 'macro)
                         (#{syntax-type 434}#
                           (#{chi-macro 442}#
                             #{fval 1801}#
                             #{e 1763}#
                             #{r 1764}#
                             #{w 1765}#
                             #{s 1766}#
                             #{rib 1767}#
                             #{mod 1768}#)
                           #{r 1764}#
                           '(())
                           #{s 1766}#
                           #{rib 1767}#
                           #{mod 1768}#
                           #{for-car? 1769}#)
                         (if (eqv? #{ftype 1800}# 'module-ref)
                           (call-with-values
                             (lambda ()
                               (#{fval 1801}#
                                 #{e 1763}#
                                 #{r 1764}#
                                 #{w 1765}#))
                             (lambda (#{e 1817}#
                                      #{r 1818}#
                                      #{w 1819}#
                                      #{s 1820}#
                                      #{mod 1821}#)
                               (#{syntax-type 434}#
                                 #{e 1817}#
                                 #{r 1818}#
                                 #{w 1819}#
                                 #{s 1820}#
                                 #{rib 1767}#
                                 #{mod 1821}#
                                 #{for-car? 1769}#)))
                           (if (eqv? #{ftype 1800}# 'core)
                             (values
                               'core-form
                               #{fval 1801}#
                               #{e 1763}#
                               #{w 1765}#
                               #{s 1766}#
                               #{mod 1768}#)
                             (if (eqv? #{ftype 1800}# 'local-syntax)
                               (values
                                 'local-syntax-form
                                 #{fval 1801}#
                                 #{e 1763}#
                                 #{w 1765}#
                                 #{s 1766}#
                                 #{mod 1768}#)
                               (if (eqv? #{ftype 1800}# 'begin)
                                 (values
                                   'begin-form
                                   #f
                                   #{e 1763}#
                                   #{w 1765}#
                                   #{s 1766}#
                                   #{mod 1768}#)
                                 (if (eqv? #{ftype 1800}# 'eval-when)
                                   (values
                                     'eval-when-form
                                     #f
                                     #{e 1763}#
                                     #{w 1765}#
                                     #{s 1766}#
                                     #{mod 1768}#)
                                   (if (eqv? #{ftype 1800}# 'define)
                                     (begin
                                       (let ((#{tmp 1833}#
                                               ($sc-dispatch
                                                 #{e 1763}#
                                                 '(_ any any))))
                                         (if (if #{tmp 1833}#
                                               (@apply
                                                 (lambda (#{name 1836}#
                                                          #{val 1837}#)
                                                   (#{id? 348}# #{name 1836}#))
                                                 #{tmp 1833}#)
                                               #f)
                                           (@apply
                                             (lambda (#{name 1840}#
                                                      #{val 1841}#)
                                               (values
                                                 'define-form
                                                 #{name 1840}#
                                                 #{val 1841}#
                                                 #{w 1765}#
                                                 #{s 1766}#
                                                 #{mod 1768}#))
                                             #{tmp 1833}#)
                                           (begin
                                             (let ((#{tmp 1842}#
                                                     ($sc-dispatch
                                                       #{e 1763}#
                                                       '(_ (any . any)
                                                           any
                                                           .
                                                           each-any))))
                                               (if (if #{tmp 1842}#
                                                     (@apply
                                                       (lambda (#{name 1847}#
                                                                #{args 1848}#
                                                                #{e1 1849}#
                                                                #{e2 1850}#)
                                                         (if (#{id? 348}#
                                                               #{name 1847}#)
                                                           (#{valid-bound-ids? 416}#
                                                             (#{lambda-var-list 466}#
                                                               #{args 1848}#))
                                                           #f))
                                                       #{tmp 1842}#)
                                                     #f)
                                                 (@apply
                                                   (lambda (#{name 1857}#
                                                            #{args 1858}#
                                                            #{e1 1859}#
                                                            #{e2 1860}#)
                                                     (values
                                                       'define-form
                                                       (#{wrap 422}#
                                                         #{name 1857}#
                                                         #{w 1765}#
                                                         #{mod 1768}#)
                                                       (#{decorate-source 264}#
                                                         (cons '#(syntax-object
                                                                  lambda
                                                                  ((top)
                                                                   #(ribcage
                                                                     #(name
                                                                       args
                                                                       e1
                                                                       e2)
                                                                     #((top)
                                                                       (top)
                                                                       (top)
                                                                       (top))
                                                                     #("i1853"
                                                                       "i1854"
                                                                       "i1855"
                                                                       "i1856"))
                                                                   #(ribcage
                                                                     ()
                                                                     ()
                                                                     ())
                                                                   #(ribcage
                                                                     ()
                                                                     ()
                                                                     ())
                                                                   #(ribcage
                                                                     #(ftype
                                                                       fval
                                                                       fe
                                                                       fw
                                                                       fs
                                                                       fmod)
                                                                     #((top)
                                                                       (top)
                                                                       (top)
                                                                       (top)
                                                                       (top)
                                                                       (top))
                                                                     #("i1806"
                                                                       "i1807"
                                                                       "i1808"
                                                                       "i1809"
                                                                       "i1810"
                                                                       "i1811"))
                                                                   #(ribcage
                                                                     ()
                                                                     ()
                                                                     ())
                                                                   #(ribcage
                                                                     #(first)
                                                                     #((top))
                                                                     #("i1798"))
                                                                   #(ribcage
                                                                     ()
                                                                     ()
                                                                     ())
                                                                   #(ribcage
                                                                     ()
                                                                     ()
                                                                     ())
                                                                   #(ribcage
                                                                     ()
                                                                     ()
                                                                     ())
                                                                   #(ribcage
                                                                     #(e
                                                                       r
                                                                       w
                                                                       s
                                                                       rib
                                                                       mod
                                                                       for-car?)
                                                                     #((top)
                                                                       (top)
                                                                       (top)
                                                                       (top)
                                                                       (top)
                                                                       (top)
                                                                       (top))
                                                                     #("i1770"
                                                                       "i1771"
                                                                       "i1772"
                                                                       "i1773"
                                                                       "i1774"
                                                                       "i1775"
                                                                       "i1776"))
                                                                   #(ribcage
                                                                     (lambda-var-list
                                                                       gen-var
                                                                       strip
                                                                       chi-lambda-case
                                                                       lambda*-formals
                                                                       chi-simple-lambda
                                                                       lambda-formals
                                                                       ellipsis?
                                                                       chi-void
                                                                       eval-local-transformer
                                                                       chi-local-syntax
                                                                       chi-body
                                                                       chi-macro
                                                                       chi-application
                                                                       chi-expr
                                                                       chi
                                                                       syntax-type
                                                                       chi-when-list
                                                                       chi-install-global
                                                                       chi-top-sequence
                                                                       chi-sequence
                                                                       source-wrap
                                                                       wrap
                                                                       bound-id-member?
                                                                       distinct-bound-ids?
                                                                       valid-bound-ids?
                                                                       bound-id=?
                                                                       free-id=?
                                                                       id-var-name
                                                                       same-marks?
                                                                       join-marks
                                                                       join-wraps
                                                                       smart-append
                                                                       make-binding-wrap
                                                                       extend-ribcage!
                                                                       make-empty-ribcage
                                                                       new-mark
                                                                       anti-mark
                                                                       the-anti-mark
                                                                       top-marked?
                                                                       top-wrap
                                                                       empty-wrap
                                                                       set-ribcage-labels!
                                                                       set-ribcage-marks!
                                                                       set-ribcage-symnames!
                                                                       ribcage-labels
                                                                       ribcage-marks
                                                                       ribcage-symnames
                                                                       ribcage?
                                                                       make-ribcage
                                                                       gen-labels
                                                                       gen-label
                                                                       make-rename
                                                                       rename-marks
                                                                       rename-new
                                                                       rename-old
                                                                       subst-rename?
                                                                       wrap-subst
                                                                       wrap-marks
                                                                       make-wrap
                                                                       id-sym-name&marks
                                                                       id-sym-name
                                                                       id?
                                                                       nonsymbol-id?
                                                                       global-extend
                                                                       lookup
                                                                       macros-only-env
                                                                       extend-var-env
                                                                       extend-env
                                                                       null-env
                                                                       binding-value
                                                                       binding-type
                                                                       make-binding
                                                                       arg-check
                                                                       source-annotation
                                                                       no-source
                                                                       set-syntax-object-module!
                                                                       set-syntax-object-wrap!
                                                                       set-syntax-object-expression!
                                                                       syntax-object-module
                                                                       syntax-object-wrap
                                                                       syntax-object-expression
                                                                       syntax-object?
                                                                       make-syntax-object
                                                                       build-lexical-var
                                                                       build-letrec
                                                                       build-named-let
                                                                       build-let
                                                                       build-sequence
                                                                       build-data
                                                                       build-primref
                                                                       build-lambda-case
                                                                       build-case-lambda
                                                                       build-simple-lambda
                                                                       build-global-definition
                                                                       build-global-assignment
                                                                       build-global-reference
                                                                       analyze-variable
                                                                       build-lexical-assignment
                                                                       build-lexical-reference
                                                                       build-dynlet
                                                                       build-conditional
                                                                       build-application
                                                                       build-void
                                                                       maybe-name-value!
                                                                       decorate-source
                                                                       get-global-definition-hook
                                                                       put-global-definition-hook
                                                                       gensym-hook
                                                                       local-eval-hook
                                                                       top-level-eval-hook
                                                                       fx<
                                                                       fx=
                                                                       fx-
                                                                       fx+
                                                                       set-lambda-meta!
                                                                       lambda-meta
                                                                       lambda?
                                                                       make-dynlet
                                                                       make-letrec
                                                                       make-let
                                                                       make-lambda-case
                                                                       make-lambda
                                                                       make-sequence
                                                                       make-application
                                                                       make-conditional
                                                                       make-toplevel-define
                                                                       make-toplevel-set
                                                                       make-toplevel-ref
                                                                       make-module-set
                                                                       make-module-ref
                                                                       make-lexical-set
                                                                       make-lexical-ref
                                                                       make-primitive-ref
                                                                       make-const
                                                                       make-void)
                                                                     ((top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top))
                                                                     ("i465"
                                                                      "i463"
                                                                      "i461"
                                                                      "i459"
                                                                      "i457"
                                                                      "i455"
                                                                      "i453"
                                                                      "i451"
                                                                      "i449"
                                                                      "i447"
                                                                      "i445"
                                                                      "i443"
                                                                      "i441"
                                                                      "i439"
                                                                      "i437"
                                                                      "i435"
                                                                      "i433"
                                                                      "i431"
                                                                      "i429"
                                                                      "i427"
                                                                      "i425"
                                                                      "i423"
                                                                      "i421"
                                                                      "i419"
                                                                      "i417"
                                                                      "i415"
                                                                      "i413"
                                                                      "i411"
                                                                      "i409"
                                                                      "i407"
                                                                      "i405"
                                                                      "i403"
                                                                      "i401"
                                                                      "i399"
                                                                      "i397"
                                                                      "i396"
                                                                      "i394"
                                                                      "i391"
                                                                      "i390"
                                                                      "i389"
                                                                      "i387"
                                                                      "i386"
                                                                      "i384"
                                                                      "i382"
                                                                      "i380"
                                                                      "i378"
                                                                      "i376"
                                                                      "i374"
                                                                      "i372"
                                                                      "i370"
                                                                      "i367"
                                                                      "i365"
                                                                      "i364"
                                                                      "i362"
                                                                      "i360"
                                                                      "i358"
                                                                      "i356"
                                                                      "i355"
                                                                      "i354"
                                                                      "i353"
                                                                      "i351"
                                                                      "i350"
                                                                      "i347"
                                                                      "i345"
                                                                      "i343"
                                                                      "i341"
                                                                      "i339"
                                                                      "i337"
                                                                      "i335"
                                                                      "i334"
                                                                      "i333"
                                                                      "i331"
                                                                      "i329"
                                                                      "i328"
                                                                      "i325"
                                                                      "i324"
                                                                      "i322"
                                                                      "i320"
                                                                      "i318"
                                                                      "i316"
                                                                      "i314"
                                                                      "i312"
                                                                      "i310"
                                                                      "i308"
                                                                      "i306"
                                                                      "i303"
                                                                      "i301"
                                                                      "i299"
                                                                      "i297"
                                                                      "i295"
                                                                      "i293"
                                                                      "i291"
                                                                      "i289"
                                                                      "i287"
                                                                      "i285"
                                                                      "i283"
                                                                      "i281"
                                                                      "i279"
                                                                      "i277"
                                                                      "i275"
                                                                      "i273"
                                                                      "i271"
                                                                      "i269"
                                                                      "i267"
                                                                      "i265"
                                                                      "i263"
                                                                      "i261"
                                                                      "i259"
                                                                      "i258"
                                                                      "i255"
                                                                      "i253"
                                                                      "i252"
                                                                      "i251"
                                                                      "i250"
                                                                      "i249"
                                                                      "i247"
                                                                      "i245"
                                                                      "i243"
                                                                      "i240"
                                                                      "i238"
                                                                      "i236"
                                                                      "i234"
                                                                      "i232"
                                                                      "i230"
                                                                      "i228"
                                                                      "i226"
                                                                      "i224"
                                                                      "i222"
                                                                      "i220"
                                                                      "i218"
                                                                      "i216"
                                                                      "i214"
                                                                      "i212"
                                                                      "i210"
                                                                      "i208"
                                                                      "i206"))
                                                                   #(ribcage
                                                                     (define-structure
                                                                       define-expansion-accessors
                                                                       define-expansion-constructors)
                                                                     ((top)
                                                                      (top)
                                                                      (top))
                                                                     ("i44"
                                                                      "i43"
                                                                      "i42")))
                                                                  (hygiene
                                                                    guile))
                                                               (#{wrap 422}#
                                                                 (cons #{args 1858}#
                                                                       (cons #{e1 1859}#
                                                                             #{e2 1860}#))
                                                                 #{w 1765}#
                                                                 #{mod 1768}#))
                                                         #{s 1766}#)
                                                       '(())
                                                       #{s 1766}#
                                                       #{mod 1768}#))
                                                   #{tmp 1842}#)
                                                 (begin
                                                   (let ((#{tmp 1863}#
                                                           ($sc-dispatch
                                                             #{e 1763}#
                                                             '(_ any))))
                                                     (if (if #{tmp 1863}#
                                                           (@apply
                                                             (lambda (#{name 1865}#)
                                                               (#{id? 348}#
                                                                 #{name 1865}#))
                                                             #{tmp 1863}#)
                                                           #f)
                                                       (@apply
                                                         (lambda (#{name 1867}#)
                                                           (values
                                                             'define-form
                                                             (#{wrap 422}#
                                                               #{name 1867}#
                                                               #{w 1765}#
                                                               #{mod 1768}#)
                                                             '(#(syntax-object
                                                                 if
                                                                 ((top)
                                                                  #(ribcage
                                                                    #(name)
                                                                    #((top))
                                                                    #("i1866"))
                                                                  #(ribcage
                                                                    ()
                                                                    ()
                                                                    ())
                                                                  #(ribcage
                                                                    ()
                                                                    ()
                                                                    ())
                                                                  #(ribcage
                                                                    #(ftype
                                                                      fval
                                                                      fe
                                                                      fw
                                                                      fs
                                                                      fmod)
                                                                    #((top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top))
                                                                    #("i1806"
                                                                      "i1807"
                                                                      "i1808"
                                                                      "i1809"
                                                                      "i1810"
                                                                      "i1811"))
                                                                  #(ribcage
                                                                    ()
                                                                    ()
                                                                    ())
                                                                  #(ribcage
                                                                    #(first)
                                                                    #((top))
                                                                    #("i1798"))
                                                                  #(ribcage
                                                                    ()
                                                                    ()
                                                                    ())
                                                                  #(ribcage
                                                                    ()
                                                                    ()
                                                                    ())
                                                                  #(ribcage
                                                                    ()
                                                                    ()
                                                                    ())
                                                                  #(ribcage
                                                                    #(e
                                                                      r
                                                                      w
                                                                      s
                                                                      rib
                                                                      mod
                                                                      for-car?)
                                                                    #((top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top))
                                                                    #("i1770"
                                                                      "i1771"
                                                                      "i1772"
                                                                      "i1773"
                                                                      "i1774"
                                                                      "i1775"
                                                                      "i1776"))
                                                                  #(ribcage
                                                                    (lambda-var-list
                                                                      gen-var
                                                                      strip
                                                                      chi-lambda-case
                                                                      lambda*-formals
                                                                      chi-simple-lambda
                                                                      lambda-formals
                                                                      ellipsis?
                                                                      chi-void
                                                                      eval-local-transformer
                                                                      chi-local-syntax
                                                                      chi-body
                                                                      chi-macro
                                                                      chi-application
                                                                      chi-expr
                                                                      chi
                                                                      syntax-type
                                                                      chi-when-list
                                                                      chi-install-global
                                                                      chi-top-sequence
                                                                      chi-sequence
                                                                      source-wrap
                                                                      wrap
                                                                      bound-id-member?
                                                                      distinct-bound-ids?
                                                                      valid-bound-ids?
                                                                      bound-id=?
                                                                      free-id=?
                                                                      id-var-name
                                                                      same-marks?
                                                                      join-marks
                                                                      join-wraps
                                                                      smart-append
                                                                      make-binding-wrap
                                                                      extend-ribcage!
                                                                      make-empty-ribcage
                                                                      new-mark
                                                                      anti-mark
                                                                      the-anti-mark
                                                                      top-marked?
                                                                      top-wrap
                                                                      empty-wrap
                                                                      set-ribcage-labels!
                                                                      set-ribcage-marks!
                                                                      set-ribcage-symnames!
                                                                      ribcage-labels
                                                                      ribcage-marks
                                                                      ribcage-symnames
                                                                      ribcage?
                                                                      make-ribcage
                                                                      gen-labels
                                                                      gen-label
                                                                      make-rename
                                                                      rename-marks
                                                                      rename-new
                                                                      rename-old
                                                                      subst-rename?
                                                                      wrap-subst
                                                                      wrap-marks
                                                                      make-wrap
                                                                      id-sym-name&marks
                                                                      id-sym-name
                                                                      id?
                                                                      nonsymbol-id?
                                                                      global-extend
                                                                      lookup
                                                                      macros-only-env
                                                                      extend-var-env
                                                                      extend-env
                                                                      null-env
                                                                      binding-value
                                                                      binding-type
                                                                      make-binding
                                                                      arg-check
                                                                      source-annotation
                                                                      no-source
                                                                      set-syntax-object-module!
                                                                      set-syntax-object-wrap!
                                                                      set-syntax-object-expression!
                                                                      syntax-object-module
                                                                      syntax-object-wrap
                                                                      syntax-object-expression
                                                                      syntax-object?
                                                                      make-syntax-object
                                                                      build-lexical-var
                                                                      build-letrec
                                                                      build-named-let
                                                                      build-let
                                                                      build-sequence
                                                                      build-data
                                                                      build-primref
                                                                      build-lambda-case
                                                                      build-case-lambda
                                                                      build-simple-lambda
                                                                      build-global-definition
                                                                      build-global-assignment
                                                                      build-global-reference
                                                                      analyze-variable
                                                                      build-lexical-assignment
                                                                      build-lexical-reference
                                                                      build-dynlet
                                                                      build-conditional
                                                                      build-application
                                                                      build-void
                                                                      maybe-name-value!
                                                                      decorate-source
                                                                      get-global-definition-hook
                                                                      put-global-definition-hook
                                                                      gensym-hook
                                                                      local-eval-hook
                                                                      top-level-eval-hook
                                                                      fx<
                                                                      fx=
                                                                      fx-
                                                                      fx+
                                                                      set-lambda-meta!
                                                                      lambda-meta
                                                                      lambda?
                                                                      make-dynlet
                                                                      make-letrec
                                                                      make-let
                                                                      make-lambda-case
                                                                      make-lambda
                                                                      make-sequence
                                                                      make-application
                                                                      make-conditional
                                                                      make-toplevel-define
                                                                      make-toplevel-set
                                                                      make-toplevel-ref
                                                                      make-module-set
                                                                      make-module-ref
                                                                      make-lexical-set
                                                                      make-lexical-ref
                                                                      make-primitive-ref
                                                                      make-const
                                                                      make-void)
                                                                    ((top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top))
                                                                    ("i465"
                                                                     "i463"
                                                                     "i461"
                                                                     "i459"
                                                                     "i457"
                                                                     "i455"
                                                                     "i453"
                                                                     "i451"
                                                                     "i449"
                                                                     "i447"
                                                                     "i445"
                                                                     "i443"
                                                                     "i441"
                                                                     "i439"
                                                                     "i437"
                                                                     "i435"
                                                                     "i433"
                                                                     "i431"
                                                                     "i429"
                                                                     "i427"
                                                                     "i425"
                                                                     "i423"
                                                                     "i421"
                                                                     "i419"
                                                                     "i417"
                                                                     "i415"
                                                                     "i413"
                                                                     "i411"
                                                                     "i409"
                                                                     "i407"
                                                                     "i405"
                                                                     "i403"
                                                                     "i401"
                                                                     "i399"
                                                                     "i397"
                                                                     "i396"
                                                                     "i394"
                                                                     "i391"
                                                                     "i390"
                                                                     "i389"
                                                                     "i387"
                                                                     "i386"
                                                                     "i384"
                                                                     "i382"
                                                                     "i380"
                                                                     "i378"
                                                                     "i376"
                                                                     "i374"
                                                                     "i372"
                                                                     "i370"
                                                                     "i367"
                                                                     "i365"
                                                                     "i364"
                                                                     "i362"
                                                                     "i360"
                                                                     "i358"
                                                                     "i356"
                                                                     "i355"
                                                                     "i354"
                                                                     "i353"
                                                                     "i351"
                                                                     "i350"
                                                                     "i347"
                                                                     "i345"
                                                                     "i343"
                                                                     "i341"
                                                                     "i339"
                                                                     "i337"
                                                                     "i335"
                                                                     "i334"
                                                                     "i333"
                                                                     "i331"
                                                                     "i329"
                                                                     "i328"
                                                                     "i325"
                                                                     "i324"
                                                                     "i322"
                                                                     "i320"
                                                                     "i318"
                                                                     "i316"
                                                                     "i314"
                                                                     "i312"
                                                                     "i310"
                                                                     "i308"
                                                                     "i306"
                                                                     "i303"
                                                                     "i301"
                                                                     "i299"
                                                                     "i297"
                                                                     "i295"
                                                                     "i293"
                                                                     "i291"
                                                                     "i289"
                                                                     "i287"
                                                                     "i285"
                                                                     "i283"
                                                                     "i281"
                                                                     "i279"
                                                                     "i277"
                                                                     "i275"
                                                                     "i273"
                                                                     "i271"
                                                                     "i269"
                                                                     "i267"
                                                                     "i265"
                                                                     "i263"
                                                                     "i261"
                                                                     "i259"
                                                                     "i258"
                                                                     "i255"
                                                                     "i253"
                                                                     "i252"
                                                                     "i251"
                                                                     "i250"
                                                                     "i249"
                                                                     "i247"
                                                                     "i245"
                                                                     "i243"
                                                                     "i240"
                                                                     "i238"
                                                                     "i236"
                                                                     "i234"
                                                                     "i232"
                                                                     "i230"
                                                                     "i228"
                                                                     "i226"
                                                                     "i224"
                                                                     "i222"
                                                                     "i220"
                                                                     "i218"
                                                                     "i216"
                                                                     "i214"
                                                                     "i212"
                                                                     "i210"
                                                                     "i208"
                                                                     "i206"))
                                                                  #(ribcage
                                                                    (define-structure
                                                                      define-expansion-accessors
                                                                      define-expansion-constructors)
                                                                    ((top)
                                                                     (top)
                                                                     (top))
                                                                    ("i44"
                                                                     "i43"
                                                                     "i42")))
                                                                 (hygiene
                                                                   guile))
                                                               #(syntax-object
                                                                 #f
                                                                 ((top)
                                                                  #(ribcage
                                                                    #(name)
                                                                    #((top))
                                                                    #("i1866"))
                                                                  #(ribcage
                                                                    ()
                                                                    ()
                                                                    ())
                                                                  #(ribcage
                                                                    ()
                                                                    ()
                                                                    ())
                                                                  #(ribcage
                                                                    #(ftype
                                                                      fval
                                                                      fe
                                                                      fw
                                                                      fs
                                                                      fmod)
                                                                    #((top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top))
                                                                    #("i1806"
                                                                      "i1807"
                                                                      "i1808"
                                                                      "i1809"
                                                                      "i1810"
                                                                      "i1811"))
                                                                  #(ribcage
                                                                    ()
                                                                    ()
                                                                    ())
                                                                  #(ribcage
                                                                    #(first)
                                                                    #((top))
                                                                    #("i1798"))
                                                                  #(ribcage
                                                                    ()
                                                                    ()
                                                                    ())
                                                                  #(ribcage
                                                                    ()
                                                                    ()
                                                                    ())
                                                                  #(ribcage
                                                                    ()
                                                                    ()
                                                                    ())
                                                                  #(ribcage
                                                                    #(e
                                                                      r
                                                                      w
                                                                      s
                                                                      rib
                                                                      mod
                                                                      for-car?)
                                                                    #((top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top))
                                                                    #("i1770"
                                                                      "i1771"
                                                                      "i1772"
                                                                      "i1773"
                                                                      "i1774"
                                                                      "i1775"
                                                                      "i1776"))
                                                                  #(ribcage
                                                                    (lambda-var-list
                                                                      gen-var
                                                                      strip
                                                                      chi-lambda-case
                                                                      lambda*-formals
                                                                      chi-simple-lambda
                                                                      lambda-formals
                                                                      ellipsis?
                                                                      chi-void
                                                                      eval-local-transformer
                                                                      chi-local-syntax
                                                                      chi-body
                                                                      chi-macro
                                                                      chi-application
                                                                      chi-expr
                                                                      chi
                                                                      syntax-type
                                                                      chi-when-list
                                                                      chi-install-global
                                                                      chi-top-sequence
                                                                      chi-sequence
                                                                      source-wrap
                                                                      wrap
                                                                      bound-id-member?
                                                                      distinct-bound-ids?
                                                                      valid-bound-ids?
                                                                      bound-id=?
                                                                      free-id=?
                                                                      id-var-name
                                                                      same-marks?
                                                                      join-marks
                                                                      join-wraps
                                                                      smart-append
                                                                      make-binding-wrap
                                                                      extend-ribcage!
                                                                      make-empty-ribcage
                                                                      new-mark
                                                                      anti-mark
                                                                      the-anti-mark
                                                                      top-marked?
                                                                      top-wrap
                                                                      empty-wrap
                                                                      set-ribcage-labels!
                                                                      set-ribcage-marks!
                                                                      set-ribcage-symnames!
                                                                      ribcage-labels
                                                                      ribcage-marks
                                                                      ribcage-symnames
                                                                      ribcage?
                                                                      make-ribcage
                                                                      gen-labels
                                                                      gen-label
                                                                      make-rename
                                                                      rename-marks
                                                                      rename-new
                                                                      rename-old
                                                                      subst-rename?
                                                                      wrap-subst
                                                                      wrap-marks
                                                                      make-wrap
                                                                      id-sym-name&marks
                                                                      id-sym-name
                                                                      id?
                                                                      nonsymbol-id?
                                                                      global-extend
                                                                      lookup
                                                                      macros-only-env
                                                                      extend-var-env
                                                                      extend-env
                                                                      null-env
                                                                      binding-value
                                                                      binding-type
                                                                      make-binding
                                                                      arg-check
                                                                      source-annotation
                                                                      no-source
                                                                      set-syntax-object-module!
                                                                      set-syntax-object-wrap!
                                                                      set-syntax-object-expression!
                                                                      syntax-object-module
                                                                      syntax-object-wrap
                                                                      syntax-object-expression
                                                                      syntax-object?
                                                                      make-syntax-object
                                                                      build-lexical-var
                                                                      build-letrec
                                                                      build-named-let
                                                                      build-let
                                                                      build-sequence
                                                                      build-data
                                                                      build-primref
                                                                      build-lambda-case
                                                                      build-case-lambda
                                                                      build-simple-lambda
                                                                      build-global-definition
                                                                      build-global-assignment
                                                                      build-global-reference
                                                                      analyze-variable
                                                                      build-lexical-assignment
                                                                      build-lexical-reference
                                                                      build-dynlet
                                                                      build-conditional
                                                                      build-application
                                                                      build-void
                                                                      maybe-name-value!
                                                                      decorate-source
                                                                      get-global-definition-hook
                                                                      put-global-definition-hook
                                                                      gensym-hook
                                                                      local-eval-hook
                                                                      top-level-eval-hook
                                                                      fx<
                                                                      fx=
                                                                      fx-
                                                                      fx+
                                                                      set-lambda-meta!
                                                                      lambda-meta
                                                                      lambda?
                                                                      make-dynlet
                                                                      make-letrec
                                                                      make-let
                                                                      make-lambda-case
                                                                      make-lambda
                                                                      make-sequence
                                                                      make-application
                                                                      make-conditional
                                                                      make-toplevel-define
                                                                      make-toplevel-set
                                                                      make-toplevel-ref
                                                                      make-module-set
                                                                      make-module-ref
                                                                      make-lexical-set
                                                                      make-lexical-ref
                                                                      make-primitive-ref
                                                                      make-const
                                                                      make-void)
                                                                    ((top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top))
                                                                    ("i465"
                                                                     "i463"
                                                                     "i461"
                                                                     "i459"
                                                                     "i457"
                                                                     "i455"
                                                                     "i453"
                                                                     "i451"
                                                                     "i449"
                                                                     "i447"
                                                                     "i445"
                                                                     "i443"
                                                                     "i441"
                                                                     "i439"
                                                                     "i437"
                                                                     "i435"
                                                                     "i433"
                                                                     "i431"
                                                                     "i429"
                                                                     "i427"
                                                                     "i425"
                                                                     "i423"
                                                                     "i421"
                                                                     "i419"
                                                                     "i417"
                                                                     "i415"
                                                                     "i413"
                                                                     "i411"
                                                                     "i409"
                                                                     "i407"
                                                                     "i405"
                                                                     "i403"
                                                                     "i401"
                                                                     "i399"
                                                                     "i397"
                                                                     "i396"
                                                                     "i394"
                                                                     "i391"
                                                                     "i390"
                                                                     "i389"
                                                                     "i387"
                                                                     "i386"
                                                                     "i384"
                                                                     "i382"
                                                                     "i380"
                                                                     "i378"
                                                                     "i376"
                                                                     "i374"
                                                                     "i372"
                                                                     "i370"
                                                                     "i367"
                                                                     "i365"
                                                                     "i364"
                                                                     "i362"
                                                                     "i360"
                                                                     "i358"
                                                                     "i356"
                                                                     "i355"
                                                                     "i354"
                                                                     "i353"
                                                                     "i351"
                                                                     "i350"
                                                                     "i347"
                                                                     "i345"
                                                                     "i343"
                                                                     "i341"
                                                                     "i339"
                                                                     "i337"
                                                                     "i335"
                                                                     "i334"
                                                                     "i333"
                                                                     "i331"
                                                                     "i329"
                                                                     "i328"
                                                                     "i325"
                                                                     "i324"
                                                                     "i322"
                                                                     "i320"
                                                                     "i318"
                                                                     "i316"
                                                                     "i314"
                                                                     "i312"
                                                                     "i310"
                                                                     "i308"
                                                                     "i306"
                                                                     "i303"
                                                                     "i301"
                                                                     "i299"
                                                                     "i297"
                                                                     "i295"
                                                                     "i293"
                                                                     "i291"
                                                                     "i289"
                                                                     "i287"
                                                                     "i285"
                                                                     "i283"
                                                                     "i281"
                                                                     "i279"
                                                                     "i277"
                                                                     "i275"
                                                                     "i273"
                                                                     "i271"
                                                                     "i269"
                                                                     "i267"
                                                                     "i265"
                                                                     "i263"
                                                                     "i261"
                                                                     "i259"
                                                                     "i258"
                                                                     "i255"
                                                                     "i253"
                                                                     "i252"
                                                                     "i251"
                                                                     "i250"
                                                                     "i249"
                                                                     "i247"
                                                                     "i245"
                                                                     "i243"
                                                                     "i240"
                                                                     "i238"
                                                                     "i236"
                                                                     "i234"
                                                                     "i232"
                                                                     "i230"
                                                                     "i228"
                                                                     "i226"
                                                                     "i224"
                                                                     "i222"
                                                                     "i220"
                                                                     "i218"
                                                                     "i216"
                                                                     "i214"
                                                                     "i212"
                                                                     "i210"
                                                                     "i208"
                                                                     "i206"))
                                                                  #(ribcage
                                                                    (define-structure
                                                                      define-expansion-accessors
                                                                      define-expansion-constructors)
                                                                    ((top)
                                                                     (top)
                                                                     (top))
                                                                    ("i44"
                                                                     "i43"
                                                                     "i42")))
                                                                 (hygiene
                                                                   guile))
                                                               #(syntax-object
                                                                 #f
                                                                 ((top)
                                                                  #(ribcage
                                                                    #(name)
                                                                    #((top))
                                                                    #("i1866"))
                                                                  #(ribcage
                                                                    ()
                                                                    ()
                                                                    ())
                                                                  #(ribcage
                                                                    ()
                                                                    ()
                                                                    ())
                                                                  #(ribcage
                                                                    #(ftype
                                                                      fval
                                                                      fe
                                                                      fw
                                                                      fs
                                                                      fmod)
                                                                    #((top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top))
                                                                    #("i1806"
                                                                      "i1807"
                                                                      "i1808"
                                                                      "i1809"
                                                                      "i1810"
                                                                      "i1811"))
                                                                  #(ribcage
                                                                    ()
                                                                    ()
                                                                    ())
                                                                  #(ribcage
                                                                    #(first)
                                                                    #((top))
                                                                    #("i1798"))
                                                                  #(ribcage
                                                                    ()
                                                                    ()
                                                                    ())
                                                                  #(ribcage
                                                                    ()
                                                                    ()
                                                                    ())
                                                                  #(ribcage
                                                                    ()
                                                                    ()
                                                                    ())
                                                                  #(ribcage
                                                                    #(e
                                                                      r
                                                                      w
                                                                      s
                                                                      rib
                                                                      mod
                                                                      for-car?)
                                                                    #((top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top))
                                                                    #("i1770"
                                                                      "i1771"
                                                                      "i1772"
                                                                      "i1773"
                                                                      "i1774"
                                                                      "i1775"
                                                                      "i1776"))
                                                                  #(ribcage
                                                                    (lambda-var-list
                                                                      gen-var
                                                                      strip
                                                                      chi-lambda-case
                                                                      lambda*-formals
                                                                      chi-simple-lambda
                                                                      lambda-formals
                                                                      ellipsis?
                                                                      chi-void
                                                                      eval-local-transformer
                                                                      chi-local-syntax
                                                                      chi-body
                                                                      chi-macro
                                                                      chi-application
                                                                      chi-expr
                                                                      chi
                                                                      syntax-type
                                                                      chi-when-list
                                                                      chi-install-global
                                                                      chi-top-sequence
                                                                      chi-sequence
                                                                      source-wrap
                                                                      wrap
                                                                      bound-id-member?
                                                                      distinct-bound-ids?
                                                                      valid-bound-ids?
                                                                      bound-id=?
                                                                      free-id=?
                                                                      id-var-name
                                                                      same-marks?
                                                                      join-marks
                                                                      join-wraps
                                                                      smart-append
                                                                      make-binding-wrap
                                                                      extend-ribcage!
                                                                      make-empty-ribcage
                                                                      new-mark
                                                                      anti-mark
                                                                      the-anti-mark
                                                                      top-marked?
                                                                      top-wrap
                                                                      empty-wrap
                                                                      set-ribcage-labels!
                                                                      set-ribcage-marks!
                                                                      set-ribcage-symnames!
                                                                      ribcage-labels
                                                                      ribcage-marks
                                                                      ribcage-symnames
                                                                      ribcage?
                                                                      make-ribcage
                                                                      gen-labels
                                                                      gen-label
                                                                      make-rename
                                                                      rename-marks
                                                                      rename-new
                                                                      rename-old
                                                                      subst-rename?
                                                                      wrap-subst
                                                                      wrap-marks
                                                                      make-wrap
                                                                      id-sym-name&marks
                                                                      id-sym-name
                                                                      id?
                                                                      nonsymbol-id?
                                                                      global-extend
                                                                      lookup
                                                                      macros-only-env
                                                                      extend-var-env
                                                                      extend-env
                                                                      null-env
                                                                      binding-value
                                                                      binding-type
                                                                      make-binding
                                                                      arg-check
                                                                      source-annotation
                                                                      no-source
                                                                      set-syntax-object-module!
                                                                      set-syntax-object-wrap!
                                                                      set-syntax-object-expression!
                                                                      syntax-object-module
                                                                      syntax-object-wrap
                                                                      syntax-object-expression
                                                                      syntax-object?
                                                                      make-syntax-object
                                                                      build-lexical-var
                                                                      build-letrec
                                                                      build-named-let
                                                                      build-let
                                                                      build-sequence
                                                                      build-data
                                                                      build-primref
                                                                      build-lambda-case
                                                                      build-case-lambda
                                                                      build-simple-lambda
                                                                      build-global-definition
                                                                      build-global-assignment
                                                                      build-global-reference
                                                                      analyze-variable
                                                                      build-lexical-assignment
                                                                      build-lexical-reference
                                                                      build-dynlet
                                                                      build-conditional
                                                                      build-application
                                                                      build-void
                                                                      maybe-name-value!
                                                                      decorate-source
                                                                      get-global-definition-hook
                                                                      put-global-definition-hook
                                                                      gensym-hook
                                                                      local-eval-hook
                                                                      top-level-eval-hook
                                                                      fx<
                                                                      fx=
                                                                      fx-
                                                                      fx+
                                                                      set-lambda-meta!
                                                                      lambda-meta
                                                                      lambda?
                                                                      make-dynlet
                                                                      make-letrec
                                                                      make-let
                                                                      make-lambda-case
                                                                      make-lambda
                                                                      make-sequence
                                                                      make-application
                                                                      make-conditional
                                                                      make-toplevel-define
                                                                      make-toplevel-set
                                                                      make-toplevel-ref
                                                                      make-module-set
                                                                      make-module-ref
                                                                      make-lexical-set
                                                                      make-lexical-ref
                                                                      make-primitive-ref
                                                                      make-const
                                                                      make-void)
                                                                    ((top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top))
                                                                    ("i465"
                                                                     "i463"
                                                                     "i461"
                                                                     "i459"
                                                                     "i457"
                                                                     "i455"
                                                                     "i453"
                                                                     "i451"
                                                                     "i449"
                                                                     "i447"
                                                                     "i445"
                                                                     "i443"
                                                                     "i441"
                                                                     "i439"
                                                                     "i437"
                                                                     "i435"
                                                                     "i433"
                                                                     "i431"
                                                                     "i429"
                                                                     "i427"
                                                                     "i425"
                                                                     "i423"
                                                                     "i421"
                                                                     "i419"
                                                                     "i417"
                                                                     "i415"
                                                                     "i413"
                                                                     "i411"
                                                                     "i409"
                                                                     "i407"
                                                                     "i405"
                                                                     "i403"
                                                                     "i401"
                                                                     "i399"
                                                                     "i397"
                                                                     "i396"
                                                                     "i394"
                                                                     "i391"
                                                                     "i390"
                                                                     "i389"
                                                                     "i387"
                                                                     "i386"
                                                                     "i384"
                                                                     "i382"
                                                                     "i380"
                                                                     "i378"
                                                                     "i376"
                                                                     "i374"
                                                                     "i372"
                                                                     "i370"
                                                                     "i367"
                                                                     "i365"
                                                                     "i364"
                                                                     "i362"
                                                                     "i360"
                                                                     "i358"
                                                                     "i356"
                                                                     "i355"
                                                                     "i354"
                                                                     "i353"
                                                                     "i351"
                                                                     "i350"
                                                                     "i347"
                                                                     "i345"
                                                                     "i343"
                                                                     "i341"
                                                                     "i339"
                                                                     "i337"
                                                                     "i335"
                                                                     "i334"
                                                                     "i333"
                                                                     "i331"
                                                                     "i329"
                                                                     "i328"
                                                                     "i325"
                                                                     "i324"
                                                                     "i322"
                                                                     "i320"
                                                                     "i318"
                                                                     "i316"
                                                                     "i314"
                                                                     "i312"
                                                                     "i310"
                                                                     "i308"
                                                                     "i306"
                                                                     "i303"
                                                                     "i301"
                                                                     "i299"
                                                                     "i297"
                                                                     "i295"
                                                                     "i293"
                                                                     "i291"
                                                                     "i289"
                                                                     "i287"
                                                                     "i285"
                                                                     "i283"
                                                                     "i281"
                                                                     "i279"
                                                                     "i277"
                                                                     "i275"
                                                                     "i273"
                                                                     "i271"
                                                                     "i269"
                                                                     "i267"
                                                                     "i265"
                                                                     "i263"
                                                                     "i261"
                                                                     "i259"
                                                                     "i258"
                                                                     "i255"
                                                                     "i253"
                                                                     "i252"
                                                                     "i251"
                                                                     "i250"
                                                                     "i249"
                                                                     "i247"
                                                                     "i245"
                                                                     "i243"
                                                                     "i240"
                                                                     "i238"
                                                                     "i236"
                                                                     "i234"
                                                                     "i232"
                                                                     "i230"
                                                                     "i228"
                                                                     "i226"
                                                                     "i224"
                                                                     "i222"
                                                                     "i220"
                                                                     "i218"
                                                                     "i216"
                                                                     "i214"
                                                                     "i212"
                                                                     "i210"
                                                                     "i208"
                                                                     "i206"))
                                                                  #(ribcage
                                                                    (define-structure
                                                                      define-expansion-accessors
                                                                      define-expansion-constructors)
                                                                    ((top)
                                                                     (top)
                                                                     (top))
                                                                    ("i44"
                                                                     "i43"
                                                                     "i42")))
                                                                 (hygiene
                                                                   guile)))
                                                             '(())
                                                             #{s 1766}#
                                                             #{mod 1768}#))
                                                         #{tmp 1863}#)
                                                       (syntax-violation
                                                         #f
                                                         "source expression failed to match any pattern"
                                                         #{e 1763}#))))))))))
                                     (if (eqv? #{ftype 1800}# 'define-syntax)
                                       (begin
                                         (let ((#{tmp 1871}#
                                                 ($sc-dispatch
                                                   #{e 1763}#
                                                   '(_ any any))))
                                           (if (if #{tmp 1871}#
                                                 (@apply
                                                   (lambda (#{name 1874}#
                                                            #{val 1875}#)
                                                     (#{id? 348}#
                                                       #{name 1874}#))
                                                   #{tmp 1871}#)
                                                 #f)
                                             (@apply
                                               (lambda (#{name 1878}#
                                                        #{val 1879}#)
                                                 (values
                                                   'define-syntax-form
                                                   #{name 1878}#
                                                   #{val 1879}#
                                                   #{w 1765}#
                                                   #{s 1766}#
                                                   #{mod 1768}#))
                                               #{tmp 1871}#)
                                             (syntax-violation
                                               #f
                                               "source expression failed to match any pattern"
                                               #{e 1763}#))))
                                       (values
                                         'call
                                         #f
                                         #{e 1763}#
                                         #{w 1765}#
                                         #{s 1766}#
                                         #{mod 1768}#)))))))))))))))
           (if (#{syntax-object? 311}# #{e 1763}#)
             (#{syntax-type 434}#
               (#{syntax-object-expression 313}# #{e 1763}#)
               #{r 1764}#
               (#{join-wraps 404}#
                 #{w 1765}#
                 (#{syntax-object-wrap 315}# #{e 1763}#))
               (begin
                 (let ((#{t 1885}#
                         (#{source-annotation 326}# #{e 1763}#)))
                   (if #{t 1885}# #{t 1885}# #{s 1766}#)))
               #{rib 1767}#
               (begin
                 (let ((#{t 1889}#
                         (#{syntax-object-module 317}# #{e 1763}#)))
                   (if #{t 1889}# #{t 1889}# #{mod 1768}#)))
               #{for-car? 1769}#)
             (if (self-evaluating? #{e 1763}#)
               (values
                 'constant
                 #f
                 #{e 1763}#
                 #{w 1765}#
                 #{s 1766}#
                 #{mod 1768}#)
               (values
                 'other
                 #f
                 #{e 1763}#
                 #{w 1765}#
                 #{s 1766}#
                 #{mod 1768}#)))))))
   (#{chi 436}#
     (lambda (#{e 1894}# #{r 1895}# #{w 1896}# #{mod 1897}#)
       (call-with-values
         (lambda ()
           (#{syntax-type 434}#
             #{e 1894}#
             #{r 1895}#
             #{w 1896}#
             (#{source-annotation 326}# #{e 1894}#)
             #f
             #{mod 1897}#
             #f))
         (lambda (#{type 1902}#
                  #{value 1903}#
                  #{e 1904}#
                  #{w 1905}#
                  #{s 1906}#
                  #{mod 1907}#)
           (#{chi-expr 438}#
             #{type 1902}#
             #{value 1903}#
             #{e 1904}#
             #{r 1895}#
             #{w 1905}#
             #{s 1906}#
             #{mod 1907}#)))))
   (#{chi-expr 438}#
     (lambda (#{type 1914}#
              #{value 1915}#
              #{e 1916}#
              #{r 1917}#
              #{w 1918}#
              #{s 1919}#
              #{mod 1920}#)
       (if (eqv? #{type 1914}# 'lexical)
         (#{build-lexical-reference 276}#
           'value
           #{s 1919}#
           #{e 1916}#
           #{value 1915}#)
         (if (if (eqv? #{type 1914}# 'core)
               #t
               (eqv? #{type 1914}# 'core-form))
           (#{value 1915}#
             #{e 1916}#
             #{r 1917}#
             #{w 1918}#
             #{s 1919}#
             #{mod 1920}#)
           (if (eqv? #{type 1914}# 'module-ref)
             (call-with-values
               (lambda ()
                 (#{value 1915}# #{e 1916}# #{r 1917}# #{w 1918}#))
               (lambda (#{e 1931}#
                        #{r 1932}#
                        #{w 1933}#
                        #{s 1934}#
                        #{mod 1935}#)
                 (#{chi 436}#
                   #{e 1931}#
                   #{r 1932}#
                   #{w 1933}#
                   #{mod 1935}#)))
             (if (eqv? #{type 1914}# 'lexical-call)
               (#{chi-application 440}#
                 (begin
                   (let ((#{id 1943}# (car #{e 1916}#)))
                     (#{build-lexical-reference 276}#
                       'fun
                       (#{source-annotation 326}# #{id 1943}#)
                       (if (#{syntax-object? 311}# #{id 1943}#)
                         (syntax->datum #{id 1943}#)
                         #{id 1943}#)
                       #{value 1915}#)))
                 #{e 1916}#
                 #{r 1917}#
                 #{w 1918}#
                 #{s 1919}#
                 #{mod 1920}#)
               (if (eqv? #{type 1914}# 'global-call)
                 (#{chi-application 440}#
                   (#{build-global-reference 282}#
                     (#{source-annotation 326}# (car #{e 1916}#))
                     (if (#{syntax-object? 311}# #{value 1915}#)
                       (#{syntax-object-expression 313}# #{value 1915}#)
                       #{value 1915}#)
                     (if (#{syntax-object? 311}# #{value 1915}#)
                       (#{syntax-object-module 317}# #{value 1915}#)
                       #{mod 1920}#))
                   #{e 1916}#
                   #{r 1917}#
                   #{w 1918}#
                   #{s 1919}#
                   #{mod 1920}#)
                 (if (eqv? #{type 1914}# 'constant)
                   (#{build-data 296}#
                     #{s 1919}#
                     (#{strip 462}#
                       (#{source-wrap 424}#
                         #{e 1916}#
                         #{w 1918}#
                         #{s 1919}#
                         #{mod 1920}#)
                       '(())))
                   (if (eqv? #{type 1914}# 'global)
                     (#{build-global-reference 282}#
                       #{s 1919}#
                       #{value 1915}#
                       #{mod 1920}#)
                     (if (eqv? #{type 1914}# 'call)
                       (#{chi-application 440}#
                         (#{chi 436}#
                           (car #{e 1916}#)
                           #{r 1917}#
                           #{w 1918}#
                           #{mod 1920}#)
                         #{e 1916}#
                         #{r 1917}#
                         #{w 1918}#
                         #{s 1919}#
                         #{mod 1920}#)
                       (if (eqv? #{type 1914}# 'begin-form)
                         (begin
                           (let ((#{tmp 1951}#
                                   ($sc-dispatch
                                     #{e 1916}#
                                     '(_ any . each-any))))
                             (if #{tmp 1951}#
                               (@apply
                                 (lambda (#{e1 1954}# #{e2 1955}#)
                                   (#{chi-sequence 426}#
                                     (cons #{e1 1954}# #{e2 1955}#)
                                     #{r 1917}#
                                     #{w 1918}#
                                     #{s 1919}#
                                     #{mod 1920}#))
                                 #{tmp 1951}#)
                               (syntax-violation
                                 #f
                                 "source expression failed to match any pattern"
                                 #{e 1916}#))))
                         (if (eqv? #{type 1914}# 'local-syntax-form)
                           (#{chi-local-syntax 446}#
                             #{value 1915}#
                             #{e 1916}#
                             #{r 1917}#
                             #{w 1918}#
                             #{s 1919}#
                             #{mod 1920}#
                             #{chi-sequence 426}#)
                           (if (eqv? #{type 1914}# 'eval-when-form)
                             (begin
                               (let ((#{tmp 1960}#
                                       ($sc-dispatch
                                         #{e 1916}#
                                         '(_ each-any any . each-any))))
                                 (if #{tmp 1960}#
                                   (@apply
                                     (lambda (#{x 1964}#
                                              #{e1 1965}#
                                              #{e2 1966}#)
                                       (begin
                                         (let ((#{when-list 1968}#
                                                 (#{chi-when-list 432}#
                                                   #{e 1916}#
                                                   #{x 1964}#
                                                   #{w 1918}#)))
                                           (if (memq 'eval #{when-list 1968}#)
                                             (#{chi-sequence 426}#
                                               (cons #{e1 1965}# #{e2 1966}#)
                                               #{r 1917}#
                                               #{w 1918}#
                                               #{s 1919}#
                                               #{mod 1920}#)
                                             (#{chi-void 450}#)))))
                                     #{tmp 1960}#)
                                   (syntax-violation
                                     #f
                                     "source expression failed to match any pattern"
                                     #{e 1916}#))))
                             (if (if (eqv? #{type 1914}# 'define-form)
                                   #t
                                   (eqv? #{type 1914}# 'define-syntax-form))
                               (syntax-violation
                                 #f
                                 "definition in expression context"
                                 #{e 1916}#
                                 (#{wrap 422}#
                                   #{value 1915}#
                                   #{w 1918}#
                                   #{mod 1920}#))
                               (if (eqv? #{type 1914}# 'syntax)
                                 (syntax-violation
                                   #f
                                   "reference to pattern variable outside syntax form"
                                   (#{source-wrap 424}#
                                     #{e 1916}#
                                     #{w 1918}#
                                     #{s 1919}#
                                     #{mod 1920}#))
                                 (if (eqv? #{type 1914}# 'displaced-lexical)
                                   (syntax-violation
                                     #f
                                     "reference to identifier outside its scope"
                                     (#{source-wrap 424}#
                                       #{e 1916}#
                                       #{w 1918}#
                                       #{s 1919}#
                                       #{mod 1920}#))
                                   (syntax-violation
                                     #f
                                     "unexpected syntax"
                                     (#{source-wrap 424}#
                                       #{e 1916}#
                                       #{w 1918}#
                                       #{s 1919}#
                                       #{mod 1920}#))))))))))))))))))
   (#{chi-application 440}#
     (lambda (#{x 1975}#
              #{e 1976}#
              #{r 1977}#
              #{w 1978}#
              #{s 1979}#
              #{mod 1980}#)
       (begin
         (let ((#{tmp 1988}#
                 ($sc-dispatch #{e 1976}# '(any . each-any))))
           (if #{tmp 1988}#
             (@apply
               (lambda (#{e0 1991}# #{e1 1992}#)
                 (#{build-application 270}#
                   #{s 1979}#
                   #{x 1975}#
                   (map (lambda (#{e 1993}#)
                          (#{chi 436}#
                            #{e 1993}#
                            #{r 1977}#
                            #{w 1978}#
                            #{mod 1980}#))
                        #{e1 1992}#)))
               #{tmp 1988}#)
             (syntax-violation
               #f
               "source expression failed to match any pattern"
               #{e 1976}#))))))
   (#{chi-macro 442}#
     (lambda (#{p 1996}#
              #{e 1997}#
              #{r 1998}#
              #{w 1999}#
              #{s 2000}#
              #{rib 2001}#
              #{mod 2002}#)
       (letrec*
         ((#{rebuild-macro-output 2011}#
            (lambda (#{x 2012}# #{m 2013}#)
              (if (pair? #{x 2012}#)
                (#{decorate-source 264}#
                  (cons (#{rebuild-macro-output 2011}#
                          (car #{x 2012}#)
                          #{m 2013}#)
                        (#{rebuild-macro-output 2011}#
                          (cdr #{x 2012}#)
                          #{m 2013}#))
                  #{s 2000}#)
                (if (#{syntax-object? 311}# #{x 2012}#)
                  (begin
                    (let ((#{w 2021}#
                            (#{syntax-object-wrap 315}# #{x 2012}#)))
                      (begin
                        (let ((#{ms 2024}# (car #{w 2021}#))
                              (#{s 2025}# (cdr #{w 2021}#)))
                          (if (if (pair? #{ms 2024}#)
                                (eq? (car #{ms 2024}#) #f)
                                #f)
                            (#{make-syntax-object 309}#
                              (#{syntax-object-expression 313}# #{x 2012}#)
                              (cons (cdr #{ms 2024}#)
                                    (if #{rib 2001}#
                                      (cons #{rib 2001}# (cdr #{s 2025}#))
                                      (cdr #{s 2025}#)))
                              (#{syntax-object-module 317}# #{x 2012}#))
                            (#{make-syntax-object 309}#
                              (#{decorate-source 264}#
                                (#{syntax-object-expression 313}# #{x 2012}#)
                                #{s 2025}#)
                              (cons (cons #{m 2013}# #{ms 2024}#)
                                    (if #{rib 2001}#
                                      (cons #{rib 2001}#
                                            (cons 'shift #{s 2025}#))
                                      (cons 'shift #{s 2025}#)))
                              (#{syntax-object-module 317}# #{x 2012}#)))))))
                  (if (vector? #{x 2012}#)
                    (begin
                      (let ((#{n 2037}# (vector-length #{x 2012}#)))
                        (begin
                          (let ((#{v 2039}#
                                  (#{decorate-source 264}#
                                    (make-vector #{n 2037}#)
                                    #{x 2012}#)))
                            (letrec*
                              ((#{loop 2042}#
                                 (lambda (#{i 2043}#)
                                   (if (= #{i 2043}# #{n 2037}#)
                                     #{v 2039}#
                                     (begin
                                       (vector-set!
                                         #{v 2039}#
                                         #{i 2043}#
                                         (#{rebuild-macro-output 2011}#
                                           (vector-ref #{x 2012}# #{i 2043}#)
                                           #{m 2013}#))
                                       (#{loop 2042}# (#{1+}# #{i 2043}#)))))))
                              (begin (#{loop 2042}# 0)))))))
                    (if (symbol? #{x 2012}#)
                      (syntax-violation
                        #f
                        "encountered raw symbol in macro output"
                        (#{source-wrap 424}#
                          #{e 1997}#
                          #{w 1999}#
                          (cdr #{w 1999}#)
                          #{mod 2002}#)
                        #{x 2012}#)
                      (#{decorate-source 264}# #{x 2012}# #{s 2000}#))))))))
         (begin
           (#{rebuild-macro-output 2011}#
             (#{p 1996}#
               (#{source-wrap 424}#
                 #{e 1997}#
                 (#{anti-mark 392}# #{w 1999}#)
                 #{s 2000}#
                 #{mod 2002}#))
             (gensym "m"))))))
   (#{chi-body 444}#
     (lambda (#{body 2053}#
              #{outer-form 2054}#
              #{r 2055}#
              #{w 2056}#
              #{mod 2057}#)
       (begin
         (let ((#{r 2065}#
                 (cons '("placeholder" placeholder) #{r 2055}#)))
           (begin
             (let ((#{ribcage 2067}#
                     (#{make-ribcage 371}# '() '() '())))
               (begin
                 (let ((#{w 2070}#
                         (cons (car #{w 2056}#)
                               (cons #{ribcage 2067}# (cdr #{w 2056}#)))))
                   (letrec*
                     ((#{parse 2082}#
                        (lambda (#{body 2083}#
                                 #{ids 2084}#
                                 #{labels 2085}#
                                 #{var-ids 2086}#
                                 #{vars 2087}#
                                 #{vals 2088}#
                                 #{bindings 2089}#)
                          (if (null? #{body 2083}#)
                            (syntax-violation
                              #f
                              "no expressions in body"
                              #{outer-form 2054}#)
                            (begin
                              (let ((#{e 2094}# (cdr (car #{body 2083}#)))
                                    (#{er 2095}# (car (car #{body 2083}#))))
                                (call-with-values
                                  (lambda ()
                                    (#{syntax-type 434}#
                                      #{e 2094}#
                                      #{er 2095}#
                                      '(())
                                      (#{source-annotation 326}# #{er 2095}#)
                                      #{ribcage 2067}#
                                      #{mod 2057}#
                                      #f))
                                  (lambda (#{type 2097}#
                                           #{value 2098}#
                                           #{e 2099}#
                                           #{w 2100}#
                                           #{s 2101}#
                                           #{mod 2102}#)
                                    (if (eqv? #{type 2097}# 'define-form)
                                      (begin
                                        (let ((#{id 2112}#
                                                (#{wrap 422}#
                                                  #{value 2098}#
                                                  #{w 2100}#
                                                  #{mod 2102}#))
                                              (#{label 2113}#
                                                (#{gen-label 366}#)))
                                          (begin
                                            (let ((#{var 2115}#
                                                    (#{gen-var 464}#
                                                      #{id 2112}#)))
                                              (begin
                                                (#{extend-ribcage! 398}#
                                                  #{ribcage 2067}#
                                                  #{id 2112}#
                                                  #{label 2113}#)
                                                (#{parse 2082}#
                                                  (cdr #{body 2083}#)
                                                  (cons #{id 2112}#
                                                        #{ids 2084}#)
                                                  (cons #{label 2113}#
                                                        #{labels 2085}#)
                                                  (cons #{id 2112}#
                                                        #{var-ids 2086}#)
                                                  (cons #{var 2115}#
                                                        #{vars 2087}#)
                                                  (cons (cons #{er 2095}#
                                                              (#{wrap 422}#
                                                                #{e 2099}#
                                                                #{w 2100}#
                                                                #{mod 2102}#))
                                                        #{vals 2088}#)
                                                  (cons (cons 'lexical
                                                              #{var 2115}#)
                                                        #{bindings 2089}#)))))))
                                      (if (eqv? #{type 2097}#
                                                'define-syntax-form)
                                        (begin
                                          (let ((#{id 2120}#
                                                  (#{wrap 422}#
                                                    #{value 2098}#
                                                    #{w 2100}#
                                                    #{mod 2102}#))
                                                (#{label 2121}#
                                                  (#{gen-label 366}#)))
                                            (begin
                                              (#{extend-ribcage! 398}#
                                                #{ribcage 2067}#
                                                #{id 2120}#
                                                #{label 2121}#)
                                              (#{parse 2082}#
                                                (cdr #{body 2083}#)
                                                (cons #{id 2120}# #{ids 2084}#)
                                                (cons #{label 2121}#
                                                      #{labels 2085}#)
                                                #{var-ids 2086}#
                                                #{vars 2087}#
                                                #{vals 2088}#
                                                (cons (cons 'macro
                                                            (cons #{er 2095}#
                                                                  (#{wrap 422}#
                                                                    #{e 2099}#
                                                                    #{w 2100}#
                                                                    #{mod 2102}#)))
                                                      #{bindings 2089}#)))))
                                        (if (eqv? #{type 2097}# 'begin-form)
                                          (begin
                                            (let ((#{tmp 2125}#
                                                    ($sc-dispatch
                                                      #{e 2099}#
                                                      '(_ . each-any))))
                                              (if #{tmp 2125}#
                                                (@apply
                                                  (lambda (#{e1 2127}#)
                                                    (#{parse 2082}#
                                                      (letrec*
                                                        ((#{f 2130}#
                                                           (lambda (#{forms 2131}#)
                                                             (if (null? #{forms 2131}#)
                                                               (cdr #{body 2083}#)
                                                               (cons (cons #{er 2095}#
                                                                           (#{wrap 422}#
                                                                             (car #{forms 2131}#)
                                                                             #{w 2100}#
                                                                             #{mod 2102}#))
                                                                     (#{f 2130}#
                                                                       (cdr #{forms 2131}#)))))))
                                                        (begin
                                                          (#{f 2130}#
                                                            #{e1 2127}#)))
                                                      #{ids 2084}#
                                                      #{labels 2085}#
                                                      #{var-ids 2086}#
                                                      #{vars 2087}#
                                                      #{vals 2088}#
                                                      #{bindings 2089}#))
                                                  #{tmp 2125}#)
                                                (syntax-violation
                                                  #f
                                                  "source expression failed to match any pattern"
                                                  #{e 2099}#))))
                                          (if (eqv? #{type 2097}#
                                                    'local-syntax-form)
                                            (#{chi-local-syntax 446}#
                                              #{value 2098}#
                                              #{e 2099}#
                                              #{er 2095}#
                                              #{w 2100}#
                                              #{s 2101}#
                                              #{mod 2102}#
                                              (lambda (#{forms 2134}#
                                                       #{er 2135}#
                                                       #{w 2136}#
                                                       #{s 2137}#
                                                       #{mod 2138}#)
                                                (#{parse 2082}#
                                                  (letrec*
                                                    ((#{f 2146}#
                                                       (lambda (#{forms 2147}#)
                                                         (if (null? #{forms 2147}#)
                                                           (cdr #{body 2083}#)
                                                           (cons (cons #{er 2135}#
                                                                       (#{wrap 422}#
                                                                         (car #{forms 2147}#)
                                                                         #{w 2136}#
                                                                         #{mod 2138}#))
                                                                 (#{f 2146}#
                                                                   (cdr #{forms 2147}#)))))))
                                                    (begin
                                                      (#{f 2146}#
                                                        #{forms 2134}#)))
                                                  #{ids 2084}#
                                                  #{labels 2085}#
                                                  #{var-ids 2086}#
                                                  #{vars 2087}#
                                                  #{vals 2088}#
                                                  #{bindings 2089}#)))
                                            (if (null? #{ids 2084}#)
                                              (#{build-sequence 298}#
                                                #f
                                                (map (lambda (#{x 2150}#)
                                                       (#{chi 436}#
                                                         (cdr #{x 2150}#)
                                                         (car #{x 2150}#)
                                                         '(())
                                                         #{mod 2102}#))
                                                     (cons (cons #{er 2095}#
                                                                 (#{source-wrap 424}#
                                                                   #{e 2099}#
                                                                   #{w 2100}#
                                                                   #{s 2101}#
                                                                   #{mod 2102}#))
                                                           (cdr #{body 2083}#))))
                                              (begin
                                                (if (not (#{valid-bound-ids? 416}#
                                                           #{ids 2084}#))
                                                  (syntax-violation
                                                    #f
                                                    "invalid or duplicate identifier in definition"
                                                    #{outer-form 2054}#))
                                                (letrec*
                                                  ((#{loop 2157}#
                                                     (lambda (#{bs 2158}#
                                                              #{er-cache 2159}#
                                                              #{r-cache 2160}#)
                                                       (if (not (null? #{bs 2158}#))
                                                         (begin
                                                           (let ((#{b 2163}#
                                                                   (car #{bs 2158}#)))
                                                             (if (eq? (car #{b 2163}#)
                                                                      'macro)
                                                               (begin
                                                                 (let ((#{er 2166}#
                                                                         (car (cdr #{b 2163}#))))
                                                                   (begin
                                                                     (let ((#{r-cache 2168}#
                                                                             (if (eq? #{er 2166}#
                                                                                      #{er-cache 2159}#)
                                                                               #{r-cache 2160}#
                                                                               (#{macros-only-env 340}#
                                                                                 #{er 2166}#))))
                                                                       (begin
                                                                         (set-cdr!
                                                                           #{b 2163}#
                                                                           (#{eval-local-transformer 448}#
                                                                             (#{chi 436}#
                                                                               (cdr (cdr #{b 2163}#))
                                                                               #{r-cache 2168}#
                                                                               '(())
                                                                               #{mod 2102}#)
                                                                             #{mod 2102}#))
                                                                         (#{loop 2157}#
                                                                           (cdr #{bs 2158}#)
                                                                           #{er 2166}#
                                                                           #{r-cache 2168}#))))))
                                                               (#{loop 2157}#
                                                                 (cdr #{bs 2158}#)
                                                                 #{er-cache 2159}#
                                                                 #{r-cache 2160}#))))))))
                                                  (begin
                                                    (#{loop 2157}#
                                                      #{bindings 2089}#
                                                      #f
                                                      #f)))
                                                (set-cdr!
                                                  #{r 2065}#
                                                  (#{extend-env 336}#
                                                    #{labels 2085}#
                                                    #{bindings 2089}#
                                                    (cdr #{r 2065}#)))
                                                (#{build-letrec 304}#
                                                  #f
                                                  #t
                                                  (reverse
                                                    (map syntax->datum
                                                         #{var-ids 2086}#))
                                                  (reverse #{vars 2087}#)
                                                  (map (lambda (#{x 2171}#)
                                                         (#{chi 436}#
                                                           (cdr #{x 2171}#)
                                                           (car #{x 2171}#)
                                                           '(())
                                                           #{mod 2102}#))
                                                       (reverse #{vals 2088}#))
                                                  (#{build-sequence 298}#
                                                    #f
                                                    (map (lambda (#{x 2175}#)
                                                           (#{chi 436}#
                                                             (cdr #{x 2175}#)
                                                             (car #{x 2175}#)
                                                             '(())
                                                             #{mod 2102}#))
                                                         (cons (cons #{er 2095}#
                                                                     (#{source-wrap 424}#
                                                                       #{e 2099}#
                                                                       #{w 2100}#
                                                                       #{s 2101}#
                                                                       #{mod 2102}#))
                                                               (cdr #{body 2083}#)))))))))))))))))))
                     (begin
                       (#{parse 2082}#
                         (map (lambda (#{x 2090}#)
                                (cons #{r 2065}#
                                      (#{wrap 422}#
                                        #{x 2090}#
                                        #{w 2070}#
                                        #{mod 2057}#)))
                              #{body 2053}#)
                         '()
                         '()
                         '()
                         '()
                         '()
                         '())))))))))))
   (#{chi-local-syntax 446}#
     (lambda (#{rec? 2178}#
              #{e 2179}#
              #{r 2180}#
              #{w 2181}#
              #{s 2182}#
              #{mod 2183}#
              #{k 2184}#)
       (begin
         (let ((#{tmp 2193}#
                 ($sc-dispatch
                   #{e 2179}#
                   '(_ #(each (any any)) any . each-any))))
           (if #{tmp 2193}#
             (@apply
               (lambda (#{id 2198}#
                        #{val 2199}#
                        #{e1 2200}#
                        #{e2 2201}#)
                 (if (not (#{valid-bound-ids? 416}# #{id 2198}#))
                   (syntax-violation
                     #f
                     "duplicate bound keyword"
                     #{e 2179}#)
                   (begin
                     (let ((#{labels 2206}#
                             (#{gen-labels 368}# #{id 2198}#)))
                       (begin
                         (let ((#{new-w 2208}#
                                 (#{make-binding-wrap 400}#
                                   #{id 2198}#
                                   #{labels 2206}#
                                   #{w 2181}#)))
                           (#{k 2184}#
                             (cons #{e1 2200}# #{e2 2201}#)
                             (#{extend-env 336}#
                               #{labels 2206}#
                               (begin
                                 (let ((#{trans-r 2213}#
                                         (#{macros-only-env 340}# #{r 2180}#)))
                                   (begin
                                     (if #{rec? 2178}# (if #f #f))
                                     (map (lambda (#{x 2214}#)
                                            (cons 'macro
                                                  (#{eval-local-transformer 448}#
                                                    (#{chi 436}#
                                                      #{x 2214}#
                                                      #{trans-r 2213}#
                                                      (if #{rec? 2178}#
                                                        #{new-w 2208}#
                                                        #{w 2181}#)
                                                      #{mod 2183}#)
                                                    #{mod 2183}#)))
                                          #{val 2199}#))))
                               #{r 2180}#)
                             #{new-w 2208}#
                             #{s 2182}#
                             #{mod 2183}#)))))))
               #{tmp 2193}#)
             (syntax-violation
               #f
               "bad local syntax definition"
               (#{source-wrap 424}#
                 #{e 2179}#
                 #{w 2181}#
                 #{s 2182}#
                 #{mod 2183}#)))))))
   (#{eval-local-transformer 448}#
     (lambda (#{expanded 2220}# #{mod 2221}#)
       (begin
         (let ((#{p 2225}#
                 (#{local-eval-hook 256}#
                   #{expanded 2220}#
                   #{mod 2221}#)))
           (if (procedure? #{p 2225}#)
             #{p 2225}#
             (syntax-violation
               #f
               "nonprocedure transformer"
               #{p 2225}#))))))
   (#{chi-void 450}#
     (lambda () (#{build-void 268}# #f)))
   (#{ellipsis? 452}#
     (lambda (#{x 2227}#)
       (if (#{nonsymbol-id? 346}# #{x 2227}#)
         (#{free-id=? 412}#
           #{x 2227}#
           '#(syntax-object
              ...
              ((top)
               #(ribcage () () ())
               #(ribcage () () ())
               #(ribcage #(x) #((top)) #("i2228"))
               #(ribcage
                 (lambda-var-list
                   gen-var
                   strip
                   chi-lambda-case
                   lambda*-formals
                   chi-simple-lambda
                   lambda-formals
                   ellipsis?
                   chi-void
                   eval-local-transformer
                   chi-local-syntax
                   chi-body
                   chi-macro
                   chi-application
                   chi-expr
                   chi
                   syntax-type
                   chi-when-list
                   chi-install-global
                   chi-top-sequence
                   chi-sequence
                   source-wrap
                   wrap
                   bound-id-member?
                   distinct-bound-ids?
                   valid-bound-ids?
                   bound-id=?
                   free-id=?
                   id-var-name
                   same-marks?
                   join-marks
                   join-wraps
                   smart-append
                   make-binding-wrap
                   extend-ribcage!
                   make-empty-ribcage
                   new-mark
                   anti-mark
                   the-anti-mark
                   top-marked?
                   top-wrap
                   empty-wrap
                   set-ribcage-labels!
                   set-ribcage-marks!
                   set-ribcage-symnames!
                   ribcage-labels
                   ribcage-marks
                   ribcage-symnames
                   ribcage?
                   make-ribcage
                   gen-labels
                   gen-label
                   make-rename
                   rename-marks
                   rename-new
                   rename-old
                   subst-rename?
                   wrap-subst
                   wrap-marks
                   make-wrap
                   id-sym-name&marks
                   id-sym-name
                   id?
                   nonsymbol-id?
                   global-extend
                   lookup
                   macros-only-env
                   extend-var-env
                   extend-env
                   null-env
                   binding-value
                   binding-type
                   make-binding
                   arg-check
                   source-annotation
                   no-source
                   set-syntax-object-module!
                   set-syntax-object-wrap!
                   set-syntax-object-expression!
                   syntax-object-module
                   syntax-object-wrap
                   syntax-object-expression
                   syntax-object?
                   make-syntax-object
                   build-lexical-var
                   build-letrec
                   build-named-let
                   build-let
                   build-sequence
                   build-data
                   build-primref
                   build-lambda-case
                   build-case-lambda
                   build-simple-lambda
                   build-global-definition
                   build-global-assignment
                   build-global-reference
                   analyze-variable
                   build-lexical-assignment
                   build-lexical-reference
                   build-dynlet
                   build-conditional
                   build-application
                   build-void
                   maybe-name-value!
                   decorate-source
                   get-global-definition-hook
                   put-global-definition-hook
                   gensym-hook
                   local-eval-hook
                   top-level-eval-hook
                   fx<
                   fx=
                   fx-
                   fx+
                   set-lambda-meta!
                   lambda-meta
                   lambda?
                   make-dynlet
                   make-letrec
                   make-let
                   make-lambda-case
                   make-lambda
                   make-sequence
                   make-application
                   make-conditional
                   make-toplevel-define
                   make-toplevel-set
                   make-toplevel-ref
                   make-module-set
                   make-module-ref
                   make-lexical-set
                   make-lexical-ref
                   make-primitive-ref
                   make-const
                   make-void)
                 ((top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top))
                 ("i465"
                  "i463"
                  "i461"
                  "i459"
                  "i457"
                  "i455"
                  "i453"
                  "i451"
                  "i449"
                  "i447"
                  "i445"
                  "i443"
                  "i441"
                  "i439"
                  "i437"
                  "i435"
                  "i433"
                  "i431"
                  "i429"
                  "i427"
                  "i425"
                  "i423"
                  "i421"
                  "i419"
                  "i417"
                  "i415"
                  "i413"
                  "i411"
                  "i409"
                  "i407"
                  "i405"
                  "i403"
                  "i401"
                  "i399"
                  "i397"
                  "i396"
                  "i394"
                  "i391"
                  "i390"
                  "i389"
                  "i387"
                  "i386"
                  "i384"
                  "i382"
                  "i380"
                  "i378"
                  "i376"
                  "i374"
                  "i372"
                  "i370"
                  "i367"
                  "i365"
                  "i364"
                  "i362"
                  "i360"
                  "i358"
                  "i356"
                  "i355"
                  "i354"
                  "i353"
                  "i351"
                  "i350"
                  "i347"
                  "i345"
                  "i343"
                  "i341"
                  "i339"
                  "i337"
                  "i335"
                  "i334"
                  "i333"
                  "i331"
                  "i329"
                  "i328"
                  "i325"
                  "i324"
                  "i322"
                  "i320"
                  "i318"
                  "i316"
                  "i314"
                  "i312"
                  "i310"
                  "i308"
                  "i306"
                  "i303"
                  "i301"
                  "i299"
                  "i297"
                  "i295"
                  "i293"
                  "i291"
                  "i289"
                  "i287"
                  "i285"
                  "i283"
                  "i281"
                  "i279"
                  "i277"
                  "i275"
                  "i273"
                  "i271"
                  "i269"
                  "i267"
                  "i265"
                  "i263"
                  "i261"
                  "i259"
                  "i258"
                  "i255"
                  "i253"
                  "i252"
                  "i251"
                  "i250"
                  "i249"
                  "i247"
                  "i245"
                  "i243"
                  "i240"
                  "i238"
                  "i236"
                  "i234"
                  "i232"
                  "i230"
                  "i228"
                  "i226"
                  "i224"
                  "i222"
                  "i220"
                  "i218"
                  "i216"
                  "i214"
                  "i212"
                  "i210"
                  "i208"
                  "i206"))
               #(ribcage
                 (define-structure
                   define-expansion-accessors
                   define-expansion-constructors)
                 ((top) (top) (top))
                 ("i44" "i43" "i42")))
              (hygiene guile)))
         #f)))
   (#{lambda-formals 454}#
     (lambda (#{orig-args 2231}#)
       (letrec*
         ((#{req 2234}#
            (lambda (#{args 2237}# #{rreq 2238}#)
              (begin
                (let ((#{tmp 2242}# ($sc-dispatch #{args 2237}# '())))
                  (if #{tmp 2242}#
                    (@apply
                      (lambda ()
                        (#{check 2236}# (reverse #{rreq 2238}#) #f))
                      #{tmp 2242}#)
                    (begin
                      (let ((#{tmp 2243}#
                              ($sc-dispatch #{args 2237}# '(any . any))))
                        (if (if #{tmp 2243}#
                              (@apply
                                (lambda (#{a 2246}# #{b 2247}#)
                                  (#{id? 348}# #{a 2246}#))
                                #{tmp 2243}#)
                              #f)
                          (@apply
                            (lambda (#{a 2250}# #{b 2251}#)
                              (#{req 2234}#
                                #{b 2251}#
                                (cons #{a 2250}# #{rreq 2238}#)))
                            #{tmp 2243}#)
                          (begin
                            (let ((#{tmp 2252}# (list #{args 2237}#)))
                              (if (if #{tmp 2252}#
                                    (@apply
                                      (lambda (#{r 2254}#)
                                        (#{id? 348}# #{r 2254}#))
                                      #{tmp 2252}#)
                                    #f)
                                (@apply
                                  (lambda (#{r 2256}#)
                                    (#{check 2236}#
                                      (reverse #{rreq 2238}#)
                                      #{r 2256}#))
                                  #{tmp 2252}#)
                                (syntax-violation
                                  'lambda
                                  "invalid argument list"
                                  #{orig-args 2231}#
                                  #{args 2237}#))))))))))))
          (#{check 2236}#
            (lambda (#{req 2259}# #{rest 2260}#)
              (if (#{distinct-bound-ids? 418}#
                    (if #{rest 2260}#
                      (cons #{rest 2260}# #{req 2259}#)
                      #{req 2259}#))
                (values #{req 2259}# #f #{rest 2260}# #f)
                (syntax-violation
                  'lambda
                  "duplicate identifier in argument list"
                  #{orig-args 2231}#)))))
         (begin (#{req 2234}# #{orig-args 2231}# '())))))
   (#{lambda*-formals 458}#
     (lambda (#{orig-args 2293}#)
       (letrec*
         ((#{req 2296}#
            (lambda (#{args 2305}# #{rreq 2306}#)
              (begin
                (let ((#{tmp 2310}# ($sc-dispatch #{args 2305}# '())))
                  (if #{tmp 2310}#
                    (@apply
                      (lambda ()
                        (#{check 2304}#
                          (reverse #{rreq 2306}#)
                          '()
                          #f
                          '()))
                      #{tmp 2310}#)
                    (begin
                      (let ((#{tmp 2311}#
                              ($sc-dispatch #{args 2305}# '(any . any))))
                        (if (if #{tmp 2311}#
                              (@apply
                                (lambda (#{a 2314}# #{b 2315}#)
                                  (#{id? 348}# #{a 2314}#))
                                #{tmp 2311}#)
                              #f)
                          (@apply
                            (lambda (#{a 2318}# #{b 2319}#)
                              (#{req 2296}#
                                #{b 2319}#
                                (cons #{a 2318}# #{rreq 2306}#)))
                            #{tmp 2311}#)
                          (begin
                            (let ((#{tmp 2320}#
                                    ($sc-dispatch #{args 2305}# '(any . any))))
                              (if (if #{tmp 2320}#
                                    (@apply
                                      (lambda (#{a 2323}# #{b 2324}#)
                                        (eq? (syntax->datum #{a 2323}#)
                                             #:optional))
                                      #{tmp 2320}#)
                                    #f)
                                (@apply
                                  (lambda (#{a 2327}# #{b 2328}#)
                                    (#{opt 2298}#
                                      #{b 2328}#
                                      (reverse #{rreq 2306}#)
                                      '()))
                                  #{tmp 2320}#)
                                (begin
                                  (let ((#{tmp 2329}#
                                          ($sc-dispatch
                                            #{args 2305}#
                                            '(any . any))))
                                    (if (if #{tmp 2329}#
                                          (@apply
                                            (lambda (#{a 2332}# #{b 2333}#)
                                              (eq? (syntax->datum #{a 2332}#)
                                                   #:key))
                                            #{tmp 2329}#)
                                          #f)
                                      (@apply
                                        (lambda (#{a 2336}# #{b 2337}#)
                                          (#{key 2300}#
                                            #{b 2337}#
                                            (reverse #{rreq 2306}#)
                                            '()
                                            '()))
                                        #{tmp 2329}#)
                                      (begin
                                        (let ((#{tmp 2338}#
                                                ($sc-dispatch
                                                  #{args 2305}#
                                                  '(any any))))
                                          (if (if #{tmp 2338}#
                                                (@apply
                                                  (lambda (#{a 2341}#
                                                           #{b 2342}#)
                                                    (eq? (syntax->datum
                                                           #{a 2341}#)
                                                         #:rest))
                                                  #{tmp 2338}#)
                                                #f)
                                            (@apply
                                              (lambda (#{a 2345}# #{b 2346}#)
                                                (#{rest 2302}#
                                                  #{b 2346}#
                                                  (reverse #{rreq 2306}#)
                                                  '()
                                                  '()))
                                              #{tmp 2338}#)
                                            (begin
                                              (let ((#{tmp 2347}#
                                                      (list #{args 2305}#)))
                                                (if (if #{tmp 2347}#
                                                      (@apply
                                                        (lambda (#{r 2349}#)
                                                          (#{id? 348}#
                                                            #{r 2349}#))
                                                        #{tmp 2347}#)
                                                      #f)
                                                  (@apply
                                                    (lambda (#{r 2351}#)
                                                      (#{rest 2302}#
                                                        #{r 2351}#
                                                        (reverse #{rreq 2306}#)
                                                        '()
                                                        '()))
                                                    #{tmp 2347}#)
                                                  (syntax-violation
                                                    'lambda*
                                                    "invalid argument list"
                                                    #{orig-args 2293}#
                                                    #{args 2305}#)))))))))))))))))))))
          (#{opt 2298}#
            (lambda (#{args 2354}# #{req 2355}# #{ropt 2356}#)
              (begin
                (let ((#{tmp 2361}# ($sc-dispatch #{args 2354}# '())))
                  (if #{tmp 2361}#
                    (@apply
                      (lambda ()
                        (#{check 2304}#
                          #{req 2355}#
                          (reverse #{ropt 2356}#)
                          #f
                          '()))
                      #{tmp 2361}#)
                    (begin
                      (let ((#{tmp 2362}#
                              ($sc-dispatch #{args 2354}# '(any . any))))
                        (if (if #{tmp 2362}#
                              (@apply
                                (lambda (#{a 2365}# #{b 2366}#)
                                  (#{id? 348}# #{a 2365}#))
                                #{tmp 2362}#)
                              #f)
                          (@apply
                            (lambda (#{a 2369}# #{b 2370}#)
                              (#{opt 2298}#
                                #{b 2370}#
                                #{req 2355}#
                                (cons (cons #{a 2369}#
                                            '(#(syntax-object
                                                #f
                                                ((top)
                                                 #(ribcage
                                                   #(a b)
                                                   #((top) (top))
                                                   #("i2367" "i2368"))
                                                 #(ribcage () () ())
                                                 #(ribcage
                                                   #(args req ropt)
                                                   #((top) (top) (top))
                                                   #("i2357" "i2358" "i2359"))
                                                 #(ribcage
                                                   (check rest key opt req)
                                                   ((top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top))
                                                   ("i2303"
                                                    "i2301"
                                                    "i2299"
                                                    "i2297"
                                                    "i2295"))
                                                 #(ribcage
                                                   #(orig-args)
                                                   #((top))
                                                   #("i2294"))
                                                 #(ribcage
                                                   (lambda-var-list
                                                     gen-var
                                                     strip
                                                     chi-lambda-case
                                                     lambda*-formals
                                                     chi-simple-lambda
                                                     lambda-formals
                                                     ellipsis?
                                                     chi-void
                                                     eval-local-transformer
                                                     chi-local-syntax
                                                     chi-body
                                                     chi-macro
                                                     chi-application
                                                     chi-expr
                                                     chi
                                                     syntax-type
                                                     chi-when-list
                                                     chi-install-global
                                                     chi-top-sequence
                                                     chi-sequence
                                                     source-wrap
                                                     wrap
                                                     bound-id-member?
                                                     distinct-bound-ids?
                                                     valid-bound-ids?
                                                     bound-id=?
                                                     free-id=?
                                                     id-var-name
                                                     same-marks?
                                                     join-marks
                                                     join-wraps
                                                     smart-append
                                                     make-binding-wrap
                                                     extend-ribcage!
                                                     make-empty-ribcage
                                                     new-mark
                                                     anti-mark
                                                     the-anti-mark
                                                     top-marked?
                                                     top-wrap
                                                     empty-wrap
                                                     set-ribcage-labels!
                                                     set-ribcage-marks!
                                                     set-ribcage-symnames!
                                                     ribcage-labels
                                                     ribcage-marks
                                                     ribcage-symnames
                                                     ribcage?
                                                     make-ribcage
                                                     gen-labels
                                                     gen-label
                                                     make-rename
                                                     rename-marks
                                                     rename-new
                                                     rename-old
                                                     subst-rename?
                                                     wrap-subst
                                                     wrap-marks
                                                     make-wrap
                                                     id-sym-name&marks
                                                     id-sym-name
                                                     id?
                                                     nonsymbol-id?
                                                     global-extend
                                                     lookup
                                                     macros-only-env
                                                     extend-var-env
                                                     extend-env
                                                     null-env
                                                     binding-value
                                                     binding-type
                                                     make-binding
                                                     arg-check
                                                     source-annotation
                                                     no-source
                                                     set-syntax-object-module!
                                                     set-syntax-object-wrap!
                                                     set-syntax-object-expression!
                                                     syntax-object-module
                                                     syntax-object-wrap
                                                     syntax-object-expression
                                                     syntax-object?
                                                     make-syntax-object
                                                     build-lexical-var
                                                     build-letrec
                                                     build-named-let
                                                     build-let
                                                     build-sequence
                                                     build-data
                                                     build-primref
                                                     build-lambda-case
                                                     build-case-lambda
                                                     build-simple-lambda
                                                     build-global-definition
                                                     build-global-assignment
                                                     build-global-reference
                                                     analyze-variable
                                                     build-lexical-assignment
                                                     build-lexical-reference
                                                     build-dynlet
                                                     build-conditional
                                                     build-application
                                                     build-void
                                                     maybe-name-value!
                                                     decorate-source
                                                     get-global-definition-hook
                                                     put-global-definition-hook
                                                     gensym-hook
                                                     local-eval-hook
                                                     top-level-eval-hook
                                                     fx<
                                                     fx=
                                                     fx-
                                                     fx+
                                                     set-lambda-meta!
                                                     lambda-meta
                                                     lambda?
                                                     make-dynlet
                                                     make-letrec
                                                     make-let
                                                     make-lambda-case
                                                     make-lambda
                                                     make-sequence
                                                     make-application
                                                     make-conditional
                                                     make-toplevel-define
                                                     make-toplevel-set
                                                     make-toplevel-ref
                                                     make-module-set
                                                     make-module-ref
                                                     make-lexical-set
                                                     make-lexical-ref
                                                     make-primitive-ref
                                                     make-const
                                                     make-void)
                                                   ((top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top))
                                                   ("i465"
                                                    "i463"
                                                    "i461"
                                                    "i459"
                                                    "i457"
                                                    "i455"
                                                    "i453"
                                                    "i451"
                                                    "i449"
                                                    "i447"
                                                    "i445"
                                                    "i443"
                                                    "i441"
                                                    "i439"
                                                    "i437"
                                                    "i435"
                                                    "i433"
                                                    "i431"
                                                    "i429"
                                                    "i427"
                                                    "i425"
                                                    "i423"
                                                    "i421"
                                                    "i419"
                                                    "i417"
                                                    "i415"
                                                    "i413"
                                                    "i411"
                                                    "i409"
                                                    "i407"
                                                    "i405"
                                                    "i403"
                                                    "i401"
                                                    "i399"
                                                    "i397"
                                                    "i396"
                                                    "i394"
                                                    "i391"
                                                    "i390"
                                                    "i389"
                                                    "i387"
                                                    "i386"
                                                    "i384"
                                                    "i382"
                                                    "i380"
                                                    "i378"
                                                    "i376"
                                                    "i374"
                                                    "i372"
                                                    "i370"
                                                    "i367"
                                                    "i365"
                                                    "i364"
                                                    "i362"
                                                    "i360"
                                                    "i358"
                                                    "i356"
                                                    "i355"
                                                    "i354"
                                                    "i353"
                                                    "i351"
                                                    "i350"
                                                    "i347"
                                                    "i345"
                                                    "i343"
                                                    "i341"
                                                    "i339"
                                                    "i337"
                                                    "i335"
                                                    "i334"
                                                    "i333"
                                                    "i331"
                                                    "i329"
                                                    "i328"
                                                    "i325"
                                                    "i324"
                                                    "i322"
                                                    "i320"
                                                    "i318"
                                                    "i316"
                                                    "i314"
                                                    "i312"
                                                    "i310"
                                                    "i308"
                                                    "i306"
                                                    "i303"
                                                    "i301"
                                                    "i299"
                                                    "i297"
                                                    "i295"
                                                    "i293"
                                                    "i291"
                                                    "i289"
                                                    "i287"
                                                    "i285"
                                                    "i283"
                                                    "i281"
                                                    "i279"
                                                    "i277"
                                                    "i275"
                                                    "i273"
                                                    "i271"
                                                    "i269"
                                                    "i267"
                                                    "i265"
                                                    "i263"
                                                    "i261"
                                                    "i259"
                                                    "i258"
                                                    "i255"
                                                    "i253"
                                                    "i252"
                                                    "i251"
                                                    "i250"
                                                    "i249"
                                                    "i247"
                                                    "i245"
                                                    "i243"
                                                    "i240"
                                                    "i238"
                                                    "i236"
                                                    "i234"
                                                    "i232"
                                                    "i230"
                                                    "i228"
                                                    "i226"
                                                    "i224"
                                                    "i222"
                                                    "i220"
                                                    "i218"
                                                    "i216"
                                                    "i214"
                                                    "i212"
                                                    "i210"
                                                    "i208"
                                                    "i206"))
                                                 #(ribcage
                                                   (define-structure
                                                     define-expansion-accessors
                                                     define-expansion-constructors)
                                                   ((top) (top) (top))
                                                   ("i44" "i43" "i42")))
                                                (hygiene guile))))
                                      #{ropt 2356}#)))
                            #{tmp 2362}#)
                          (begin
                            (let ((#{tmp 2371}#
                                    ($sc-dispatch
                                      #{args 2354}#
                                      '((any any) . any))))
                              (if (if #{tmp 2371}#
                                    (@apply
                                      (lambda (#{a 2375}#
                                               #{init 2376}#
                                               #{b 2377}#)
                                        (#{id? 348}# #{a 2375}#))
                                      #{tmp 2371}#)
                                    #f)
                                (@apply
                                  (lambda (#{a 2381}# #{init 2382}# #{b 2383}#)
                                    (#{opt 2298}#
                                      #{b 2383}#
                                      #{req 2355}#
                                      (cons (list #{a 2381}# #{init 2382}#)
                                            #{ropt 2356}#)))
                                  #{tmp 2371}#)
                                (begin
                                  (let ((#{tmp 2384}#
                                          ($sc-dispatch
                                            #{args 2354}#
                                            '(any . any))))
                                    (if (if #{tmp 2384}#
                                          (@apply
                                            (lambda (#{a 2387}# #{b 2388}#)
                                              (eq? (syntax->datum #{a 2387}#)
                                                   #:key))
                                            #{tmp 2384}#)
                                          #f)
                                      (@apply
                                        (lambda (#{a 2391}# #{b 2392}#)
                                          (#{key 2300}#
                                            #{b 2392}#
                                            #{req 2355}#
                                            (reverse #{ropt 2356}#)
                                            '()))
                                        #{tmp 2384}#)
                                      (begin
                                        (let ((#{tmp 2393}#
                                                ($sc-dispatch
                                                  #{args 2354}#
                                                  '(any any))))
                                          (if (if #{tmp 2393}#
                                                (@apply
                                                  (lambda (#{a 2396}#
                                                           #{b 2397}#)
                                                    (eq? (syntax->datum
                                                           #{a 2396}#)
                                                         #:rest))
                                                  #{tmp 2393}#)
                                                #f)
                                            (@apply
                                              (lambda (#{a 2400}# #{b 2401}#)
                                                (#{rest 2302}#
                                                  #{b 2401}#
                                                  #{req 2355}#
                                                  (reverse #{ropt 2356}#)
                                                  '()))
                                              #{tmp 2393}#)
                                            (begin
                                              (let ((#{tmp 2402}#
                                                      (list #{args 2354}#)))
                                                (if (if #{tmp 2402}#
                                                      (@apply
                                                        (lambda (#{r 2404}#)
                                                          (#{id? 348}#
                                                            #{r 2404}#))
                                                        #{tmp 2402}#)
                                                      #f)
                                                  (@apply
                                                    (lambda (#{r 2406}#)
                                                      (#{rest 2302}#
                                                        #{r 2406}#
                                                        #{req 2355}#
                                                        (reverse #{ropt 2356}#)
                                                        '()))
                                                    #{tmp 2402}#)
                                                  (syntax-violation
                                                    'lambda*
                                                    "invalid optional argument list"
                                                    #{orig-args 2293}#
                                                    #{args 2354}#)))))))))))))))))))))
          (#{key 2300}#
            (lambda (#{args 2409}#
                     #{req 2410}#
                     #{opt 2411}#
                     #{rkey 2412}#)
              (begin
                (let ((#{tmp 2418}# ($sc-dispatch #{args 2409}# '())))
                  (if #{tmp 2418}#
                    (@apply
                      (lambda ()
                        (#{check 2304}#
                          #{req 2410}#
                          #{opt 2411}#
                          #f
                          (cons #f (reverse #{rkey 2412}#))))
                      #{tmp 2418}#)
                    (begin
                      (let ((#{tmp 2419}#
                              ($sc-dispatch #{args 2409}# '(any . any))))
                        (if (if #{tmp 2419}#
                              (@apply
                                (lambda (#{a 2422}# #{b 2423}#)
                                  (#{id? 348}# #{a 2422}#))
                                #{tmp 2419}#)
                              #f)
                          (@apply
                            (lambda (#{a 2426}# #{b 2427}#)
                              (begin
                                (let ((#{tmp 2429}#
                                        (symbol->keyword
                                          (syntax->datum #{a 2426}#))))
                                  (#{key 2300}#
                                    #{b 2427}#
                                    #{req 2410}#
                                    #{opt 2411}#
                                    (cons (cons #{tmp 2429}#
                                                (cons #{a 2426}#
                                                      '(#(syntax-object
                                                          #f
                                                          ((top)
                                                           #(ribcage () () ())
                                                           #(ribcage
                                                             #(k)
                                                             #((top))
                                                             #("i2430"))
                                                           #(ribcage
                                                             #(a b)
                                                             #((top) (top))
                                                             #("i2424"
                                                               "i2425"))
                                                           #(ribcage () () ())
                                                           #(ribcage
                                                             #(args
                                                               req
                                                               opt
                                                               rkey)
                                                             #((top)
                                                               (top)
                                                               (top)
                                                               (top))
                                                             #("i2413"
                                                               "i2414"
                                                               "i2415"
                                                               "i2416"))
                                                           #(ribcage
                                                             (check rest
                                                                    key
                                                                    opt
                                                                    req)
                                                             ((top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top))
                                                             ("i2303"
                                                              "i2301"
                                                              "i2299"
                                                              "i2297"
                                                              "i2295"))
                                                           #(ribcage
                                                             #(orig-args)
                                                             #((top))
                                                             #("i2294"))
                                                           #(ribcage
                                                             (lambda-var-list
                                                               gen-var
                                                               strip
                                                               chi-lambda-case
                                                               lambda*-formals
                                                               chi-simple-lambda
                                                               lambda-formals
                                                               ellipsis?
                                                               chi-void
                                                               eval-local-transformer
                                                               chi-local-syntax
                                                               chi-body
                                                               chi-macro
                                                               chi-application
                                                               chi-expr
                                                               chi
                                                               syntax-type
                                                               chi-when-list
                                                               chi-install-global
                                                               chi-top-sequence
                                                               chi-sequence
                                                               source-wrap
                                                               wrap
                                                               bound-id-member?
                                                               distinct-bound-ids?
                                                               valid-bound-ids?
                                                               bound-id=?
                                                               free-id=?
                                                               id-var-name
                                                               same-marks?
                                                               join-marks
                                                               join-wraps
                                                               smart-append
                                                               make-binding-wrap
                                                               extend-ribcage!
                                                               make-empty-ribcage
                                                               new-mark
                                                               anti-mark
                                                               the-anti-mark
                                                               top-marked?
                                                               top-wrap
                                                               empty-wrap
                                                               set-ribcage-labels!
                                                               set-ribcage-marks!
                                                               set-ribcage-symnames!
                                                               ribcage-labels
                                                               ribcage-marks
                                                               ribcage-symnames
                                                               ribcage?
                                                               make-ribcage
                                                               gen-labels
                                                               gen-label
                                                               make-rename
                                                               rename-marks
                                                               rename-new
                                                               rename-old
                                                               subst-rename?
                                                               wrap-subst
                                                               wrap-marks
                                                               make-wrap
                                                               id-sym-name&marks
                                                               id-sym-name
                                                               id?
                                                               nonsymbol-id?
                                                               global-extend
                                                               lookup
                                                               macros-only-env
                                                               extend-var-env
                                                               extend-env
                                                               null-env
                                                               binding-value
                                                               binding-type
                                                               make-binding
                                                               arg-check
                                                               source-annotation
                                                               no-source
                                                               set-syntax-object-module!
                                                               set-syntax-object-wrap!
                                                               set-syntax-object-expression!
                                                               syntax-object-module
                                                               syntax-object-wrap
                                                               syntax-object-expression
                                                               syntax-object?
                                                               make-syntax-object
                                                               build-lexical-var
                                                               build-letrec
                                                               build-named-let
                                                               build-let
                                                               build-sequence
                                                               build-data
                                                               build-primref
                                                               build-lambda-case
                                                               build-case-lambda
                                                               build-simple-lambda
                                                               build-global-definition
                                                               build-global-assignment
                                                               build-global-reference
                                                               analyze-variable
                                                               build-lexical-assignment
                                                               build-lexical-reference
                                                               build-dynlet
                                                               build-conditional
                                                               build-application
                                                               build-void
                                                               maybe-name-value!
                                                               decorate-source
                                                               get-global-definition-hook
                                                               put-global-definition-hook
                                                               gensym-hook
                                                               local-eval-hook
                                                               top-level-eval-hook
                                                               fx<
                                                               fx=
                                                               fx-
                                                               fx+
                                                               set-lambda-meta!
                                                               lambda-meta
                                                               lambda?
                                                               make-dynlet
                                                               make-letrec
                                                               make-let
                                                               make-lambda-case
                                                               make-lambda
                                                               make-sequence
                                                               make-application
                                                               make-conditional
                                                               make-toplevel-define
                                                               make-toplevel-set
                                                               make-toplevel-ref
                                                               make-module-set
                                                               make-module-ref
                                                               make-lexical-set
                                                               make-lexical-ref
                                                               make-primitive-ref
                                                               make-const
                                                               make-void)
                                                             ((top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top))
                                                             ("i465"
                                                              "i463"
                                                              "i461"
                                                              "i459"
                                                              "i457"
                                                              "i455"
                                                              "i453"
                                                              "i451"
                                                              "i449"
                                                              "i447"
                                                              "i445"
                                                              "i443"
                                                              "i441"
                                                              "i439"
                                                              "i437"
                                                              "i435"
                                                              "i433"
                                                              "i431"
                                                              "i429"
                                                              "i427"
                                                              "i425"
                                                              "i423"
                                                              "i421"
                                                              "i419"
                                                              "i417"
                                                              "i415"
                                                              "i413"
                                                              "i411"
                                                              "i409"
                                                              "i407"
                                                              "i405"
                                                              "i403"
                                                              "i401"
                                                              "i399"
                                                              "i397"
                                                              "i396"
                                                              "i394"
                                                              "i391"
                                                              "i390"
                                                              "i389"
                                                              "i387"
                                                              "i386"
                                                              "i384"
                                                              "i382"
                                                              "i380"
                                                              "i378"
                                                              "i376"
                                                              "i374"
                                                              "i372"
                                                              "i370"
                                                              "i367"
                                                              "i365"
                                                              "i364"
                                                              "i362"
                                                              "i360"
                                                              "i358"
                                                              "i356"
                                                              "i355"
                                                              "i354"
                                                              "i353"
                                                              "i351"
                                                              "i350"
                                                              "i347"
                                                              "i345"
                                                              "i343"
                                                              "i341"
                                                              "i339"
                                                              "i337"
                                                              "i335"
                                                              "i334"
                                                              "i333"
                                                              "i331"
                                                              "i329"
                                                              "i328"
                                                              "i325"
                                                              "i324"
                                                              "i322"
                                                              "i320"
                                                              "i318"
                                                              "i316"
                                                              "i314"
                                                              "i312"
                                                              "i310"
                                                              "i308"
                                                              "i306"
                                                              "i303"
                                                              "i301"
                                                              "i299"
                                                              "i297"
                                                              "i295"
                                                              "i293"
                                                              "i291"
                                                              "i289"
                                                              "i287"
                                                              "i285"
                                                              "i283"
                                                              "i281"
                                                              "i279"
                                                              "i277"
                                                              "i275"
                                                              "i273"
                                                              "i271"
                                                              "i269"
                                                              "i267"
                                                              "i265"
                                                              "i263"
                                                              "i261"
                                                              "i259"
                                                              "i258"
                                                              "i255"
                                                              "i253"
                                                              "i252"
                                                              "i251"
                                                              "i250"
                                                              "i249"
                                                              "i247"
                                                              "i245"
                                                              "i243"
                                                              "i240"
                                                              "i238"
                                                              "i236"
                                                              "i234"
                                                              "i232"
                                                              "i230"
                                                              "i228"
                                                              "i226"
                                                              "i224"
                                                              "i222"
                                                              "i220"
                                                              "i218"
                                                              "i216"
                                                              "i214"
                                                              "i212"
                                                              "i210"
                                                              "i208"
                                                              "i206"))
                                                           #(ribcage
                                                             (define-structure
                                                               define-expansion-accessors
                                                               define-expansion-constructors)
                                                             ((top)
                                                              (top)
                                                              (top))
                                                             ("i44"
                                                              "i43"
                                                              "i42")))
                                                          (hygiene guile)))))
                                          #{rkey 2412}#)))))
                            #{tmp 2419}#)
                          (begin
                            (let ((#{tmp 2432}#
                                    ($sc-dispatch
                                      #{args 2409}#
                                      '((any any) . any))))
                              (if (if #{tmp 2432}#
                                    (@apply
                                      (lambda (#{a 2436}#
                                               #{init 2437}#
                                               #{b 2438}#)
                                        (#{id? 348}# #{a 2436}#))
                                      #{tmp 2432}#)
                                    #f)
                                (@apply
                                  (lambda (#{a 2442}# #{init 2443}# #{b 2444}#)
                                    (begin
                                      (let ((#{tmp 2446}#
                                              (symbol->keyword
                                                (syntax->datum #{a 2442}#))))
                                        (#{key 2300}#
                                          #{b 2444}#
                                          #{req 2410}#
                                          #{opt 2411}#
                                          (cons (list #{tmp 2446}#
                                                      #{a 2442}#
                                                      #{init 2443}#)
                                                #{rkey 2412}#)))))
                                  #{tmp 2432}#)
                                (begin
                                  (let ((#{tmp 2449}#
                                          ($sc-dispatch
                                            #{args 2409}#
                                            '((any any any) . any))))
                                    (if (if #{tmp 2449}#
                                          (@apply
                                            (lambda (#{a 2454}#
                                                     #{init 2455}#
                                                     #{k 2456}#
                                                     #{b 2457}#)
                                              (if (#{id? 348}# #{a 2454}#)
                                                (keyword?
                                                  (syntax->datum #{k 2456}#))
                                                #f))
                                            #{tmp 2449}#)
                                          #f)
                                      (@apply
                                        (lambda (#{a 2464}#
                                                 #{init 2465}#
                                                 #{k 2466}#
                                                 #{b 2467}#)
                                          (#{key 2300}#
                                            #{b 2467}#
                                            #{req 2410}#
                                            #{opt 2411}#
                                            (cons (list #{k 2466}#
                                                        #{a 2464}#
                                                        #{init 2465}#)
                                                  #{rkey 2412}#)))
                                        #{tmp 2449}#)
                                      (begin
                                        (let ((#{tmp 2468}#
                                                ($sc-dispatch
                                                  #{args 2409}#
                                                  '(any))))
                                          (if (if #{tmp 2468}#
                                                (@apply
                                                  (lambda (#{aok 2470}#)
                                                    (eq? (syntax->datum
                                                           #{aok 2470}#)
                                                         #:allow-other-keys))
                                                  #{tmp 2468}#)
                                                #f)
                                            (@apply
                                              (lambda (#{aok 2472}#)
                                                (#{check 2304}#
                                                  #{req 2410}#
                                                  #{opt 2411}#
                                                  #f
                                                  (cons #t
                                                        (reverse
                                                          #{rkey 2412}#))))
                                              #{tmp 2468}#)
                                            (begin
                                              (let ((#{tmp 2473}#
                                                      ($sc-dispatch
                                                        #{args 2409}#
                                                        '(any any any))))
                                                (if (if #{tmp 2473}#
                                                      (@apply
                                                        (lambda (#{aok 2477}#
                                                                 #{a 2478}#
                                                                 #{b 2479}#)
                                                          (if (eq? (syntax->datum
                                                                     #{aok 2477}#)
                                                                   #:allow-other-keys)
                                                            (eq? (syntax->datum
                                                                   #{a 2478}#)
                                                                 #:rest)
                                                            #f))
                                                        #{tmp 2473}#)
                                                      #f)
                                                  (@apply
                                                    (lambda (#{aok 2485}#
                                                             #{a 2486}#
                                                             #{b 2487}#)
                                                      (#{rest 2302}#
                                                        #{b 2487}#
                                                        #{req 2410}#
                                                        #{opt 2411}#
                                                        (cons #t
                                                              (reverse
                                                                #{rkey 2412}#))))
                                                    #{tmp 2473}#)
                                                  (begin
                                                    (let ((#{tmp 2488}#
                                                            ($sc-dispatch
                                                              #{args 2409}#
                                                              '(any . any))))
                                                      (if (if #{tmp 2488}#
                                                            (@apply
                                                              (lambda (#{aok 2491}#
                                                                       #{r 2492}#)
                                                                (if (eq? (syntax->datum
                                                                           #{aok 2491}#)
                                                                         #:allow-other-keys)
                                                                  (#{id? 348}#
                                                                    #{r 2492}#)
                                                                  #f))
                                                              #{tmp 2488}#)
                                                            #f)
                                                        (@apply
                                                          (lambda (#{aok 2497}#
                                                                   #{r 2498}#)
                                                            (#{rest 2302}#
                                                              #{r 2498}#
                                                              #{req 2410}#
                                                              #{opt 2411}#
                                                              (cons #t
                                                                    (reverse
                                                                      #{rkey 2412}#))))
                                                          #{tmp 2488}#)
                                                        (begin
                                                          (let ((#{tmp 2499}#
                                                                  ($sc-dispatch
                                                                    #{args 2409}#
                                                                    '(any any))))
                                                            (if (if #{tmp 2499}#
                                                                  (@apply
                                                                    (lambda (#{a 2502}#
                                                                             #{b 2503}#)
                                                                      (eq? (syntax->datum
                                                                             #{a 2502}#)
                                                                           #:rest))
                                                                    #{tmp 2499}#)
                                                                  #f)
                                                              (@apply
                                                                (lambda (#{a 2506}#
                                                                         #{b 2507}#)
                                                                  (#{rest 2302}#
                                                                    #{b 2507}#
                                                                    #{req 2410}#
                                                                    #{opt 2411}#
                                                                    (cons #f
                                                                          (reverse
                                                                            #{rkey 2412}#))))
                                                                #{tmp 2499}#)
                                                              (begin
                                                                (let ((#{tmp 2508}#
                                                                        (list #{args 2409}#)))
                                                                  (if (if #{tmp 2508}#
                                                                        (@apply
                                                                          (lambda (#{r 2510}#)
                                                                            (#{id? 348}#
                                                                              #{r 2510}#))
                                                                          #{tmp 2508}#)
                                                                        #f)
                                                                    (@apply
                                                                      (lambda (#{r 2512}#)
                                                                        (#{rest 2302}#
                                                                          #{r 2512}#
                                                                          #{req 2410}#
                                                                          #{opt 2411}#
                                                                          (cons #f
                                                                                (reverse
                                                                                  #{rkey 2412}#))))
                                                                      #{tmp 2508}#)
                                                                    (syntax-violation
                                                                      'lambda*
                                                                      "invalid keyword argument list"
                                                                      #{orig-args 2293}#
                                                                      #{args 2409}#))))))))))))))))))))))))))))))
          (#{rest 2302}#
            (lambda (#{args 2515}#
                     #{req 2516}#
                     #{opt 2517}#
                     #{kw 2518}#)
              (begin
                (let ((#{tmp 2524}# (list #{args 2515}#)))
                  (if (if #{tmp 2524}#
                        (@apply
                          (lambda (#{r 2526}#) (#{id? 348}# #{r 2526}#))
                          #{tmp 2524}#)
                        #f)
                    (@apply
                      (lambda (#{r 2528}#)
                        (#{check 2304}#
                          #{req 2516}#
                          #{opt 2517}#
                          #{r 2528}#
                          #{kw 2518}#))
                      #{tmp 2524}#)
                    (syntax-violation
                      'lambda*
                      "invalid rest argument"
                      #{orig-args 2293}#
                      #{args 2515}#))))))
          (#{check 2304}#
            (lambda (#{req 2531}#
                     #{opt 2532}#
                     #{rest 2533}#
                     #{kw 2534}#)
              (if (#{distinct-bound-ids? 418}#
                    (append
                      #{req 2531}#
                      (map car #{opt 2532}#)
                      (if #{rest 2533}# (list #{rest 2533}#) '())
                      (if (pair? #{kw 2534}#)
                        (map cadr (cdr #{kw 2534}#))
                        '())))
                (values
                  #{req 2531}#
                  #{opt 2532}#
                  #{rest 2533}#
                  #{kw 2534}#)
                (syntax-violation
                  'lambda*
                  "duplicate identifier in argument list"
                  #{orig-args 2293}#)))))
         (begin (#{req 2296}# #{orig-args 2293}# '())))))
   (#{chi-lambda-case 460}#
     (lambda (#{e 2542}#
              #{r 2543}#
              #{w 2544}#
              #{s 2545}#
              #{mod 2546}#
              #{get-formals 2547}#
              #{clauses 2548}#)
       (letrec*
         ((#{expand-opt 2559}#
            (lambda (#{req 2582}#
                     #{opt 2583}#
                     #{rest 2584}#
                     #{kw 2585}#
                     #{body 2586}#
                     #{vars 2587}#
                     #{r* 2588}#
                     #{w* 2589}#
                     #{out 2590}#
                     #{inits 2591}#)
              (if (pair? #{opt 2583}#)
                (begin
                  (let ((#{tmp 2604}# (car #{opt 2583}#)))
                    (begin
                      (let ((#{tmp 2605}#
                              ($sc-dispatch #{tmp 2604}# '(any any))))
                        (if #{tmp 2605}#
                          (@apply
                            (lambda (#{id 2608}# #{i 2609}#)
                              (begin
                                (let ((#{v 2612}#
                                        (#{gen-var 464}# #{id 2608}#)))
                                  (begin
                                    (let ((#{l 2614}#
                                            (#{gen-labels 368}#
                                              (list #{v 2612}#))))
                                      (begin
                                        (let ((#{r** 2616}#
                                                (#{extend-var-env 338}#
                                                  #{l 2614}#
                                                  (list #{v 2612}#)
                                                  #{r* 2588}#)))
                                          (begin
                                            (let ((#{w** 2618}#
                                                    (#{make-binding-wrap 400}#
                                                      (list #{id 2608}#)
                                                      #{l 2614}#
                                                      #{w* 2589}#)))
                                              (#{expand-opt 2559}#
                                                #{req 2582}#
                                                (cdr #{opt 2583}#)
                                                #{rest 2584}#
                                                #{kw 2585}#
                                                #{body 2586}#
                                                (cons #{v 2612}# #{vars 2587}#)
                                                #{r** 2616}#
                                                #{w** 2618}#
                                                (cons (syntax->datum
                                                        #{id 2608}#)
                                                      #{out 2590}#)
                                                (cons (#{chi 436}#
                                                        #{i 2609}#
                                                        #{r* 2588}#
                                                        #{w* 2589}#
                                                        #{mod 2546}#)
                                                      #{inits 2591}#)))))))))))
                            #{tmp 2605}#)
                          (syntax-violation
                            #f
                            "source expression failed to match any pattern"
                            #{tmp 2604}#))))))
                (if #{rest 2584}#
                  (begin
                    (let ((#{v 2623}# (#{gen-var 464}# #{rest 2584}#)))
                      (begin
                        (let ((#{l 2625}#
                                (#{gen-labels 368}# (list #{v 2623}#))))
                          (begin
                            (let ((#{r* 2627}#
                                    (#{extend-var-env 338}#
                                      #{l 2625}#
                                      (list #{v 2623}#)
                                      #{r* 2588}#)))
                              (begin
                                (let ((#{w* 2629}#
                                        (#{make-binding-wrap 400}#
                                          (list #{rest 2584}#)
                                          #{l 2625}#
                                          #{w* 2589}#)))
                                  (#{expand-kw 2561}#
                                    #{req 2582}#
                                    (if (pair? #{out 2590}#)
                                      (reverse #{out 2590}#)
                                      #f)
                                    (syntax->datum #{rest 2584}#)
                                    (if (pair? #{kw 2585}#)
                                      (cdr #{kw 2585}#)
                                      #{kw 2585}#)
                                    #{body 2586}#
                                    (cons #{v 2623}# #{vars 2587}#)
                                    #{r* 2627}#
                                    #{w* 2629}#
                                    (if (pair? #{kw 2585}#)
                                      (car #{kw 2585}#)
                                      #f)
                                    '()
                                    #{inits 2591}#)))))))))
                  (#{expand-kw 2561}#
                    #{req 2582}#
                    (if (pair? #{out 2590}#)
                      (reverse #{out 2590}#)
                      #f)
                    #f
                    (if (pair? #{kw 2585}#)
                      (cdr #{kw 2585}#)
                      #{kw 2585}#)
                    #{body 2586}#
                    #{vars 2587}#
                    #{r* 2588}#
                    #{w* 2589}#
                    (if (pair? #{kw 2585}#) (car #{kw 2585}#) #f)
                    '()
                    #{inits 2591}#)))))
          (#{expand-kw 2561}#
            (lambda (#{req 2631}#
                     #{opt 2632}#
                     #{rest 2633}#
                     #{kw 2634}#
                     #{body 2635}#
                     #{vars 2636}#
                     #{r* 2637}#
                     #{w* 2638}#
                     #{aok 2639}#
                     #{out 2640}#
                     #{inits 2641}#)
              (if (pair? #{kw 2634}#)
                (begin
                  (let ((#{tmp 2655}# (car #{kw 2634}#)))
                    (begin
                      (let ((#{tmp 2656}#
                              ($sc-dispatch #{tmp 2655}# '(any any any))))
                        (if #{tmp 2656}#
                          (@apply
                            (lambda (#{k 2660}# #{id 2661}# #{i 2662}#)
                              (begin
                                (let ((#{v 2665}#
                                        (#{gen-var 464}# #{id 2661}#)))
                                  (begin
                                    (let ((#{l 2667}#
                                            (#{gen-labels 368}#
                                              (list #{v 2665}#))))
                                      (begin
                                        (let ((#{r** 2669}#
                                                (#{extend-var-env 338}#
                                                  #{l 2667}#
                                                  (list #{v 2665}#)
                                                  #{r* 2637}#)))
                                          (begin
                                            (let ((#{w** 2671}#
                                                    (#{make-binding-wrap 400}#
                                                      (list #{id 2661}#)
                                                      #{l 2667}#
                                                      #{w* 2638}#)))
                                              (#{expand-kw 2561}#
                                                #{req 2631}#
                                                #{opt 2632}#
                                                #{rest 2633}#
                                                (cdr #{kw 2634}#)
                                                #{body 2635}#
                                                (cons #{v 2665}# #{vars 2636}#)
                                                #{r** 2669}#
                                                #{w** 2671}#
                                                #{aok 2639}#
                                                (cons (list (syntax->datum
                                                              #{k 2660}#)
                                                            (syntax->datum
                                                              #{id 2661}#)
                                                            #{v 2665}#)
                                                      #{out 2640}#)
                                                (cons (#{chi 436}#
                                                        #{i 2662}#
                                                        #{r* 2637}#
                                                        #{w* 2638}#
                                                        #{mod 2546}#)
                                                      #{inits 2641}#)))))))))))
                            #{tmp 2656}#)
                          (syntax-violation
                            #f
                            "source expression failed to match any pattern"
                            #{tmp 2655}#))))))
                (#{expand-body 2563}#
                  #{req 2631}#
                  #{opt 2632}#
                  #{rest 2633}#
                  (if (if #{aok 2639}#
                        #{aok 2639}#
                        (pair? #{out 2640}#))
                    (cons #{aok 2639}# (reverse #{out 2640}#))
                    #f)
                  #{body 2635}#
                  (reverse #{vars 2636}#)
                  #{r* 2637}#
                  #{w* 2638}#
                  (reverse #{inits 2641}#)
                  '()))))
          (#{expand-body 2563}#
            (lambda (#{req 2677}#
                     #{opt 2678}#
                     #{rest 2679}#
                     #{kw 2680}#
                     #{body 2681}#
                     #{vars 2682}#
                     #{r* 2683}#
                     #{w* 2684}#
                     #{inits 2685}#
                     #{meta 2686}#)
              (begin
                (let ((#{tmp 2698}#
                        ($sc-dispatch
                          #{body 2681}#
                          '(any any . each-any))))
                  (if (if #{tmp 2698}#
                        (@apply
                          (lambda (#{docstring 2702}# #{e1 2703}# #{e2 2704}#)
                            (string? (syntax->datum #{docstring 2702}#)))
                          #{tmp 2698}#)
                        #f)
                    (@apply
                      (lambda (#{docstring 2708}# #{e1 2709}# #{e2 2710}#)
                        (#{expand-body 2563}#
                          #{req 2677}#
                          #{opt 2678}#
                          #{rest 2679}#
                          #{kw 2680}#
                          (cons #{e1 2709}# #{e2 2710}#)
                          #{vars 2682}#
                          #{r* 2683}#
                          #{w* 2684}#
                          #{inits 2685}#
                          (append
                            #{meta 2686}#
                            (list (cons 'documentation
                                        (syntax->datum #{docstring 2708}#))))))
                      #{tmp 2698}#)
                    (begin
                      (let ((#{tmp 2713}#
                              ($sc-dispatch
                                #{body 2681}#
                                '(#(vector #(each (any . any)))
                                  any
                                  .
                                  each-any))))
                        (if #{tmp 2713}#
                          (@apply
                            (lambda (#{k 2718}#
                                     #{v 2719}#
                                     #{e1 2720}#
                                     #{e2 2721}#)
                              (#{expand-body 2563}#
                                #{req 2677}#
                                #{opt 2678}#
                                #{rest 2679}#
                                #{kw 2680}#
                                (cons #{e1 2720}# #{e2 2721}#)
                                #{vars 2682}#
                                #{r* 2683}#
                                #{w* 2684}#
                                #{inits 2685}#
                                (append
                                  #{meta 2686}#
                                  (syntax->datum
                                    (map cons #{k 2718}# #{v 2719}#)))))
                            #{tmp 2713}#)
                          (begin
                            (let ((#{tmp 2725}#
                                    ($sc-dispatch
                                      #{body 2681}#
                                      '(any . each-any))))
                              (if #{tmp 2725}#
                                (@apply
                                  (lambda (#{e1 2728}# #{e2 2729}#)
                                    (values
                                      #{meta 2686}#
                                      #{req 2677}#
                                      #{opt 2678}#
                                      #{rest 2679}#
                                      #{kw 2680}#
                                      #{inits 2685}#
                                      #{vars 2682}#
                                      (#{chi-body 444}#
                                        (cons #{e1 2728}# #{e2 2729}#)
                                        (#{source-wrap 424}#
                                          #{e 2542}#
                                          #{w 2544}#
                                          #{s 2545}#
                                          #{mod 2546}#)
                                        #{r* 2683}#
                                        #{w* 2684}#
                                        #{mod 2546}#)))
                                  #{tmp 2725}#)
                                (syntax-violation
                                  #f
                                  "source expression failed to match any pattern"
                                  #{body 2681}#)))))))))))))
         (begin
           (begin
             (let ((#{tmp 2732}#
                     ($sc-dispatch #{clauses 2548}# '())))
               (if #{tmp 2732}#
                 (@apply (lambda () (values '() #f)) #{tmp 2732}#)
                 (begin
                   (let ((#{tmp 2733}#
                           ($sc-dispatch
                             #{clauses 2548}#
                             '((any any . each-any)
                               .
                               #(each (any any . each-any))))))
                     (if #{tmp 2733}#
                       (@apply
                         (lambda (#{args 2740}#
                                  #{e1 2741}#
                                  #{e2 2742}#
                                  #{args* 2743}#
                                  #{e1* 2744}#
                                  #{e2* 2745}#)
                           (call-with-values
                             (lambda () (#{get-formals 2547}# #{args 2740}#))
                             (lambda (#{req 2746}#
                                      #{opt 2747}#
                                      #{rest 2748}#
                                      #{kw 2749}#)
                               (call-with-values
                                 (lambda ()
                                   (begin
                                     (let ((#{body 4787}#
                                             (cons #{e1 2741}# #{e2 2742}#)))
                                       (begin
                                         (let ((#{vars 4788}#
                                                 (map #{gen-var 464}#
                                                      #{req 2746}#))
                                               (#{labels 4789}#
                                                 (#{gen-labels 368}#
                                                   #{req 2746}#)))
                                           (begin
                                             (let ((#{r* 4790}#
                                                     (#{extend-var-env 338}#
                                                       #{labels 4789}#
                                                       #{vars 4788}#
                                                       #{r 2543}#))
                                                   (#{w* 4791}#
                                                     (#{make-binding-wrap 400}#
                                                       #{req 2746}#
                                                       #{labels 4789}#
                                                       #{w 2544}#)))
                                               (#{expand-opt 2559}#
                                                 (map syntax->datum
                                                      #{req 2746}#)
                                                 #{opt 2747}#
                                                 #{rest 2748}#
                                                 #{kw 2749}#
                                                 #{body 4787}#
                                                 (reverse #{vars 4788}#)
                                                 #{r* 4790}#
                                                 #{w* 4791}#
                                                 '()
                                                 '()))))))))
                                 (lambda (#{meta 2755}#
                                          #{req 2756}#
                                          #{opt 2757}#
                                          #{rest 2758}#
                                          #{kw 2759}#
                                          #{inits 2760}#
                                          #{vars 2761}#
                                          #{body 2762}#)
                                   (call-with-values
                                     (lambda ()
                                       (#{chi-lambda-case 460}#
                                         #{e 2542}#
                                         #{r 2543}#
                                         #{w 2544}#
                                         #{s 2545}#
                                         #{mod 2546}#
                                         #{get-formals 2547}#
                                         (map (lambda (#{tmp 2773}#
                                                       #{tmp 2772}#
                                                       #{tmp 2771}#)
                                                (cons #{tmp 2771}#
                                                      (cons #{tmp 2772}#
                                                            #{tmp 2773}#)))
                                              #{e2* 2745}#
                                              #{e1* 2744}#
                                              #{args* 2743}#)))
                                     (lambda (#{meta* 2775}# #{else* 2776}#)
                                       (values
                                         (append #{meta 2755}# #{meta* 2775}#)
                                         (#{build-lambda-case 292}#
                                           #{s 2545}#
                                           #{req 2756}#
                                           #{opt 2757}#
                                           #{rest 2758}#
                                           #{kw 2759}#
                                           #{inits 2760}#
                                           #{vars 2761}#
                                           #{body 2762}#
                                           #{else* 2776}#)))))))))
                         #{tmp 2733}#)
                       (syntax-violation
                         #f
                         "source expression failed to match any pattern"
                         #{clauses 2548}#)))))))))))
   (#{strip 462}#
     (lambda (#{x 2779}# #{w 2780}#)
       (if (memq 'top (car #{w 2780}#))
         #{x 2779}#
         (letrec*
           ((#{f 2787}#
              (lambda (#{x 2788}#)
                (if (#{syntax-object? 311}# #{x 2788}#)
                  (#{strip 462}#
                    (#{syntax-object-expression 313}# #{x 2788}#)
                    (#{syntax-object-wrap 315}# #{x 2788}#))
                  (if (pair? #{x 2788}#)
                    (begin
                      (let ((#{a 2795}# (#{f 2787}# (car #{x 2788}#)))
                            (#{d 2796}# (#{f 2787}# (cdr #{x 2788}#))))
                        (if (if (eq? #{a 2795}# (car #{x 2788}#))
                              (eq? #{d 2796}# (cdr #{x 2788}#))
                              #f)
                          #{x 2788}#
                          (cons #{a 2795}# #{d 2796}#))))
                    (if (vector? #{x 2788}#)
                      (begin
                        (let ((#{old 2802}# (vector->list #{x 2788}#)))
                          (begin
                            (let ((#{new 2804}# (map #{f 2787}# #{old 2802}#)))
                              (letrec*
                                ((#{lp 2808}#
                                   (lambda (#{l1 2809}# #{l2 2810}#)
                                     (if (null? #{l1 2809}#)
                                       #{x 2788}#
                                       (if (eq? (car #{l1 2809}#)
                                                (car #{l2 2810}#))
                                         (#{lp 2808}#
                                           (cdr #{l1 2809}#)
                                           (cdr #{l2 2810}#))
                                         (list->vector #{new 2804}#))))))
                                (begin
                                  (#{lp 2808}# #{old 2802}# #{new 2804}#)))))))
                      #{x 2788}#))))))
           (begin (#{f 2787}# #{x 2779}#))))))
   (#{gen-var 464}#
     (lambda (#{id 2812}#)
       (begin
         (let ((#{id 2815}#
                 (if (#{syntax-object? 311}# #{id 2812}#)
                   (#{syntax-object-expression 313}# #{id 2812}#)
                   #{id 2812}#)))
           (gensym
             (string-append (symbol->string #{id 2815}#) " "))))))
   (#{lambda-var-list 466}#
     (lambda (#{vars 2817}#)
       (letrec*
         ((#{lvl 2823}#
            (lambda (#{vars 2824}# #{ls 2825}# #{w 2826}#)
              (if (pair? #{vars 2824}#)
                (#{lvl 2823}#
                  (cdr #{vars 2824}#)
                  (cons (#{wrap 422}# (car #{vars 2824}#) #{w 2826}# #f)
                        #{ls 2825}#)
                  #{w 2826}#)
                (if (#{id? 348}# #{vars 2824}#)
                  (cons (#{wrap 422}# #{vars 2824}# #{w 2826}# #f)
                        #{ls 2825}#)
                  (if (null? #{vars 2824}#)
                    #{ls 2825}#
                    (if (#{syntax-object? 311}# #{vars 2824}#)
                      (#{lvl 2823}#
                        (#{syntax-object-expression 313}# #{vars 2824}#)
                        #{ls 2825}#
                        (#{join-wraps 404}#
                          #{w 2826}#
                          (#{syntax-object-wrap 315}# #{vars 2824}#)))
                      (cons #{vars 2824}# #{ls 2825}#))))))))
         (begin (#{lvl 2823}# #{vars 2817}# '() '(())))))))
  (begin
    (begin
      (module-define!
        (current-module)
        'letrec-syntax
        (make-syntax-transformer
          'letrec-syntax
          'local-syntax
          #t))
      (module-define!
        (current-module)
        'let-syntax
        (make-syntax-transformer
          'let-syntax
          'local-syntax
          #f))
      (#{global-extend 344}#
        'core
        'fluid-let-syntax
        (lambda (#{e 2837}#
                 #{r 2838}#
                 #{w 2839}#
                 #{s 2840}#
                 #{mod 2841}#)
          (begin
            (let ((#{tmp 2848}#
                    ($sc-dispatch
                      #{e 2837}#
                      '(_ #(each (any any)) any . each-any))))
              (if (if #{tmp 2848}#
                    (@apply
                      (lambda (#{var 2853}#
                               #{val 2854}#
                               #{e1 2855}#
                               #{e2 2856}#)
                        (#{valid-bound-ids? 416}# #{var 2853}#))
                      #{tmp 2848}#)
                    #f)
                (@apply
                  (lambda (#{var 2862}#
                           #{val 2863}#
                           #{e1 2864}#
                           #{e2 2865}#)
                    (begin
                      (let ((#{names 2867}#
                              (map (lambda (#{x 2868}#)
                                     (#{id-var-name 410}#
                                       #{x 2868}#
                                       #{w 2839}#))
                                   #{var 2862}#)))
                        (begin
                          (for-each
                            (lambda (#{id 2871}# #{n 2872}#)
                              (begin
                                (let ((#{atom-key 2877}#
                                        (car (begin
                                               (let ((#{t 5035}#
                                                       (assq #{n 2872}#
                                                             #{r 2838}#)))
                                                 (if #{t 5035}#
                                                   (cdr #{t 5035}#)
                                                   (if (symbol? #{n 2872}#)
                                                     (begin
                                                       (let ((#{t 5036}#
                                                               (#{get-global-definition-hook 262}#
                                                                 #{n 2872}#
                                                                 #{mod 2841}#)))
                                                         (if #{t 5036}#
                                                           #{t 5036}#
                                                           '(global))))
                                                     '(displaced-lexical))))))))
                                  (if (eqv? #{atom-key 2877}#
                                            'displaced-lexical)
                                    (syntax-violation
                                      'fluid-let-syntax
                                      "identifier out of context"
                                      #{e 2837}#
                                      (#{wrap 422}#
                                        (begin
                                          (if (if (pair? #{id 2871}#)
                                                #{s 2840}#
                                                #f)
                                            (set-source-properties!
                                              #{id 2871}#
                                              #{s 2840}#))
                                          #{id 2871}#)
                                        #{w 2839}#
                                        #{mod 2841}#))))))
                            #{var 2862}#
                            #{names 2867}#)
                          (#{chi-body 444}#
                            (cons #{e1 2864}# #{e2 2865}#)
                            (#{wrap 422}#
                              (begin
                                (if (if (pair? #{e 2837}#) #{s 2840}# #f)
                                  (set-source-properties!
                                    #{e 2837}#
                                    #{s 2840}#))
                                #{e 2837}#)
                              #{w 2839}#
                              #{mod 2841}#)
                            (#{extend-env 336}#
                              #{names 2867}#
                              (begin
                                (let ((#{trans-r 2883}#
                                        (#{macros-only-env 340}# #{r 2838}#)))
                                  (map (lambda (#{x 2884}#)
                                         (cons 'macro
                                               (#{eval-local-transformer 448}#
                                                 (#{chi 436}#
                                                   #{x 2884}#
                                                   #{trans-r 2883}#
                                                   #{w 2839}#
                                                   #{mod 2841}#)
                                                 #{mod 2841}#)))
                                       #{val 2863}#)))
                              #{r 2838}#)
                            #{w 2839}#
                            #{mod 2841}#)))))
                  #{tmp 2848}#)
                (syntax-violation
                  'fluid-let-syntax
                  "bad syntax"
                  (#{wrap 422}#
                    (begin
                      (if (if (pair? #{e 2837}#) #{s 2840}# #f)
                        (set-source-properties! #{e 2837}# #{s 2840}#))
                      #{e 2837}#)
                    #{w 2839}#
                    #{mod 2841}#)))))))
      (module-define!
        (current-module)
        'quote
        (make-syntax-transformer
          'quote
          'core
          (lambda (#{e 2890}#
                   #{r 2891}#
                   #{w 2892}#
                   #{s 2893}#
                   #{mod 2894}#)
            (begin
              (let ((#{tmp 2901}# ($sc-dispatch #{e 2890}# '(_ any))))
                (if #{tmp 2901}#
                  (@apply
                    (lambda (#{e 2903}#)
                      (begin
                        (let ((#{exp 5265}#
                                (#{strip 462}# #{e 2903}# #{w 2892}#)))
                          (make-struct/no-tail
                            (vector-ref %expanded-vtables 1)
                            #{s 2893}#
                            #{exp 5265}#))))
                    #{tmp 2901}#)
                  (syntax-violation
                    'quote
                    "bad syntax"
                    (#{wrap 422}#
                      (begin
                        (if (if (pair? #{e 2890}#) #{s 2893}# #f)
                          (set-source-properties! #{e 2890}# #{s 2893}#))
                        #{e 2890}#)
                      #{w 2892}#
                      #{mod 2894}#))))))))
      (#{global-extend 344}#
        'core
        'syntax
        (letrec*
          ((#{gen-syntax 2907}#
             (lambda (#{src 2922}#
                      #{e 2923}#
                      #{r 2924}#
                      #{maps 2925}#
                      #{ellipsis? 2926}#
                      #{mod 2927}#)
               (if (if (symbol? #{e 2923}#)
                     #t
                     (if (if (vector? #{e 2923}#)
                           (if (= (vector-length #{e 2923}#) 4)
                             (eq? (vector-ref #{e 2923}# 0) 'syntax-object)
                             #f)
                           #f)
                       (symbol? (vector-ref #{e 2923}# 1))
                       #f))
                 (begin
                   (let ((#{label 2935}#
                           (#{id-var-name 410}# #{e 2923}# '(()))))
                     (begin
                       (let ((#{b 2938}#
                               (begin
                                 (let ((#{t 5328}#
                                         (assq #{label 2935}# #{r 2924}#)))
                                   (if #{t 5328}#
                                     (cdr #{t 5328}#)
                                     (if (symbol? #{label 2935}#)
                                       (begin
                                         (let ((#{t 5329}#
                                                 (#{get-global-definition-hook 262}#
                                                   #{label 2935}#
                                                   #{mod 2927}#)))
                                           (if #{t 5329}#
                                             #{t 5329}#
                                             '(global))))
                                       '(displaced-lexical)))))))
                         (if (eq? (car #{b 2938}#) 'syntax)
                           (call-with-values
                             (lambda ()
                               (begin
                                 (let ((#{var.lev 2941}# (cdr #{b 2938}#)))
                                   (#{gen-ref 2909}#
                                     #{src 2922}#
                                     (car #{var.lev 2941}#)
                                     (cdr #{var.lev 2941}#)
                                     #{maps 2925}#))))
                             (lambda (#{var 2943}# #{maps 2944}#)
                               (values
                                 (list 'ref #{var 2943}#)
                                 #{maps 2944}#)))
                           (if (#{ellipsis? 2926}# #{e 2923}#)
                             (syntax-violation
                               'syntax
                               "misplaced ellipsis"
                               #{src 2922}#)
                             (values
                               (list 'quote #{e 2923}#)
                               #{maps 2925}#)))))))
                 (begin
                   (let ((#{tmp 2950}#
                           ($sc-dispatch #{e 2923}# '(any any))))
                     (if (if #{tmp 2950}#
                           (@apply
                             (lambda (#{dots 2953}# #{e 2954}#)
                               (#{ellipsis? 2926}# #{dots 2953}#))
                             #{tmp 2950}#)
                           #f)
                       (@apply
                         (lambda (#{dots 2957}# #{e 2958}#)
                           (#{gen-syntax 2907}#
                             #{src 2922}#
                             #{e 2958}#
                             #{r 2924}#
                             #{maps 2925}#
                             (lambda (#{x 2959}#) #f)
                             #{mod 2927}#))
                         #{tmp 2950}#)
                       (begin
                         (let ((#{tmp 2961}#
                                 ($sc-dispatch #{e 2923}# '(any any . any))))
                           (if (if #{tmp 2961}#
                                 (@apply
                                   (lambda (#{x 2965}#
                                            #{dots 2966}#
                                            #{y 2967}#)
                                     (#{ellipsis? 2926}# #{dots 2966}#))
                                   #{tmp 2961}#)
                                 #f)
                             (@apply
                               (lambda (#{x 2971}# #{dots 2972}# #{y 2973}#)
                                 (letrec*
                                   ((#{f 2977}#
                                      (lambda (#{y 2978}# #{k 2979}#)
                                        (begin
                                          (let ((#{tmp 2987}#
                                                  ($sc-dispatch
                                                    #{y 2978}#
                                                    '(any . any))))
                                            (if (if #{tmp 2987}#
                                                  (@apply
                                                    (lambda (#{dots 2990}#
                                                             #{y 2991}#)
                                                      (#{ellipsis? 2926}#
                                                        #{dots 2990}#))
                                                    #{tmp 2987}#)
                                                  #f)
                                              (@apply
                                                (lambda (#{dots 2994}#
                                                         #{y 2995}#)
                                                  (#{f 2977}#
                                                    #{y 2995}#
                                                    (lambda (#{maps 2996}#)
                                                      (call-with-values
                                                        (lambda ()
                                                          (#{k 2979}#
                                                            (cons '()
                                                                  #{maps 2996}#)))
                                                        (lambda (#{x 2998}#
                                                                 #{maps 2999}#)
                                                          (if (null? (car #{maps 2999}#))
                                                            (syntax-violation
                                                              'syntax
                                                              "extra ellipsis"
                                                              #{src 2922}#)
                                                            (values
                                                              (#{gen-mappend 2911}#
                                                                #{x 2998}#
                                                                (car #{maps 2999}#))
                                                              (cdr #{maps 2999}#))))))))
                                                #{tmp 2987}#)
                                              (call-with-values
                                                (lambda ()
                                                  (#{gen-syntax 2907}#
                                                    #{src 2922}#
                                                    #{y 2978}#
                                                    #{r 2924}#
                                                    #{maps 2925}#
                                                    #{ellipsis? 2926}#
                                                    #{mod 2927}#))
                                                (lambda (#{y 3004}#
                                                         #{maps 3005}#)
                                                  (call-with-values
                                                    (lambda ()
                                                      (#{k 2979}#
                                                        #{maps 3005}#))
                                                    (lambda (#{x 3008}#
                                                             #{maps 3009}#)
                                                      (values
                                                        (#{gen-append 2917}#
                                                          #{x 3008}#
                                                          #{y 3004}#)
                                                        #{maps 3009}#)))))))))))
                                   (begin
                                     (#{f 2977}#
                                       #{y 2973}#
                                       (lambda (#{maps 2980}#)
                                         (call-with-values
                                           (lambda ()
                                             (#{gen-syntax 2907}#
                                               #{src 2922}#
                                               #{x 2971}#
                                               #{r 2924}#
                                               (cons '() #{maps 2980}#)
                                               #{ellipsis? 2926}#
                                               #{mod 2927}#))
                                           (lambda (#{x 2982}# #{maps 2983}#)
                                             (if (null? (car #{maps 2983}#))
                                               (syntax-violation
                                                 'syntax
                                                 "extra ellipsis"
                                                 #{src 2922}#)
                                               (values
                                                 (#{gen-map 2913}#
                                                   #{x 2982}#
                                                   (car #{maps 2983}#))
                                                 (cdr #{maps 2983}#))))))))))
                               #{tmp 2961}#)
                             (begin
                               (let ((#{tmp 3012}#
                                       ($sc-dispatch #{e 2923}# '(any . any))))
                                 (if #{tmp 3012}#
                                   (@apply
                                     (lambda (#{x 3015}# #{y 3016}#)
                                       (call-with-values
                                         (lambda ()
                                           (#{gen-syntax 2907}#
                                             #{src 2922}#
                                             #{x 3015}#
                                             #{r 2924}#
                                             #{maps 2925}#
                                             #{ellipsis? 2926}#
                                             #{mod 2927}#))
                                         (lambda (#{x 3017}# #{maps 3018}#)
                                           (call-with-values
                                             (lambda ()
                                               (#{gen-syntax 2907}#
                                                 #{src 2922}#
                                                 #{y 3016}#
                                                 #{r 2924}#
                                                 #{maps 3018}#
                                                 #{ellipsis? 2926}#
                                                 #{mod 2927}#))
                                             (lambda (#{y 3021}# #{maps 3022}#)
                                               (values
                                                 (#{gen-cons 2915}#
                                                   #{x 3017}#
                                                   #{y 3021}#)
                                                 #{maps 3022}#))))))
                                     #{tmp 3012}#)
                                   (begin
                                     (let ((#{tmp 3025}#
                                             ($sc-dispatch
                                               #{e 2923}#
                                               '#(vector (any . each-any)))))
                                       (if #{tmp 3025}#
                                         (@apply
                                           (lambda (#{e1 3028}# #{e2 3029}#)
                                             (call-with-values
                                               (lambda ()
                                                 (#{gen-syntax 2907}#
                                                   #{src 2922}#
                                                   (cons #{e1 3028}#
                                                         #{e2 3029}#)
                                                   #{r 2924}#
                                                   #{maps 2925}#
                                                   #{ellipsis? 2926}#
                                                   #{mod 2927}#))
                                               (lambda (#{e 3031}#
                                                        #{maps 3032}#)
                                                 (values
                                                   (#{gen-vector 2919}#
                                                     #{e 3031}#)
                                                   #{maps 3032}#))))
                                           #{tmp 3025}#)
                                         (values
                                           (list 'quote #{e 2923}#)
                                           #{maps 2925}#))))))))))))))))
           (#{gen-ref 2909}#
             (lambda (#{src 3038}#
                      #{var 3039}#
                      #{level 3040}#
                      #{maps 3041}#)
               (if (= #{level 3040}# 0)
                 (values #{var 3039}# #{maps 3041}#)
                 (if (null? #{maps 3041}#)
                   (syntax-violation
                     'syntax
                     "missing ellipsis"
                     #{src 3038}#)
                   (call-with-values
                     (lambda ()
                       (#{gen-ref 2909}#
                         #{src 3038}#
                         #{var 3039}#
                         (#{1-}# #{level 3040}#)
                         (cdr #{maps 3041}#)))
                     (lambda (#{outer-var 3048}# #{outer-maps 3049}#)
                       (begin
                         (let ((#{b 3053}#
                                 (assq #{outer-var 3048}#
                                       (car #{maps 3041}#))))
                           (if #{b 3053}#
                             (values (cdr #{b 3053}#) #{maps 3041}#)
                             (begin
                               (let ((#{inner-var 3055}#
                                       (gensym
                                         (string-append
                                           (symbol->string 'tmp)
                                           " "))))
                                 (values
                                   #{inner-var 3055}#
                                   (cons (cons (cons #{outer-var 3048}#
                                                     #{inner-var 3055}#)
                                               (car #{maps 3041}#))
                                         #{outer-maps 3049}#)))))))))))))
           (#{gen-mappend 2911}#
             (lambda (#{e 3056}# #{map-env 3057}#)
               (list 'apply
                     '(primitive append)
                     (#{gen-map 2913}# #{e 3056}# #{map-env 3057}#))))
           (#{gen-map 2913}#
             (lambda (#{e 3061}# #{map-env 3062}#)
               (begin
                 (let ((#{formals 3067}# (map cdr #{map-env 3062}#))
                       (#{actuals 3068}#
                         (map (lambda (#{x 3069}#)
                                (list 'ref (car #{x 3069}#)))
                              #{map-env 3062}#)))
                   (if (eq? (car #{e 3061}#) 'ref)
                     (car #{actuals 3068}#)
                     (if (and-map
                           (lambda (#{x 3076}#)
                             (if (eq? (car #{x 3076}#) 'ref)
                               (memq (car (cdr #{x 3076}#)) #{formals 3067}#)
                               #f))
                           (cdr #{e 3061}#))
                       (cons 'map
                             (cons (list 'primitive (car #{e 3061}#))
                                   (map (begin
                                          (let ((#{r 3082}#
                                                  (map cons
                                                       #{formals 3067}#
                                                       #{actuals 3068}#)))
                                            (lambda (#{x 3083}#)
                                              (cdr (assq (car (cdr #{x 3083}#))
                                                         #{r 3082}#)))))
                                        (cdr #{e 3061}#))))
                       (cons 'map
                             (cons (list 'lambda #{formals 3067}# #{e 3061}#)
                                   #{actuals 3068}#))))))))
           (#{gen-cons 2915}#
             (lambda (#{x 3087}# #{y 3088}#)
               (begin
                 (let ((#{atom-key 3093}# (car #{y 3088}#)))
                   (if (eqv? #{atom-key 3093}# 'quote)
                     (if (eq? (car #{x 3087}#) 'quote)
                       (list 'quote
                             (cons (car (cdr #{x 3087}#))
                                   (car (cdr #{y 3088}#))))
                       (if (eq? (car (cdr #{y 3088}#)) '())
                         (list 'list #{x 3087}#)
                         (list 'cons #{x 3087}# #{y 3088}#)))
                     (if (eqv? #{atom-key 3093}# 'list)
                       (cons 'list (cons #{x 3087}# (cdr #{y 3088}#)))
                       (list 'cons #{x 3087}# #{y 3088}#)))))))
           (#{gen-append 2917}#
             (lambda (#{x 3102}# #{y 3103}#)
               (if (equal? #{y 3103}# ''())
                 #{x 3102}#
                 (list 'append #{x 3102}# #{y 3103}#))))
           (#{gen-vector 2919}#
             (lambda (#{x 3107}#)
               (if (eq? (car #{x 3107}#) 'list)
                 (cons 'vector (cdr #{x 3107}#))
                 (if (eq? (car #{x 3107}#) 'quote)
                   (list 'quote
                         (list->vector (car (cdr #{x 3107}#))))
                   (list 'list->vector #{x 3107}#)))))
           (#{regen 2921}#
             (lambda (#{x 3117}#)
               (begin
                 (let ((#{atom-key 3121}# (car #{x 3117}#)))
                   (if (eqv? #{atom-key 3121}# 'ref)
                     (begin
                       (let ((#{name 5344}# (car (cdr #{x 3117}#)))
                             (#{var 5345}# (car (cdr #{x 3117}#))))
                         (make-struct/no-tail
                           (vector-ref %expanded-vtables 3)
                           #f
                           #{name 5344}#
                           #{var 5345}#)))
                     (if (eqv? #{atom-key 3121}# 'primitive)
                       (begin
                         (let ((#{name 5354}# (car (cdr #{x 3117}#))))
                           (if (equal? (module-name (current-module)) '(guile))
                             (make-struct/no-tail
                               (vector-ref %expanded-vtables 7)
                               #f
                               #{name 5354}#)
                             (make-struct/no-tail
                               (vector-ref %expanded-vtables 5)
                               #f
                               '(guile)
                               #{name 5354}#
                               #f))))
                       (if (eqv? #{atom-key 3121}# 'quote)
                         (begin
                           (let ((#{exp 5368}# (car (cdr #{x 3117}#))))
                             (make-struct/no-tail
                               (vector-ref %expanded-vtables 1)
                               #f
                               #{exp 5368}#)))
                         (if (eqv? #{atom-key 3121}# 'lambda)
                           (if (list? (car (cdr #{x 3117}#)))
                             (begin
                               (let ((#{req 5376}# (car (cdr #{x 3117}#)))
                                     (#{vars 5378}# (car (cdr #{x 3117}#)))
                                     (#{exp 5380}#
                                       (#{regen 2921}#
                                         (car (cdr (cdr #{x 3117}#))))))
                                 (begin
                                   (let ((#{body 5385}#
                                           (make-struct/no-tail
                                             (vector-ref %expanded-vtables 14)
                                             #f
                                             #{req 5376}#
                                             #f
                                             #f
                                             #f
                                             '()
                                             #{vars 5378}#
                                             #{exp 5380}#
                                             #f)))
                                     (make-struct/no-tail
                                       (vector-ref %expanded-vtables 13)
                                       #f
                                       '()
                                       #{body 5385}#)))))
                             (error "how did we get here" #{x 3117}#))
                           (begin
                             (let ((#{fun-exp 5400}#
                                     (begin
                                       (let ((#{name 5405}# (car #{x 3117}#)))
                                         (if (equal?
                                               (module-name (current-module))
                                               '(guile))
                                           (make-struct/no-tail
                                             (vector-ref %expanded-vtables 7)
                                             #f
                                             #{name 5405}#)
                                           (make-struct/no-tail
                                             (vector-ref %expanded-vtables 5)
                                             #f
                                             '(guile)
                                             #{name 5405}#
                                             #f)))))
                                   (#{arg-exps 5401}#
                                     (map #{regen 2921}# (cdr #{x 3117}#))))
                               (make-struct/no-tail
                                 (vector-ref %expanded-vtables 11)
                                 #f
                                 #{fun-exp 5400}#
                                 #{arg-exps 5401}#))))))))))))
          (begin
            (lambda (#{e 3133}#
                     #{r 3134}#
                     #{w 3135}#
                     #{s 3136}#
                     #{mod 3137}#)
              (begin
                (let ((#{e 3144}#
                        (#{wrap 422}#
                          (begin
                            (if (if (pair? #{e 3133}#) #{s 3136}# #f)
                              (set-source-properties! #{e 3133}# #{s 3136}#))
                            #{e 3133}#)
                          #{w 3135}#
                          #{mod 3137}#)))
                  (begin
                    (let ((#{tmp 3146}# ($sc-dispatch #{e 3144}# '(_ any))))
                      (if #{tmp 3146}#
                        (@apply
                          (lambda (#{x 3148}#)
                            (call-with-values
                              (lambda ()
                                (#{gen-syntax 2907}#
                                  #{e 3144}#
                                  #{x 3148}#
                                  #{r 3134}#
                                  '()
                                  #{ellipsis? 452}#
                                  #{mod 3137}#))
                              (lambda (#{e 3149}# #{maps 3150}#)
                                (#{regen 2921}# #{e 3149}#))))
                          #{tmp 3146}#)
                        (syntax-violation
                          'syntax
                          "bad `syntax' form"
                          #{e 3144}#))))))))))
      (#{global-extend 344}#
        'core
        'lambda
        (lambda (#{e 3155}#
                 #{r 3156}#
                 #{w 3157}#
                 #{s 3158}#
                 #{mod 3159}#)
          (begin
            (let ((#{tmp 3166}#
                    ($sc-dispatch #{e 3155}# '(_ any any . each-any))))
              (if #{tmp 3166}#
                (@apply
                  (lambda (#{args 3170}# #{e1 3171}# #{e2 3172}#)
                    (call-with-values
                      (lambda ()
                        (#{lambda-formals 454}# #{args 3170}#))
                      (lambda (#{req 3173}#
                               #{opt 3174}#
                               #{rest 3175}#
                               #{kw 3176}#)
                        (letrec*
                          ((#{lp 3184}#
                             (lambda (#{body 3185}# #{meta 3186}#)
                               (begin
                                 (let ((#{tmp 3189}#
                                         ($sc-dispatch
                                           #{body 3185}#
                                           '(any any . each-any))))
                                   (if (if #{tmp 3189}#
                                         (@apply
                                           (lambda (#{docstring 3193}#
                                                    #{e1 3194}#
                                                    #{e2 3195}#)
                                             (string?
                                               (syntax->datum
                                                 #{docstring 3193}#)))
                                           #{tmp 3189}#)
                                         #f)
                                     (@apply
                                       (lambda (#{docstring 3199}#
                                                #{e1 3200}#
                                                #{e2 3201}#)
                                         (#{lp 3184}#
                                           (cons #{e1 3200}# #{e2 3201}#)
                                           (append
                                             #{meta 3186}#
                                             (list (cons 'documentation
                                                         (syntax->datum
                                                           #{docstring 3199}#))))))
                                       #{tmp 3189}#)
                                     (begin
                                       (let ((#{tmp 3204}#
                                               ($sc-dispatch
                                                 #{body 3185}#
                                                 '(#(vector
                                                     #(each (any . any)))
                                                   any
                                                   .
                                                   each-any))))
                                         (if #{tmp 3204}#
                                           (@apply
                                             (lambda (#{k 3209}#
                                                      #{v 3210}#
                                                      #{e1 3211}#
                                                      #{e2 3212}#)
                                               (#{lp 3184}#
                                                 (cons #{e1 3211}# #{e2 3212}#)
                                                 (append
                                                   #{meta 3186}#
                                                   (syntax->datum
                                                     (map cons
                                                          #{k 3209}#
                                                          #{v 3210}#)))))
                                             #{tmp 3204}#)
                                           (let ((#{e 2266}# #{e 3155}#)
                                                 (#{r 2267}# #{r 3156}#)
                                                 (#{w 2268}# #{w 3157}#)
                                                 (#{s 2269}# #{s 3158}#)
                                                 (#{mod 2270}# #{mod 3159}#)
                                                 (#{req 2271}# #{req 3173}#)
                                                 (#{rest 2272}# #{rest 3175}#)
                                                 (#{meta 2273}# #{meta 3186}#)
                                                 (#{body 2274}# #{body 3185}#))
                                             (begin
                                               (let ((#{ids 2286}#
                                                       (if #{rest 2272}#
                                                         (append
                                                           #{req 2271}#
                                                           (list #{rest 2272}#))
                                                         #{req 2271}#)))
                                                 (begin
                                                   (let ((#{vars 2288}#
                                                           (map #{gen-var 464}#
                                                                #{ids 2286}#)))
                                                     (begin
                                                       (let ((#{labels 2290}#
                                                               (#{gen-labels 368}#
                                                                 #{ids 2286}#)))
                                                         (#{build-simple-lambda 288}#
                                                           #{s 2269}#
                                                           (map syntax->datum
                                                                #{req 2271}#)
                                                           (if #{rest 2272}#
                                                             (syntax->datum
                                                               #{rest 2272}#)
                                                             #f)
                                                           #{vars 2288}#
                                                           #{meta 2273}#
                                                           (#{chi-body 444}#
                                                             #{body 2274}#
                                                             (#{source-wrap 424}#
                                                               #{e 2266}#
                                                               #{w 2268}#
                                                               #{s 2269}#
                                                               #{mod 2270}#)
                                                             (#{extend-var-env 338}#
                                                               #{labels 2290}#
                                                               #{vars 2288}#
                                                               #{r 2267}#)
                                                             (#{make-binding-wrap 400}#
                                                               #{ids 2286}#
                                                               #{labels 2290}#
                                                               #{w 2268}#)
                                                             #{mod 2270}#))))))))))))))))))
                          (begin
                            (#{lp 3184}#
                              (cons #{e1 3171}# #{e2 3172}#)
                              '()))))))
                  #{tmp 3166}#)
                (syntax-violation
                  'lambda
                  "bad lambda"
                  #{e 3155}#))))))
      (module-define!
        (current-module)
        'lambda*
        (make-syntax-transformer
          'lambda*
          'core
          (lambda (#{e 3220}#
                   #{r 3221}#
                   #{w 3222}#
                   #{s 3223}#
                   #{mod 3224}#)
            (begin
              (let ((#{tmp 3231}#
                      ($sc-dispatch #{e 3220}# '(_ any any . each-any))))
                (if #{tmp 3231}#
                  (@apply
                    (lambda (#{args 3235}# #{e1 3236}# #{e2 3237}#)
                      (call-with-values
                        (lambda ()
                          (#{chi-lambda-case 460}#
                            #{e 3220}#
                            #{r 3221}#
                            #{w 3222}#
                            #{s 3223}#
                            #{mod 3224}#
                            #{lambda*-formals 458}#
                            (list (cons #{args 3235}#
                                        (cons #{e1 3236}# #{e2 3237}#)))))
                        (lambda (#{meta 3239}# #{lcase 3240}#)
                          (make-struct/no-tail
                            (vector-ref %expanded-vtables 13)
                            #{s 3223}#
                            #{meta 3239}#
                            #{lcase 3240}#))))
                    #{tmp 3231}#)
                  (syntax-violation
                    'lambda
                    "bad lambda*"
                    #{e 3220}#)))))))
      (module-define!
        (current-module)
        'case-lambda
        (make-syntax-transformer
          'case-lambda
          'core
          (lambda (#{e 3245}#
                   #{r 3246}#
                   #{w 3247}#
                   #{s 3248}#
                   #{mod 3249}#)
            (begin
              (let ((#{tmp 3256}#
                      ($sc-dispatch
                        #{e 3245}#
                        '(_ (any any . each-any)
                            .
                            #(each (any any . each-any))))))
                (if #{tmp 3256}#
                  (@apply
                    (lambda (#{args 3263}#
                             #{e1 3264}#
                             #{e2 3265}#
                             #{args* 3266}#
                             #{e1* 3267}#
                             #{e2* 3268}#)
                      (call-with-values
                        (lambda ()
                          (#{chi-lambda-case 460}#
                            #{e 3245}#
                            #{r 3246}#
                            #{w 3247}#
                            #{s 3248}#
                            #{mod 3249}#
                            #{lambda-formals 454}#
                            (cons (cons #{args 3263}#
                                        (cons #{e1 3264}# #{e2 3265}#))
                                  (map (lambda (#{tmp 3272}#
                                                #{tmp 3271}#
                                                #{tmp 3270}#)
                                         (cons #{tmp 3270}#
                                               (cons #{tmp 3271}#
                                                     #{tmp 3272}#)))
                                       #{e2* 3268}#
                                       #{e1* 3267}#
                                       #{args* 3266}#))))
                        (lambda (#{meta 3274}# #{lcase 3275}#)
                          (make-struct/no-tail
                            (vector-ref %expanded-vtables 13)
                            #{s 3248}#
                            #{meta 3274}#
                            #{lcase 3275}#))))
                    #{tmp 3256}#)
                  (syntax-violation
                    'case-lambda
                    "bad case-lambda"
                    #{e 3245}#)))))))
      (module-define!
        (current-module)
        'case-lambda*
        (make-syntax-transformer
          'case-lambda*
          'core
          (lambda (#{e 3280}#
                   #{r 3281}#
                   #{w 3282}#
                   #{s 3283}#
                   #{mod 3284}#)
            (begin
              (let ((#{tmp 3291}#
                      ($sc-dispatch
                        #{e 3280}#
                        '(_ (any any . each-any)
                            .
                            #(each (any any . each-any))))))
                (if #{tmp 3291}#
                  (@apply
                    (lambda (#{args 3298}#
                             #{e1 3299}#
                             #{e2 3300}#
                             #{args* 3301}#
                             #{e1* 3302}#
                             #{e2* 3303}#)
                      (call-with-values
                        (lambda ()
                          (#{chi-lambda-case 460}#
                            #{e 3280}#
                            #{r 3281}#
                            #{w 3282}#
                            #{s 3283}#
                            #{mod 3284}#
                            #{lambda*-formals 458}#
                            (cons (cons #{args 3298}#
                                        (cons #{e1 3299}# #{e2 3300}#))
                                  (map (lambda (#{tmp 3307}#
                                                #{tmp 3306}#
                                                #{tmp 3305}#)
                                         (cons #{tmp 3305}#
                                               (cons #{tmp 3306}#
                                                     #{tmp 3307}#)))
                                       #{e2* 3303}#
                                       #{e1* 3302}#
                                       #{args* 3301}#))))
                        (lambda (#{meta 3309}# #{lcase 3310}#)
                          (make-struct/no-tail
                            (vector-ref %expanded-vtables 13)
                            #{s 3283}#
                            #{meta 3309}#
                            #{lcase 3310}#))))
                    #{tmp 3291}#)
                  (syntax-violation
                    'case-lambda
                    "bad case-lambda*"
                    #{e 3280}#)))))))
      (#{global-extend 344}#
        'core
        'let
        (letrec*
          ((#{chi-let 3316}#
             (lambda (#{e 3317}#
                      #{r 3318}#
                      #{w 3319}#
                      #{s 3320}#
                      #{mod 3321}#
                      #{constructor 3322}#
                      #{ids 3323}#
                      #{vals 3324}#
                      #{exps 3325}#)
               (if (not (#{valid-bound-ids? 416}# #{ids 3323}#))
                 (syntax-violation
                   'let
                   "duplicate bound variable"
                   #{e 3317}#)
                 (begin
                   (let ((#{labels 3337}#
                           (#{gen-labels 368}# #{ids 3323}#))
                         (#{new-vars 3338}#
                           (map #{gen-var 464}# #{ids 3323}#)))
                     (begin
                       (let ((#{nw 3341}#
                               (#{make-binding-wrap 400}#
                                 #{ids 3323}#
                                 #{labels 3337}#
                                 #{w 3319}#))
                             (#{nr 3342}#
                               (#{extend-var-env 338}#
                                 #{labels 3337}#
                                 #{new-vars 3338}#
                                 #{r 3318}#)))
                         (#{constructor 3322}#
                           #{s 3320}#
                           (map syntax->datum #{ids 3323}#)
                           #{new-vars 3338}#
                           (map (lambda (#{x 3343}#)
                                  (#{chi 436}#
                                    #{x 3343}#
                                    #{r 3318}#
                                    #{w 3319}#
                                    #{mod 3321}#))
                                #{vals 3324}#)
                           (#{chi-body 444}#
                             #{exps 3325}#
                             (#{wrap 422}#
                               (begin
                                 (if (if (pair? #{e 3317}#) #{s 3320}# #f)
                                   (set-source-properties!
                                     #{e 3317}#
                                     #{s 3320}#))
                                 #{e 3317}#)
                               #{nw 3341}#
                               #{mod 3321}#)
                             #{nr 3342}#
                             #{nw 3341}#
                             #{mod 3321}#))))))))))
          (begin
            (lambda (#{e 3345}#
                     #{r 3346}#
                     #{w 3347}#
                     #{s 3348}#
                     #{mod 3349}#)
              (begin
                (let ((#{tmp 3356}#
                        ($sc-dispatch
                          #{e 3345}#
                          '(_ #(each (any any)) any . each-any))))
                  (if (if #{tmp 3356}#
                        (@apply
                          (lambda (#{id 3361}#
                                   #{val 3362}#
                                   #{e1 3363}#
                                   #{e2 3364}#)
                            (and-map #{id? 348}# #{id 3361}#))
                          #{tmp 3356}#)
                        #f)
                    (@apply
                      (lambda (#{id 3370}#
                               #{val 3371}#
                               #{e1 3372}#
                               #{e2 3373}#)
                        (#{chi-let 3316}#
                          #{e 3345}#
                          #{r 3346}#
                          #{w 3347}#
                          #{s 3348}#
                          #{mod 3349}#
                          (lambda (#{src 1103}#
                                   #{ids 1104}#
                                   #{vars 1105}#
                                   #{val-exps 1106}#
                                   #{body-exp 1107}#)
                            (begin
                              (for-each
                                #{maybe-name-value! 266}#
                                #{ids 1104}#
                                #{val-exps 1106}#)
                              (if (null? #{vars 1105}#)
                                #{body-exp 1107}#
                                (#{make-let 237}#
                                  #{src 1103}#
                                  #{ids 1104}#
                                  #{vars 1105}#
                                  #{val-exps 1106}#
                                  #{body-exp 1107}#))))
                          #{id 3370}#
                          #{val 3371}#
                          (cons #{e1 3372}# #{e2 3373}#)))
                      #{tmp 3356}#)
                    (begin
                      (let ((#{tmp 3377}#
                              ($sc-dispatch
                                #{e 3345}#
                                '(_ any #(each (any any)) any . each-any))))
                        (if (if #{tmp 3377}#
                              (@apply
                                (lambda (#{f 3383}#
                                         #{id 3384}#
                                         #{val 3385}#
                                         #{e1 3386}#
                                         #{e2 3387}#)
                                  (if (if (symbol? #{f 3383}#)
                                        #t
                                        (if (if (vector? #{f 3383}#)
                                              (if (= (vector-length #{f 3383}#)
                                                     4)
                                                (eq? (vector-ref #{f 3383}# 0)
                                                     'syntax-object)
                                                #f)
                                              #f)
                                          (symbol? (vector-ref #{f 3383}# 1))
                                          #f))
                                    (and-map #{id? 348}# #{id 3384}#)
                                    #f))
                                #{tmp 3377}#)
                              #f)
                          (@apply
                            (lambda (#{f 3396}#
                                     #{id 3397}#
                                     #{val 3398}#
                                     #{e1 3399}#
                                     #{e2 3400}#)
                              (#{chi-let 3316}#
                                #{e 3345}#
                                #{r 3346}#
                                #{w 3347}#
                                #{s 3348}#
                                #{mod 3349}#
                                (lambda (#{src 1113}#
                                         #{ids 1114}#
                                         #{vars 1115}#
                                         #{val-exps 1116}#
                                         #{body-exp 1117}#)
                                  (begin
                                    (let ((#{f 1127}# (car #{vars 1115}#))
                                          (#{f-name 1128}# (car #{ids 1114}#))
                                          (#{vars 1129}# (cdr #{vars 1115}#))
                                          (#{ids 1130}# (cdr #{ids 1114}#)))
                                      (begin
                                        (let ((#{proc 1132}#
                                                (#{build-simple-lambda 288}#
                                                  #{src 1113}#
                                                  #{ids 1130}#
                                                  #f
                                                  #{vars 1129}#
                                                  '()
                                                  #{body-exp 1117}#)))
                                          (begin
                                            (#{maybe-name-value! 266}#
                                              #{f-name 1128}#
                                              #{proc 1132}#)
                                            (for-each
                                              #{maybe-name-value! 266}#
                                              #{ids 1130}#
                                              #{val-exps 1116}#)
                                            (#{make-letrec 239}#
                                              #{src 1113}#
                                              #f
                                              (list #{f-name 1128}#)
                                              (list #{f 1127}#)
                                              (list #{proc 1132}#)
                                              (#{build-application 270}#
                                                #{src 1113}#
                                                (#{build-lexical-reference 276}#
                                                  'fun
                                                  #{src 1113}#
                                                  #{f-name 1128}#
                                                  #{f 1127}#)
                                                #{val-exps 1116}#))))))))
                                (cons #{f 3396}# #{id 3397}#)
                                #{val 3398}#
                                (cons #{e1 3399}# #{e2 3400}#)))
                            #{tmp 3377}#)
                          (syntax-violation
                            'let
                            "bad let"
                            (#{wrap 422}#
                              (begin
                                (if (if (pair? #{e 3345}#) #{s 3348}# #f)
                                  (set-source-properties!
                                    #{e 3345}#
                                    #{s 3348}#))
                                #{e 3345}#)
                              #{w 3347}#
                              #{mod 3349}#))))))))))))
      (#{global-extend 344}#
        'core
        'letrec
        (lambda (#{e 3406}#
                 #{r 3407}#
                 #{w 3408}#
                 #{s 3409}#
                 #{mod 3410}#)
          (begin
            (let ((#{tmp 3417}#
                    ($sc-dispatch
                      #{e 3406}#
                      '(_ #(each (any any)) any . each-any))))
              (if (if #{tmp 3417}#
                    (@apply
                      (lambda (#{id 3422}#
                               #{val 3423}#
                               #{e1 3424}#
                               #{e2 3425}#)
                        (and-map #{id? 348}# #{id 3422}#))
                      #{tmp 3417}#)
                    #f)
                (@apply
                  (lambda (#{id 3431}#
                           #{val 3432}#
                           #{e1 3433}#
                           #{e2 3434}#)
                    (if (not (#{valid-bound-ids? 416}# #{id 3431}#))
                      (syntax-violation
                        'letrec
                        "duplicate bound variable"
                        #{e 3406}#)
                      (begin
                        (let ((#{labels 3440}#
                                (#{gen-labels 368}# #{id 3431}#))
                              (#{new-vars 3441}#
                                (map #{gen-var 464}# #{id 3431}#)))
                          (begin
                            (let ((#{w 3444}#
                                    (#{make-binding-wrap 400}#
                                      #{id 3431}#
                                      #{labels 3440}#
                                      #{w 3408}#))
                                  (#{r 3445}#
                                    (#{extend-var-env 338}#
                                      #{labels 3440}#
                                      #{new-vars 3441}#
                                      #{r 3407}#)))
                              (#{build-letrec 304}#
                                #{s 3409}#
                                #f
                                (map syntax->datum #{id 3431}#)
                                #{new-vars 3441}#
                                (map (lambda (#{x 3446}#)
                                       (#{chi 436}#
                                         #{x 3446}#
                                         #{r 3445}#
                                         #{w 3444}#
                                         #{mod 3410}#))
                                     #{val 3432}#)
                                (#{chi-body 444}#
                                  (cons #{e1 3433}# #{e2 3434}#)
                                  (#{wrap 422}#
                                    (begin
                                      (if (if (pair? #{e 3406}#) #{s 3409}# #f)
                                        (set-source-properties!
                                          #{e 3406}#
                                          #{s 3409}#))
                                      #{e 3406}#)
                                    #{w 3444}#
                                    #{mod 3410}#)
                                  #{r 3445}#
                                  #{w 3444}#
                                  #{mod 3410}#))))))))
                  #{tmp 3417}#)
                (syntax-violation
                  'letrec
                  "bad letrec"
                  (#{wrap 422}#
                    (begin
                      (if (if (pair? #{e 3406}#) #{s 3409}# #f)
                        (set-source-properties! #{e 3406}# #{s 3409}#))
                      #{e 3406}#)
                    #{w 3408}#
                    #{mod 3410}#)))))))
      (#{global-extend 344}#
        'core
        'letrec*
        (lambda (#{e 3452}#
                 #{r 3453}#
                 #{w 3454}#
                 #{s 3455}#
                 #{mod 3456}#)
          (begin
            (let ((#{tmp 3463}#
                    ($sc-dispatch
                      #{e 3452}#
                      '(_ #(each (any any)) any . each-any))))
              (if (if #{tmp 3463}#
                    (@apply
                      (lambda (#{id 3468}#
                               #{val 3469}#
                               #{e1 3470}#
                               #{e2 3471}#)
                        (and-map #{id? 348}# #{id 3468}#))
                      #{tmp 3463}#)
                    #f)
                (@apply
                  (lambda (#{id 3477}#
                           #{val 3478}#
                           #{e1 3479}#
                           #{e2 3480}#)
                    (if (not (#{valid-bound-ids? 416}# #{id 3477}#))
                      (syntax-violation
                        'letrec*
                        "duplicate bound variable"
                        #{e 3452}#)
                      (begin
                        (let ((#{labels 3486}#
                                (#{gen-labels 368}# #{id 3477}#))
                              (#{new-vars 3487}#
                                (map #{gen-var 464}# #{id 3477}#)))
                          (begin
                            (let ((#{w 3490}#
                                    (#{make-binding-wrap 400}#
                                      #{id 3477}#
                                      #{labels 3486}#
                                      #{w 3454}#))
                                  (#{r 3491}#
                                    (#{extend-var-env 338}#
                                      #{labels 3486}#
                                      #{new-vars 3487}#
                                      #{r 3453}#)))
                              (#{build-letrec 304}#
                                #{s 3455}#
                                #t
                                (map syntax->datum #{id 3477}#)
                                #{new-vars 3487}#
                                (map (lambda (#{x 3492}#)
                                       (#{chi 436}#
                                         #{x 3492}#
                                         #{r 3491}#
                                         #{w 3490}#
                                         #{mod 3456}#))
                                     #{val 3478}#)
                                (#{chi-body 444}#
                                  (cons #{e1 3479}# #{e2 3480}#)
                                  (#{wrap 422}#
                                    (begin
                                      (if (if (pair? #{e 3452}#) #{s 3455}# #f)
                                        (set-source-properties!
                                          #{e 3452}#
                                          #{s 3455}#))
                                      #{e 3452}#)
                                    #{w 3490}#
                                    #{mod 3456}#)
                                  #{r 3491}#
                                  #{w 3490}#
                                  #{mod 3456}#))))))))
                  #{tmp 3463}#)
                (syntax-violation
                  'letrec*
                  "bad letrec*"
                  (#{wrap 422}#
                    (begin
                      (if (if (pair? #{e 3452}#) #{s 3455}# #f)
                        (set-source-properties! #{e 3452}# #{s 3455}#))
                      #{e 3452}#)
                    #{w 3454}#
                    #{mod 3456}#)))))))
      (#{global-extend 344}#
        'core
        'set!
        (lambda (#{e 3498}#
                 #{r 3499}#
                 #{w 3500}#
                 #{s 3501}#
                 #{mod 3502}#)
          (begin
            (let ((#{tmp 3509}#
                    ($sc-dispatch #{e 3498}# '(_ any any))))
              (if (if #{tmp 3509}#
                    (@apply
                      (lambda (#{id 3512}# #{val 3513}#)
                        (if (symbol? #{id 3512}#)
                          #t
                          (if (if (vector? #{id 3512}#)
                                (if (= (vector-length #{id 3512}#) 4)
                                  (eq? (vector-ref #{id 3512}# 0)
                                       'syntax-object)
                                  #f)
                                #f)
                            (symbol? (vector-ref #{id 3512}# 1))
                            #f)))
                      #{tmp 3509}#)
                    #f)
                (@apply
                  (lambda (#{id 3516}# #{val 3517}#)
                    (begin
                      (let ((#{n 3520}#
                              (#{id-var-name 410}# #{id 3516}# #{w 3500}#))
                            (#{id-mod 3521}#
                              (if (if (vector? #{id 3516}#)
                                    (if (= (vector-length #{id 3516}#) 4)
                                      (eq? (vector-ref #{id 3516}# 0)
                                           'syntax-object)
                                      #f)
                                    #f)
                                (vector-ref #{id 3516}# 3)
                                #{mod 3502}#)))
                        (begin
                          (let ((#{b 3523}#
                                  (begin
                                    (let ((#{t 7015}#
                                            (assq #{n 3520}# #{r 3499}#)))
                                      (if #{t 7015}#
                                        (cdr #{t 7015}#)
                                        (if (symbol? #{n 3520}#)
                                          (begin
                                            (let ((#{t 7016}#
                                                    (#{get-global-definition-hook 262}#
                                                      #{n 3520}#
                                                      #{id-mod 3521}#)))
                                              (if #{t 7016}#
                                                #{t 7016}#
                                                '(global))))
                                          '(displaced-lexical)))))))
                            (begin
                              (let ((#{atom-key 3526}# (car #{b 3523}#)))
                                (if (eqv? #{atom-key 3526}# 'lexical)
                                  (let ((#{source 992}# #{s 3501}#)
                                        (#{name 993}#
                                          (syntax->datum #{id 3516}#))
                                        (#{var 994}# (cdr #{b 3523}#))
                                        (#{exp 995}#
                                          (#{chi 436}#
                                            #{val 3517}#
                                            #{r 3499}#
                                            #{w 3500}#
                                            #{mod 3502}#)))
                                    (begin
                                      (#{maybe-name-value! 266}#
                                        #{name 993}#
                                        #{exp 995}#)
                                      (#{make-lexical-set 215}#
                                        #{source 992}#
                                        #{name 993}#
                                        #{var 994}#
                                        #{exp 995}#)))
                                  (if (eqv? #{atom-key 3526}# 'global)
                                    (#{build-global-assignment 284}#
                                      #{s 3501}#
                                      #{n 3520}#
                                      (#{chi 436}#
                                        #{val 3517}#
                                        #{r 3499}#
                                        #{w 3500}#
                                        #{mod 3502}#)
                                      #{id-mod 3521}#)
                                    (if (eqv? #{atom-key 3526}# 'macro)
                                      (begin
                                        (let ((#{p 3533}# (cdr #{b 3523}#)))
                                          (if (procedure-property
                                                #{p 3533}#
                                                'variable-transformer)
                                            (#{chi 436}#
                                              (#{chi-macro 442}#
                                                #{p 3533}#
                                                #{e 3498}#
                                                #{r 3499}#
                                                #{w 3500}#
                                                #{s 3501}#
                                                #f
                                                #{mod 3502}#)
                                              #{r 3499}#
                                              '(())
                                              #{mod 3502}#)
                                            (syntax-violation
                                              'set!
                                              "not a variable transformer"
                                              (#{wrap 422}#
                                                #{e 3498}#
                                                #{w 3500}#
                                                #{mod 3502}#)
                                              (#{wrap 422}#
                                                #{id 3516}#
                                                #{w 3500}#
                                                #{id-mod 3521}#)))))
                                      (if (eqv? #{atom-key 3526}#
                                                'displaced-lexical)
                                        (syntax-violation
                                          'set!
                                          "identifier out of context"
                                          (#{wrap 422}#
                                            #{id 3516}#
                                            #{w 3500}#
                                            #{mod 3502}#))
                                        (syntax-violation
                                          'set!
                                          "bad set!"
                                          (#{wrap 422}#
                                            (begin
                                              (if (if (pair? #{e 3498}#)
                                                    #{s 3501}#
                                                    #f)
                                                (set-source-properties!
                                                  #{e 3498}#
                                                  #{s 3501}#))
                                              #{e 3498}#)
                                            #{w 3500}#
                                            #{mod 3502}#)))))))))))))
                  #{tmp 3509}#)
                (begin
                  (let ((#{tmp 3538}#
                          ($sc-dispatch
                            #{e 3498}#
                            '(_ (any . each-any) any))))
                    (if #{tmp 3538}#
                      (@apply
                        (lambda (#{head 3542}# #{tail 3543}# #{val 3544}#)
                          (call-with-values
                            (lambda ()
                              (#{syntax-type 434}#
                                #{head 3542}#
                                #{r 3499}#
                                '(())
                                #f
                                #f
                                #{mod 3502}#
                                #t))
                            (lambda (#{type 3547}#
                                     #{value 3548}#
                                     #{ee 3549}#
                                     #{ww 3550}#
                                     #{ss 3551}#
                                     #{modmod 3552}#)
                              (if (eqv? #{type 3547}# 'module-ref)
                                (begin
                                  (let ((#{val 3561}#
                                          (#{chi 436}#
                                            #{val 3544}#
                                            #{r 3499}#
                                            #{w 3500}#
                                            #{mod 3502}#)))
                                    (call-with-values
                                      (lambda ()
                                        (#{value 3548}#
                                          (cons #{head 3542}# #{tail 3543}#)
                                          #{r 3499}#
                                          #{w 3500}#))
                                      (lambda (#{e 3563}#
                                               #{r 3564}#
                                               #{w 3565}#
                                               #{s* 3566}#
                                               #{mod 3567}#)
                                        (begin
                                          (let ((#{tmp 3574}#
                                                  (list #{e 3563}#)))
                                            (if (if #{tmp 3574}#
                                                  (@apply
                                                    (lambda (#{e 3576}#)
                                                      (if (symbol? #{e 3576}#)
                                                        #t
                                                        (if (if (vector?
                                                                  #{e 3576}#)
                                                              (if (= (vector-length
                                                                       #{e 3576}#)
                                                                     4)
                                                                (eq? (vector-ref
                                                                       #{e 3576}#
                                                                       0)
                                                                     'syntax-object)
                                                                #f)
                                                              #f)
                                                          (symbol?
                                                            (vector-ref
                                                              #{e 3576}#
                                                              1))
                                                          #f)))
                                                    #{tmp 3574}#)
                                                  #f)
                                              (@apply
                                                (lambda (#{e 3578}#)
                                                  (begin
                                                    (let ((#{var 7355}#
                                                            (syntax->datum
                                                              #{e 3578}#)))
                                                      (begin
                                                        (if (if (struct?
                                                                  #{val 3561}#)
                                                              (eq? (struct-vtable
                                                                     #{val 3561}#)
                                                                   (vector-ref
                                                                     %expanded-vtables
                                                                     13))
                                                              #f)
                                                          (begin
                                                            (let ((#{meta 7366}#
                                                                    (struct-ref
                                                                      #{val 3561}#
                                                                      1)))
                                                              (if (not (assq 'name
                                                                             #{meta 7366}#))
                                                                (begin
                                                                  (let ((#{v 7376}#
                                                                          (cons (cons 'name
                                                                                      #{var 7355}#)
                                                                                #{meta 7366}#)))
                                                                    (struct-set!
                                                                      #{val 3561}#
                                                                      1
                                                                      #{v 7376}#)))))))
                                                        (#{analyze-variable 280}#
                                                          #{mod 3567}#
                                                          #{var 7355}#
                                                          (lambda (#{mod 7358}#
                                                                   #{var 7359}#
                                                                   #{public? 7360}#)
                                                            (make-struct/no-tail
                                                              (vector-ref
                                                                %expanded-vtables
                                                                6)
                                                              #{s 3501}#
                                                              #{mod 7358}#
                                                              #{var 7359}#
                                                              #{public? 7360}#
                                                              #{val 3561}#))
                                                          (lambda (#{var 7361}#)
                                                            (make-struct/no-tail
                                                              (vector-ref
                                                                %expanded-vtables
                                                                8)
                                                              #{s 3501}#
                                                              #{var 7361}#
                                                              #{val 3561}#)))))))
                                                #{tmp 3574}#)
                                              (syntax-violation
                                                #f
                                                "source expression failed to match any pattern"
                                                #{e 3563}#))))))))
                                (#{build-application 270}#
                                  #{s 3501}#
                                  (#{chi 436}#
                                    (list '#(syntax-object
                                             setter
                                             ((top)
                                              #(ribcage () () ())
                                              #(ribcage () () ())
                                              #(ribcage
                                                #(type value ee ww ss modmod)
                                                #((top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top))
                                                #("i3553"
                                                  "i3554"
                                                  "i3555"
                                                  "i3556"
                                                  "i3557"
                                                  "i3558"))
                                              #(ribcage
                                                #(head tail val)
                                                #((top) (top) (top))
                                                #("i3539" "i3540" "i3541"))
                                              #(ribcage () () ())
                                              #(ribcage
                                                #(e r w s mod)
                                                #((top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top))
                                                #("i3503"
                                                  "i3504"
                                                  "i3505"
                                                  "i3506"
                                                  "i3507"))
                                              #(ribcage
                                                (lambda-var-list
                                                  gen-var
                                                  strip
                                                  chi-lambda-case
                                                  lambda*-formals
                                                  chi-simple-lambda
                                                  lambda-formals
                                                  ellipsis?
                                                  chi-void
                                                  eval-local-transformer
                                                  chi-local-syntax
                                                  chi-body
                                                  chi-macro
                                                  chi-application
                                                  chi-expr
                                                  chi
                                                  syntax-type
                                                  chi-when-list
                                                  chi-install-global
                                                  chi-top-sequence
                                                  chi-sequence
                                                  source-wrap
                                                  wrap
                                                  bound-id-member?
                                                  distinct-bound-ids?
                                                  valid-bound-ids?
                                                  bound-id=?
                                                  free-id=?
                                                  id-var-name
                                                  same-marks?
                                                  join-marks
                                                  join-wraps
                                                  smart-append
                                                  make-binding-wrap
                                                  extend-ribcage!
                                                  make-empty-ribcage
                                                  new-mark
                                                  anti-mark
                                                  the-anti-mark
                                                  top-marked?
                                                  top-wrap
                                                  empty-wrap
                                                  set-ribcage-labels!
                                                  set-ribcage-marks!
                                                  set-ribcage-symnames!
                                                  ribcage-labels
                                                  ribcage-marks
                                                  ribcage-symnames
                                                  ribcage?
                                                  make-ribcage
                                                  gen-labels
                                                  gen-label
                                                  make-rename
                                                  rename-marks
                                                  rename-new
                                                  rename-old
                                                  subst-rename?
                                                  wrap-subst
                                                  wrap-marks
                                                  make-wrap
                                                  id-sym-name&marks
                                                  id-sym-name
                                                  id?
                                                  nonsymbol-id?
                                                  global-extend
                                                  lookup
                                                  macros-only-env
                                                  extend-var-env
                                                  extend-env
                                                  null-env
                                                  binding-value
                                                  binding-type
                                                  make-binding
                                                  arg-check
                                                  source-annotation
                                                  no-source
                                                  set-syntax-object-module!
                                                  set-syntax-object-wrap!
                                                  set-syntax-object-expression!
                                                  syntax-object-module
                                                  syntax-object-wrap
                                                  syntax-object-expression
                                                  syntax-object?
                                                  make-syntax-object
                                                  build-lexical-var
                                                  build-letrec
                                                  build-named-let
                                                  build-let
                                                  build-sequence
                                                  build-data
                                                  build-primref
                                                  build-lambda-case
                                                  build-case-lambda
                                                  build-simple-lambda
                                                  build-global-definition
                                                  build-global-assignment
                                                  build-global-reference
                                                  analyze-variable
                                                  build-lexical-assignment
                                                  build-lexical-reference
                                                  build-dynlet
                                                  build-conditional
                                                  build-application
                                                  build-void
                                                  maybe-name-value!
                                                  decorate-source
                                                  get-global-definition-hook
                                                  put-global-definition-hook
                                                  gensym-hook
                                                  local-eval-hook
                                                  top-level-eval-hook
                                                  fx<
                                                  fx=
                                                  fx-
                                                  fx+
                                                  set-lambda-meta!
                                                  lambda-meta
                                                  lambda?
                                                  make-dynlet
                                                  make-letrec
                                                  make-let
                                                  make-lambda-case
                                                  make-lambda
                                                  make-sequence
                                                  make-application
                                                  make-conditional
                                                  make-toplevel-define
                                                  make-toplevel-set
                                                  make-toplevel-ref
                                                  make-module-set
                                                  make-module-ref
                                                  make-lexical-set
                                                  make-lexical-ref
                                                  make-primitive-ref
                                                  make-const
                                                  make-void)
                                                ((top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top))
                                                ("i465"
                                                 "i463"
                                                 "i461"
                                                 "i459"
                                                 "i457"
                                                 "i455"
                                                 "i453"
                                                 "i451"
                                                 "i449"
                                                 "i447"
                                                 "i445"
                                                 "i443"
                                                 "i441"
                                                 "i439"
                                                 "i437"
                                                 "i435"
                                                 "i433"
                                                 "i431"
                                                 "i429"
                                                 "i427"
                                                 "i425"
                                                 "i423"
                                                 "i421"
                                                 "i419"
                                                 "i417"
                                                 "i415"
                                                 "i413"
                                                 "i411"
                                                 "i409"
                                                 "i407"
                                                 "i405"
                                                 "i403"
                                                 "i401"
                                                 "i399"
                                                 "i397"
                                                 "i396"
                                                 "i394"
                                                 "i391"
                                                 "i390"
                                                 "i389"
                                                 "i387"
                                                 "i386"
                                                 "i384"
                                                 "i382"
                                                 "i380"
                                                 "i378"
                                                 "i376"
                                                 "i374"
                                                 "i372"
                                                 "i370"
                                                 "i367"
                                                 "i365"
                                                 "i364"
                                                 "i362"
                                                 "i360"
                                                 "i358"
                                                 "i356"
                                                 "i355"
                                                 "i354"
                                                 "i353"
                                                 "i351"
                                                 "i350"
                                                 "i347"
                                                 "i345"
                                                 "i343"
                                                 "i341"
                                                 "i339"
                                                 "i337"
                                                 "i335"
                                                 "i334"
                                                 "i333"
                                                 "i331"
                                                 "i329"
                                                 "i328"
                                                 "i325"
                                                 "i324"
                                                 "i322"
                                                 "i320"
                                                 "i318"
                                                 "i316"
                                                 "i314"
                                                 "i312"
                                                 "i310"
                                                 "i308"
                                                 "i306"
                                                 "i303"
                                                 "i301"
                                                 "i299"
                                                 "i297"
                                                 "i295"
                                                 "i293"
                                                 "i291"
                                                 "i289"
                                                 "i287"
                                                 "i285"
                                                 "i283"
                                                 "i281"
                                                 "i279"
                                                 "i277"
                                                 "i275"
                                                 "i273"
                                                 "i271"
                                                 "i269"
                                                 "i267"
                                                 "i265"
                                                 "i263"
                                                 "i261"
                                                 "i259"
                                                 "i258"
                                                 "i255"
                                                 "i253"
                                                 "i252"
                                                 "i251"
                                                 "i250"
                                                 "i249"
                                                 "i247"
                                                 "i245"
                                                 "i243"
                                                 "i240"
                                                 "i238"
                                                 "i236"
                                                 "i234"
                                                 "i232"
                                                 "i230"
                                                 "i228"
                                                 "i226"
                                                 "i224"
                                                 "i222"
                                                 "i220"
                                                 "i218"
                                                 "i216"
                                                 "i214"
                                                 "i212"
                                                 "i210"
                                                 "i208"
                                                 "i206"))
                                              #(ribcage
                                                (define-structure
                                                  define-expansion-accessors
                                                  define-expansion-constructors)
                                                ((top) (top) (top))
                                                ("i44" "i43" "i42")))
                                             (hygiene guile))
                                          #{head 3542}#)
                                    #{r 3499}#
                                    #{w 3500}#
                                    #{mod 3502}#)
                                  (map (lambda (#{e 3580}#)
                                         (#{chi 436}#
                                           #{e 3580}#
                                           #{r 3499}#
                                           #{w 3500}#
                                           #{mod 3502}#))
                                       (append
                                         #{tail 3543}#
                                         (list #{val 3544}#))))))))
                        #{tmp 3538}#)
                      (syntax-violation
                        'set!
                        "bad set!"
                        (#{wrap 422}#
                          (begin
                            (if (if (pair? #{e 3498}#) #{s 3501}# #f)
                              (set-source-properties! #{e 3498}# #{s 3501}#))
                            #{e 3498}#)
                          #{w 3500}#
                          #{mod 3502}#))))))))))
      (module-define!
        (current-module)
        '@
        (make-syntax-transformer
          '@
          'module-ref
          (lambda (#{e 3585}# #{r 3586}# #{w 3587}#)
            (begin
              (let ((#{tmp 3592}#
                      ($sc-dispatch #{e 3585}# '(_ each-any any))))
                (if (if #{tmp 3592}#
                      (@apply
                        (lambda (#{mod 3595}# #{id 3596}#)
                          (if (and-map #{id? 348}# #{mod 3595}#)
                            (if (symbol? #{id 3596}#)
                              #t
                              (if (if (vector? #{id 3596}#)
                                    (if (= (vector-length #{id 3596}#) 4)
                                      (eq? (vector-ref #{id 3596}# 0)
                                           'syntax-object)
                                      #f)
                                    #f)
                                (symbol? (vector-ref #{id 3596}# 1))
                                #f))
                            #f))
                        #{tmp 3592}#)
                      #f)
                  (@apply
                    (lambda (#{mod 3602}# #{id 3603}#)
                      (values
                        (syntax->datum #{id 3603}#)
                        #{r 3586}#
                        #{w 3587}#
                        #f
                        (syntax->datum
                          (cons '#(syntax-object
                                   public
                                   ((top)
                                    #(ribcage
                                      #(mod id)
                                      #((top) (top))
                                      #("i3600" "i3601"))
                                    #(ribcage () () ())
                                    #(ribcage
                                      #(e r w)
                                      #((top) (top) (top))
                                      #("i3588" "i3589" "i3590"))
                                    #(ribcage
                                      (lambda-var-list
                                        gen-var
                                        strip
                                        chi-lambda-case
                                        lambda*-formals
                                        chi-simple-lambda
                                        lambda-formals
                                        ellipsis?
                                        chi-void
                                        eval-local-transformer
                                        chi-local-syntax
                                        chi-body
                                        chi-macro
                                        chi-application
                                        chi-expr
                                        chi
                                        syntax-type
                                        chi-when-list
                                        chi-install-global
                                        chi-top-sequence
                                        chi-sequence
                                        source-wrap
                                        wrap
                                        bound-id-member?
                                        distinct-bound-ids?
                                        valid-bound-ids?
                                        bound-id=?
                                        free-id=?
                                        id-var-name
                                        same-marks?
                                        join-marks
                                        join-wraps
                                        smart-append
                                        make-binding-wrap
                                        extend-ribcage!
                                        make-empty-ribcage
                                        new-mark
                                        anti-mark
                                        the-anti-mark
                                        top-marked?
                                        top-wrap
                                        empty-wrap
                                        set-ribcage-labels!
                                        set-ribcage-marks!
                                        set-ribcage-symnames!
                                        ribcage-labels
                                        ribcage-marks
                                        ribcage-symnames
                                        ribcage?
                                        make-ribcage
                                        gen-labels
                                        gen-label
                                        make-rename
                                        rename-marks
                                        rename-new
                                        rename-old
                                        subst-rename?
                                        wrap-subst
                                        wrap-marks
                                        make-wrap
                                        id-sym-name&marks
                                        id-sym-name
                                        id?
                                        nonsymbol-id?
                                        global-extend
                                        lookup
                                        macros-only-env
                                        extend-var-env
                                        extend-env
                                        null-env
                                        binding-value
                                        binding-type
                                        make-binding
                                        arg-check
                                        source-annotation
                                        no-source
                                        set-syntax-object-module!
                                        set-syntax-object-wrap!
                                        set-syntax-object-expression!
                                        syntax-object-module
                                        syntax-object-wrap
                                        syntax-object-expression
                                        syntax-object?
                                        make-syntax-object
                                        build-lexical-var
                                        build-letrec
                                        build-named-let
                                        build-let
                                        build-sequence
                                        build-data
                                        build-primref
                                        build-lambda-case
                                        build-case-lambda
                                        build-simple-lambda
                                        build-global-definition
                                        build-global-assignment
                                        build-global-reference
                                        analyze-variable
                                        build-lexical-assignment
                                        build-lexical-reference
                                        build-dynlet
                                        build-conditional
                                        build-application
                                        build-void
                                        maybe-name-value!
                                        decorate-source
                                        get-global-definition-hook
                                        put-global-definition-hook
                                        gensym-hook
                                        local-eval-hook
                                        top-level-eval-hook
                                        fx<
                                        fx=
                                        fx-
                                        fx+
                                        set-lambda-meta!
                                        lambda-meta
                                        lambda?
                                        make-dynlet
                                        make-letrec
                                        make-let
                                        make-lambda-case
                                        make-lambda
                                        make-sequence
                                        make-application
                                        make-conditional
                                        make-toplevel-define
                                        make-toplevel-set
                                        make-toplevel-ref
                                        make-module-set
                                        make-module-ref
                                        make-lexical-set
                                        make-lexical-ref
                                        make-primitive-ref
                                        make-const
                                        make-void)
                                      ((top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top))
                                      ("i465"
                                       "i463"
                                       "i461"
                                       "i459"
                                       "i457"
                                       "i455"
                                       "i453"
                                       "i451"
                                       "i449"
                                       "i447"
                                       "i445"
                                       "i443"
                                       "i441"
                                       "i439"
                                       "i437"
                                       "i435"
                                       "i433"
                                       "i431"
                                       "i429"
                                       "i427"
                                       "i425"
                                       "i423"
                                       "i421"
                                       "i419"
                                       "i417"
                                       "i415"
                                       "i413"
                                       "i411"
                                       "i409"
                                       "i407"
                                       "i405"
                                       "i403"
                                       "i401"
                                       "i399"
                                       "i397"
                                       "i396"
                                       "i394"
                                       "i391"
                                       "i390"
                                       "i389"
                                       "i387"
                                       "i386"
                                       "i384"
                                       "i382"
                                       "i380"
                                       "i378"
                                       "i376"
                                       "i374"
                                       "i372"
                                       "i370"
                                       "i367"
                                       "i365"
                                       "i364"
                                       "i362"
                                       "i360"
                                       "i358"
                                       "i356"
                                       "i355"
                                       "i354"
                                       "i353"
                                       "i351"
                                       "i350"
                                       "i347"
                                       "i345"
                                       "i343"
                                       "i341"
                                       "i339"
                                       "i337"
                                       "i335"
                                       "i334"
                                       "i333"
                                       "i331"
                                       "i329"
                                       "i328"
                                       "i325"
                                       "i324"
                                       "i322"
                                       "i320"
                                       "i318"
                                       "i316"
                                       "i314"
                                       "i312"
                                       "i310"
                                       "i308"
                                       "i306"
                                       "i303"
                                       "i301"
                                       "i299"
                                       "i297"
                                       "i295"
                                       "i293"
                                       "i291"
                                       "i289"
                                       "i287"
                                       "i285"
                                       "i283"
                                       "i281"
                                       "i279"
                                       "i277"
                                       "i275"
                                       "i273"
                                       "i271"
                                       "i269"
                                       "i267"
                                       "i265"
                                       "i263"
                                       "i261"
                                       "i259"
                                       "i258"
                                       "i255"
                                       "i253"
                                       "i252"
                                       "i251"
                                       "i250"
                                       "i249"
                                       "i247"
                                       "i245"
                                       "i243"
                                       "i240"
                                       "i238"
                                       "i236"
                                       "i234"
                                       "i232"
                                       "i230"
                                       "i228"
                                       "i226"
                                       "i224"
                                       "i222"
                                       "i220"
                                       "i218"
                                       "i216"
                                       "i214"
                                       "i212"
                                       "i210"
                                       "i208"
                                       "i206"))
                                    #(ribcage
                                      (define-structure
                                        define-expansion-accessors
                                        define-expansion-constructors)
                                      ((top) (top) (top))
                                      ("i44" "i43" "i42")))
                                   (hygiene guile))
                                #{mod 3602}#))))
                    #{tmp 3592}#)
                  (syntax-violation
                    #f
                    "source expression failed to match any pattern"
                    #{e 3585}#)))))))
      (#{global-extend 344}#
        'module-ref
        '@@
        (lambda (#{e 3605}# #{r 3606}# #{w 3607}#)
          (letrec*
            ((#{remodulate 3612}#
               (lambda (#{x 3613}# #{mod 3614}#)
                 (if (pair? #{x 3613}#)
                   (cons (#{remodulate 3612}#
                           (car #{x 3613}#)
                           #{mod 3614}#)
                         (#{remodulate 3612}#
                           (cdr #{x 3613}#)
                           #{mod 3614}#))
                   (if (if (vector? #{x 3613}#)
                         (if (= (vector-length #{x 3613}#) 4)
                           (eq? (vector-ref #{x 3613}# 0) 'syntax-object)
                           #f)
                         #f)
                     (begin
                       (let ((#{expression 7616}#
                               (#{remodulate 3612}#
                                 (vector-ref #{x 3613}# 1)
                                 #{mod 3614}#))
                             (#{wrap 7617}# (vector-ref #{x 3613}# 2)))
                         (vector
                           'syntax-object
                           #{expression 7616}#
                           #{wrap 7617}#
                           #{mod 3614}#)))
                     (if (vector? #{x 3613}#)
                       (begin
                         (let ((#{n 3625}# (vector-length #{x 3613}#)))
                           (begin
                             (let ((#{v 3627}# (make-vector #{n 3625}#)))
                               (letrec*
                                 ((#{loop 3630}#
                                    (lambda (#{i 3631}#)
                                      (if (= #{i 3631}# #{n 3625}#)
                                        #{v 3627}#
                                        (begin
                                          (vector-set!
                                            #{v 3627}#
                                            #{i 3631}#
                                            (#{remodulate 3612}#
                                              (vector-ref
                                                #{x 3613}#
                                                #{i 3631}#)
                                              #{mod 3614}#))
                                          (#{loop 3630}#
                                            (#{1+}# #{i 3631}#)))))))
                                 (begin (#{loop 3630}# 0)))))))
                       #{x 3613}#))))))
            (begin
              (begin
                (let ((#{tmp 3638}#
                        ($sc-dispatch #{e 3605}# '(_ each-any any))))
                  (if (if #{tmp 3638}#
                        (@apply
                          (lambda (#{mod 3641}# #{exp 3642}#)
                            (and-map #{id? 348}# #{mod 3641}#))
                          #{tmp 3638}#)
                        #f)
                    (@apply
                      (lambda (#{mod 3646}# #{exp 3647}#)
                        (begin
                          (let ((#{mod 3649}#
                                  (syntax->datum
                                    (cons '#(syntax-object
                                             private
                                             ((top)
                                              #(ribcage
                                                #(mod exp)
                                                #((top) (top))
                                                #("i3644" "i3645"))
                                              #(ribcage
                                                (remodulate)
                                                ((top))
                                                ("i3611"))
                                              #(ribcage
                                                #(e r w)
                                                #((top) (top) (top))
                                                #("i3608" "i3609" "i3610"))
                                              #(ribcage
                                                (lambda-var-list
                                                  gen-var
                                                  strip
                                                  chi-lambda-case
                                                  lambda*-formals
                                                  chi-simple-lambda
                                                  lambda-formals
                                                  ellipsis?
                                                  chi-void
                                                  eval-local-transformer
                                                  chi-local-syntax
                                                  chi-body
                                                  chi-macro
                                                  chi-application
                                                  chi-expr
                                                  chi
                                                  syntax-type
                                                  chi-when-list
                                                  chi-install-global
                                                  chi-top-sequence
                                                  chi-sequence
                                                  source-wrap
                                                  wrap
                                                  bound-id-member?
                                                  distinct-bound-ids?
                                                  valid-bound-ids?
                                                  bound-id=?
                                                  free-id=?
                                                  id-var-name
                                                  same-marks?
                                                  join-marks
                                                  join-wraps
                                                  smart-append
                                                  make-binding-wrap
                                                  extend-ribcage!
                                                  make-empty-ribcage
                                                  new-mark
                                                  anti-mark
                                                  the-anti-mark
                                                  top-marked?
                                                  top-wrap
                                                  empty-wrap
                                                  set-ribcage-labels!
                                                  set-ribcage-marks!
                                                  set-ribcage-symnames!
                                                  ribcage-labels
                                                  ribcage-marks
                                                  ribcage-symnames
                                                  ribcage?
                                                  make-ribcage
                                                  gen-labels
                                                  gen-label
                                                  make-rename
                                                  rename-marks
                                                  rename-new
                                                  rename-old
                                                  subst-rename?
                                                  wrap-subst
                                                  wrap-marks
                                                  make-wrap
                                                  id-sym-name&marks
                                                  id-sym-name
                                                  id?
                                                  nonsymbol-id?
                                                  global-extend
                                                  lookup
                                                  macros-only-env
                                                  extend-var-env
                                                  extend-env
                                                  null-env
                                                  binding-value
                                                  binding-type
                                                  make-binding
                                                  arg-check
                                                  source-annotation
                                                  no-source
                                                  set-syntax-object-module!
                                                  set-syntax-object-wrap!
                                                  set-syntax-object-expression!
                                                  syntax-object-module
                                                  syntax-object-wrap
                                                  syntax-object-expression
                                                  syntax-object?
                                                  make-syntax-object
                                                  build-lexical-var
                                                  build-letrec
                                                  build-named-let
                                                  build-let
                                                  build-sequence
                                                  build-data
                                                  build-primref
                                                  build-lambda-case
                                                  build-case-lambda
                                                  build-simple-lambda
                                                  build-global-definition
                                                  build-global-assignment
                                                  build-global-reference
                                                  analyze-variable
                                                  build-lexical-assignment
                                                  build-lexical-reference
                                                  build-dynlet
                                                  build-conditional
                                                  build-application
                                                  build-void
                                                  maybe-name-value!
                                                  decorate-source
                                                  get-global-definition-hook
                                                  put-global-definition-hook
                                                  gensym-hook
                                                  local-eval-hook
                                                  top-level-eval-hook
                                                  fx<
                                                  fx=
                                                  fx-
                                                  fx+
                                                  set-lambda-meta!
                                                  lambda-meta
                                                  lambda?
                                                  make-dynlet
                                                  make-letrec
                                                  make-let
                                                  make-lambda-case
                                                  make-lambda
                                                  make-sequence
                                                  make-application
                                                  make-conditional
                                                  make-toplevel-define
                                                  make-toplevel-set
                                                  make-toplevel-ref
                                                  make-module-set
                                                  make-module-ref
                                                  make-lexical-set
                                                  make-lexical-ref
                                                  make-primitive-ref
                                                  make-const
                                                  make-void)
                                                ((top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top))
                                                ("i465"
                                                 "i463"
                                                 "i461"
                                                 "i459"
                                                 "i457"
                                                 "i455"
                                                 "i453"
                                                 "i451"
                                                 "i449"
                                                 "i447"
                                                 "i445"
                                                 "i443"
                                                 "i441"
                                                 "i439"
                                                 "i437"
                                                 "i435"
                                                 "i433"
                                                 "i431"
                                                 "i429"
                                                 "i427"
                                                 "i425"
                                                 "i423"
                                                 "i421"
                                                 "i419"
                                                 "i417"
                                                 "i415"
                                                 "i413"
                                                 "i411"
                                                 "i409"
                                                 "i407"
                                                 "i405"
                                                 "i403"
                                                 "i401"
                                                 "i399"
                                                 "i397"
                                                 "i396"
                                                 "i394"
                                                 "i391"
                                                 "i390"
                                                 "i389"
                                                 "i387"
                                                 "i386"
                                                 "i384"
                                                 "i382"
                                                 "i380"
                                                 "i378"
                                                 "i376"
                                                 "i374"
                                                 "i372"
                                                 "i370"
                                                 "i367"
                                                 "i365"
                                                 "i364"
                                                 "i362"
                                                 "i360"
                                                 "i358"
                                                 "i356"
                                                 "i355"
                                                 "i354"
                                                 "i353"
                                                 "i351"
                                                 "i350"
                                                 "i347"
                                                 "i345"
                                                 "i343"
                                                 "i341"
                                                 "i339"
                                                 "i337"
                                                 "i335"
                                                 "i334"
                                                 "i333"
                                                 "i331"
                                                 "i329"
                                                 "i328"
                                                 "i325"
                                                 "i324"
                                                 "i322"
                                                 "i320"
                                                 "i318"
                                                 "i316"
                                                 "i314"
                                                 "i312"
                                                 "i310"
                                                 "i308"
                                                 "i306"
                                                 "i303"
                                                 "i301"
                                                 "i299"
                                                 "i297"
                                                 "i295"
                                                 "i293"
                                                 "i291"
                                                 "i289"
                                                 "i287"
                                                 "i285"
                                                 "i283"
                                                 "i281"
                                                 "i279"
                                                 "i277"
                                                 "i275"
                                                 "i273"
                                                 "i271"
                                                 "i269"
                                                 "i267"
                                                 "i265"
                                                 "i263"
                                                 "i261"
                                                 "i259"
                                                 "i258"
                                                 "i255"
                                                 "i253"
                                                 "i252"
                                                 "i251"
                                                 "i250"
                                                 "i249"
                                                 "i247"
                                                 "i245"
                                                 "i243"
                                                 "i240"
                                                 "i238"
                                                 "i236"
                                                 "i234"
                                                 "i232"
                                                 "i230"
                                                 "i228"
                                                 "i226"
                                                 "i224"
                                                 "i222"
                                                 "i220"
                                                 "i218"
                                                 "i216"
                                                 "i214"
                                                 "i212"
                                                 "i210"
                                                 "i208"
                                                 "i206"))
                                              #(ribcage
                                                (define-structure
                                                  define-expansion-accessors
                                                  define-expansion-constructors)
                                                ((top) (top) (top))
                                                ("i44" "i43" "i42")))
                                             (hygiene guile))
                                          #{mod 3646}#))))
                            (values
                              (#{remodulate 3612}# #{exp 3647}# #{mod 3649}#)
                              #{r 3606}#
                              #{w 3607}#
                              (#{source-annotation 326}# #{exp 3647}#)
                              #{mod 3649}#))))
                      #{tmp 3638}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{e 3605}#))))))))
      (#{global-extend 344}#
        'core
        'if
        (lambda (#{e 3651}#
                 #{r 3652}#
                 #{w 3653}#
                 #{s 3654}#
                 #{mod 3655}#)
          (begin
            (let ((#{tmp 3662}#
                    ($sc-dispatch #{e 3651}# '(_ any any))))
              (if #{tmp 3662}#
                (@apply
                  (lambda (#{test 3665}# #{then 3666}#)
                    (#{build-conditional 272}#
                      #{s 3654}#
                      (#{chi 436}#
                        #{test 3665}#
                        #{r 3652}#
                        #{w 3653}#
                        #{mod 3655}#)
                      (#{chi 436}#
                        #{then 3666}#
                        #{r 3652}#
                        #{w 3653}#
                        #{mod 3655}#)
                      (make-struct/no-tail
                        (vector-ref %expanded-vtables 0)
                        #f)))
                  #{tmp 3662}#)
                (begin
                  (let ((#{tmp 3668}#
                          ($sc-dispatch #{e 3651}# '(_ any any any))))
                    (if #{tmp 3668}#
                      (@apply
                        (lambda (#{test 3672}# #{then 3673}# #{else 3674}#)
                          (#{build-conditional 272}#
                            #{s 3654}#
                            (#{chi 436}#
                              #{test 3672}#
                              #{r 3652}#
                              #{w 3653}#
                              #{mod 3655}#)
                            (#{chi 436}#
                              #{then 3673}#
                              #{r 3652}#
                              #{w 3653}#
                              #{mod 3655}#)
                            (#{chi 436}#
                              #{else 3674}#
                              #{r 3652}#
                              #{w 3653}#
                              #{mod 3655}#)))
                        #{tmp 3668}#)
                      (syntax-violation
                        #f
                        "source expression failed to match any pattern"
                        #{e 3651}#)))))))))
      (#{global-extend 344}#
        'core
        'with-fluids
        (lambda (#{e 3675}#
                 #{r 3676}#
                 #{w 3677}#
                 #{s 3678}#
                 #{mod 3679}#)
          (begin
            (let ((#{tmp 3686}#
                    ($sc-dispatch
                      #{e 3675}#
                      '(_ #(each (any any)) any . each-any))))
              (if #{tmp 3686}#
                (@apply
                  (lambda (#{fluid 3691}#
                           #{val 3692}#
                           #{b 3693}#
                           #{b* 3694}#)
                    (let ((#{source 976}# #{s 3678}#)
                          (#{fluids 977}#
                            (map (lambda (#{x 3695}#)
                                   (#{chi 436}#
                                     #{x 3695}#
                                     #{r 3676}#
                                     #{w 3677}#
                                     #{mod 3679}#))
                                 #{fluid 3691}#))
                          (#{vals 978}#
                            (map (lambda (#{x 3698}#)
                                   (#{chi 436}#
                                     #{x 3698}#
                                     #{r 3676}#
                                     #{w 3677}#
                                     #{mod 3679}#))
                                 #{val 3692}#))
                          (#{body 979}#
                            (#{chi-body 444}#
                              (cons #{b 3693}# #{b* 3694}#)
                              (#{wrap 422}#
                                (begin
                                  (if (if (pair? #{e 3675}#) #{s 3678}# #f)
                                    (set-source-properties!
                                      #{e 3675}#
                                      #{s 3678}#))
                                  #{e 3675}#)
                                #{w 3677}#
                                #{mod 3679}#)
                              #{r 3676}#
                              #{w 3677}#
                              #{mod 3679}#)))
                      (#{make-dynlet 241}#
                        #{source 976}#
                        #{fluids 977}#
                        #{vals 978}#
                        #{body 979}#)))
                  #{tmp 3686}#)
                (syntax-violation
                  #f
                  "source expression failed to match any pattern"
                  #{e 3675}#))))))
      (module-define!
        (current-module)
        'begin
        (make-syntax-transformer 'begin 'begin '()))
      (module-define!
        (current-module)
        'define
        (make-syntax-transformer 'define 'define '()))
      (module-define!
        (current-module)
        'define-syntax
        (make-syntax-transformer
          'define-syntax
          'define-syntax
          '()))
      (module-define!
        (current-module)
        'eval-when
        (make-syntax-transformer
          'eval-when
          'eval-when
          '()))
      (#{global-extend 344}#
        'core
        'syntax-case
        (letrec*
          ((#{convert-pattern 3703}#
             (lambda (#{pattern 3710}# #{keys 3711}#)
               (letrec*
                 ((#{cvt* 3715}#
                    (lambda (#{p* 3720}# #{n 3721}# #{ids 3722}#)
                      (if (not (pair? #{p* 3720}#))
                        (#{cvt 3719}#
                          #{p* 3720}#
                          #{n 3721}#
                          #{ids 3722}#)
                        (call-with-values
                          (lambda ()
                            (#{cvt* 3715}#
                              (cdr #{p* 3720}#)
                              #{n 3721}#
                              #{ids 3722}#))
                          (lambda (#{y 3726}# #{ids 3727}#)
                            (call-with-values
                              (lambda ()
                                (#{cvt 3719}#
                                  (car #{p* 3720}#)
                                  #{n 3721}#
                                  #{ids 3727}#))
                              (lambda (#{x 3730}# #{ids 3731}#)
                                (values
                                  (cons #{x 3730}# #{y 3726}#)
                                  #{ids 3731}#))))))))
                  (#{v-reverse 3717}#
                    (lambda (#{x 3734}#)
                      (letrec*
                        ((#{loop 3739}#
                           (lambda (#{r 3740}# #{x 3741}#)
                             (if (not (pair? #{x 3741}#))
                               (values #{r 3740}# #{x 3741}#)
                               (#{loop 3739}#
                                 (cons (car #{x 3741}#) #{r 3740}#)
                                 (cdr #{x 3741}#))))))
                        (begin (#{loop 3739}# '() #{x 3734}#)))))
                  (#{cvt 3719}#
                    (lambda (#{p 3742}# #{n 3743}# #{ids 3744}#)
                      (if (if (symbol? #{p 3742}#)
                            #t
                            (if (if (vector? #{p 3742}#)
                                  (if (= (vector-length #{p 3742}#) 4)
                                    (eq? (vector-ref #{p 3742}# 0)
                                         'syntax-object)
                                    #f)
                                  #f)
                              (symbol? (vector-ref #{p 3742}# 1))
                              #f))
                        (if (#{bound-id-member? 420}#
                              #{p 3742}#
                              #{keys 3711}#)
                          (values
                            (vector 'free-id #{p 3742}#)
                            #{ids 3744}#)
                          (if (if (eq? (if (if (vector? #{p 3742}#)
                                             (if (= (vector-length #{p 3742}#)
                                                    4)
                                               (eq? (vector-ref #{p 3742}# 0)
                                                    'syntax-object)
                                               #f)
                                             #f)
                                         (vector-ref #{p 3742}# 1)
                                         #{p 3742}#)
                                       (if (if (= (vector-length
                                                    '#(syntax-object
                                                       _
                                                       ((top)
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(p n ids)
                                                          #((top) (top) (top))
                                                          #("i3745"
                                                            "i3746"
                                                            "i3747"))
                                                        #(ribcage
                                                          (cvt v-reverse cvt*)
                                                          ((top) (top) (top))
                                                          ("i3718"
                                                           "i3716"
                                                           "i3714"))
                                                        #(ribcage
                                                          #(pattern keys)
                                                          #((top) (top))
                                                          #("i3712" "i3713"))
                                                        #(ribcage
                                                          (gen-syntax-case
                                                            gen-clause
                                                            build-dispatch-call
                                                            convert-pattern)
                                                          ((top)
                                                           (top)
                                                           (top)
                                                           (top))
                                                          ("i3708"
                                                           "i3706"
                                                           "i3704"
                                                           "i3702"))
                                                        #(ribcage
                                                          (lambda-var-list
                                                            gen-var
                                                            strip
                                                            chi-lambda-case
                                                            lambda*-formals
                                                            chi-simple-lambda
                                                            lambda-formals
                                                            ellipsis?
                                                            chi-void
                                                            eval-local-transformer
                                                            chi-local-syntax
                                                            chi-body
                                                            chi-macro
                                                            chi-application
                                                            chi-expr
                                                            chi
                                                            syntax-type
                                                            chi-when-list
                                                            chi-install-global
                                                            chi-top-sequence
                                                            chi-sequence
                                                            source-wrap
                                                            wrap
                                                            bound-id-member?
                                                            distinct-bound-ids?
                                                            valid-bound-ids?
                                                            bound-id=?
                                                            free-id=?
                                                            id-var-name
                                                            same-marks?
                                                            join-marks
                                                            join-wraps
                                                            smart-append
                                                            make-binding-wrap
                                                            extend-ribcage!
                                                            make-empty-ribcage
                                                            new-mark
                                                            anti-mark
                                                            the-anti-mark
                                                            top-marked?
                                                            top-wrap
                                                            empty-wrap
                                                            set-ribcage-labels!
                                                            set-ribcage-marks!
                                                            set-ribcage-symnames!
                                                            ribcage-labels
                                                            ribcage-marks
                                                            ribcage-symnames
                                                            ribcage?
                                                            make-ribcage
                                                            gen-labels
                                                            gen-label
                                                            make-rename
                                                            rename-marks
                                                            rename-new
                                                            rename-old
                                                            subst-rename?
                                                            wrap-subst
                                                            wrap-marks
                                                            make-wrap
                                                            id-sym-name&marks
                                                            id-sym-name
                                                            id?
                                                            nonsymbol-id?
                                                            global-extend
                                                            lookup
                                                            macros-only-env
                                                            extend-var-env
                                                            extend-env
                                                            null-env
                                                            binding-value
                                                            binding-type
                                                            make-binding
                                                            arg-check
                                                            source-annotation
                                                            no-source
                                                            set-syntax-object-module!
                                                            set-syntax-object-wrap!
                                                            set-syntax-object-expression!
                                                            syntax-object-module
                                                            syntax-object-wrap
                                                            syntax-object-expression
                                                            syntax-object?
                                                            make-syntax-object
                                                            build-lexical-var
                                                            build-letrec
                                                            build-named-let
                                                            build-let
                                                            build-sequence
                                                            build-data
                                                            build-primref
                                                            build-lambda-case
                                                            build-case-lambda
                                                            build-simple-lambda
                                                            build-global-definition
                                                            build-global-assignment
                                                            build-global-reference
                                                            analyze-variable
                                                            build-lexical-assignment
                                                            build-lexical-reference
                                                            build-dynlet
                                                            build-conditional
                                                            build-application
                                                            build-void
                                                            maybe-name-value!
                                                            decorate-source
                                                            get-global-definition-hook
                                                            put-global-definition-hook
                                                            gensym-hook
                                                            local-eval-hook
                                                            top-level-eval-hook
                                                            fx<
                                                            fx=
                                                            fx-
                                                            fx+
                                                            set-lambda-meta!
                                                            lambda-meta
                                                            lambda?
                                                            make-dynlet
                                                            make-letrec
                                                            make-let
                                                            make-lambda-case
                                                            make-lambda
                                                            make-sequence
                                                            make-application
                                                            make-conditional
                                                            make-toplevel-define
                                                            make-toplevel-set
                                                            make-toplevel-ref
                                                            make-module-set
                                                            make-module-ref
                                                            make-lexical-set
                                                            make-lexical-ref
                                                            make-primitive-ref
                                                            make-const
                                                            make-void)
                                                          ((top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top))
                                                          ("i465"
                                                           "i463"
                                                           "i461"
                                                           "i459"
                                                           "i457"
                                                           "i455"
                                                           "i453"
                                                           "i451"
                                                           "i449"
                                                           "i447"
                                                           "i445"
                                                           "i443"
                                                           "i441"
                                                           "i439"
                                                           "i437"
                                                           "i435"
                                                           "i433"
                                                           "i431"
                                                           "i429"
                                                           "i427"
                                                           "i425"
                                                           "i423"
                                                           "i421"
                                                           "i419"
                                                           "i417"
                                                           "i415"
                                                           "i413"
                                                           "i411"
                                                           "i409"
                                                           "i407"
                                                           "i405"
                                                           "i403"
                                                           "i401"
                                                           "i399"
                                                           "i397"
                                                           "i396"
                                                           "i394"
                                                           "i391"
                                                           "i390"
                                                           "i389"
                                                           "i387"
                                                           "i386"
                                                           "i384"
                                                           "i382"
                                                           "i380"
                                                           "i378"
                                                           "i376"
                                                           "i374"
                                                           "i372"
                                                           "i370"
                                                           "i367"
                                                           "i365"
                                                           "i364"
                                                           "i362"
                                                           "i360"
                                                           "i358"
                                                           "i356"
                                                           "i355"
                                                           "i354"
                                                           "i353"
                                                           "i351"
                                                           "i350"
                                                           "i347"
                                                           "i345"
                                                           "i343"
                                                           "i341"
                                                           "i339"
                                                           "i337"
                                                           "i335"
                                                           "i334"
                                                           "i333"
                                                           "i331"
                                                           "i329"
                                                           "i328"
                                                           "i325"
                                                           "i324"
                                                           "i322"
                                                           "i320"
                                                           "i318"
                                                           "i316"
                                                           "i314"
                                                           "i312"
                                                           "i310"
                                                           "i308"
                                                           "i306"
                                                           "i303"
                                                           "i301"
                                                           "i299"
                                                           "i297"
                                                           "i295"
                                                           "i293"
                                                           "i291"
                                                           "i289"
                                                           "i287"
                                                           "i285"
                                                           "i283"
                                                           "i281"
                                                           "i279"
                                                           "i277"
                                                           "i275"
                                                           "i273"
                                                           "i271"
                                                           "i269"
                                                           "i267"
                                                           "i265"
                                                           "i263"
                                                           "i261"
                                                           "i259"
                                                           "i258"
                                                           "i255"
                                                           "i253"
                                                           "i252"
                                                           "i251"
                                                           "i250"
                                                           "i249"
                                                           "i247"
                                                           "i245"
                                                           "i243"
                                                           "i240"
                                                           "i238"
                                                           "i236"
                                                           "i234"
                                                           "i232"
                                                           "i230"
                                                           "i228"
                                                           "i226"
                                                           "i224"
                                                           "i222"
                                                           "i220"
                                                           "i218"
                                                           "i216"
                                                           "i214"
                                                           "i212"
                                                           "i210"
                                                           "i208"
                                                           "i206"))
                                                        #(ribcage
                                                          (define-structure
                                                            define-expansion-accessors
                                                            define-expansion-constructors)
                                                          ((top) (top) (top))
                                                          ("i44" "i43" "i42")))
                                                       (hygiene guile)))
                                                  4)
                                             (eq? (vector-ref
                                                    '#(syntax-object
                                                       _
                                                       ((top)
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(p n ids)
                                                          #((top) (top) (top))
                                                          #("i3745"
                                                            "i3746"
                                                            "i3747"))
                                                        #(ribcage
                                                          (cvt v-reverse cvt*)
                                                          ((top) (top) (top))
                                                          ("i3718"
                                                           "i3716"
                                                           "i3714"))
                                                        #(ribcage
                                                          #(pattern keys)
                                                          #((top) (top))
                                                          #("i3712" "i3713"))
                                                        #(ribcage
                                                          (gen-syntax-case
                                                            gen-clause
                                                            build-dispatch-call
                                                            convert-pattern)
                                                          ((top)
                                                           (top)
                                                           (top)
                                                           (top))
                                                          ("i3708"
                                                           "i3706"
                                                           "i3704"
                                                           "i3702"))
                                                        #(ribcage
                                                          (lambda-var-list
                                                            gen-var
                                                            strip
                                                            chi-lambda-case
                                                            lambda*-formals
                                                            chi-simple-lambda
                                                            lambda-formals
                                                            ellipsis?
                                                            chi-void
                                                            eval-local-transformer
                                                            chi-local-syntax
                                                            chi-body
                                                            chi-macro
                                                            chi-application
                                                            chi-expr
                                                            chi
                                                            syntax-type
                                                            chi-when-list
                                                            chi-install-global
                                                            chi-top-sequence
                                                            chi-sequence
                                                            source-wrap
                                                            wrap
                                                            bound-id-member?
                                                            distinct-bound-ids?
                                                            valid-bound-ids?
                                                            bound-id=?
                                                            free-id=?
                                                            id-var-name
                                                            same-marks?
                                                            join-marks
                                                            join-wraps
                                                            smart-append
                                                            make-binding-wrap
                                                            extend-ribcage!
                                                            make-empty-ribcage
                                                            new-mark
                                                            anti-mark
                                                            the-anti-mark
                                                            top-marked?
                                                            top-wrap
                                                            empty-wrap
                                                            set-ribcage-labels!
                                                            set-ribcage-marks!
                                                            set-ribcage-symnames!
                                                            ribcage-labels
                                                            ribcage-marks
                                                            ribcage-symnames
                                                            ribcage?
                                                            make-ribcage
                                                            gen-labels
                                                            gen-label
                                                            make-rename
                                                            rename-marks
                                                            rename-new
                                                            rename-old
                                                            subst-rename?
                                                            wrap-subst
                                                            wrap-marks
                                                            make-wrap
                                                            id-sym-name&marks
                                                            id-sym-name
                                                            id?
                                                            nonsymbol-id?
                                                            global-extend
                                                            lookup
                                                            macros-only-env
                                                            extend-var-env
                                                            extend-env
                                                            null-env
                                                            binding-value
                                                            binding-type
                                                            make-binding
                                                            arg-check
                                                            source-annotation
                                                            no-source
                                                            set-syntax-object-module!
                                                            set-syntax-object-wrap!
                                                            set-syntax-object-expression!
                                                            syntax-object-module
                                                            syntax-object-wrap
                                                            syntax-object-expression
                                                            syntax-object?
                                                            make-syntax-object
                                                            build-lexical-var
                                                            build-letrec
                                                            build-named-let
                                                            build-let
                                                            build-sequence
                                                            build-data
                                                            build-primref
                                                            build-lambda-case
                                                            build-case-lambda
                                                            build-simple-lambda
                                                            build-global-definition
                                                            build-global-assignment
                                                            build-global-reference
                                                            analyze-variable
                                                            build-lexical-assignment
                                                            build-lexical-reference
                                                            build-dynlet
                                                            build-conditional
                                                            build-application
                                                            build-void
                                                            maybe-name-value!
                                                            decorate-source
                                                            get-global-definition-hook
                                                            put-global-definition-hook
                                                            gensym-hook
                                                            local-eval-hook
                                                            top-level-eval-hook
                                                            fx<
                                                            fx=
                                                            fx-
                                                            fx+
                                                            set-lambda-meta!
                                                            lambda-meta
                                                            lambda?
                                                            make-dynlet
                                                            make-letrec
                                                            make-let
                                                            make-lambda-case
                                                            make-lambda
                                                            make-sequence
                                                            make-application
                                                            make-conditional
                                                            make-toplevel-define
                                                            make-toplevel-set
                                                            make-toplevel-ref
                                                            make-module-set
                                                            make-module-ref
                                                            make-lexical-set
                                                            make-lexical-ref
                                                            make-primitive-ref
                                                            make-const
                                                            make-void)
                                                          ((top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top))
                                                          ("i465"
                                                           "i463"
                                                           "i461"
                                                           "i459"
                                                           "i457"
                                                           "i455"
                                                           "i453"
                                                           "i451"
                                                           "i449"
                                                           "i447"
                                                           "i445"
                                                           "i443"
                                                           "i441"
                                                           "i439"
                                                           "i437"
                                                           "i435"
                                                           "i433"
                                                           "i431"
                                                           "i429"
                                                           "i427"
                                                           "i425"
                                                           "i423"
                                                           "i421"
                                                           "i419"
                                                           "i417"
                                                           "i415"
                                                           "i413"
                                                           "i411"
                                                           "i409"
                                                           "i407"
                                                           "i405"
                                                           "i403"
                                                           "i401"
                                                           "i399"
                                                           "i397"
                                                           "i396"
                                                           "i394"
                                                           "i391"
                                                           "i390"
                                                           "i389"
                                                           "i387"
                                                           "i386"
                                                           "i384"
                                                           "i382"
                                                           "i380"
                                                           "i378"
                                                           "i376"
                                                           "i374"
                                                           "i372"
                                                           "i370"
                                                           "i367"
                                                           "i365"
                                                           "i364"
                                                           "i362"
                                                           "i360"
                                                           "i358"
                                                           "i356"
                                                           "i355"
                                                           "i354"
                                                           "i353"
                                                           "i351"
                                                           "i350"
                                                           "i347"
                                                           "i345"
                                                           "i343"
                                                           "i341"
                                                           "i339"
                                                           "i337"
                                                           "i335"
                                                           "i334"
                                                           "i333"
                                                           "i331"
                                                           "i329"
                                                           "i328"
                                                           "i325"
                                                           "i324"
                                                           "i322"
                                                           "i320"
                                                           "i318"
                                                           "i316"
                                                           "i314"
                                                           "i312"
                                                           "i310"
                                                           "i308"
                                                           "i306"
                                                           "i303"
                                                           "i301"
                                                           "i299"
                                                           "i297"
                                                           "i295"
                                                           "i293"
                                                           "i291"
                                                           "i289"
                                                           "i287"
                                                           "i285"
                                                           "i283"
                                                           "i281"
                                                           "i279"
                                                           "i277"
                                                           "i275"
                                                           "i273"
                                                           "i271"
                                                           "i269"
                                                           "i267"
                                                           "i265"
                                                           "i263"
                                                           "i261"
                                                           "i259"
                                                           "i258"
                                                           "i255"
                                                           "i253"
                                                           "i252"
                                                           "i251"
                                                           "i250"
                                                           "i249"
                                                           "i247"
                                                           "i245"
                                                           "i243"
                                                           "i240"
                                                           "i238"
                                                           "i236"
                                                           "i234"
                                                           "i232"
                                                           "i230"
                                                           "i228"
                                                           "i226"
                                                           "i224"
                                                           "i222"
                                                           "i220"
                                                           "i218"
                                                           "i216"
                                                           "i214"
                                                           "i212"
                                                           "i210"
                                                           "i208"
                                                           "i206"))
                                                        #(ribcage
                                                          (define-structure
                                                            define-expansion-accessors
                                                            define-expansion-constructors)
                                                          ((top) (top) (top))
                                                          ("i44" "i43" "i42")))
                                                       (hygiene guile))
                                                    0)
                                                  'syntax-object)
                                             #f)
                                         (vector-ref
                                           '#(syntax-object
                                              _
                                              ((top)
                                               #(ribcage () () ())
                                               #(ribcage
                                                 #(p n ids)
                                                 #((top) (top) (top))
                                                 #("i3745" "i3746" "i3747"))
                                               #(ribcage
                                                 (cvt v-reverse cvt*)
                                                 ((top) (top) (top))
                                                 ("i3718" "i3716" "i3714"))
                                               #(ribcage
                                                 #(pattern keys)
                                                 #((top) (top))
                                                 #("i3712" "i3713"))
                                               #(ribcage
                                                 (gen-syntax-case
                                                   gen-clause
                                                   build-dispatch-call
                                                   convert-pattern)
                                                 ((top) (top) (top) (top))
                                                 ("i3708"
                                                  "i3706"
                                                  "i3704"
                                                  "i3702"))
                                               #(ribcage
                                                 (lambda-var-list
                                                   gen-var
                                                   strip
                                                   chi-lambda-case
                                                   lambda*-formals
                                                   chi-simple-lambda
                                                   lambda-formals
                                                   ellipsis?
                                                   chi-void
                                                   eval-local-transformer
                                                   chi-local-syntax
                                                   chi-body
                                                   chi-macro
                                                   chi-application
                                                   chi-expr
                                                   chi
                                                   syntax-type
                                                   chi-when-list
                                                   chi-install-global
                                                   chi-top-sequence
                                                   chi-sequence
                                                   source-wrap
                                                   wrap
                                                   bound-id-member?
                                                   distinct-bound-ids?
                                                   valid-bound-ids?
                                                   bound-id=?
                                                   free-id=?
                                                   id-var-name
                                                   same-marks?
                                                   join-marks
                                                   join-wraps
                                                   smart-append
                                                   make-binding-wrap
                                                   extend-ribcage!
                                                   make-empty-ribcage
                                                   new-mark
                                                   anti-mark
                                                   the-anti-mark
                                                   top-marked?
                                                   top-wrap
                                                   empty-wrap
                                                   set-ribcage-labels!
                                                   set-ribcage-marks!
                                                   set-ribcage-symnames!
                                                   ribcage-labels
                                                   ribcage-marks
                                                   ribcage-symnames
                                                   ribcage?
                                                   make-ribcage
                                                   gen-labels
                                                   gen-label
                                                   make-rename
                                                   rename-marks
                                                   rename-new
                                                   rename-old
                                                   subst-rename?
                                                   wrap-subst
                                                   wrap-marks
                                                   make-wrap
                                                   id-sym-name&marks
                                                   id-sym-name
                                                   id?
                                                   nonsymbol-id?
                                                   global-extend
                                                   lookup
                                                   macros-only-env
                                                   extend-var-env
                                                   extend-env
                                                   null-env
                                                   binding-value
                                                   binding-type
                                                   make-binding
                                                   arg-check
                                                   source-annotation
                                                   no-source
                                                   set-syntax-object-module!
                                                   set-syntax-object-wrap!
                                                   set-syntax-object-expression!
                                                   syntax-object-module
                                                   syntax-object-wrap
                                                   syntax-object-expression
                                                   syntax-object?
                                                   make-syntax-object
                                                   build-lexical-var
                                                   build-letrec
                                                   build-named-let
                                                   build-let
                                                   build-sequence
                                                   build-data
                                                   build-primref
                                                   build-lambda-case
                                                   build-case-lambda
                                                   build-simple-lambda
                                                   build-global-definition
                                                   build-global-assignment
                                                   build-global-reference
                                                   analyze-variable
                                                   build-lexical-assignment
                                                   build-lexical-reference
                                                   build-dynlet
                                                   build-conditional
                                                   build-application
                                                   build-void
                                                   maybe-name-value!
                                                   decorate-source
                                                   get-global-definition-hook
                                                   put-global-definition-hook
                                                   gensym-hook
                                                   local-eval-hook
                                                   top-level-eval-hook
                                                   fx<
                                                   fx=
                                                   fx-
                                                   fx+
                                                   set-lambda-meta!
                                                   lambda-meta
                                                   lambda?
                                                   make-dynlet
                                                   make-letrec
                                                   make-let
                                                   make-lambda-case
                                                   make-lambda
                                                   make-sequence
                                                   make-application
                                                   make-conditional
                                                   make-toplevel-define
                                                   make-toplevel-set
                                                   make-toplevel-ref
                                                   make-module-set
                                                   make-module-ref
                                                   make-lexical-set
                                                   make-lexical-ref
                                                   make-primitive-ref
                                                   make-const
                                                   make-void)
                                                 ((top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top))
                                                 ("i465"
                                                  "i463"
                                                  "i461"
                                                  "i459"
                                                  "i457"
                                                  "i455"
                                                  "i453"
                                                  "i451"
                                                  "i449"
                                                  "i447"
                                                  "i445"
                                                  "i443"
                                                  "i441"
                                                  "i439"
                                                  "i437"
                                                  "i435"
                                                  "i433"
                                                  "i431"
                                                  "i429"
                                                  "i427"
                                                  "i425"
                                                  "i423"
                                                  "i421"
                                                  "i419"
                                                  "i417"
                                                  "i415"
                                                  "i413"
                                                  "i411"
                                                  "i409"
                                                  "i407"
                                                  "i405"
                                                  "i403"
                                                  "i401"
                                                  "i399"
                                                  "i397"
                                                  "i396"
                                                  "i394"
                                                  "i391"
                                                  "i390"
                                                  "i389"
                                                  "i387"
                                                  "i386"
                                                  "i384"
                                                  "i382"
                                                  "i380"
                                                  "i378"
                                                  "i376"
                                                  "i374"
                                                  "i372"
                                                  "i370"
                                                  "i367"
                                                  "i365"
                                                  "i364"
                                                  "i362"
                                                  "i360"
                                                  "i358"
                                                  "i356"
                                                  "i355"
                                                  "i354"
                                                  "i353"
                                                  "i351"
                                                  "i350"
                                                  "i347"
                                                  "i345"
                                                  "i343"
                                                  "i341"
                                                  "i339"
                                                  "i337"
                                                  "i335"
                                                  "i334"
                                                  "i333"
                                                  "i331"
                                                  "i329"
                                                  "i328"
                                                  "i325"
                                                  "i324"
                                                  "i322"
                                                  "i320"
                                                  "i318"
                                                  "i316"
                                                  "i314"
                                                  "i312"
                                                  "i310"
                                                  "i308"
                                                  "i306"
                                                  "i303"
                                                  "i301"
                                                  "i299"
                                                  "i297"
                                                  "i295"
                                                  "i293"
                                                  "i291"
                                                  "i289"
                                                  "i287"
                                                  "i285"
                                                  "i283"
                                                  "i281"
                                                  "i279"
                                                  "i277"
                                                  "i275"
                                                  "i273"
                                                  "i271"
                                                  "i269"
                                                  "i267"
                                                  "i265"
                                                  "i263"
                                                  "i261"
                                                  "i259"
                                                  "i258"
                                                  "i255"
                                                  "i253"
                                                  "i252"
                                                  "i251"
                                                  "i250"
                                                  "i249"
                                                  "i247"
                                                  "i245"
                                                  "i243"
                                                  "i240"
                                                  "i238"
                                                  "i236"
                                                  "i234"
                                                  "i232"
                                                  "i230"
                                                  "i228"
                                                  "i226"
                                                  "i224"
                                                  "i222"
                                                  "i220"
                                                  "i218"
                                                  "i216"
                                                  "i214"
                                                  "i212"
                                                  "i210"
                                                  "i208"
                                                  "i206"))
                                               #(ribcage
                                                 (define-structure
                                                   define-expansion-accessors
                                                   define-expansion-constructors)
                                                 ((top) (top) (top))
                                                 ("i44" "i43" "i42")))
                                              (hygiene guile))
                                           1)
                                         '#(syntax-object
                                            _
                                            ((top)
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(p n ids)
                                               #((top) (top) (top))
                                               #("i3745" "i3746" "i3747"))
                                             #(ribcage
                                               (cvt v-reverse cvt*)
                                               ((top) (top) (top))
                                               ("i3718" "i3716" "i3714"))
                                             #(ribcage
                                               #(pattern keys)
                                               #((top) (top))
                                               #("i3712" "i3713"))
                                             #(ribcage
                                               (gen-syntax-case
                                                 gen-clause
                                                 build-dispatch-call
                                                 convert-pattern)
                                               ((top) (top) (top) (top))
                                               ("i3708"
                                                "i3706"
                                                "i3704"
                                                "i3702"))
                                             #(ribcage
                                               (lambda-var-list
                                                 gen-var
                                                 strip
                                                 chi-lambda-case
                                                 lambda*-formals
                                                 chi-simple-lambda
                                                 lambda-formals
                                                 ellipsis?
                                                 chi-void
                                                 eval-local-transformer
                                                 chi-local-syntax
                                                 chi-body
                                                 chi-macro
                                                 chi-application
                                                 chi-expr
                                                 chi
                                                 syntax-type
                                                 chi-when-list
                                                 chi-install-global
                                                 chi-top-sequence
                                                 chi-sequence
                                                 source-wrap
                                                 wrap
                                                 bound-id-member?
                                                 distinct-bound-ids?
                                                 valid-bound-ids?
                                                 bound-id=?
                                                 free-id=?
                                                 id-var-name
                                                 same-marks?
                                                 join-marks
                                                 join-wraps
                                                 smart-append
                                                 make-binding-wrap
                                                 extend-ribcage!
                                                 make-empty-ribcage
                                                 new-mark
                                                 anti-mark
                                                 the-anti-mark
                                                 top-marked?
                                                 top-wrap
                                                 empty-wrap
                                                 set-ribcage-labels!
                                                 set-ribcage-marks!
                                                 set-ribcage-symnames!
                                                 ribcage-labels
                                                 ribcage-marks
                                                 ribcage-symnames
                                                 ribcage?
                                                 make-ribcage
                                                 gen-labels
                                                 gen-label
                                                 make-rename
                                                 rename-marks
                                                 rename-new
                                                 rename-old
                                                 subst-rename?
                                                 wrap-subst
                                                 wrap-marks
                                                 make-wrap
                                                 id-sym-name&marks
                                                 id-sym-name
                                                 id?
                                                 nonsymbol-id?
                                                 global-extend
                                                 lookup
                                                 macros-only-env
                                                 extend-var-env
                                                 extend-env
                                                 null-env
                                                 binding-value
                                                 binding-type
                                                 make-binding
                                                 arg-check
                                                 source-annotation
                                                 no-source
                                                 set-syntax-object-module!
                                                 set-syntax-object-wrap!
                                                 set-syntax-object-expression!
                                                 syntax-object-module
                                                 syntax-object-wrap
                                                 syntax-object-expression
                                                 syntax-object?
                                                 make-syntax-object
                                                 build-lexical-var
                                                 build-letrec
                                                 build-named-let
                                                 build-let
                                                 build-sequence
                                                 build-data
                                                 build-primref
                                                 build-lambda-case
                                                 build-case-lambda
                                                 build-simple-lambda
                                                 build-global-definition
                                                 build-global-assignment
                                                 build-global-reference
                                                 analyze-variable
                                                 build-lexical-assignment
                                                 build-lexical-reference
                                                 build-dynlet
                                                 build-conditional
                                                 build-application
                                                 build-void
                                                 maybe-name-value!
                                                 decorate-source
                                                 get-global-definition-hook
                                                 put-global-definition-hook
                                                 gensym-hook
                                                 local-eval-hook
                                                 top-level-eval-hook
                                                 fx<
                                                 fx=
                                                 fx-
                                                 fx+
                                                 set-lambda-meta!
                                                 lambda-meta
                                                 lambda?
                                                 make-dynlet
                                                 make-letrec
                                                 make-let
                                                 make-lambda-case
                                                 make-lambda
                                                 make-sequence
                                                 make-application
                                                 make-conditional
                                                 make-toplevel-define
                                                 make-toplevel-set
                                                 make-toplevel-ref
                                                 make-module-set
                                                 make-module-ref
                                                 make-lexical-set
                                                 make-lexical-ref
                                                 make-primitive-ref
                                                 make-const
                                                 make-void)
                                               ((top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top))
                                               ("i465"
                                                "i463"
                                                "i461"
                                                "i459"
                                                "i457"
                                                "i455"
                                                "i453"
                                                "i451"
                                                "i449"
                                                "i447"
                                                "i445"
                                                "i443"
                                                "i441"
                                                "i439"
                                                "i437"
                                                "i435"
                                                "i433"
                                                "i431"
                                                "i429"
                                                "i427"
                                                "i425"
                                                "i423"
                                                "i421"
                                                "i419"
                                                "i417"
                                                "i415"
                                                "i413"
                                                "i411"
                                                "i409"
                                                "i407"
                                                "i405"
                                                "i403"
                                                "i401"
                                                "i399"
                                                "i397"
                                                "i396"
                                                "i394"
                                                "i391"
                                                "i390"
                                                "i389"
                                                "i387"
                                                "i386"
                                                "i384"
                                                "i382"
                                                "i380"
                                                "i378"
                                                "i376"
                                                "i374"
                                                "i372"
                                                "i370"
                                                "i367"
                                                "i365"
                                                "i364"
                                                "i362"
                                                "i360"
                                                "i358"
                                                "i356"
                                                "i355"
                                                "i354"
                                                "i353"
                                                "i351"
                                                "i350"
                                                "i347"
                                                "i345"
                                                "i343"
                                                "i341"
                                                "i339"
                                                "i337"
                                                "i335"
                                                "i334"
                                                "i333"
                                                "i331"
                                                "i329"
                                                "i328"
                                                "i325"
                                                "i324"
                                                "i322"
                                                "i320"
                                                "i318"
                                                "i316"
                                                "i314"
                                                "i312"
                                                "i310"
                                                "i308"
                                                "i306"
                                                "i303"
                                                "i301"
                                                "i299"
                                                "i297"
                                                "i295"
                                                "i293"
                                                "i291"
                                                "i289"
                                                "i287"
                                                "i285"
                                                "i283"
                                                "i281"
                                                "i279"
                                                "i277"
                                                "i275"
                                                "i273"
                                                "i271"
                                                "i269"
                                                "i267"
                                                "i265"
                                                "i263"
                                                "i261"
                                                "i259"
                                                "i258"
                                                "i255"
                                                "i253"
                                                "i252"
                                                "i251"
                                                "i250"
                                                "i249"
                                                "i247"
                                                "i245"
                                                "i243"
                                                "i240"
                                                "i238"
                                                "i236"
                                                "i234"
                                                "i232"
                                                "i230"
                                                "i228"
                                                "i226"
                                                "i224"
                                                "i222"
                                                "i220"
                                                "i218"
                                                "i216"
                                                "i214"
                                                "i212"
                                                "i210"
                                                "i208"
                                                "i206"))
                                             #(ribcage
                                               (define-structure
                                                 define-expansion-accessors
                                                 define-expansion-constructors)
                                               ((top) (top) (top))
                                               ("i44" "i43" "i42")))
                                            (hygiene guile))))
                                (eq? (#{id-var-name 410}# #{p 3742}# '(()))
                                     (#{id-var-name 410}#
                                       '#(syntax-object
                                          _
                                          ((top)
                                           #(ribcage () () ())
                                           #(ribcage
                                             #(p n ids)
                                             #((top) (top) (top))
                                             #("i3745" "i3746" "i3747"))
                                           #(ribcage
                                             (cvt v-reverse cvt*)
                                             ((top) (top) (top))
                                             ("i3718" "i3716" "i3714"))
                                           #(ribcage
                                             #(pattern keys)
                                             #((top) (top))
                                             #("i3712" "i3713"))
                                           #(ribcage
                                             (gen-syntax-case
                                               gen-clause
                                               build-dispatch-call
                                               convert-pattern)
                                             ((top) (top) (top) (top))
                                             ("i3708" "i3706" "i3704" "i3702"))
                                           #(ribcage
                                             (lambda-var-list
                                               gen-var
                                               strip
                                               chi-lambda-case
                                               lambda*-formals
                                               chi-simple-lambda
                                               lambda-formals
                                               ellipsis?
                                               chi-void
                                               eval-local-transformer
                                               chi-local-syntax
                                               chi-body
                                               chi-macro
                                               chi-application
                                               chi-expr
                                               chi
                                               syntax-type
                                               chi-when-list
                                               chi-install-global
                                               chi-top-sequence
                                               chi-sequence
                                               source-wrap
                                               wrap
                                               bound-id-member?
                                               distinct-bound-ids?
                                               valid-bound-ids?
                                               bound-id=?
                                               free-id=?
                                               id-var-name
                                               same-marks?
                                               join-marks
                                               join-wraps
                                               smart-append
                                               make-binding-wrap
                                               extend-ribcage!
                                               make-empty-ribcage
                                               new-mark
                                               anti-mark
                                               the-anti-mark
                                               top-marked?
                                               top-wrap
                                               empty-wrap
                                               set-ribcage-labels!
                                               set-ribcage-marks!
                                               set-ribcage-symnames!
                                               ribcage-labels
                                               ribcage-marks
                                               ribcage-symnames
                                               ribcage?
                                               make-ribcage
                                               gen-labels
                                               gen-label
                                               make-rename
                                               rename-marks
                                               rename-new
                                               rename-old
                                               subst-rename?
                                               wrap-subst
                                               wrap-marks
                                               make-wrap
                                               id-sym-name&marks
                                               id-sym-name
                                               id?
                                               nonsymbol-id?
                                               global-extend
                                               lookup
                                               macros-only-env
                                               extend-var-env
                                               extend-env
                                               null-env
                                               binding-value
                                               binding-type
                                               make-binding
                                               arg-check
                                               source-annotation
                                               no-source
                                               set-syntax-object-module!
                                               set-syntax-object-wrap!
                                               set-syntax-object-expression!
                                               syntax-object-module
                                               syntax-object-wrap
                                               syntax-object-expression
                                               syntax-object?
                                               make-syntax-object
                                               build-lexical-var
                                               build-letrec
                                               build-named-let
                                               build-let
                                               build-sequence
                                               build-data
                                               build-primref
                                               build-lambda-case
                                               build-case-lambda
                                               build-simple-lambda
                                               build-global-definition
                                               build-global-assignment
                                               build-global-reference
                                               analyze-variable
                                               build-lexical-assignment
                                               build-lexical-reference
                                               build-dynlet
                                               build-conditional
                                               build-application
                                               build-void
                                               maybe-name-value!
                                               decorate-source
                                               get-global-definition-hook
                                               put-global-definition-hook
                                               gensym-hook
                                               local-eval-hook
                                               top-level-eval-hook
                                               fx<
                                               fx=
                                               fx-
                                               fx+
                                               set-lambda-meta!
                                               lambda-meta
                                               lambda?
                                               make-dynlet
                                               make-letrec
                                               make-let
                                               make-lambda-case
                                               make-lambda
                                               make-sequence
                                               make-application
                                               make-conditional
                                               make-toplevel-define
                                               make-toplevel-set
                                               make-toplevel-ref
                                               make-module-set
                                               make-module-ref
                                               make-lexical-set
                                               make-lexical-ref
                                               make-primitive-ref
                                               make-const
                                               make-void)
                                             ((top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top))
                                             ("i465"
                                              "i463"
                                              "i461"
                                              "i459"
                                              "i457"
                                              "i455"
                                              "i453"
                                              "i451"
                                              "i449"
                                              "i447"
                                              "i445"
                                              "i443"
                                              "i441"
                                              "i439"
                                              "i437"
                                              "i435"
                                              "i433"
                                              "i431"
                                              "i429"
                                              "i427"
                                              "i425"
                                              "i423"
                                              "i421"
                                              "i419"
                                              "i417"
                                              "i415"
                                              "i413"
                                              "i411"
                                              "i409"
                                              "i407"
                                              "i405"
                                              "i403"
                                              "i401"
                                              "i399"
                                              "i397"
                                              "i396"
                                              "i394"
                                              "i391"
                                              "i390"
                                              "i389"
                                              "i387"
                                              "i386"
                                              "i384"
                                              "i382"
                                              "i380"
                                              "i378"
                                              "i376"
                                              "i374"
                                              "i372"
                                              "i370"
                                              "i367"
                                              "i365"
                                              "i364"
                                              "i362"
                                              "i360"
                                              "i358"
                                              "i356"
                                              "i355"
                                              "i354"
                                              "i353"
                                              "i351"
                                              "i350"
                                              "i347"
                                              "i345"
                                              "i343"
                                              "i341"
                                              "i339"
                                              "i337"
                                              "i335"
                                              "i334"
                                              "i333"
                                              "i331"
                                              "i329"
                                              "i328"
                                              "i325"
                                              "i324"
                                              "i322"
                                              "i320"
                                              "i318"
                                              "i316"
                                              "i314"
                                              "i312"
                                              "i310"
                                              "i308"
                                              "i306"
                                              "i303"
                                              "i301"
                                              "i299"
                                              "i297"
                                              "i295"
                                              "i293"
                                              "i291"
                                              "i289"
                                              "i287"
                                              "i285"
                                              "i283"
                                              "i281"
                                              "i279"
                                              "i277"
                                              "i275"
                                              "i273"
                                              "i271"
                                              "i269"
                                              "i267"
                                              "i265"
                                              "i263"
                                              "i261"
                                              "i259"
                                              "i258"
                                              "i255"
                                              "i253"
                                              "i252"
                                              "i251"
                                              "i250"
                                              "i249"
                                              "i247"
                                              "i245"
                                              "i243"
                                              "i240"
                                              "i238"
                                              "i236"
                                              "i234"
                                              "i232"
                                              "i230"
                                              "i228"
                                              "i226"
                                              "i224"
                                              "i222"
                                              "i220"
                                              "i218"
                                              "i216"
                                              "i214"
                                              "i212"
                                              "i210"
                                              "i208"
                                              "i206"))
                                           #(ribcage
                                             (define-structure
                                               define-expansion-accessors
                                               define-expansion-constructors)
                                             ((top) (top) (top))
                                             ("i44" "i43" "i42")))
                                          (hygiene guile))
                                       '(())))
                                #f)
                            (values '_ #{ids 3744}#)
                            (values
                              'any
                              (cons (cons #{p 3742}# #{n 3743}#)
                                    #{ids 3744}#))))
                        (begin
                          (let ((#{tmp 3754}#
                                  ($sc-dispatch #{p 3742}# '(any any))))
                            (if (if #{tmp 3754}#
                                  (@apply
                                    (lambda (#{x 3757}# #{dots 3758}#)
                                      (if (if (if (vector? #{dots 3758}#)
                                                (if (= (vector-length
                                                         #{dots 3758}#)
                                                       4)
                                                  (eq? (vector-ref
                                                         #{dots 3758}#
                                                         0)
                                                       'syntax-object)
                                                  #f)
                                                #f)
                                            (symbol?
                                              (vector-ref #{dots 3758}# 1))
                                            #f)
                                        (if (eq? (if (if (vector?
                                                           #{dots 3758}#)
                                                       (if (= (vector-length
                                                                #{dots 3758}#)
                                                              4)
                                                         (eq? (vector-ref
                                                                #{dots 3758}#
                                                                0)
                                                              'syntax-object)
                                                         #f)
                                                       #f)
                                                   (vector-ref #{dots 3758}# 1)
                                                   #{dots 3758}#)
                                                 (if (if (= (vector-length
                                                              '#(syntax-object
                                                                 ...
                                                                 ((top)
                                                                  #(ribcage
                                                                    ()
                                                                    ()
                                                                    ())
                                                                  #(ribcage
                                                                    ()
                                                                    ()
                                                                    ())
                                                                  #(ribcage
                                                                    #(x)
                                                                    #((top))
                                                                    #("i2228"))
                                                                  #(ribcage
                                                                    (lambda-var-list
                                                                      gen-var
                                                                      strip
                                                                      chi-lambda-case
                                                                      lambda*-formals
                                                                      chi-simple-lambda
                                                                      lambda-formals
                                                                      ellipsis?
                                                                      chi-void
                                                                      eval-local-transformer
                                                                      chi-local-syntax
                                                                      chi-body
                                                                      chi-macro
                                                                      chi-application
                                                                      chi-expr
                                                                      chi
                                                                      syntax-type
                                                                      chi-when-list
                                                                      chi-install-global
                                                                      chi-top-sequence
                                                                      chi-sequence
                                                                      source-wrap
                                                                      wrap
                                                                      bound-id-member?
                                                                      distinct-bound-ids?
                                                                      valid-bound-ids?
                                                                      bound-id=?
                                                                      free-id=?
                                                                      id-var-name
                                                                      same-marks?
                                                                      join-marks
                                                                      join-wraps
                                                                      smart-append
                                                                      make-binding-wrap
                                                                      extend-ribcage!
                                                                      make-empty-ribcage
                                                                      new-mark
                                                                      anti-mark
                                                                      the-anti-mark
                                                                      top-marked?
                                                                      top-wrap
                                                                      empty-wrap
                                                                      set-ribcage-labels!
                                                                      set-ribcage-marks!
                                                                      set-ribcage-symnames!
                                                                      ribcage-labels
                                                                      ribcage-marks
                                                                      ribcage-symnames
                                                                      ribcage?
                                                                      make-ribcage
                                                                      gen-labels
                                                                      gen-label
                                                                      make-rename
                                                                      rename-marks
                                                                      rename-new
                                                                      rename-old
                                                                      subst-rename?
                                                                      wrap-subst
                                                                      wrap-marks
                                                                      make-wrap
                                                                      id-sym-name&marks
                                                                      id-sym-name
                                                                      id?
                                                                      nonsymbol-id?
                                                                      global-extend
                                                                      lookup
                                                                      macros-only-env
                                                                      extend-var-env
                                                                      extend-env
                                                                      null-env
                                                                      binding-value
                                                                      binding-type
                                                                      make-binding
                                                                      arg-check
                                                                      source-annotation
                                                                      no-source
                                                                      set-syntax-object-module!
                                                                      set-syntax-object-wrap!
                                                                      set-syntax-object-expression!
                                                                      syntax-object-module
                                                                      syntax-object-wrap
                                                                      syntax-object-expression
                                                                      syntax-object?
                                                                      make-syntax-object
                                                                      build-lexical-var
                                                                      build-letrec
                                                                      build-named-let
                                                                      build-let
                                                                      build-sequence
                                                                      build-data
                                                                      build-primref
                                                                      build-lambda-case
                                                                      build-case-lambda
                                                                      build-simple-lambda
                                                                      build-global-definition
                                                                      build-global-assignment
                                                                      build-global-reference
                                                                      analyze-variable
                                                                      build-lexical-assignment
                                                                      build-lexical-reference
                                                                      build-dynlet
                                                                      build-conditional
                                                                      build-application
                                                                      build-void
                                                                      maybe-name-value!
                                                                      decorate-source
                                                                      get-global-definition-hook
                                                                      put-global-definition-hook
                                                                      gensym-hook
                                                                      local-eval-hook
                                                                      top-level-eval-hook
                                                                      fx<
                                                                      fx=
                                                                      fx-
                                                                      fx+
                                                                      set-lambda-meta!
                                                                      lambda-meta
                                                                      lambda?
                                                                      make-dynlet
                                                                      make-letrec
                                                                      make-let
                                                                      make-lambda-case
                                                                      make-lambda
                                                                      make-sequence
                                                                      make-application
                                                                      make-conditional
                                                                      make-toplevel-define
                                                                      make-toplevel-set
                                                                      make-toplevel-ref
                                                                      make-module-set
                                                                      make-module-ref
                                                                      make-lexical-set
                                                                      make-lexical-ref
                                                                      make-primitive-ref
                                                                      make-const
                                                                      make-void)
                                                                    ((top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top))
                                                                    ("i465"
                                                                     "i463"
                                                                     "i461"
                                                                     "i459"
                                                                     "i457"
                                                                     "i455"
                                                                     "i453"
                                                                     "i451"
                                                                     "i449"
                                                                     "i447"
                                                                     "i445"
                                                                     "i443"
                                                                     "i441"
                                                                     "i439"
                                                                     "i437"
                                                                     "i435"
                                                                     "i433"
                                                                     "i431"
                                                                     "i429"
                                                                     "i427"
                                                                     "i425"
                                                                     "i423"
                                                                     "i421"
                                                                     "i419"
                                                                     "i417"
                                                                     "i415"
                                                                     "i413"
                                                                     "i411"
                                                                     "i409"
                                                                     "i407"
                                                                     "i405"
                                                                     "i403"
                                                                     "i401"
                                                                     "i399"
                                                                     "i397"
                                                                     "i396"
                                                                     "i394"
                                                                     "i391"
                                                                     "i390"
                                                                     "i389"
                                                                     "i387"
                                                                     "i386"
                                                                     "i384"
                                                                     "i382"
                                                                     "i380"
                                                                     "i378"
                                                                     "i376"
                                                                     "i374"
                                                                     "i372"
                                                                     "i370"
                                                                     "i367"
                                                                     "i365"
                                                                     "i364"
                                                                     "i362"
                                                                     "i360"
                                                                     "i358"
                                                                     "i356"
                                                                     "i355"
                                                                     "i354"
                                                                     "i353"
                                                                     "i351"
                                                                     "i350"
                                                                     "i347"
                                                                     "i345"
                                                                     "i343"
                                                                     "i341"
                                                                     "i339"
                                                                     "i337"
                                                                     "i335"
                                                                     "i334"
                                                                     "i333"
                                                                     "i331"
                                                                     "i329"
                                                                     "i328"
                                                                     "i325"
                                                                     "i324"
                                                                     "i322"
                                                                     "i320"
                                                                     "i318"
                                                                     "i316"
                                                                     "i314"
                                                                     "i312"
                                                                     "i310"
                                                                     "i308"
                                                                     "i306"
                                                                     "i303"
                                                                     "i301"
                                                                     "i299"
                                                                     "i297"
                                                                     "i295"
                                                                     "i293"
                                                                     "i291"
                                                                     "i289"
                                                                     "i287"
                                                                     "i285"
                                                                     "i283"
                                                                     "i281"
                                                                     "i279"
                                                                     "i277"
                                                                     "i275"
                                                                     "i273"
                                                                     "i271"
                                                                     "i269"
                                                                     "i267"
                                                                     "i265"
                                                                     "i263"
                                                                     "i261"
                                                                     "i259"
                                                                     "i258"
                                                                     "i255"
                                                                     "i253"
                                                                     "i252"
                                                                     "i251"
                                                                     "i250"
                                                                     "i249"
                                                                     "i247"
                                                                     "i245"
                                                                     "i243"
                                                                     "i240"
                                                                     "i238"
                                                                     "i236"
                                                                     "i234"
                                                                     "i232"
                                                                     "i230"
                                                                     "i228"
                                                                     "i226"
                                                                     "i224"
                                                                     "i222"
                                                                     "i220"
                                                                     "i218"
                                                                     "i216"
                                                                     "i214"
                                                                     "i212"
                                                                     "i210"
                                                                     "i208"
                                                                     "i206"))
                                                                  #(ribcage
                                                                    (define-structure
                                                                      define-expansion-accessors
                                                                      define-expansion-constructors)
                                                                    ((top)
                                                                     (top)
                                                                     (top))
                                                                    ("i44"
                                                                     "i43"
                                                                     "i42")))
                                                                 (hygiene
                                                                   guile)))
                                                            4)
                                                       (eq? (vector-ref
                                                              '#(syntax-object
                                                                 ...
                                                                 ((top)
                                                                  #(ribcage
                                                                    ()
                                                                    ()
                                                                    ())
                                                                  #(ribcage
                                                                    ()
                                                                    ()
                                                                    ())
                                                                  #(ribcage
                                                                    #(x)
                                                                    #((top))
                                                                    #("i2228"))
                                                                  #(ribcage
                                                                    (lambda-var-list
                                                                      gen-var
                                                                      strip
                                                                      chi-lambda-case
                                                                      lambda*-formals
                                                                      chi-simple-lambda
                                                                      lambda-formals
                                                                      ellipsis?
                                                                      chi-void
                                                                      eval-local-transformer
                                                                      chi-local-syntax
                                                                      chi-body
                                                                      chi-macro
                                                                      chi-application
                                                                      chi-expr
                                                                      chi
                                                                      syntax-type
                                                                      chi-when-list
                                                                      chi-install-global
                                                                      chi-top-sequence
                                                                      chi-sequence
                                                                      source-wrap
                                                                      wrap
                                                                      bound-id-member?
                                                                      distinct-bound-ids?
                                                                      valid-bound-ids?
                                                                      bound-id=?
                                                                      free-id=?
                                                                      id-var-name
                                                                      same-marks?
                                                                      join-marks
                                                                      join-wraps
                                                                      smart-append
                                                                      make-binding-wrap
                                                                      extend-ribcage!
                                                                      make-empty-ribcage
                                                                      new-mark
                                                                      anti-mark
                                                                      the-anti-mark
                                                                      top-marked?
                                                                      top-wrap
                                                                      empty-wrap
                                                                      set-ribcage-labels!
                                                                      set-ribcage-marks!
                                                                      set-ribcage-symnames!
                                                                      ribcage-labels
                                                                      ribcage-marks
                                                                      ribcage-symnames
                                                                      ribcage?
                                                                      make-ribcage
                                                                      gen-labels
                                                                      gen-label
                                                                      make-rename
                                                                      rename-marks
                                                                      rename-new
                                                                      rename-old
                                                                      subst-rename?
                                                                      wrap-subst
                                                                      wrap-marks
                                                                      make-wrap
                                                                      id-sym-name&marks
                                                                      id-sym-name
                                                                      id?
                                                                      nonsymbol-id?
                                                                      global-extend
                                                                      lookup
                                                                      macros-only-env
                                                                      extend-var-env
                                                                      extend-env
                                                                      null-env
                                                                      binding-value
                                                                      binding-type
                                                                      make-binding
                                                                      arg-check
                                                                      source-annotation
                                                                      no-source
                                                                      set-syntax-object-module!
                                                                      set-syntax-object-wrap!
                                                                      set-syntax-object-expression!
                                                                      syntax-object-module
                                                                      syntax-object-wrap
                                                                      syntax-object-expression
                                                                      syntax-object?
                                                                      make-syntax-object
                                                                      build-lexical-var
                                                                      build-letrec
                                                                      build-named-let
                                                                      build-let
                                                                      build-sequence
                                                                      build-data
                                                                      build-primref
                                                                      build-lambda-case
                                                                      build-case-lambda
                                                                      build-simple-lambda
                                                                      build-global-definition
                                                                      build-global-assignment
                                                                      build-global-reference
                                                                      analyze-variable
                                                                      build-lexical-assignment
                                                                      build-lexical-reference
                                                                      build-dynlet
                                                                      build-conditional
                                                                      build-application
                                                                      build-void
                                                                      maybe-name-value!
                                                                      decorate-source
                                                                      get-global-definition-hook
                                                                      put-global-definition-hook
                                                                      gensym-hook
                                                                      local-eval-hook
                                                                      top-level-eval-hook
                                                                      fx<
                                                                      fx=
                                                                      fx-
                                                                      fx+
                                                                      set-lambda-meta!
                                                                      lambda-meta
                                                                      lambda?
                                                                      make-dynlet
                                                                      make-letrec
                                                                      make-let
                                                                      make-lambda-case
                                                                      make-lambda
                                                                      make-sequence
                                                                      make-application
                                                                      make-conditional
                                                                      make-toplevel-define
                                                                      make-toplevel-set
                                                                      make-toplevel-ref
                                                                      make-module-set
                                                                      make-module-ref
                                                                      make-lexical-set
                                                                      make-lexical-ref
                                                                      make-primitive-ref
                                                                      make-const
                                                                      make-void)
                                                                    ((top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top))
                                                                    ("i465"
                                                                     "i463"
                                                                     "i461"
                                                                     "i459"
                                                                     "i457"
                                                                     "i455"
                                                                     "i453"
                                                                     "i451"
                                                                     "i449"
                                                                     "i447"
                                                                     "i445"
                                                                     "i443"
                                                                     "i441"
                                                                     "i439"
                                                                     "i437"
                                                                     "i435"
                                                                     "i433"
                                                                     "i431"
                                                                     "i429"
                                                                     "i427"
                                                                     "i425"
                                                                     "i423"
                                                                     "i421"
                                                                     "i419"
                                                                     "i417"
                                                                     "i415"
                                                                     "i413"
                                                                     "i411"
                                                                     "i409"
                                                                     "i407"
                                                                     "i405"
                                                                     "i403"
                                                                     "i401"
                                                                     "i399"
                                                                     "i397"
                                                                     "i396"
                                                                     "i394"
                                                                     "i391"
                                                                     "i390"
                                                                     "i389"
                                                                     "i387"
                                                                     "i386"
                                                                     "i384"
                                                                     "i382"
                                                                     "i380"
                                                                     "i378"
                                                                     "i376"
                                                                     "i374"
                                                                     "i372"
                                                                     "i370"
                                                                     "i367"
                                                                     "i365"
                                                                     "i364"
                                                                     "i362"
                                                                     "i360"
                                                                     "i358"
                                                                     "i356"
                                                                     "i355"
                                                                     "i354"
                                                                     "i353"
                                                                     "i351"
                                                                     "i350"
                                                                     "i347"
                                                                     "i345"
                                                                     "i343"
                                                                     "i341"
                                                                     "i339"
                                                                     "i337"
                                                                     "i335"
                                                                     "i334"
                                                                     "i333"
                                                                     "i331"
                                                                     "i329"
                                                                     "i328"
                                                                     "i325"
                                                                     "i324"
                                                                     "i322"
                                                                     "i320"
                                                                     "i318"
                                                                     "i316"
                                                                     "i314"
                                                                     "i312"
                                                                     "i310"
                                                                     "i308"
                                                                     "i306"
                                                                     "i303"
                                                                     "i301"
                                                                     "i299"
                                                                     "i297"
                                                                     "i295"
                                                                     "i293"
                                                                     "i291"
                                                                     "i289"
                                                                     "i287"
                                                                     "i285"
                                                                     "i283"
                                                                     "i281"
                                                                     "i279"
                                                                     "i277"
                                                                     "i275"
                                                                     "i273"
                                                                     "i271"
                                                                     "i269"
                                                                     "i267"
                                                                     "i265"
                                                                     "i263"
                                                                     "i261"
                                                                     "i259"
                                                                     "i258"
                                                                     "i255"
                                                                     "i253"
                                                                     "i252"
                                                                     "i251"
                                                                     "i250"
                                                                     "i249"
                                                                     "i247"
                                                                     "i245"
                                                                     "i243"
                                                                     "i240"
                                                                     "i238"
                                                                     "i236"
                                                                     "i234"
                                                                     "i232"
                                                                     "i230"
                                                                     "i228"
                                                                     "i226"
                                                                     "i224"
                                                                     "i222"
                                                                     "i220"
                                                                     "i218"
                                                                     "i216"
                                                                     "i214"
                                                                     "i212"
                                                                     "i210"
                                                                     "i208"
                                                                     "i206"))
                                                                  #(ribcage
                                                                    (define-structure
                                                                      define-expansion-accessors
                                                                      define-expansion-constructors)
                                                                    ((top)
                                                                     (top)
                                                                     (top))
                                                                    ("i44"
                                                                     "i43"
                                                                     "i42")))
                                                                 (hygiene
                                                                   guile))
                                                              0)
                                                            'syntax-object)
                                                       #f)
                                                   (vector-ref
                                                     '#(syntax-object
                                                        ...
                                                        ((top)
                                                         #(ribcage () () ())
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(x)
                                                           #((top))
                                                           #("i2228"))
                                                         #(ribcage
                                                           (lambda-var-list
                                                             gen-var
                                                             strip
                                                             chi-lambda-case
                                                             lambda*-formals
                                                             chi-simple-lambda
                                                             lambda-formals
                                                             ellipsis?
                                                             chi-void
                                                             eval-local-transformer
                                                             chi-local-syntax
                                                             chi-body
                                                             chi-macro
                                                             chi-application
                                                             chi-expr
                                                             chi
                                                             syntax-type
                                                             chi-when-list
                                                             chi-install-global
                                                             chi-top-sequence
                                                             chi-sequence
                                                             source-wrap
                                                             wrap
                                                             bound-id-member?
                                                             distinct-bound-ids?
                                                             valid-bound-ids?
                                                             bound-id=?
                                                             free-id=?
                                                             id-var-name
                                                             same-marks?
                                                             join-marks
                                                             join-wraps
                                                             smart-append
                                                             make-binding-wrap
                                                             extend-ribcage!
                                                             make-empty-ribcage
                                                             new-mark
                                                             anti-mark
                                                             the-anti-mark
                                                             top-marked?
                                                             top-wrap
                                                             empty-wrap
                                                             set-ribcage-labels!
                                                             set-ribcage-marks!
                                                             set-ribcage-symnames!
                                                             ribcage-labels
                                                             ribcage-marks
                                                             ribcage-symnames
                                                             ribcage?
                                                             make-ribcage
                                                             gen-labels
                                                             gen-label
                                                             make-rename
                                                             rename-marks
                                                             rename-new
                                                             rename-old
                                                             subst-rename?
                                                             wrap-subst
                                                             wrap-marks
                                                             make-wrap
                                                             id-sym-name&marks
                                                             id-sym-name
                                                             id?
                                                             nonsymbol-id?
                                                             global-extend
                                                             lookup
                                                             macros-only-env
                                                             extend-var-env
                                                             extend-env
                                                             null-env
                                                             binding-value
                                                             binding-type
                                                             make-binding
                                                             arg-check
                                                             source-annotation
                                                             no-source
                                                             set-syntax-object-module!
                                                             set-syntax-object-wrap!
                                                             set-syntax-object-expression!
                                                             syntax-object-module
                                                             syntax-object-wrap
                                                             syntax-object-expression
                                                             syntax-object?
                                                             make-syntax-object
                                                             build-lexical-var
                                                             build-letrec
                                                             build-named-let
                                                             build-let
                                                             build-sequence
                                                             build-data
                                                             build-primref
                                                             build-lambda-case
                                                             build-case-lambda
                                                             build-simple-lambda
                                                             build-global-definition
                                                             build-global-assignment
                                                             build-global-reference
                                                             analyze-variable
                                                             build-lexical-assignment
                                                             build-lexical-reference
                                                             build-dynlet
                                                             build-conditional
                                                             build-application
                                                             build-void
                                                             maybe-name-value!
                                                             decorate-source
                                                             get-global-definition-hook
                                                             put-global-definition-hook
                                                             gensym-hook
                                                             local-eval-hook
                                                             top-level-eval-hook
                                                             fx<
                                                             fx=
                                                             fx-
                                                             fx+
                                                             set-lambda-meta!
                                                             lambda-meta
                                                             lambda?
                                                             make-dynlet
                                                             make-letrec
                                                             make-let
                                                             make-lambda-case
                                                             make-lambda
                                                             make-sequence
                                                             make-application
                                                             make-conditional
                                                             make-toplevel-define
                                                             make-toplevel-set
                                                             make-toplevel-ref
                                                             make-module-set
                                                             make-module-ref
                                                             make-lexical-set
                                                             make-lexical-ref
                                                             make-primitive-ref
                                                             make-const
                                                             make-void)
                                                           ((top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top))
                                                           ("i465"
                                                            "i463"
                                                            "i461"
                                                            "i459"
                                                            "i457"
                                                            "i455"
                                                            "i453"
                                                            "i451"
                                                            "i449"
                                                            "i447"
                                                            "i445"
                                                            "i443"
                                                            "i441"
                                                            "i439"
                                                            "i437"
                                                            "i435"
                                                            "i433"
                                                            "i431"
                                                            "i429"
                                                            "i427"
                                                            "i425"
                                                            "i423"
                                                            "i421"
                                                            "i419"
                                                            "i417"
                                                            "i415"
                                                            "i413"
                                                            "i411"
                                                            "i409"
                                                            "i407"
                                                            "i405"
                                                            "i403"
                                                            "i401"
                                                            "i399"
                                                            "i397"
                                                            "i396"
                                                            "i394"
                                                            "i391"
                                                            "i390"
                                                            "i389"
                                                            "i387"
                                                            "i386"
                                                            "i384"
                                                            "i382"
                                                            "i380"
                                                            "i378"
                                                            "i376"
                                                            "i374"
                                                            "i372"
                                                            "i370"
                                                            "i367"
                                                            "i365"
                                                            "i364"
                                                            "i362"
                                                            "i360"
                                                            "i358"
                                                            "i356"
                                                            "i355"
                                                            "i354"
                                                            "i353"
                                                            "i351"
                                                            "i350"
                                                            "i347"
                                                            "i345"
                                                            "i343"
                                                            "i341"
                                                            "i339"
                                                            "i337"
                                                            "i335"
                                                            "i334"
                                                            "i333"
                                                            "i331"
                                                            "i329"
                                                            "i328"
                                                            "i325"
                                                            "i324"
                                                            "i322"
                                                            "i320"
                                                            "i318"
                                                            "i316"
                                                            "i314"
                                                            "i312"
                                                            "i310"
                                                            "i308"
                                                            "i306"
                                                            "i303"
                                                            "i301"
                                                            "i299"
                                                            "i297"
                                                            "i295"
                                                            "i293"
                                                            "i291"
                                                            "i289"
                                                            "i287"
                                                            "i285"
                                                            "i283"
                                                            "i281"
                                                            "i279"
                                                            "i277"
                                                            "i275"
                                                            "i273"
                                                            "i271"
                                                            "i269"
                                                            "i267"
                                                            "i265"
                                                            "i263"
                                                            "i261"
                                                            "i259"
                                                            "i258"
                                                            "i255"
                                                            "i253"
                                                            "i252"
                                                            "i251"
                                                            "i250"
                                                            "i249"
                                                            "i247"
                                                            "i245"
                                                            "i243"
                                                            "i240"
                                                            "i238"
                                                            "i236"
                                                            "i234"
                                                            "i232"
                                                            "i230"
                                                            "i228"
                                                            "i226"
                                                            "i224"
                                                            "i222"
                                                            "i220"
                                                            "i218"
                                                            "i216"
                                                            "i214"
                                                            "i212"
                                                            "i210"
                                                            "i208"
                                                            "i206"))
                                                         #(ribcage
                                                           (define-structure
                                                             define-expansion-accessors
                                                             define-expansion-constructors)
                                                           ((top) (top) (top))
                                                           ("i44"
                                                            "i43"
                                                            "i42")))
                                                        (hygiene guile))
                                                     1)
                                                   '#(syntax-object
                                                      ...
                                                      ((top)
                                                       #(ribcage () () ())
                                                       #(ribcage () () ())
                                                       #(ribcage
                                                         #(x)
                                                         #((top))
                                                         #("i2228"))
                                                       #(ribcage
                                                         (lambda-var-list
                                                           gen-var
                                                           strip
                                                           chi-lambda-case
                                                           lambda*-formals
                                                           chi-simple-lambda
                                                           lambda-formals
                                                           ellipsis?
                                                           chi-void
                                                           eval-local-transformer
                                                           chi-local-syntax
                                                           chi-body
                                                           chi-macro
                                                           chi-application
                                                           chi-expr
                                                           chi
                                                           syntax-type
                                                           chi-when-list
                                                           chi-install-global
                                                           chi-top-sequence
                                                           chi-sequence
                                                           source-wrap
                                                           wrap
                                                           bound-id-member?
                                                           distinct-bound-ids?
                                                           valid-bound-ids?
                                                           bound-id=?
                                                           free-id=?
                                                           id-var-name
                                                           same-marks?
                                                           join-marks
                                                           join-wraps
                                                           smart-append
                                                           make-binding-wrap
                                                           extend-ribcage!
                                                           make-empty-ribcage
                                                           new-mark
                                                           anti-mark
                                                           the-anti-mark
                                                           top-marked?
                                                           top-wrap
                                                           empty-wrap
                                                           set-ribcage-labels!
                                                           set-ribcage-marks!
                                                           set-ribcage-symnames!
                                                           ribcage-labels
                                                           ribcage-marks
                                                           ribcage-symnames
                                                           ribcage?
                                                           make-ribcage
                                                           gen-labels
                                                           gen-label
                                                           make-rename
                                                           rename-marks
                                                           rename-new
                                                           rename-old
                                                           subst-rename?
                                                           wrap-subst
                                                           wrap-marks
                                                           make-wrap
                                                           id-sym-name&marks
                                                           id-sym-name
                                                           id?
                                                           nonsymbol-id?
                                                           global-extend
                                                           lookup
                                                           macros-only-env
                                                           extend-var-env
                                                           extend-env
                                                           null-env
                                                           binding-value
                                                           binding-type
                                                           make-binding
                                                           arg-check
                                                           source-annotation
                                                           no-source
                                                           set-syntax-object-module!
                                                           set-syntax-object-wrap!
                                                           set-syntax-object-expression!
                                                           syntax-object-module
                                                           syntax-object-wrap
                                                           syntax-object-expression
                                                           syntax-object?
                                                           make-syntax-object
                                                           build-lexical-var
                                                           build-letrec
                                                           build-named-let
                                                           build-let
                                                           build-sequence
                                                           build-data
                                                           build-primref
                                                           build-lambda-case
                                                           build-case-lambda
                                                           build-simple-lambda
                                                           build-global-definition
                                                           build-global-assignment
                                                           build-global-reference
                                                           analyze-variable
                                                           build-lexical-assignment
                                                           build-lexical-reference
                                                           build-dynlet
                                                           build-conditional
                                                           build-application
                                                           build-void
                                                           maybe-name-value!
                                                           decorate-source
                                                           get-global-definition-hook
                                                           put-global-definition-hook
                                                           gensym-hook
                                                           local-eval-hook
                                                           top-level-eval-hook
                                                           fx<
                                                           fx=
                                                           fx-
                                                           fx+
                                                           set-lambda-meta!
                                                           lambda-meta
                                                           lambda?
                                                           make-dynlet
                                                           make-letrec
                                                           make-let
                                                           make-lambda-case
                                                           make-lambda
                                                           make-sequence
                                                           make-application
                                                           make-conditional
                                                           make-toplevel-define
                                                           make-toplevel-set
                                                           make-toplevel-ref
                                                           make-module-set
                                                           make-module-ref
                                                           make-lexical-set
                                                           make-lexical-ref
                                                           make-primitive-ref
                                                           make-const
                                                           make-void)
                                                         ((top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top))
                                                         ("i465"
                                                          "i463"
                                                          "i461"
                                                          "i459"
                                                          "i457"
                                                          "i455"
                                                          "i453"
                                                          "i451"
                                                          "i449"
                                                          "i447"
                                                          "i445"
                                                          "i443"
                                                          "i441"
                                                          "i439"
                                                          "i437"
                                                          "i435"
                                                          "i433"
                                                          "i431"
                                                          "i429"
                                                          "i427"
                                                          "i425"
                                                          "i423"
                                                          "i421"
                                                          "i419"
                                                          "i417"
                                                          "i415"
                                                          "i413"
                                                          "i411"
                                                          "i409"
                                                          "i407"
                                                          "i405"
                                                          "i403"
                                                          "i401"
                                                          "i399"
                                                          "i397"
                                                          "i396"
                                                          "i394"
                                                          "i391"
                                                          "i390"
                                                          "i389"
                                                          "i387"
                                                          "i386"
                                                          "i384"
                                                          "i382"
                                                          "i380"
                                                          "i378"
                                                          "i376"
                                                          "i374"
                                                          "i372"
                                                          "i370"
                                                          "i367"
                                                          "i365"
                                                          "i364"
                                                          "i362"
                                                          "i360"
                                                          "i358"
                                                          "i356"
                                                          "i355"
                                                          "i354"
                                                          "i353"
                                                          "i351"
                                                          "i350"
                                                          "i347"
                                                          "i345"
                                                          "i343"
                                                          "i341"
                                                          "i339"
                                                          "i337"
                                                          "i335"
                                                          "i334"
                                                          "i333"
                                                          "i331"
                                                          "i329"
                                                          "i328"
                                                          "i325"
                                                          "i324"
                                                          "i322"
                                                          "i320"
                                                          "i318"
                                                          "i316"
                                                          "i314"
                                                          "i312"
                                                          "i310"
                                                          "i308"
                                                          "i306"
                                                          "i303"
                                                          "i301"
                                                          "i299"
                                                          "i297"
                                                          "i295"
                                                          "i293"
                                                          "i291"
                                                          "i289"
                                                          "i287"
                                                          "i285"
                                                          "i283"
                                                          "i281"
                                                          "i279"
                                                          "i277"
                                                          "i275"
                                                          "i273"
                                                          "i271"
                                                          "i269"
                                                          "i267"
                                                          "i265"
                                                          "i263"
                                                          "i261"
                                                          "i259"
                                                          "i258"
                                                          "i255"
                                                          "i253"
                                                          "i252"
                                                          "i251"
                                                          "i250"
                                                          "i249"
                                                          "i247"
                                                          "i245"
                                                          "i243"
                                                          "i240"
                                                          "i238"
                                                          "i236"
                                                          "i234"
                                                          "i232"
                                                          "i230"
                                                          "i228"
                                                          "i226"
                                                          "i224"
                                                          "i222"
                                                          "i220"
                                                          "i218"
                                                          "i216"
                                                          "i214"
                                                          "i212"
                                                          "i210"
                                                          "i208"
                                                          "i206"))
                                                       #(ribcage
                                                         (define-structure
                                                           define-expansion-accessors
                                                           define-expansion-constructors)
                                                         ((top) (top) (top))
                                                         ("i44" "i43" "i42")))
                                                      (hygiene guile))))
                                          (eq? (#{id-var-name 410}#
                                                 #{dots 3758}#
                                                 '(()))
                                               (#{id-var-name 410}#
                                                 '#(syntax-object
                                                    ...
                                                    ((top)
                                                     #(ribcage () () ())
                                                     #(ribcage () () ())
                                                     #(ribcage
                                                       #(x)
                                                       #((top))
                                                       #("i2228"))
                                                     #(ribcage
                                                       (lambda-var-list
                                                         gen-var
                                                         strip
                                                         chi-lambda-case
                                                         lambda*-formals
                                                         chi-simple-lambda
                                                         lambda-formals
                                                         ellipsis?
                                                         chi-void
                                                         eval-local-transformer
                                                         chi-local-syntax
                                                         chi-body
                                                         chi-macro
                                                         chi-application
                                                         chi-expr
                                                         chi
                                                         syntax-type
                                                         chi-when-list
                                                         chi-install-global
                                                         chi-top-sequence
                                                         chi-sequence
                                                         source-wrap
                                                         wrap
                                                         bound-id-member?
                                                         distinct-bound-ids?
                                                         valid-bound-ids?
                                                         bound-id=?
                                                         free-id=?
                                                         id-var-name
                                                         same-marks?
                                                         join-marks
                                                         join-wraps
                                                         smart-append
                                                         make-binding-wrap
                                                         extend-ribcage!
                                                         make-empty-ribcage
                                                         new-mark
                                                         anti-mark
                                                         the-anti-mark
                                                         top-marked?
                                                         top-wrap
                                                         empty-wrap
                                                         set-ribcage-labels!
                                                         set-ribcage-marks!
                                                         set-ribcage-symnames!
                                                         ribcage-labels
                                                         ribcage-marks
                                                         ribcage-symnames
                                                         ribcage?
                                                         make-ribcage
                                                         gen-labels
                                                         gen-label
                                                         make-rename
                                                         rename-marks
                                                         rename-new
                                                         rename-old
                                                         subst-rename?
                                                         wrap-subst
                                                         wrap-marks
                                                         make-wrap
                                                         id-sym-name&marks
                                                         id-sym-name
                                                         id?
                                                         nonsymbol-id?
                                                         global-extend
                                                         lookup
                                                         macros-only-env
                                                         extend-var-env
                                                         extend-env
                                                         null-env
                                                         binding-value
                                                         binding-type
                                                         make-binding
                                                         arg-check
                                                         source-annotation
                                                         no-source
                                                         set-syntax-object-module!
                                                         set-syntax-object-wrap!
                                                         set-syntax-object-expression!
                                                         syntax-object-module
                                                         syntax-object-wrap
                                                         syntax-object-expression
                                                         syntax-object?
                                                         make-syntax-object
                                                         build-lexical-var
                                                         build-letrec
                                                         build-named-let
                                                         build-let
                                                         build-sequence
                                                         build-data
                                                         build-primref
                                                         build-lambda-case
                                                         build-case-lambda
                                                         build-simple-lambda
                                                         build-global-definition
                                                         build-global-assignment
                                                         build-global-reference
                                                         analyze-variable
                                                         build-lexical-assignment
                                                         build-lexical-reference
                                                         build-dynlet
                                                         build-conditional
                                                         build-application
                                                         build-void
                                                         maybe-name-value!
                                                         decorate-source
                                                         get-global-definition-hook
                                                         put-global-definition-hook
                                                         gensym-hook
                                                         local-eval-hook
                                                         top-level-eval-hook
                                                         fx<
                                                         fx=
                                                         fx-
                                                         fx+
                                                         set-lambda-meta!
                                                         lambda-meta
                                                         lambda?
                                                         make-dynlet
                                                         make-letrec
                                                         make-let
                                                         make-lambda-case
                                                         make-lambda
                                                         make-sequence
                                                         make-application
                                                         make-conditional
                                                         make-toplevel-define
                                                         make-toplevel-set
                                                         make-toplevel-ref
                                                         make-module-set
                                                         make-module-ref
                                                         make-lexical-set
                                                         make-lexical-ref
                                                         make-primitive-ref
                                                         make-const
                                                         make-void)
                                                       ((top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top))
                                                       ("i465"
                                                        "i463"
                                                        "i461"
                                                        "i459"
                                                        "i457"
                                                        "i455"
                                                        "i453"
                                                        "i451"
                                                        "i449"
                                                        "i447"
                                                        "i445"
                                                        "i443"
                                                        "i441"
                                                        "i439"
                                                        "i437"
                                                        "i435"
                                                        "i433"
                                                        "i431"
                                                        "i429"
                                                        "i427"
                                                        "i425"
                                                        "i423"
                                                        "i421"
                                                        "i419"
                                                        "i417"
                                                        "i415"
                                                        "i413"
                                                        "i411"
                                                        "i409"
                                                        "i407"
                                                        "i405"
                                                        "i403"
                                                        "i401"
                                                        "i399"
                                                        "i397"
                                                        "i396"
                                                        "i394"
                                                        "i391"
                                                        "i390"
                                                        "i389"
                                                        "i387"
                                                        "i386"
                                                        "i384"
                                                        "i382"
                                                        "i380"
                                                        "i378"
                                                        "i376"
                                                        "i374"
                                                        "i372"
                                                        "i370"
                                                        "i367"
                                                        "i365"
                                                        "i364"
                                                        "i362"
                                                        "i360"
                                                        "i358"
                                                        "i356"
                                                        "i355"
                                                        "i354"
                                                        "i353"
                                                        "i351"
                                                        "i350"
                                                        "i347"
                                                        "i345"
                                                        "i343"
                                                        "i341"
                                                        "i339"
                                                        "i337"
                                                        "i335"
                                                        "i334"
                                                        "i333"
                                                        "i331"
                                                        "i329"
                                                        "i328"
                                                        "i325"
                                                        "i324"
                                                        "i322"
                                                        "i320"
                                                        "i318"
                                                        "i316"
                                                        "i314"
                                                        "i312"
                                                        "i310"
                                                        "i308"
                                                        "i306"
                                                        "i303"
                                                        "i301"
                                                        "i299"
                                                        "i297"
                                                        "i295"
                                                        "i293"
                                                        "i291"
                                                        "i289"
                                                        "i287"
                                                        "i285"
                                                        "i283"
                                                        "i281"
                                                        "i279"
                                                        "i277"
                                                        "i275"
                                                        "i273"
                                                        "i271"
                                                        "i269"
                                                        "i267"
                                                        "i265"
                                                        "i263"
                                                        "i261"
                                                        "i259"
                                                        "i258"
                                                        "i255"
                                                        "i253"
                                                        "i252"
                                                        "i251"
                                                        "i250"
                                                        "i249"
                                                        "i247"
                                                        "i245"
                                                        "i243"
                                                        "i240"
                                                        "i238"
                                                        "i236"
                                                        "i234"
                                                        "i232"
                                                        "i230"
                                                        "i228"
                                                        "i226"
                                                        "i224"
                                                        "i222"
                                                        "i220"
                                                        "i218"
                                                        "i216"
                                                        "i214"
                                                        "i212"
                                                        "i210"
                                                        "i208"
                                                        "i206"))
                                                     #(ribcage
                                                       (define-structure
                                                         define-expansion-accessors
                                                         define-expansion-constructors)
                                                       ((top) (top) (top))
                                                       ("i44" "i43" "i42")))
                                                    (hygiene guile))
                                                 '(())))
                                          #f)
                                        #f))
                                    #{tmp 3754}#)
                                  #f)
                              (@apply
                                (lambda (#{x 3761}# #{dots 3762}#)
                                  (call-with-values
                                    (lambda ()
                                      (#{cvt 3719}#
                                        #{x 3761}#
                                        (#{1+}# #{n 3743}#)
                                        #{ids 3744}#))
                                    (lambda (#{p 3764}# #{ids 3765}#)
                                      (values
                                        (if (eq? #{p 3764}# 'any)
                                          'each-any
                                          (vector 'each #{p 3764}#))
                                        #{ids 3765}#))))
                                #{tmp 3754}#)
                              (begin
                                (let ((#{tmp 3768}#
                                        ($sc-dispatch
                                          #{p 3742}#
                                          '(any any . any))))
                                  (if (if #{tmp 3768}#
                                        (@apply
                                          (lambda (#{x 3772}#
                                                   #{dots 3773}#
                                                   #{ys 3774}#)
                                            (if (if (if (vector? #{dots 3773}#)
                                                      (if (= (vector-length
                                                               #{dots 3773}#)
                                                             4)
                                                        (eq? (vector-ref
                                                               #{dots 3773}#
                                                               0)
                                                             'syntax-object)
                                                        #f)
                                                      #f)
                                                  (symbol?
                                                    (vector-ref
                                                      #{dots 3773}#
                                                      1))
                                                  #f)
                                              (if (eq? (if (if (vector?
                                                                 #{dots 3773}#)
                                                             (if (= (vector-length
                                                                      #{dots 3773}#)
                                                                    4)
                                                               (eq? (vector-ref
                                                                      #{dots 3773}#
                                                                      0)
                                                                    'syntax-object)
                                                               #f)
                                                             #f)
                                                         (vector-ref
                                                           #{dots 3773}#
                                                           1)
                                                         #{dots 3773}#)
                                                       (if (if (= (vector-length
                                                                    '#(syntax-object
                                                                       ...
                                                                       ((top)
                                                                        #(ribcage
                                                                          ()
                                                                          ()
                                                                          ())
                                                                        #(ribcage
                                                                          ()
                                                                          ()
                                                                          ())
                                                                        #(ribcage
                                                                          #(x)
                                                                          #((top))
                                                                          #("i2228"))
                                                                        #(ribcage
                                                                          (lambda-var-list
                                                                            gen-var
                                                                            strip
                                                                            chi-lambda-case
                                                                            lambda*-formals
                                                                            chi-simple-lambda
                                                                            lambda-formals
                                                                            ellipsis?
                                                                            chi-void
                                                                            eval-local-transformer
                                                                            chi-local-syntax
                                                                            chi-body
                                                                            chi-macro
                                                                            chi-application
                                                                            chi-expr
                                                                            chi
                                                                            syntax-type
                                                                            chi-when-list
                                                                            chi-install-global
                                                                            chi-top-sequence
                                                                            chi-sequence
                                                                            source-wrap
                                                                            wrap
                                                                            bound-id-member?
                                                                            distinct-bound-ids?
                                                                            valid-bound-ids?
                                                                            bound-id=?
                                                                            free-id=?
                                                                            id-var-name
                                                                            same-marks?
                                                                            join-marks
                                                                            join-wraps
                                                                            smart-append
                                                                            make-binding-wrap
                                                                            extend-ribcage!
                                                                            make-empty-ribcage
                                                                            new-mark
                                                                            anti-mark
                                                                            the-anti-mark
                                                                            top-marked?
                                                                            top-wrap
                                                                            empty-wrap
                                                                            set-ribcage-labels!
                                                                            set-ribcage-marks!
                                                                            set-ribcage-symnames!
                                                                            ribcage-labels
                                                                            ribcage-marks
                                                                            ribcage-symnames
                                                                            ribcage?
                                                                            make-ribcage
                                                                            gen-labels
                                                                            gen-label
                                                                            make-rename
                                                                            rename-marks
                                                                            rename-new
                                                                            rename-old
                                                                            subst-rename?
                                                                            wrap-subst
                                                                            wrap-marks
                                                                            make-wrap
                                                                            id-sym-name&marks
                                                                            id-sym-name
                                                                            id?
                                                                            nonsymbol-id?
                                                                            global-extend
                                                                            lookup
                                                                            macros-only-env
                                                                            extend-var-env
                                                                            extend-env
                                                                            null-env
                                                                            binding-value
                                                                            binding-type
                                                                            make-binding
                                                                            arg-check
                                                                            source-annotation
                                                                            no-source
                                                                            set-syntax-object-module!
                                                                            set-syntax-object-wrap!
                                                                            set-syntax-object-expression!
                                                                            syntax-object-module
                                                                            syntax-object-wrap
                                                                            syntax-object-expression
                                                                            syntax-object?
                                                                            make-syntax-object
                                                                            build-lexical-var
                                                                            build-letrec
                                                                            build-named-let
                                                                            build-let
                                                                            build-sequence
                                                                            build-data
                                                                            build-primref
                                                                            build-lambda-case
                                                                            build-case-lambda
                                                                            build-simple-lambda
                                                                            build-global-definition
                                                                            build-global-assignment
                                                                            build-global-reference
                                                                            analyze-variable
                                                                            build-lexical-assignment
                                                                            build-lexical-reference
                                                                            build-dynlet
                                                                            build-conditional
                                                                            build-application
                                                                            build-void
                                                                            maybe-name-value!
                                                                            decorate-source
                                                                            get-global-definition-hook
                                                                            put-global-definition-hook
                                                                            gensym-hook
                                                                            local-eval-hook
                                                                            top-level-eval-hook
                                                                            fx<
                                                                            fx=
                                                                            fx-
                                                                            fx+
                                                                            set-lambda-meta!
                                                                            lambda-meta
                                                                            lambda?
                                                                            make-dynlet
                                                                            make-letrec
                                                                            make-let
                                                                            make-lambda-case
                                                                            make-lambda
                                                                            make-sequence
                                                                            make-application
                                                                            make-conditional
                                                                            make-toplevel-define
                                                                            make-toplevel-set
                                                                            make-toplevel-ref
                                                                            make-module-set
                                                                            make-module-ref
                                                                            make-lexical-set
                                                                            make-lexical-ref
                                                                            make-primitive-ref
                                                                            make-const
                                                                            make-void)
                                                                          ((top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top))
                                                                          ("i465"
                                                                           "i463"
                                                                           "i461"
                                                                           "i459"
                                                                           "i457"
                                                                           "i455"
                                                                           "i453"
                                                                           "i451"
                                                                           "i449"
                                                                           "i447"
                                                                           "i445"
                                                                           "i443"
                                                                           "i441"
                                                                           "i439"
                                                                           "i437"
                                                                           "i435"
                                                                           "i433"
                                                                           "i431"
                                                                           "i429"
                                                                           "i427"
                                                                           "i425"
                                                                           "i423"
                                                                           "i421"
                                                                           "i419"
                                                                           "i417"
                                                                           "i415"
                                                                           "i413"
                                                                           "i411"
                                                                           "i409"
                                                                           "i407"
                                                                           "i405"
                                                                           "i403"
                                                                           "i401"
                                                                           "i399"
                                                                           "i397"
                                                                           "i396"
                                                                           "i394"
                                                                           "i391"
                                                                           "i390"
                                                                           "i389"
                                                                           "i387"
                                                                           "i386"
                                                                           "i384"
                                                                           "i382"
                                                                           "i380"
                                                                           "i378"
                                                                           "i376"
                                                                           "i374"
                                                                           "i372"
                                                                           "i370"
                                                                           "i367"
                                                                           "i365"
                                                                           "i364"
                                                                           "i362"
                                                                           "i360"
                                                                           "i358"
                                                                           "i356"
                                                                           "i355"
                                                                           "i354"
                                                                           "i353"
                                                                           "i351"
                                                                           "i350"
                                                                           "i347"
                                                                           "i345"
                                                                           "i343"
                                                                           "i341"
                                                                           "i339"
                                                                           "i337"
                                                                           "i335"
                                                                           "i334"
                                                                           "i333"
                                                                           "i331"
                                                                           "i329"
                                                                           "i328"
                                                                           "i325"
                                                                           "i324"
                                                                           "i322"
                                                                           "i320"
                                                                           "i318"
                                                                           "i316"
                                                                           "i314"
                                                                           "i312"
                                                                           "i310"
                                                                           "i308"
                                                                           "i306"
                                                                           "i303"
                                                                           "i301"
                                                                           "i299"
                                                                           "i297"
                                                                           "i295"
                                                                           "i293"
                                                                           "i291"
                                                                           "i289"
                                                                           "i287"
                                                                           "i285"
                                                                           "i283"
                                                                           "i281"
                                                                           "i279"
                                                                           "i277"
                                                                           "i275"
                                                                           "i273"
                                                                           "i271"
                                                                           "i269"
                                                                           "i267"
                                                                           "i265"
                                                                           "i263"
                                                                           "i261"
                                                                           "i259"
                                                                           "i258"
                                                                           "i255"
                                                                           "i253"
                                                                           "i252"
                                                                           "i251"
                                                                           "i250"
                                                                           "i249"
                                                                           "i247"
                                                                           "i245"
                                                                           "i243"
                                                                           "i240"
                                                                           "i238"
                                                                           "i236"
                                                                           "i234"
                                                                           "i232"
                                                                           "i230"
                                                                           "i228"
                                                                           "i226"
                                                                           "i224"
                                                                           "i222"
                                                                           "i220"
                                                                           "i218"
                                                                           "i216"
                                                                           "i214"
                                                                           "i212"
                                                                           "i210"
                                                                           "i208"
                                                                           "i206"))
                                                                        #(ribcage
                                                                          (define-structure
                                                                            define-expansion-accessors
                                                                            define-expansion-constructors)
                                                                          ((top)
                                                                           (top)
                                                                           (top))
                                                                          ("i44"
                                                                           "i43"
                                                                           "i42")))
                                                                       (hygiene
                                                                         guile)))
                                                                  4)
                                                             (eq? (vector-ref
                                                                    '#(syntax-object
                                                                       ...
                                                                       ((top)
                                                                        #(ribcage
                                                                          ()
                                                                          ()
                                                                          ())
                                                                        #(ribcage
                                                                          ()
                                                                          ()
                                                                          ())
                                                                        #(ribcage
                                                                          #(x)
                                                                          #((top))
                                                                          #("i2228"))
                                                                        #(ribcage
                                                                          (lambda-var-list
                                                                            gen-var
                                                                            strip
                                                                            chi-lambda-case
                                                                            lambda*-formals
                                                                            chi-simple-lambda
                                                                            lambda-formals
                                                                            ellipsis?
                                                                            chi-void
                                                                            eval-local-transformer
                                                                            chi-local-syntax
                                                                            chi-body
                                                                            chi-macro
                                                                            chi-application
                                                                            chi-expr
                                                                            chi
                                                                            syntax-type
                                                                            chi-when-list
                                                                            chi-install-global
                                                                            chi-top-sequence
                                                                            chi-sequence
                                                                            source-wrap
                                                                            wrap
                                                                            bound-id-member?
                                                                            distinct-bound-ids?
                                                                            valid-bound-ids?
                                                                            bound-id=?
                                                                            free-id=?
                                                                            id-var-name
                                                                            same-marks?
                                                                            join-marks
                                                                            join-wraps
                                                                            smart-append
                                                                            make-binding-wrap
                                                                            extend-ribcage!
                                                                            make-empty-ribcage
                                                                            new-mark
                                                                            anti-mark
                                                                            the-anti-mark
                                                                            top-marked?
                                                                            top-wrap
                                                                            empty-wrap
                                                                            set-ribcage-labels!
                                                                            set-ribcage-marks!
                                                                            set-ribcage-symnames!
                                                                            ribcage-labels
                                                                            ribcage-marks
                                                                            ribcage-symnames
                                                                            ribcage?
                                                                            make-ribcage
                                                                            gen-labels
                                                                            gen-label
                                                                            make-rename
                                                                            rename-marks
                                                                            rename-new
                                                                            rename-old
                                                                            subst-rename?
                                                                            wrap-subst
                                                                            wrap-marks
                                                                            make-wrap
                                                                            id-sym-name&marks
                                                                            id-sym-name
                                                                            id?
                                                                            nonsymbol-id?
                                                                            global-extend
                                                                            lookup
                                                                            macros-only-env
                                                                            extend-var-env
                                                                            extend-env
                                                                            null-env
                                                                            binding-value
                                                                            binding-type
                                                                            make-binding
                                                                            arg-check
                                                                            source-annotation
                                                                            no-source
                                                                            set-syntax-object-module!
                                                                            set-syntax-object-wrap!
                                                                            set-syntax-object-expression!
                                                                            syntax-object-module
                                                                            syntax-object-wrap
                                                                            syntax-object-expression
                                                                            syntax-object?
                                                                            make-syntax-object
                                                                            build-lexical-var
                                                                            build-letrec
                                                                            build-named-let
                                                                            build-let
                                                                            build-sequence
                                                                            build-data
                                                                            build-primref
                                                                            build-lambda-case
                                                                            build-case-lambda
                                                                            build-simple-lambda
                                                                            build-global-definition
                                                                            build-global-assignment
                                                                            build-global-reference
                                                                            analyze-variable
                                                                            build-lexical-assignment
                                                                            build-lexical-reference
                                                                            build-dynlet
                                                                            build-conditional
                                                                            build-application
                                                                            build-void
                                                                            maybe-name-value!
                                                                            decorate-source
                                                                            get-global-definition-hook
                                                                            put-global-definition-hook
                                                                            gensym-hook
                                                                            local-eval-hook
                                                                            top-level-eval-hook
                                                                            fx<
                                                                            fx=
                                                                            fx-
                                                                            fx+
                                                                            set-lambda-meta!
                                                                            lambda-meta
                                                                            lambda?
                                                                            make-dynlet
                                                                            make-letrec
                                                                            make-let
                                                                            make-lambda-case
                                                                            make-lambda
                                                                            make-sequence
                                                                            make-application
                                                                            make-conditional
                                                                            make-toplevel-define
                                                                            make-toplevel-set
                                                                            make-toplevel-ref
                                                                            make-module-set
                                                                            make-module-ref
                                                                            make-lexical-set
                                                                            make-lexical-ref
                                                                            make-primitive-ref
                                                                            make-const
                                                                            make-void)
                                                                          ((top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top))
                                                                          ("i465"
                                                                           "i463"
                                                                           "i461"
                                                                           "i459"
                                                                           "i457"
                                                                           "i455"
                                                                           "i453"
                                                                           "i451"
                                                                           "i449"
                                                                           "i447"
                                                                           "i445"
                                                                           "i443"
                                                                           "i441"
                                                                           "i439"
                                                                           "i437"
                                                                           "i435"
                                                                           "i433"
                                                                           "i431"
                                                                           "i429"
                                                                           "i427"
                                                                           "i425"
                                                                           "i423"
                                                                           "i421"
                                                                           "i419"
                                                                           "i417"
                                                                           "i415"
                                                                           "i413"
                                                                           "i411"
                                                                           "i409"
                                                                           "i407"
                                                                           "i405"
                                                                           "i403"
                                                                           "i401"
                                                                           "i399"
                                                                           "i397"
                                                                           "i396"
                                                                           "i394"
                                                                           "i391"
                                                                           "i390"
                                                                           "i389"
                                                                           "i387"
                                                                           "i386"
                                                                           "i384"
                                                                           "i382"
                                                                           "i380"
                                                                           "i378"
                                                                           "i376"
                                                                           "i374"
                                                                           "i372"
                                                                           "i370"
                                                                           "i367"
                                                                           "i365"
                                                                           "i364"
                                                                           "i362"
                                                                           "i360"
                                                                           "i358"
                                                                           "i356"
                                                                           "i355"
                                                                           "i354"
                                                                           "i353"
                                                                           "i351"
                                                                           "i350"
                                                                           "i347"
                                                                           "i345"
                                                                           "i343"
                                                                           "i341"
                                                                           "i339"
                                                                           "i337"
                                                                           "i335"
                                                                           "i334"
                                                                           "i333"
                                                                           "i331"
                                                                           "i329"
                                                                           "i328"
                                                                           "i325"
                                                                           "i324"
                                                                           "i322"
                                                                           "i320"
                                                                           "i318"
                                                                           "i316"
                                                                           "i314"
                                                                           "i312"
                                                                           "i310"
                                                                           "i308"
                                                                           "i306"
                                                                           "i303"
                                                                           "i301"
                                                                           "i299"
                                                                           "i297"
                                                                           "i295"
                                                                           "i293"
                                                                           "i291"
                                                                           "i289"
                                                                           "i287"
                                                                           "i285"
                                                                           "i283"
                                                                           "i281"
                                                                           "i279"
                                                                           "i277"
                                                                           "i275"
                                                                           "i273"
                                                                           "i271"
                                                                           "i269"
                                                                           "i267"
                                                                           "i265"
                                                                           "i263"
                                                                           "i261"
                                                                           "i259"
                                                                           "i258"
                                                                           "i255"
                                                                           "i253"
                                                                           "i252"
                                                                           "i251"
                                                                           "i250"
                                                                           "i249"
                                                                           "i247"
                                                                           "i245"
                                                                           "i243"
                                                                           "i240"
                                                                           "i238"
                                                                           "i236"
                                                                           "i234"
                                                                           "i232"
                                                                           "i230"
                                                                           "i228"
                                                                           "i226"
                                                                           "i224"
                                                                           "i222"
                                                                           "i220"
                                                                           "i218"
                                                                           "i216"
                                                                           "i214"
                                                                           "i212"
                                                                           "i210"
                                                                           "i208"
                                                                           "i206"))
                                                                        #(ribcage
                                                                          (define-structure
                                                                            define-expansion-accessors
                                                                            define-expansion-constructors)
                                                                          ((top)
                                                                           (top)
                                                                           (top))
                                                                          ("i44"
                                                                           "i43"
                                                                           "i42")))
                                                                       (hygiene
                                                                         guile))
                                                                    0)
                                                                  'syntax-object)
                                                             #f)
                                                         (vector-ref
                                                           '#(syntax-object
                                                              ...
                                                              ((top)
                                                               #(ribcage
                                                                 ()
                                                                 ()
                                                                 ())
                                                               #(ribcage
                                                                 ()
                                                                 ()
                                                                 ())
                                                               #(ribcage
                                                                 #(x)
                                                                 #((top))
                                                                 #("i2228"))
                                                               #(ribcage
                                                                 (lambda-var-list
                                                                   gen-var
                                                                   strip
                                                                   chi-lambda-case
                                                                   lambda*-formals
                                                                   chi-simple-lambda
                                                                   lambda-formals
                                                                   ellipsis?
                                                                   chi-void
                                                                   eval-local-transformer
                                                                   chi-local-syntax
                                                                   chi-body
                                                                   chi-macro
                                                                   chi-application
                                                                   chi-expr
                                                                   chi
                                                                   syntax-type
                                                                   chi-when-list
                                                                   chi-install-global
                                                                   chi-top-sequence
                                                                   chi-sequence
                                                                   source-wrap
                                                                   wrap
                                                                   bound-id-member?
                                                                   distinct-bound-ids?
                                                                   valid-bound-ids?
                                                                   bound-id=?
                                                                   free-id=?
                                                                   id-var-name
                                                                   same-marks?
                                                                   join-marks
                                                                   join-wraps
                                                                   smart-append
                                                                   make-binding-wrap
                                                                   extend-ribcage!
                                                                   make-empty-ribcage
                                                                   new-mark
                                                                   anti-mark
                                                                   the-anti-mark
                                                                   top-marked?
                                                                   top-wrap
                                                                   empty-wrap
                                                                   set-ribcage-labels!
                                                                   set-ribcage-marks!
                                                                   set-ribcage-symnames!
                                                                   ribcage-labels
                                                                   ribcage-marks
                                                                   ribcage-symnames
                                                                   ribcage?
                                                                   make-ribcage
                                                                   gen-labels
                                                                   gen-label
                                                                   make-rename
                                                                   rename-marks
                                                                   rename-new
                                                                   rename-old
                                                                   subst-rename?
                                                                   wrap-subst
                                                                   wrap-marks
                                                                   make-wrap
                                                                   id-sym-name&marks
                                                                   id-sym-name
                                                                   id?
                                                                   nonsymbol-id?
                                                                   global-extend
                                                                   lookup
                                                                   macros-only-env
                                                                   extend-var-env
                                                                   extend-env
                                                                   null-env
                                                                   binding-value
                                                                   binding-type
                                                                   make-binding
                                                                   arg-check
                                                                   source-annotation
                                                                   no-source
                                                                   set-syntax-object-module!
                                                                   set-syntax-object-wrap!
                                                                   set-syntax-object-expression!
                                                                   syntax-object-module
                                                                   syntax-object-wrap
                                                                   syntax-object-expression
                                                                   syntax-object?
                                                                   make-syntax-object
                                                                   build-lexical-var
                                                                   build-letrec
                                                                   build-named-let
                                                                   build-let
                                                                   build-sequence
                                                                   build-data
                                                                   build-primref
                                                                   build-lambda-case
                                                                   build-case-lambda
                                                                   build-simple-lambda
                                                                   build-global-definition
                                                                   build-global-assignment
                                                                   build-global-reference
                                                                   analyze-variable
                                                                   build-lexical-assignment
                                                                   build-lexical-reference
                                                                   build-dynlet
                                                                   build-conditional
                                                                   build-application
                                                                   build-void
                                                                   maybe-name-value!
                                                                   decorate-source
                                                                   get-global-definition-hook
                                                                   put-global-definition-hook
                                                                   gensym-hook
                                                                   local-eval-hook
                                                                   top-level-eval-hook
                                                                   fx<
                                                                   fx=
                                                                   fx-
                                                                   fx+
                                                                   set-lambda-meta!
                                                                   lambda-meta
                                                                   lambda?
                                                                   make-dynlet
                                                                   make-letrec
                                                                   make-let
                                                                   make-lambda-case
                                                                   make-lambda
                                                                   make-sequence
                                                                   make-application
                                                                   make-conditional
                                                                   make-toplevel-define
                                                                   make-toplevel-set
                                                                   make-toplevel-ref
                                                                   make-module-set
                                                                   make-module-ref
                                                                   make-lexical-set
                                                                   make-lexical-ref
                                                                   make-primitive-ref
                                                                   make-const
                                                                   make-void)
                                                                 ((top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top))
                                                                 ("i465"
                                                                  "i463"
                                                                  "i461"
                                                                  "i459"
                                                                  "i457"
                                                                  "i455"
                                                                  "i453"
                                                                  "i451"
                                                                  "i449"
                                                                  "i447"
                                                                  "i445"
                                                                  "i443"
                                                                  "i441"
                                                                  "i439"
                                                                  "i437"
                                                                  "i435"
                                                                  "i433"
                                                                  "i431"
                                                                  "i429"
                                                                  "i427"
                                                                  "i425"
                                                                  "i423"
                                                                  "i421"
                                                                  "i419"
                                                                  "i417"
                                                                  "i415"
                                                                  "i413"
                                                                  "i411"
                                                                  "i409"
                                                                  "i407"
                                                                  "i405"
                                                                  "i403"
                                                                  "i401"
                                                                  "i399"
                                                                  "i397"
                                                                  "i396"
                                                                  "i394"
                                                                  "i391"
                                                                  "i390"
                                                                  "i389"
                                                                  "i387"
                                                                  "i386"
                                                                  "i384"
                                                                  "i382"
                                                                  "i380"
                                                                  "i378"
                                                                  "i376"
                                                                  "i374"
                                                                  "i372"
                                                                  "i370"
                                                                  "i367"
                                                                  "i365"
                                                                  "i364"
                                                                  "i362"
                                                                  "i360"
                                                                  "i358"
                                                                  "i356"
                                                                  "i355"
                                                                  "i354"
                                                                  "i353"
                                                                  "i351"
                                                                  "i350"
                                                                  "i347"
                                                                  "i345"
                                                                  "i343"
                                                                  "i341"
                                                                  "i339"
                                                                  "i337"
                                                                  "i335"
                                                                  "i334"
                                                                  "i333"
                                                                  "i331"
                                                                  "i329"
                                                                  "i328"
                                                                  "i325"
                                                                  "i324"
                                                                  "i322"
                                                                  "i320"
                                                                  "i318"
                                                                  "i316"
                                                                  "i314"
                                                                  "i312"
                                                                  "i310"
                                                                  "i308"
                                                                  "i306"
                                                                  "i303"
                                                                  "i301"
                                                                  "i299"
                                                                  "i297"
                                                                  "i295"
                                                                  "i293"
                                                                  "i291"
                                                                  "i289"
                                                                  "i287"
                                                                  "i285"
                                                                  "i283"
                                                                  "i281"
                                                                  "i279"
                                                                  "i277"
                                                                  "i275"
                                                                  "i273"
                                                                  "i271"
                                                                  "i269"
                                                                  "i267"
                                                                  "i265"
                                                                  "i263"
                                                                  "i261"
                                                                  "i259"
                                                                  "i258"
                                                                  "i255"
                                                                  "i253"
                                                                  "i252"
                                                                  "i251"
                                                                  "i250"
                                                                  "i249"
                                                                  "i247"
                                                                  "i245"
                                                                  "i243"
                                                                  "i240"
                                                                  "i238"
                                                                  "i236"
                                                                  "i234"
                                                                  "i232"
                                                                  "i230"
                                                                  "i228"
                                                                  "i226"
                                                                  "i224"
                                                                  "i222"
                                                                  "i220"
                                                                  "i218"
                                                                  "i216"
                                                                  "i214"
                                                                  "i212"
                                                                  "i210"
                                                                  "i208"
                                                                  "i206"))
                                                               #(ribcage
                                                                 (define-structure
                                                                   define-expansion-accessors
                                                                   define-expansion-constructors)
                                                                 ((top)
                                                                  (top)
                                                                  (top))
                                                                 ("i44"
                                                                  "i43"
                                                                  "i42")))
                                                              (hygiene guile))
                                                           1)
                                                         '#(syntax-object
                                                            ...
                                                            ((top)
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               #(x)
                                                               #((top))
                                                               #("i2228"))
                                                             #(ribcage
                                                               (lambda-var-list
                                                                 gen-var
                                                                 strip
                                                                 chi-lambda-case
                                                                 lambda*-formals
                                                                 chi-simple-lambda
                                                                 lambda-formals
                                                                 ellipsis?
                                                                 chi-void
                                                                 eval-local-transformer
                                                                 chi-local-syntax
                                                                 chi-body
                                                                 chi-macro
                                                                 chi-application
                                                                 chi-expr
                                                                 chi
                                                                 syntax-type
                                                                 chi-when-list
                                                                 chi-install-global
                                                                 chi-top-sequence
                                                                 chi-sequence
                                                                 source-wrap
                                                                 wrap
                                                                 bound-id-member?
                                                                 distinct-bound-ids?
                                                                 valid-bound-ids?
                                                                 bound-id=?
                                                                 free-id=?
                                                                 id-var-name
                                                                 same-marks?
                                                                 join-marks
                                                                 join-wraps
                                                                 smart-append
                                                                 make-binding-wrap
                                                                 extend-ribcage!
                                                                 make-empty-ribcage
                                                                 new-mark
                                                                 anti-mark
                                                                 the-anti-mark
                                                                 top-marked?
                                                                 top-wrap
                                                                 empty-wrap
                                                                 set-ribcage-labels!
                                                                 set-ribcage-marks!
                                                                 set-ribcage-symnames!
                                                                 ribcage-labels
                                                                 ribcage-marks
                                                                 ribcage-symnames
                                                                 ribcage?
                                                                 make-ribcage
                                                                 gen-labels
                                                                 gen-label
                                                                 make-rename
                                                                 rename-marks
                                                                 rename-new
                                                                 rename-old
                                                                 subst-rename?
                                                                 wrap-subst
                                                                 wrap-marks
                                                                 make-wrap
                                                                 id-sym-name&marks
                                                                 id-sym-name
                                                                 id?
                                                                 nonsymbol-id?
                                                                 global-extend
                                                                 lookup
                                                                 macros-only-env
                                                                 extend-var-env
                                                                 extend-env
                                                                 null-env
                                                                 binding-value
                                                                 binding-type
                                                                 make-binding
                                                                 arg-check
                                                                 source-annotation
                                                                 no-source
                                                                 set-syntax-object-module!
                                                                 set-syntax-object-wrap!
                                                                 set-syntax-object-expression!
                                                                 syntax-object-module
                                                                 syntax-object-wrap
                                                                 syntax-object-expression
                                                                 syntax-object?
                                                                 make-syntax-object
                                                                 build-lexical-var
                                                                 build-letrec
                                                                 build-named-let
                                                                 build-let
                                                                 build-sequence
                                                                 build-data
                                                                 build-primref
                                                                 build-lambda-case
                                                                 build-case-lambda
                                                                 build-simple-lambda
                                                                 build-global-definition
                                                                 build-global-assignment
                                                                 build-global-reference
                                                                 analyze-variable
                                                                 build-lexical-assignment
                                                                 build-lexical-reference
                                                                 build-dynlet
                                                                 build-conditional
                                                                 build-application
                                                                 build-void
                                                                 maybe-name-value!
                                                                 decorate-source
                                                                 get-global-definition-hook
                                                                 put-global-definition-hook
                                                                 gensym-hook
                                                                 local-eval-hook
                                                                 top-level-eval-hook
                                                                 fx<
                                                                 fx=
                                                                 fx-
                                                                 fx+
                                                                 set-lambda-meta!
                                                                 lambda-meta
                                                                 lambda?
                                                                 make-dynlet
                                                                 make-letrec
                                                                 make-let
                                                                 make-lambda-case
                                                                 make-lambda
                                                                 make-sequence
                                                                 make-application
                                                                 make-conditional
                                                                 make-toplevel-define
                                                                 make-toplevel-set
                                                                 make-toplevel-ref
                                                                 make-module-set
                                                                 make-module-ref
                                                                 make-lexical-set
                                                                 make-lexical-ref
                                                                 make-primitive-ref
                                                                 make-const
                                                                 make-void)
                                                               ((top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top))
                                                               ("i465"
                                                                "i463"
                                                                "i461"
                                                                "i459"
                                                                "i457"
                                                                "i455"
                                                                "i453"
                                                                "i451"
                                                                "i449"
                                                                "i447"
                                                                "i445"
                                                                "i443"
                                                                "i441"
                                                                "i439"
                                                                "i437"
                                                                "i435"
                                                                "i433"
                                                                "i431"
                                                                "i429"
                                                                "i427"
                                                                "i425"
                                                                "i423"
                                                                "i421"
                                                                "i419"
                                                                "i417"
                                                                "i415"
                                                                "i413"
                                                                "i411"
                                                                "i409"
                                                                "i407"
                                                                "i405"
                                                                "i403"
                                                                "i401"
                                                                "i399"
                                                                "i397"
                                                                "i396"
                                                                "i394"
                                                                "i391"
                                                                "i390"
                                                                "i389"
                                                                "i387"
                                                                "i386"
                                                                "i384"
                                                                "i382"
                                                                "i380"
                                                                "i378"
                                                                "i376"
                                                                "i374"
                                                                "i372"
                                                                "i370"
                                                                "i367"
                                                                "i365"
                                                                "i364"
                                                                "i362"
                                                                "i360"
                                                                "i358"
                                                                "i356"
                                                                "i355"
                                                                "i354"
                                                                "i353"
                                                                "i351"
                                                                "i350"
                                                                "i347"
                                                                "i345"
                                                                "i343"
                                                                "i341"
                                                                "i339"
                                                                "i337"
                                                                "i335"
                                                                "i334"
                                                                "i333"
                                                                "i331"
                                                                "i329"
                                                                "i328"
                                                                "i325"
                                                                "i324"
                                                                "i322"
                                                                "i320"
                                                                "i318"
                                                                "i316"
                                                                "i314"
                                                                "i312"
                                                                "i310"
                                                                "i308"
                                                                "i306"
                                                                "i303"
                                                                "i301"
                                                                "i299"
                                                                "i297"
                                                                "i295"
                                                                "i293"
                                                                "i291"
                                                                "i289"
                                                                "i287"
                                                                "i285"
                                                                "i283"
                                                                "i281"
                                                                "i279"
                                                                "i277"
                                                                "i275"
                                                                "i273"
                                                                "i271"
                                                                "i269"
                                                                "i267"
                                                                "i265"
                                                                "i263"
                                                                "i261"
                                                                "i259"
                                                                "i258"
                                                                "i255"
                                                                "i253"
                                                                "i252"
                                                                "i251"
                                                                "i250"
                                                                "i249"
                                                                "i247"
                                                                "i245"
                                                                "i243"
                                                                "i240"
                                                                "i238"
                                                                "i236"
                                                                "i234"
                                                                "i232"
                                                                "i230"
                                                                "i228"
                                                                "i226"
                                                                "i224"
                                                                "i222"
                                                                "i220"
                                                                "i218"
                                                                "i216"
                                                                "i214"
                                                                "i212"
                                                                "i210"
                                                                "i208"
                                                                "i206"))
                                                             #(ribcage
                                                               (define-structure
                                                                 define-expansion-accessors
                                                                 define-expansion-constructors)
                                                               ((top)
                                                                (top)
                                                                (top))
                                                               ("i44"
                                                                "i43"
                                                                "i42")))
                                                            (hygiene guile))))
                                                (eq? (#{id-var-name 410}#
                                                       #{dots 3773}#
                                                       '(()))
                                                     (#{id-var-name 410}#
                                                       '#(syntax-object
                                                          ...
                                                          ((top)
                                                           #(ribcage () () ())
                                                           #(ribcage () () ())
                                                           #(ribcage
                                                             #(x)
                                                             #((top))
                                                             #("i2228"))
                                                           #(ribcage
                                                             (lambda-var-list
                                                               gen-var
                                                               strip
                                                               chi-lambda-case
                                                               lambda*-formals
                                                               chi-simple-lambda
                                                               lambda-formals
                                                               ellipsis?
                                                               chi-void
                                                               eval-local-transformer
                                                               chi-local-syntax
                                                               chi-body
                                                               chi-macro
                                                               chi-application
                                                               chi-expr
                                                               chi
                                                               syntax-type
                                                               chi-when-list
                                                               chi-install-global
                                                               chi-top-sequence
                                                               chi-sequence
                                                               source-wrap
                                                               wrap
                                                               bound-id-member?
                                                               distinct-bound-ids?
                                                               valid-bound-ids?
                                                               bound-id=?
                                                               free-id=?
                                                               id-var-name
                                                               same-marks?
                                                               join-marks
                                                               join-wraps
                                                               smart-append
                                                               make-binding-wrap
                                                               extend-ribcage!
                                                               make-empty-ribcage
                                                               new-mark
                                                               anti-mark
                                                               the-anti-mark
                                                               top-marked?
                                                               top-wrap
                                                               empty-wrap
                                                               set-ribcage-labels!
                                                               set-ribcage-marks!
                                                               set-ribcage-symnames!
                                                               ribcage-labels
                                                               ribcage-marks
                                                               ribcage-symnames
                                                               ribcage?
                                                               make-ribcage
                                                               gen-labels
                                                               gen-label
                                                               make-rename
                                                               rename-marks
                                                               rename-new
                                                               rename-old
                                                               subst-rename?
                                                               wrap-subst
                                                               wrap-marks
                                                               make-wrap
                                                               id-sym-name&marks
                                                               id-sym-name
                                                               id?
                                                               nonsymbol-id?
                                                               global-extend
                                                               lookup
                                                               macros-only-env
                                                               extend-var-env
                                                               extend-env
                                                               null-env
                                                               binding-value
                                                               binding-type
                                                               make-binding
                                                               arg-check
                                                               source-annotation
                                                               no-source
                                                               set-syntax-object-module!
                                                               set-syntax-object-wrap!
                                                               set-syntax-object-expression!
                                                               syntax-object-module
                                                               syntax-object-wrap
                                                               syntax-object-expression
                                                               syntax-object?
                                                               make-syntax-object
                                                               build-lexical-var
                                                               build-letrec
                                                               build-named-let
                                                               build-let
                                                               build-sequence
                                                               build-data
                                                               build-primref
                                                               build-lambda-case
                                                               build-case-lambda
                                                               build-simple-lambda
                                                               build-global-definition
                                                               build-global-assignment
                                                               build-global-reference
                                                               analyze-variable
                                                               build-lexical-assignment
                                                               build-lexical-reference
                                                               build-dynlet
                                                               build-conditional
                                                               build-application
                                                               build-void
                                                               maybe-name-value!
                                                               decorate-source
                                                               get-global-definition-hook
                                                               put-global-definition-hook
                                                               gensym-hook
                                                               local-eval-hook
                                                               top-level-eval-hook
                                                               fx<
                                                               fx=
                                                               fx-
                                                               fx+
                                                               set-lambda-meta!
                                                               lambda-meta
                                                               lambda?
                                                               make-dynlet
                                                               make-letrec
                                                               make-let
                                                               make-lambda-case
                                                               make-lambda
                                                               make-sequence
                                                               make-application
                                                               make-conditional
                                                               make-toplevel-define
                                                               make-toplevel-set
                                                               make-toplevel-ref
                                                               make-module-set
                                                               make-module-ref
                                                               make-lexical-set
                                                               make-lexical-ref
                                                               make-primitive-ref
                                                               make-const
                                                               make-void)
                                                             ((top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top))
                                                             ("i465"
                                                              "i463"
                                                              "i461"
                                                              "i459"
                                                              "i457"
                                                              "i455"
                                                              "i453"
                                                              "i451"
                                                              "i449"
                                                              "i447"
                                                              "i445"
                                                              "i443"
                                                              "i441"
                                                              "i439"
                                                              "i437"
                                                              "i435"
                                                              "i433"
                                                              "i431"
                                                              "i429"
                                                              "i427"
                                                              "i425"
                                                              "i423"
                                                              "i421"
                                                              "i419"
                                                              "i417"
                                                              "i415"
                                                              "i413"
                                                              "i411"
                                                              "i409"
                                                              "i407"
                                                              "i405"
                                                              "i403"
                                                              "i401"
                                                              "i399"
                                                              "i397"
                                                              "i396"
                                                              "i394"
                                                              "i391"
                                                              "i390"
                                                              "i389"
                                                              "i387"
                                                              "i386"
                                                              "i384"
                                                              "i382"
                                                              "i380"
                                                              "i378"
                                                              "i376"
                                                              "i374"
                                                              "i372"
                                                              "i370"
                                                              "i367"
                                                              "i365"
                                                              "i364"
                                                              "i362"
                                                              "i360"
                                                              "i358"
                                                              "i356"
                                                              "i355"
                                                              "i354"
                                                              "i353"
                                                              "i351"
                                                              "i350"
                                                              "i347"
                                                              "i345"
                                                              "i343"
                                                              "i341"
                                                              "i339"
                                                              "i337"
                                                              "i335"
                                                              "i334"
                                                              "i333"
                                                              "i331"
                                                              "i329"
                                                              "i328"
                                                              "i325"
                                                              "i324"
                                                              "i322"
                                                              "i320"
                                                              "i318"
                                                              "i316"
                                                              "i314"
                                                              "i312"
                                                              "i310"
                                                              "i308"
                                                              "i306"
                                                              "i303"
                                                              "i301"
                                                              "i299"
                                                              "i297"
                                                              "i295"
                                                              "i293"
                                                              "i291"
                                                              "i289"
                                                              "i287"
                                                              "i285"
                                                              "i283"
                                                              "i281"
                                                              "i279"
                                                              "i277"
                                                              "i275"
                                                              "i273"
                                                              "i271"
                                                              "i269"
                                                              "i267"
                                                              "i265"
                                                              "i263"
                                                              "i261"
                                                              "i259"
                                                              "i258"
                                                              "i255"
                                                              "i253"
                                                              "i252"
                                                              "i251"
                                                              "i250"
                                                              "i249"
                                                              "i247"
                                                              "i245"
                                                              "i243"
                                                              "i240"
                                                              "i238"
                                                              "i236"
                                                              "i234"
                                                              "i232"
                                                              "i230"
                                                              "i228"
                                                              "i226"
                                                              "i224"
                                                              "i222"
                                                              "i220"
                                                              "i218"
                                                              "i216"
                                                              "i214"
                                                              "i212"
                                                              "i210"
                                                              "i208"
                                                              "i206"))
                                                           #(ribcage
                                                             (define-structure
                                                               define-expansion-accessors
                                                               define-expansion-constructors)
                                                             ((top)
                                                              (top)
                                                              (top))
                                                             ("i44"
                                                              "i43"
                                                              "i42")))
                                                          (hygiene guile))
                                                       '(())))
                                                #f)
                                              #f))
                                          #{tmp 3768}#)
                                        #f)
                                    (@apply
                                      (lambda (#{x 3778}#
                                               #{dots 3779}#
                                               #{ys 3780}#)
                                        (call-with-values
                                          (lambda ()
                                            (#{cvt* 3715}#
                                              #{ys 3780}#
                                              #{n 3743}#
                                              #{ids 3744}#))
                                          (lambda (#{ys 3781}# #{ids 3782}#)
                                            (call-with-values
                                              (lambda ()
                                                (#{cvt 3719}#
                                                  #{x 3778}#
                                                  (#{1+}# #{n 3743}#)
                                                  #{ids 3782}#))
                                              (lambda (#{x 3785}# #{ids 3786}#)
                                                (call-with-values
                                                  (lambda ()
                                                    (#{v-reverse 3717}#
                                                      #{ys 3781}#))
                                                  (lambda (#{ys 3789}#
                                                           #{e 3790}#)
                                                    (values
                                                      (vector
                                                        'each+
                                                        #{x 3785}#
                                                        #{ys 3789}#
                                                        #{e 3790}#)
                                                      #{ids 3786}#))))))))
                                      #{tmp 3768}#)
                                    (begin
                                      (let ((#{tmp 3794}#
                                              ($sc-dispatch
                                                #{p 3742}#
                                                '(any . any))))
                                        (if #{tmp 3794}#
                                          (@apply
                                            (lambda (#{x 3797}# #{y 3798}#)
                                              (call-with-values
                                                (lambda ()
                                                  (#{cvt 3719}#
                                                    #{y 3798}#
                                                    #{n 3743}#
                                                    #{ids 3744}#))
                                                (lambda (#{y 3799}#
                                                         #{ids 3800}#)
                                                  (call-with-values
                                                    (lambda ()
                                                      (#{cvt 3719}#
                                                        #{x 3797}#
                                                        #{n 3743}#
                                                        #{ids 3800}#))
                                                    (lambda (#{x 3803}#
                                                             #{ids 3804}#)
                                                      (values
                                                        (cons #{x 3803}#
                                                              #{y 3799}#)
                                                        #{ids 3804}#))))))
                                            #{tmp 3794}#)
                                          (begin
                                            (let ((#{tmp 3807}#
                                                    ($sc-dispatch
                                                      #{p 3742}#
                                                      '())))
                                              (if #{tmp 3807}#
                                                (@apply
                                                  (lambda ()
                                                    (values '() #{ids 3744}#))
                                                  #{tmp 3807}#)
                                                (begin
                                                  (let ((#{tmp 3808}#
                                                          ($sc-dispatch
                                                            #{p 3742}#
                                                            '#(vector
                                                               each-any))))
                                                    (if #{tmp 3808}#
                                                      (@apply
                                                        (lambda (#{x 3810}#)
                                                          (call-with-values
                                                            (lambda ()
                                                              (#{cvt 3719}#
                                                                #{x 3810}#
                                                                #{n 3743}#
                                                                #{ids 3744}#))
                                                            (lambda (#{p 3812}#
                                                                     #{ids 3813}#)
                                                              (values
                                                                (vector
                                                                  'vector
                                                                  #{p 3812}#)
                                                                #{ids 3813}#))))
                                                        #{tmp 3808}#)
                                                      (values
                                                        (vector
                                                          'atom
                                                          (#{strip 462}#
                                                            #{p 3742}#
                                                            '(())))
                                                        #{ids 3744}#))))))))))))))))))))
                 (begin (#{cvt 3719}# #{pattern 3710}# 0 '())))))
           (#{build-dispatch-call 3705}#
             (lambda (#{pvars 3819}#
                      #{exp 3820}#
                      #{y 3821}#
                      #{r 3822}#
                      #{mod 3823}#)
               (begin
                 (let ((#{ids 3831}# (map car #{pvars 3819}#)))
                   (begin
                     (map cdr #{pvars 3819}#)
                     (begin
                       (let ((#{labels 3835}#
                               (#{gen-labels 368}# #{ids 3831}#))
                             (#{new-vars 3836}#
                               (map #{gen-var 464}# #{ids 3831}#)))
                         (#{build-application 270}#
                           #f
                           (if (equal? (module-name (current-module)) '(guile))
                             (make-struct/no-tail
                               (vector-ref %expanded-vtables 7)
                               #f
                               'apply)
                             (make-struct/no-tail
                               (vector-ref %expanded-vtables 5)
                               #f
                               '(guile)
                               'apply
                               #f))
                           (list (#{build-simple-lambda 288}#
                                   #f
                                   (map syntax->datum #{ids 3831}#)
                                   #f
                                   #{new-vars 3836}#
                                   '()
                                   (#{chi 436}#
                                     #{exp 3820}#
                                     (#{extend-env 336}#
                                       #{labels 3835}#
                                       (map (lambda (#{var 3840}#
                                                     #{level 3841}#)
                                              (cons 'syntax
                                                    (cons #{var 3840}#
                                                          #{level 3841}#)))
                                            #{new-vars 3836}#
                                            (map cdr #{pvars 3819}#))
                                       #{r 3822}#)
                                     (#{make-binding-wrap 400}#
                                       #{ids 3831}#
                                       #{labels 3835}#
                                       '(()))
                                     #{mod 3823}#))
                                 #{y 3821}#)))))))))
           (#{gen-clause 3707}#
             (lambda (#{x 3847}#
                      #{keys 3848}#
                      #{clauses 3849}#
                      #{r 3850}#
                      #{pat 3851}#
                      #{fender 3852}#
                      #{exp 3853}#
                      #{mod 3854}#)
               (call-with-values
                 (lambda ()
                   (#{convert-pattern 3703}#
                     #{pat 3851}#
                     #{keys 3848}#))
                 (lambda (#{p 3863}# #{pvars 3864}#)
                   (if (not (#{distinct-bound-ids? 418}#
                              (map car #{pvars 3864}#)))
                     (syntax-violation
                       'syntax-case
                       "duplicate pattern variable"
                       #{pat 3851}#)
                     (if (not (and-map
                                (lambda (#{x 3871}#)
                                  (not (begin
                                         (let ((#{x 9163}# (car #{x 3871}#)))
                                           (if (if (if (vector? #{x 9163}#)
                                                     (if (= (vector-length
                                                              #{x 9163}#)
                                                            4)
                                                       (eq? (vector-ref
                                                              #{x 9163}#
                                                              0)
                                                            'syntax-object)
                                                       #f)
                                                     #f)
                                                 (symbol?
                                                   (vector-ref #{x 9163}# 1))
                                                 #f)
                                             (if (eq? (if (if (vector?
                                                                #{x 9163}#)
                                                            (if (= (vector-length
                                                                     #{x 9163}#)
                                                                   4)
                                                              (eq? (vector-ref
                                                                     #{x 9163}#
                                                                     0)
                                                                   'syntax-object)
                                                              #f)
                                                            #f)
                                                        (vector-ref
                                                          #{x 9163}#
                                                          1)
                                                        #{x 9163}#)
                                                      (if (if (= (vector-length
                                                                   '#(syntax-object
                                                                      ...
                                                                      ((top)
                                                                       #(ribcage
                                                                         ()
                                                                         ()
                                                                         ())
                                                                       #(ribcage
                                                                         ()
                                                                         ()
                                                                         ())
                                                                       #(ribcage
                                                                         #(x)
                                                                         #((top))
                                                                         #("i2228"))
                                                                       #(ribcage
                                                                         (lambda-var-list
                                                                           gen-var
                                                                           strip
                                                                           chi-lambda-case
                                                                           lambda*-formals
                                                                           chi-simple-lambda
                                                                           lambda-formals
                                                                           ellipsis?
                                                                           chi-void
                                                                           eval-local-transformer
                                                                           chi-local-syntax
                                                                           chi-body
                                                                           chi-macro
                                                                           chi-application
                                                                           chi-expr
                                                                           chi
                                                                           syntax-type
                                                                           chi-when-list
                                                                           chi-install-global
                                                                           chi-top-sequence
                                                                           chi-sequence
                                                                           source-wrap
                                                                           wrap
                                                                           bound-id-member?
                                                                           distinct-bound-ids?
                                                                           valid-bound-ids?
                                                                           bound-id=?
                                                                           free-id=?
                                                                           id-var-name
                                                                           same-marks?
                                                                           join-marks
                                                                           join-wraps
                                                                           smart-append
                                                                           make-binding-wrap
                                                                           extend-ribcage!
                                                                           make-empty-ribcage
                                                                           new-mark
                                                                           anti-mark
                                                                           the-anti-mark
                                                                           top-marked?
                                                                           top-wrap
                                                                           empty-wrap
                                                                           set-ribcage-labels!
                                                                           set-ribcage-marks!
                                                                           set-ribcage-symnames!
                                                                           ribcage-labels
                                                                           ribcage-marks
                                                                           ribcage-symnames
                                                                           ribcage?
                                                                           make-ribcage
                                                                           gen-labels
                                                                           gen-label
                                                                           make-rename
                                                                           rename-marks
                                                                           rename-new
                                                                           rename-old
                                                                           subst-rename?
                                                                           wrap-subst
                                                                           wrap-marks
                                                                           make-wrap
                                                                           id-sym-name&marks
                                                                           id-sym-name
                                                                           id?
                                                                           nonsymbol-id?
                                                                           global-extend
                                                                           lookup
                                                                           macros-only-env
                                                                           extend-var-env
                                                                           extend-env
                                                                           null-env
                                                                           binding-value
                                                                           binding-type
                                                                           make-binding
                                                                           arg-check
                                                                           source-annotation
                                                                           no-source
                                                                           set-syntax-object-module!
                                                                           set-syntax-object-wrap!
                                                                           set-syntax-object-expression!
                                                                           syntax-object-module
                                                                           syntax-object-wrap
                                                                           syntax-object-expression
                                                                           syntax-object?
                                                                           make-syntax-object
                                                                           build-lexical-var
                                                                           build-letrec
                                                                           build-named-let
                                                                           build-let
                                                                           build-sequence
                                                                           build-data
                                                                           build-primref
                                                                           build-lambda-case
                                                                           build-case-lambda
                                                                           build-simple-lambda
                                                                           build-global-definition
                                                                           build-global-assignment
                                                                           build-global-reference
                                                                           analyze-variable
                                                                           build-lexical-assignment
                                                                           build-lexical-reference
                                                                           build-dynlet
                                                                           build-conditional
                                                                           build-application
                                                                           build-void
                                                                           maybe-name-value!
                                                                           decorate-source
                                                                           get-global-definition-hook
                                                                           put-global-definition-hook
                                                                           gensym-hook
                                                                           local-eval-hook
                                                                           top-level-eval-hook
                                                                           fx<
                                                                           fx=
                                                                           fx-
                                                                           fx+
                                                                           set-lambda-meta!
                                                                           lambda-meta
                                                                           lambda?
                                                                           make-dynlet
                                                                           make-letrec
                                                                           make-let
                                                                           make-lambda-case
                                                                           make-lambda
                                                                           make-sequence
                                                                           make-application
                                                                           make-conditional
                                                                           make-toplevel-define
                                                                           make-toplevel-set
                                                                           make-toplevel-ref
                                                                           make-module-set
                                                                           make-module-ref
                                                                           make-lexical-set
                                                                           make-lexical-ref
                                                                           make-primitive-ref
                                                                           make-const
                                                                           make-void)
                                                                         ((top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top))
                                                                         ("i465"
                                                                          "i463"
                                                                          "i461"
                                                                          "i459"
                                                                          "i457"
                                                                          "i455"
                                                                          "i453"
                                                                          "i451"
                                                                          "i449"
                                                                          "i447"
                                                                          "i445"
                                                                          "i443"
                                                                          "i441"
                                                                          "i439"
                                                                          "i437"
                                                                          "i435"
                                                                          "i433"
                                                                          "i431"
                                                                          "i429"
                                                                          "i427"
                                                                          "i425"
                                                                          "i423"
                                                                          "i421"
                                                                          "i419"
                                                                          "i417"
                                                                          "i415"
                                                                          "i413"
                                                                          "i411"
                                                                          "i409"
                                                                          "i407"
                                                                          "i405"
                                                                          "i403"
                                                                          "i401"
                                                                          "i399"
                                                                          "i397"
                                                                          "i396"
                                                                          "i394"
                                                                          "i391"
                                                                          "i390"
                                                                          "i389"
                                                                          "i387"
                                                                          "i386"
                                                                          "i384"
                                                                          "i382"
                                                                          "i380"
                                                                          "i378"
                                                                          "i376"
                                                                          "i374"
                                                                          "i372"
                                                                          "i370"
                                                                          "i367"
                                                                          "i365"
                                                                          "i364"
                                                                          "i362"
                                                                          "i360"
                                                                          "i358"
                                                                          "i356"
                                                                          "i355"
                                                                          "i354"
                                                                          "i353"
                                                                          "i351"
                                                                          "i350"
                                                                          "i347"
                                                                          "i345"
                                                                          "i343"
                                                                          "i341"
                                                                          "i339"
                                                                          "i337"
                                                                          "i335"
                                                                          "i334"
                                                                          "i333"
                                                                          "i331"
                                                                          "i329"
                                                                          "i328"
                                                                          "i325"
                                                                          "i324"
                                                                          "i322"
                                                                          "i320"
                                                                          "i318"
                                                                          "i316"
                                                                          "i314"
                                                                          "i312"
                                                                          "i310"
                                                                          "i308"
                                                                          "i306"
                                                                          "i303"
                                                                          "i301"
                                                                          "i299"
                                                                          "i297"
                                                                          "i295"
                                                                          "i293"
                                                                          "i291"
                                                                          "i289"
                                                                          "i287"
                                                                          "i285"
                                                                          "i283"
                                                                          "i281"
                                                                          "i279"
                                                                          "i277"
                                                                          "i275"
                                                                          "i273"
                                                                          "i271"
                                                                          "i269"
                                                                          "i267"
                                                                          "i265"
                                                                          "i263"
                                                                          "i261"
                                                                          "i259"
                                                                          "i258"
                                                                          "i255"
                                                                          "i253"
                                                                          "i252"
                                                                          "i251"
                                                                          "i250"
                                                                          "i249"
                                                                          "i247"
                                                                          "i245"
                                                                          "i243"
                                                                          "i240"
                                                                          "i238"
                                                                          "i236"
                                                                          "i234"
                                                                          "i232"
                                                                          "i230"
                                                                          "i228"
                                                                          "i226"
                                                                          "i224"
                                                                          "i222"
                                                                          "i220"
                                                                          "i218"
                                                                          "i216"
                                                                          "i214"
                                                                          "i212"
                                                                          "i210"
                                                                          "i208"
                                                                          "i206"))
                                                                       #(ribcage
                                                                         (define-structure
                                                                           define-expansion-accessors
                                                                           define-expansion-constructors)
                                                                         ((top)
                                                                          (top)
                                                                          (top))
                                                                         ("i44"
                                                                          "i43"
                                                                          "i42")))
                                                                      (hygiene
                                                                        guile)))
                                                                 4)
                                                            (eq? (vector-ref
                                                                   '#(syntax-object
                                                                      ...
                                                                      ((top)
                                                                       #(ribcage
                                                                         ()
                                                                         ()
                                                                         ())
                                                                       #(ribcage
                                                                         ()
                                                                         ()
                                                                         ())
                                                                       #(ribcage
                                                                         #(x)
                                                                         #((top))
                                                                         #("i2228"))
                                                                       #(ribcage
                                                                         (lambda-var-list
                                                                           gen-var
                                                                           strip
                                                                           chi-lambda-case
                                                                           lambda*-formals
                                                                           chi-simple-lambda
                                                                           lambda-formals
                                                                           ellipsis?
                                                                           chi-void
                                                                           eval-local-transformer
                                                                           chi-local-syntax
                                                                           chi-body
                                                                           chi-macro
                                                                           chi-application
                                                                           chi-expr
                                                                           chi
                                                                           syntax-type
                                                                           chi-when-list
                                                                           chi-install-global
                                                                           chi-top-sequence
                                                                           chi-sequence
                                                                           source-wrap
                                                                           wrap
                                                                           bound-id-member?
                                                                           distinct-bound-ids?
                                                                           valid-bound-ids?
                                                                           bound-id=?
                                                                           free-id=?
                                                                           id-var-name
                                                                           same-marks?
                                                                           join-marks
                                                                           join-wraps
                                                                           smart-append
                                                                           make-binding-wrap
                                                                           extend-ribcage!
                                                                           make-empty-ribcage
                                                                           new-mark
                                                                           anti-mark
                                                                           the-anti-mark
                                                                           top-marked?
                                                                           top-wrap
                                                                           empty-wrap
                                                                           set-ribcage-labels!
                                                                           set-ribcage-marks!
                                                                           set-ribcage-symnames!
                                                                           ribcage-labels
                                                                           ribcage-marks
                                                                           ribcage-symnames
                                                                           ribcage?
                                                                           make-ribcage
                                                                           gen-labels
                                                                           gen-label
                                                                           make-rename
                                                                           rename-marks
                                                                           rename-new
                                                                           rename-old
                                                                           subst-rename?
                                                                           wrap-subst
                                                                           wrap-marks
                                                                           make-wrap
                                                                           id-sym-name&marks
                                                                           id-sym-name
                                                                           id?
                                                                           nonsymbol-id?
                                                                           global-extend
                                                                           lookup
                                                                           macros-only-env
                                                                           extend-var-env
                                                                           extend-env
                                                                           null-env
                                                                           binding-value
                                                                           binding-type
                                                                           make-binding
                                                                           arg-check
                                                                           source-annotation
                                                                           no-source
                                                                           set-syntax-object-module!
                                                                           set-syntax-object-wrap!
                                                                           set-syntax-object-expression!
                                                                           syntax-object-module
                                                                           syntax-object-wrap
                                                                           syntax-object-expression
                                                                           syntax-object?
                                                                           make-syntax-object
                                                                           build-lexical-var
                                                                           build-letrec
                                                                           build-named-let
                                                                           build-let
                                                                           build-sequence
                                                                           build-data
                                                                           build-primref
                                                                           build-lambda-case
                                                                           build-case-lambda
                                                                           build-simple-lambda
                                                                           build-global-definition
                                                                           build-global-assignment
                                                                           build-global-reference
                                                                           analyze-variable
                                                                           build-lexical-assignment
                                                                           build-lexical-reference
                                                                           build-dynlet
                                                                           build-conditional
                                                                           build-application
                                                                           build-void
                                                                           maybe-name-value!
                                                                           decorate-source
                                                                           get-global-definition-hook
                                                                           put-global-definition-hook
                                                                           gensym-hook
                                                                           local-eval-hook
                                                                           top-level-eval-hook
                                                                           fx<
                                                                           fx=
                                                                           fx-
                                                                           fx+
                                                                           set-lambda-meta!
                                                                           lambda-meta
                                                                           lambda?
                                                                           make-dynlet
                                                                           make-letrec
                                                                           make-let
                                                                           make-lambda-case
                                                                           make-lambda
                                                                           make-sequence
                                                                           make-application
                                                                           make-conditional
                                                                           make-toplevel-define
                                                                           make-toplevel-set
                                                                           make-toplevel-ref
                                                                           make-module-set
                                                                           make-module-ref
                                                                           make-lexical-set
                                                                           make-lexical-ref
                                                                           make-primitive-ref
                                                                           make-const
                                                                           make-void)
                                                                         ((top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top))
                                                                         ("i465"
                                                                          "i463"
                                                                          "i461"
                                                                          "i459"
                                                                          "i457"
                                                                          "i455"
                                                                          "i453"
                                                                          "i451"
                                                                          "i449"
                                                                          "i447"
                                                                          "i445"
                                                                          "i443"
                                                                          "i441"
                                                                          "i439"
                                                                          "i437"
                                                                          "i435"
                                                                          "i433"
                                                                          "i431"
                                                                          "i429"
                                                                          "i427"
                                                                          "i425"
                                                                          "i423"
                                                                          "i421"
                                                                          "i419"
                                                                          "i417"
                                                                          "i415"
                                                                          "i413"
                                                                          "i411"
                                                                          "i409"
                                                                          "i407"
                                                                          "i405"
                                                                          "i403"
                                                                          "i401"
                                                                          "i399"
                                                                          "i397"
                                                                          "i396"
                                                                          "i394"
                                                                          "i391"
                                                                          "i390"
                                                                          "i389"
                                                                          "i387"
                                                                          "i386"
                                                                          "i384"
                                                                          "i382"
                                                                          "i380"
                                                                          "i378"
                                                                          "i376"
                                                                          "i374"
                                                                          "i372"
                                                                          "i370"
                                                                          "i367"
                                                                          "i365"
                                                                          "i364"
                                                                          "i362"
                                                                          "i360"
                                                                          "i358"
                                                                          "i356"
                                                                          "i355"
                                                                          "i354"
                                                                          "i353"
                                                                          "i351"
                                                                          "i350"
                                                                          "i347"
                                                                          "i345"
                                                                          "i343"
                                                                          "i341"
                                                                          "i339"
                                                                          "i337"
                                                                          "i335"
                                                                          "i334"
                                                                          "i333"
                                                                          "i331"
                                                                          "i329"
                                                                          "i328"
                                                                          "i325"
                                                                          "i324"
                                                                          "i322"
                                                                          "i320"
                                                                          "i318"
                                                                          "i316"
                                                                          "i314"
                                                                          "i312"
                                                                          "i310"
                                                                          "i308"
                                                                          "i306"
                                                                          "i303"
                                                                          "i301"
                                                                          "i299"
                                                                          "i297"
                                                                          "i295"
                                                                          "i293"
                                                                          "i291"
                                                                          "i289"
                                                                          "i287"
                                                                          "i285"
                                                                          "i283"
                                                                          "i281"
                                                                          "i279"
                                                                          "i277"
                                                                          "i275"
                                                                          "i273"
                                                                          "i271"
                                                                          "i269"
                                                                          "i267"
                                                                          "i265"
                                                                          "i263"
                                                                          "i261"
                                                                          "i259"
                                                                          "i258"
                                                                          "i255"
                                                                          "i253"
                                                                          "i252"
                                                                          "i251"
                                                                          "i250"
                                                                          "i249"
                                                                          "i247"
                                                                          "i245"
                                                                          "i243"
                                                                          "i240"
                                                                          "i238"
                                                                          "i236"
                                                                          "i234"
                                                                          "i232"
                                                                          "i230"
                                                                          "i228"
                                                                          "i226"
                                                                          "i224"
                                                                          "i222"
                                                                          "i220"
                                                                          "i218"
                                                                          "i216"
                                                                          "i214"
                                                                          "i212"
                                                                          "i210"
                                                                          "i208"
                                                                          "i206"))
                                                                       #(ribcage
                                                                         (define-structure
                                                                           define-expansion-accessors
                                                                           define-expansion-constructors)
                                                                         ((top)
                                                                          (top)
                                                                          (top))
                                                                         ("i44"
                                                                          "i43"
                                                                          "i42")))
                                                                      (hygiene
                                                                        guile))
                                                                   0)
                                                                 'syntax-object)
                                                            #f)
                                                        (vector-ref
                                                          '#(syntax-object
                                                             ...
                                                             ((top)
                                                              #(ribcage
                                                                ()
                                                                ()
                                                                ())
                                                              #(ribcage
                                                                ()
                                                                ()
                                                                ())
                                                              #(ribcage
                                                                #(x)
                                                                #((top))
                                                                #("i2228"))
                                                              #(ribcage
                                                                (lambda-var-list
                                                                  gen-var
                                                                  strip
                                                                  chi-lambda-case
                                                                  lambda*-formals
                                                                  chi-simple-lambda
                                                                  lambda-formals
                                                                  ellipsis?
                                                                  chi-void
                                                                  eval-local-transformer
                                                                  chi-local-syntax
                                                                  chi-body
                                                                  chi-macro
                                                                  chi-application
                                                                  chi-expr
                                                                  chi
                                                                  syntax-type
                                                                  chi-when-list
                                                                  chi-install-global
                                                                  chi-top-sequence
                                                                  chi-sequence
                                                                  source-wrap
                                                                  wrap
                                                                  bound-id-member?
                                                                  distinct-bound-ids?
                                                                  valid-bound-ids?
                                                                  bound-id=?
                                                                  free-id=?
                                                                  id-var-name
                                                                  same-marks?
                                                                  join-marks
                                                                  join-wraps
                                                                  smart-append
                                                                  make-binding-wrap
                                                                  extend-ribcage!
                                                                  make-empty-ribcage
                                                                  new-mark
                                                                  anti-mark
                                                                  the-anti-mark
                                                                  top-marked?
                                                                  top-wrap
                                                                  empty-wrap
                                                                  set-ribcage-labels!
                                                                  set-ribcage-marks!
                                                                  set-ribcage-symnames!
                                                                  ribcage-labels
                                                                  ribcage-marks
                                                                  ribcage-symnames
                                                                  ribcage?
                                                                  make-ribcage
                                                                  gen-labels
                                                                  gen-label
                                                                  make-rename
                                                                  rename-marks
                                                                  rename-new
                                                                  rename-old
                                                                  subst-rename?
                                                                  wrap-subst
                                                                  wrap-marks
                                                                  make-wrap
                                                                  id-sym-name&marks
                                                                  id-sym-name
                                                                  id?
                                                                  nonsymbol-id?
                                                                  global-extend
                                                                  lookup
                                                                  macros-only-env
                                                                  extend-var-env
                                                                  extend-env
                                                                  null-env
                                                                  binding-value
                                                                  binding-type
                                                                  make-binding
                                                                  arg-check
                                                                  source-annotation
                                                                  no-source
                                                                  set-syntax-object-module!
                                                                  set-syntax-object-wrap!
                                                                  set-syntax-object-expression!
                                                                  syntax-object-module
                                                                  syntax-object-wrap
                                                                  syntax-object-expression
                                                                  syntax-object?
                                                                  make-syntax-object
                                                                  build-lexical-var
                                                                  build-letrec
                                                                  build-named-let
                                                                  build-let
                                                                  build-sequence
                                                                  build-data
                                                                  build-primref
                                                                  build-lambda-case
                                                                  build-case-lambda
                                                                  build-simple-lambda
                                                                  build-global-definition
                                                                  build-global-assignment
                                                                  build-global-reference
                                                                  analyze-variable
                                                                  build-lexical-assignment
                                                                  build-lexical-reference
                                                                  build-dynlet
                                                                  build-conditional
                                                                  build-application
                                                                  build-void
                                                                  maybe-name-value!
                                                                  decorate-source
                                                                  get-global-definition-hook
                                                                  put-global-definition-hook
                                                                  gensym-hook
                                                                  local-eval-hook
                                                                  top-level-eval-hook
                                                                  fx<
                                                                  fx=
                                                                  fx-
                                                                  fx+
                                                                  set-lambda-meta!
                                                                  lambda-meta
                                                                  lambda?
                                                                  make-dynlet
                                                                  make-letrec
                                                                  make-let
                                                                  make-lambda-case
                                                                  make-lambda
                                                                  make-sequence
                                                                  make-application
                                                                  make-conditional
                                                                  make-toplevel-define
                                                                  make-toplevel-set
                                                                  make-toplevel-ref
                                                                  make-module-set
                                                                  make-module-ref
                                                                  make-lexical-set
                                                                  make-lexical-ref
                                                                  make-primitive-ref
                                                                  make-const
                                                                  make-void)
                                                                ((top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top))
                                                                ("i465"
                                                                 "i463"
                                                                 "i461"
                                                                 "i459"
                                                                 "i457"
                                                                 "i455"
                                                                 "i453"
                                                                 "i451"
                                                                 "i449"
                                                                 "i447"
                                                                 "i445"
                                                                 "i443"
                                                                 "i441"
                                                                 "i439"
                                                                 "i437"
                                                                 "i435"
                                                                 "i433"
                                                                 "i431"
                                                                 "i429"
                                                                 "i427"
                                                                 "i425"
                                                                 "i423"
                                                                 "i421"
                                                                 "i419"
                                                                 "i417"
                                                                 "i415"
                                                                 "i413"
                                                                 "i411"
                                                                 "i409"
                                                                 "i407"
                                                                 "i405"
                                                                 "i403"
                                                                 "i401"
                                                                 "i399"
                                                                 "i397"
                                                                 "i396"
                                                                 "i394"
                                                                 "i391"
                                                                 "i390"
                                                                 "i389"
                                                                 "i387"
                                                                 "i386"
                                                                 "i384"
                                                                 "i382"
                                                                 "i380"
                                                                 "i378"
                                                                 "i376"
                                                                 "i374"
                                                                 "i372"
                                                                 "i370"
                                                                 "i367"
                                                                 "i365"
                                                                 "i364"
                                                                 "i362"
                                                                 "i360"
                                                                 "i358"
                                                                 "i356"
                                                                 "i355"
                                                                 "i354"
                                                                 "i353"
                                                                 "i351"
                                                                 "i350"
                                                                 "i347"
                                                                 "i345"
                                                                 "i343"
                                                                 "i341"
                                                                 "i339"
                                                                 "i337"
                                                                 "i335"
                                                                 "i334"
                                                                 "i333"
                                                                 "i331"
                                                                 "i329"
                                                                 "i328"
                                                                 "i325"
                                                                 "i324"
                                                                 "i322"
                                                                 "i320"
                                                                 "i318"
                                                                 "i316"
                                                                 "i314"
                                                                 "i312"
                                                                 "i310"
                                                                 "i308"
                                                                 "i306"
                                                                 "i303"
                                                                 "i301"
                                                                 "i299"
                                                                 "i297"
                                                                 "i295"
                                                                 "i293"
                                                                 "i291"
                                                                 "i289"
                                                                 "i287"
                                                                 "i285"
                                                                 "i283"
                                                                 "i281"
                                                                 "i279"
                                                                 "i277"
                                                                 "i275"
                                                                 "i273"
                                                                 "i271"
                                                                 "i269"
                                                                 "i267"
                                                                 "i265"
                                                                 "i263"
                                                                 "i261"
                                                                 "i259"
                                                                 "i258"
                                                                 "i255"
                                                                 "i253"
                                                                 "i252"
                                                                 "i251"
                                                                 "i250"
                                                                 "i249"
                                                                 "i247"
                                                                 "i245"
                                                                 "i243"
                                                                 "i240"
                                                                 "i238"
                                                                 "i236"
                                                                 "i234"
                                                                 "i232"
                                                                 "i230"
                                                                 "i228"
                                                                 "i226"
                                                                 "i224"
                                                                 "i222"
                                                                 "i220"
                                                                 "i218"
                                                                 "i216"
                                                                 "i214"
                                                                 "i212"
                                                                 "i210"
                                                                 "i208"
                                                                 "i206"))
                                                              #(ribcage
                                                                (define-structure
                                                                  define-expansion-accessors
                                                                  define-expansion-constructors)
                                                                ((top)
                                                                 (top)
                                                                 (top))
                                                                ("i44"
                                                                 "i43"
                                                                 "i42")))
                                                             (hygiene guile))
                                                          1)
                                                        '#(syntax-object
                                                           ...
                                                           ((top)
                                                            #(ribcage () () ())
                                                            #(ribcage () () ())
                                                            #(ribcage
                                                              #(x)
                                                              #((top))
                                                              #("i2228"))
                                                            #(ribcage
                                                              (lambda-var-list
                                                                gen-var
                                                                strip
                                                                chi-lambda-case
                                                                lambda*-formals
                                                                chi-simple-lambda
                                                                lambda-formals
                                                                ellipsis?
                                                                chi-void
                                                                eval-local-transformer
                                                                chi-local-syntax
                                                                chi-body
                                                                chi-macro
                                                                chi-application
                                                                chi-expr
                                                                chi
                                                                syntax-type
                                                                chi-when-list
                                                                chi-install-global
                                                                chi-top-sequence
                                                                chi-sequence
                                                                source-wrap
                                                                wrap
                                                                bound-id-member?
                                                                distinct-bound-ids?
                                                                valid-bound-ids?
                                                                bound-id=?
                                                                free-id=?
                                                                id-var-name
                                                                same-marks?
                                                                join-marks
                                                                join-wraps
                                                                smart-append
                                                                make-binding-wrap
                                                                extend-ribcage!
                                                                make-empty-ribcage
                                                                new-mark
                                                                anti-mark
                                                                the-anti-mark
                                                                top-marked?
                                                                top-wrap
                                                                empty-wrap
                                                                set-ribcage-labels!
                                                                set-ribcage-marks!
                                                                set-ribcage-symnames!
                                                                ribcage-labels
                                                                ribcage-marks
                                                                ribcage-symnames
                                                                ribcage?
                                                                make-ribcage
                                                                gen-labels
                                                                gen-label
                                                                make-rename
                                                                rename-marks
                                                                rename-new
                                                                rename-old
                                                                subst-rename?
                                                                wrap-subst
                                                                wrap-marks
                                                                make-wrap
                                                                id-sym-name&marks
                                                                id-sym-name
                                                                id?
                                                                nonsymbol-id?
                                                                global-extend
                                                                lookup
                                                                macros-only-env
                                                                extend-var-env
                                                                extend-env
                                                                null-env
                                                                binding-value
                                                                binding-type
                                                                make-binding
                                                                arg-check
                                                                source-annotation
                                                                no-source
                                                                set-syntax-object-module!
                                                                set-syntax-object-wrap!
                                                                set-syntax-object-expression!
                                                                syntax-object-module
                                                                syntax-object-wrap
                                                                syntax-object-expression
                                                                syntax-object?
                                                                make-syntax-object
                                                                build-lexical-var
                                                                build-letrec
                                                                build-named-let
                                                                build-let
                                                                build-sequence
                                                                build-data
                                                                build-primref
                                                                build-lambda-case
                                                                build-case-lambda
                                                                build-simple-lambda
                                                                build-global-definition
                                                                build-global-assignment
                                                                build-global-reference
                                                                analyze-variable
                                                                build-lexical-assignment
                                                                build-lexical-reference
                                                                build-dynlet
                                                                build-conditional
                                                                build-application
                                                                build-void
                                                                maybe-name-value!
                                                                decorate-source
                                                                get-global-definition-hook
                                                                put-global-definition-hook
                                                                gensym-hook
                                                                local-eval-hook
                                                                top-level-eval-hook
                                                                fx<
                                                                fx=
                                                                fx-
                                                                fx+
                                                                set-lambda-meta!
                                                                lambda-meta
                                                                lambda?
                                                                make-dynlet
                                                                make-letrec
                                                                make-let
                                                                make-lambda-case
                                                                make-lambda
                                                                make-sequence
                                                                make-application
                                                                make-conditional
                                                                make-toplevel-define
                                                                make-toplevel-set
                                                                make-toplevel-ref
                                                                make-module-set
                                                                make-module-ref
                                                                make-lexical-set
                                                                make-lexical-ref
                                                                make-primitive-ref
                                                                make-const
                                                                make-void)
                                                              ((top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top))
                                                              ("i465"
                                                               "i463"
                                                               "i461"
                                                               "i459"
                                                               "i457"
                                                               "i455"
                                                               "i453"
                                                               "i451"
                                                               "i449"
                                                               "i447"
                                                               "i445"
                                                               "i443"
                                                               "i441"
                                                               "i439"
                                                               "i437"
                                                               "i435"
                                                               "i433"
                                                               "i431"
                                                               "i429"
                                                               "i427"
                                                               "i425"
                                                               "i423"
                                                               "i421"
                                                               "i419"
                                                               "i417"
                                                               "i415"
                                                               "i413"
                                                               "i411"
                                                               "i409"
                                                               "i407"
                                                               "i405"
                                                               "i403"
                                                               "i401"
                                                               "i399"
                                                               "i397"
                                                               "i396"
                                                               "i394"
                                                               "i391"
                                                               "i390"
                                                               "i389"
                                                               "i387"
                                                               "i386"
                                                               "i384"
                                                               "i382"
                                                               "i380"
                                                               "i378"
                                                               "i376"
                                                               "i374"
                                                               "i372"
                                                               "i370"
                                                               "i367"
                                                               "i365"
                                                               "i364"
                                                               "i362"
                                                               "i360"
                                                               "i358"
                                                               "i356"
                                                               "i355"
                                                               "i354"
                                                               "i353"
                                                               "i351"
                                                               "i350"
                                                               "i347"
                                                               "i345"
                                                               "i343"
                                                               "i341"
                                                               "i339"
                                                               "i337"
                                                               "i335"
                                                               "i334"
                                                               "i333"
                                                               "i331"
                                                               "i329"
                                                               "i328"
                                                               "i325"
                                                               "i324"
                                                               "i322"
                                                               "i320"
                                                               "i318"
                                                               "i316"
                                                               "i314"
                                                               "i312"
                                                               "i310"
                                                               "i308"
                                                               "i306"
                                                               "i303"
                                                               "i301"
                                                               "i299"
                                                               "i297"
                                                               "i295"
                                                               "i293"
                                                               "i291"
                                                               "i289"
                                                               "i287"
                                                               "i285"
                                                               "i283"
                                                               "i281"
                                                               "i279"
                                                               "i277"
                                                               "i275"
                                                               "i273"
                                                               "i271"
                                                               "i269"
                                                               "i267"
                                                               "i265"
                                                               "i263"
                                                               "i261"
                                                               "i259"
                                                               "i258"
                                                               "i255"
                                                               "i253"
                                                               "i252"
                                                               "i251"
                                                               "i250"
                                                               "i249"
                                                               "i247"
                                                               "i245"
                                                               "i243"
                                                               "i240"
                                                               "i238"
                                                               "i236"
                                                               "i234"
                                                               "i232"
                                                               "i230"
                                                               "i228"
                                                               "i226"
                                                               "i224"
                                                               "i222"
                                                               "i220"
                                                               "i218"
                                                               "i216"
                                                               "i214"
                                                               "i212"
                                                               "i210"
                                                               "i208"
                                                               "i206"))
                                                            #(ribcage
                                                              (define-structure
                                                                define-expansion-accessors
                                                                define-expansion-constructors)
                                                              ((top)
                                                               (top)
                                                               (top))
                                                              ("i44"
                                                               "i43"
                                                               "i42")))
                                                           (hygiene guile))))
                                               (eq? (#{id-var-name 410}#
                                                      #{x 9163}#
                                                      '(()))
                                                    (#{id-var-name 410}#
                                                      '#(syntax-object
                                                         ...
                                                         ((top)
                                                          #(ribcage () () ())
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(x)
                                                            #((top))
                                                            #("i2228"))
                                                          #(ribcage
                                                            (lambda-var-list
                                                              gen-var
                                                              strip
                                                              chi-lambda-case
                                                              lambda*-formals
                                                              chi-simple-lambda
                                                              lambda-formals
                                                              ellipsis?
                                                              chi-void
                                                              eval-local-transformer
                                                              chi-local-syntax
                                                              chi-body
                                                              chi-macro
                                                              chi-application
                                                              chi-expr
                                                              chi
                                                              syntax-type
                                                              chi-when-list
                                                              chi-install-global
                                                              chi-top-sequence
                                                              chi-sequence
                                                              source-wrap
                                                              wrap
                                                              bound-id-member?
                                                              distinct-bound-ids?
                                                              valid-bound-ids?
                                                              bound-id=?
                                                              free-id=?
                                                              id-var-name
                                                              same-marks?
                                                              join-marks
                                                              join-wraps
                                                              smart-append
                                                              make-binding-wrap
                                                              extend-ribcage!
                                                              make-empty-ribcage
                                                              new-mark
                                                              anti-mark
                                                              the-anti-mark
                                                              top-marked?
                                                              top-wrap
                                                              empty-wrap
                                                              set-ribcage-labels!
                                                              set-ribcage-marks!
                                                              set-ribcage-symnames!
                                                              ribcage-labels
                                                              ribcage-marks
                                                              ribcage-symnames
                                                              ribcage?
                                                              make-ribcage
                                                              gen-labels
                                                              gen-label
                                                              make-rename
                                                              rename-marks
                                                              rename-new
                                                              rename-old
                                                              subst-rename?
                                                              wrap-subst
                                                              wrap-marks
                                                              make-wrap
                                                              id-sym-name&marks
                                                              id-sym-name
                                                              id?
                                                              nonsymbol-id?
                                                              global-extend
                                                              lookup
                                                              macros-only-env
                                                              extend-var-env
                                                              extend-env
                                                              null-env
                                                              binding-value
                                                              binding-type
                                                              make-binding
                                                              arg-check
                                                              source-annotation
                                                              no-source
                                                              set-syntax-object-module!
                                                              set-syntax-object-wrap!
                                                              set-syntax-object-expression!
                                                              syntax-object-module
                                                              syntax-object-wrap
                                                              syntax-object-expression
                                                              syntax-object?
                                                              make-syntax-object
                                                              build-lexical-var
                                                              build-letrec
                                                              build-named-let
                                                              build-let
                                                              build-sequence
                                                              build-data
                                                              build-primref
                                                              build-lambda-case
                                                              build-case-lambda
                                                              build-simple-lambda
                                                              build-global-definition
                                                              build-global-assignment
                                                              build-global-reference
                                                              analyze-variable
                                                              build-lexical-assignment
                                                              build-lexical-reference
                                                              build-dynlet
                                                              build-conditional
                                                              build-application
                                                              build-void
                                                              maybe-name-value!
                                                              decorate-source
                                                              get-global-definition-hook
                                                              put-global-definition-hook
                                                              gensym-hook
                                                              local-eval-hook
                                                              top-level-eval-hook
                                                              fx<
                                                              fx=
                                                              fx-
                                                              fx+
                                                              set-lambda-meta!
                                                              lambda-meta
                                                              lambda?
                                                              make-dynlet
                                                              make-letrec
                                                              make-let
                                                              make-lambda-case
                                                              make-lambda
                                                              make-sequence
                                                              make-application
                                                              make-conditional
                                                              make-toplevel-define
                                                              make-toplevel-set
                                                              make-toplevel-ref
                                                              make-module-set
                                                              make-module-ref
                                                              make-lexical-set
                                                              make-lexical-ref
                                                              make-primitive-ref
                                                              make-const
                                                              make-void)
                                                            ((top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top))
                                                            ("i465"
                                                             "i463"
                                                             "i461"
                                                             "i459"
                                                             "i457"
                                                             "i455"
                                                             "i453"
                                                             "i451"
                                                             "i449"
                                                             "i447"
                                                             "i445"
                                                             "i443"
                                                             "i441"
                                                             "i439"
                                                             "i437"
                                                             "i435"
                                                             "i433"
                                                             "i431"
                                                             "i429"
                                                             "i427"
                                                             "i425"
                                                             "i423"
                                                             "i421"
                                                             "i419"
                                                             "i417"
                                                             "i415"
                                                             "i413"
                                                             "i411"
                                                             "i409"
                                                             "i407"
                                                             "i405"
                                                             "i403"
                                                             "i401"
                                                             "i399"
                                                             "i397"
                                                             "i396"
                                                             "i394"
                                                             "i391"
                                                             "i390"
                                                             "i389"
                                                             "i387"
                                                             "i386"
                                                             "i384"
                                                             "i382"
                                                             "i380"
                                                             "i378"
                                                             "i376"
                                                             "i374"
                                                             "i372"
                                                             "i370"
                                                             "i367"
                                                             "i365"
                                                             "i364"
                                                             "i362"
                                                             "i360"
                                                             "i358"
                                                             "i356"
                                                             "i355"
                                                             "i354"
                                                             "i353"
                                                             "i351"
                                                             "i350"
                                                             "i347"
                                                             "i345"
                                                             "i343"
                                                             "i341"
                                                             "i339"
                                                             "i337"
                                                             "i335"
                                                             "i334"
                                                             "i333"
                                                             "i331"
                                                             "i329"
                                                             "i328"
                                                             "i325"
                                                             "i324"
                                                             "i322"
                                                             "i320"
                                                             "i318"
                                                             "i316"
                                                             "i314"
                                                             "i312"
                                                             "i310"
                                                             "i308"
                                                             "i306"
                                                             "i303"
                                                             "i301"
                                                             "i299"
                                                             "i297"
                                                             "i295"
                                                             "i293"
                                                             "i291"
                                                             "i289"
                                                             "i287"
                                                             "i285"
                                                             "i283"
                                                             "i281"
                                                             "i279"
                                                             "i277"
                                                             "i275"
                                                             "i273"
                                                             "i271"
                                                             "i269"
                                                             "i267"
                                                             "i265"
                                                             "i263"
                                                             "i261"
                                                             "i259"
                                                             "i258"
                                                             "i255"
                                                             "i253"
                                                             "i252"
                                                             "i251"
                                                             "i250"
                                                             "i249"
                                                             "i247"
                                                             "i245"
                                                             "i243"
                                                             "i240"
                                                             "i238"
                                                             "i236"
                                                             "i234"
                                                             "i232"
                                                             "i230"
                                                             "i228"
                                                             "i226"
                                                             "i224"
                                                             "i222"
                                                             "i220"
                                                             "i218"
                                                             "i216"
                                                             "i214"
                                                             "i212"
                                                             "i210"
                                                             "i208"
                                                             "i206"))
                                                          #(ribcage
                                                            (define-structure
                                                              define-expansion-accessors
                                                              define-expansion-constructors)
                                                            ((top) (top) (top))
                                                            ("i44"
                                                             "i43"
                                                             "i42")))
                                                         (hygiene guile))
                                                      '(())))
                                               #f)
                                             #f)))))
                                #{pvars 3864}#))
                       (syntax-violation
                         'syntax-case
                         "misplaced ellipsis"
                         #{pat 3851}#)
                       (begin
                         (let ((#{y 3875}#
                                 (gensym
                                   (string-append (symbol->string 'tmp) " "))))
                           (begin
                             (let ((#{fun-exp 9203}#
                                     (begin
                                       (let ((#{req 9208}# (list 'tmp))
                                             (#{vars 9210}# (list #{y 3875}#))
                                             (#{exp 9212}#
                                               (begin
                                                 (let ((#{y 3879}#
                                                         (make-struct/no-tail
                                                           (vector-ref
                                                             %expanded-vtables
                                                             3)
                                                           #f
                                                           'tmp
                                                           #{y 3875}#)))
                                                   (begin
                                                     (let ((#{test-exp 9227}#
                                                             (begin
                                                               (let ((#{tmp 3883}#
                                                                       ($sc-dispatch
                                                                         #{fender 3852}#
                                                                         '#(atom
                                                                            #t))))
                                                                 (if #{tmp 3883}#
                                                                   (@apply
                                                                     (lambda ()
                                                                       #{y 3879}#)
                                                                     #{tmp 3883}#)
                                                                   (begin
                                                                     (let ((#{then-exp 9234}#
                                                                             (#{build-dispatch-call 3705}#
                                                                               #{pvars 3864}#
                                                                               #{fender 3852}#
                                                                               #{y 3879}#
                                                                               #{r 3850}#
                                                                               #{mod 3854}#))
                                                                           (#{else-exp 9235}#
                                                                             (make-struct/no-tail
                                                                               (vector-ref
                                                                                 %expanded-vtables
                                                                                 1)
                                                                               #f
                                                                               #f)))
                                                                       (make-struct/no-tail
                                                                         (vector-ref
                                                                           %expanded-vtables
                                                                           10)
                                                                         #f
                                                                         #{y 3879}#
                                                                         #{then-exp 9234}#
                                                                         #{else-exp 9235}#)))))))
                                                           (#{then-exp 9228}#
                                                             (#{build-dispatch-call 3705}#
                                                               #{pvars 3864}#
                                                               #{exp 3853}#
                                                               #{y 3879}#
                                                               #{r 3850}#
                                                               #{mod 3854}#))
                                                           (#{else-exp 9229}#
                                                             (#{gen-syntax-case 3709}#
                                                               #{x 3847}#
                                                               #{keys 3848}#
                                                               #{clauses 3849}#
                                                               #{r 3850}#
                                                               #{mod 3854}#)))
                                                       (make-struct/no-tail
                                                         (vector-ref
                                                           %expanded-vtables
                                                           10)
                                                         #f
                                                         #{test-exp 9227}#
                                                         #{then-exp 9228}#
                                                         #{else-exp 9229}#)))))))
                                         (begin
                                           (let ((#{body 9260}#
                                                   (make-struct/no-tail
                                                     (vector-ref
                                                       %expanded-vtables
                                                       14)
                                                     #f
                                                     #{req 9208}#
                                                     #f
                                                     #f
                                                     #f
                                                     '()
                                                     #{vars 9210}#
                                                     #{exp 9212}#
                                                     #f)))
                                             (make-struct/no-tail
                                               (vector-ref
                                                 %expanded-vtables
                                                 13)
                                               #f
                                               '()
                                               #{body 9260}#))))))
                                   (#{arg-exps 9204}#
                                     (list (if (eq? #{p 3863}# 'any)
                                             (begin
                                               (let ((#{fun-exp 9275}#
                                                       (if (equal?
                                                             (module-name
                                                               (current-module))
                                                             '(guile))
                                                         (make-struct/no-tail
                                                           (vector-ref
                                                             %expanded-vtables
                                                             7)
                                                           #f
                                                           'list)
                                                         (make-struct/no-tail
                                                           (vector-ref
                                                             %expanded-vtables
                                                             5)
                                                           #f
                                                           '(guile)
                                                           'list
                                                           #f)))
                                                     (#{arg-exps 9276}#
                                                       (list #{x 3847}#)))
                                                 (make-struct/no-tail
                                                   (vector-ref
                                                     %expanded-vtables
                                                     11)
                                                   #f
                                                   #{fun-exp 9275}#
                                                   #{arg-exps 9276}#)))
                                             (begin
                                               (let ((#{fun-exp 9298}#
                                                       (if (equal?
                                                             (module-name
                                                               (current-module))
                                                             '(guile))
                                                         (make-struct/no-tail
                                                           (vector-ref
                                                             %expanded-vtables
                                                             7)
                                                           #f
                                                           '$sc-dispatch)
                                                         (make-struct/no-tail
                                                           (vector-ref
                                                             %expanded-vtables
                                                             5)
                                                           #f
                                                           '(guile)
                                                           '$sc-dispatch
                                                           #f)))
                                                     (#{arg-exps 9299}#
                                                       (list #{x 3847}#
                                                             (make-struct/no-tail
                                                               (vector-ref
                                                                 %expanded-vtables
                                                                 1)
                                                               #f
                                                               #{p 3863}#))))
                                                 (make-struct/no-tail
                                                   (vector-ref
                                                     %expanded-vtables
                                                     11)
                                                   #f
                                                   #{fun-exp 9298}#
                                                   #{arg-exps 9299}#)))))))
                               (make-struct/no-tail
                                 (vector-ref %expanded-vtables 11)
                                 #f
                                 #{fun-exp 9203}#
                                 #{arg-exps 9204}#)))))))))))
           (#{gen-syntax-case 3709}#
             (lambda (#{x 3893}#
                      #{keys 3894}#
                      #{clauses 3895}#
                      #{r 3896}#
                      #{mod 3897}#)
               (if (null? #{clauses 3895}#)
                 (begin
                   (let ((#{fun-exp 9334}#
                           (if (equal? (module-name (current-module)) '(guile))
                             (make-struct/no-tail
                               (vector-ref %expanded-vtables 7)
                               #f
                               'syntax-violation)
                             (make-struct/no-tail
                               (vector-ref %expanded-vtables 5)
                               #f
                               '(guile)
                               'syntax-violation
                               #f)))
                         (#{arg-exps 9335}#
                           (list (make-struct/no-tail
                                   (vector-ref %expanded-vtables 1)
                                   #f
                                   #f)
                                 (make-struct/no-tail
                                   (vector-ref %expanded-vtables 1)
                                   #f
                                   "source expression failed to match any pattern")
                                 #{x 3893}#)))
                     (make-struct/no-tail
                       (vector-ref %expanded-vtables 11)
                       #f
                       #{fun-exp 9334}#
                       #{arg-exps 9335}#)))
                 (begin
                   (let ((#{tmp 3907}# (car #{clauses 3895}#)))
                     (begin
                       (let ((#{tmp 3908}#
                               ($sc-dispatch #{tmp 3907}# '(any any))))
                         (if #{tmp 3908}#
                           (@apply
                             (lambda (#{pat 3911}# #{exp 3912}#)
                               (if (if (if (symbol? #{pat 3911}#)
                                         #t
                                         (if (if (vector? #{pat 3911}#)
                                               (if (= (vector-length
                                                        #{pat 3911}#)
                                                      4)
                                                 (eq? (vector-ref
                                                        #{pat 3911}#
                                                        0)
                                                      'syntax-object)
                                                 #f)
                                               #f)
                                           (symbol?
                                             (vector-ref #{pat 3911}# 1))
                                           #f))
                                     (and-map
                                       (lambda (#{x 3915}#)
                                         (not (if (eq? (if (if (vector?
                                                                 #{pat 3911}#)
                                                             (if (= (vector-length
                                                                      #{pat 3911}#)
                                                                    4)
                                                               (eq? (vector-ref
                                                                      #{pat 3911}#
                                                                      0)
                                                                    'syntax-object)
                                                               #f)
                                                             #f)
                                                         (vector-ref
                                                           #{pat 3911}#
                                                           1)
                                                         #{pat 3911}#)
                                                       (if (if (vector?
                                                                 #{x 3915}#)
                                                             (if (= (vector-length
                                                                      #{x 3915}#)
                                                                    4)
                                                               (eq? (vector-ref
                                                                      #{x 3915}#
                                                                      0)
                                                                    'syntax-object)
                                                               #f)
                                                             #f)
                                                         (vector-ref
                                                           #{x 3915}#
                                                           1)
                                                         #{x 3915}#))
                                                (eq? (#{id-var-name 410}#
                                                       #{pat 3911}#
                                                       '(()))
                                                     (#{id-var-name 410}#
                                                       #{x 3915}#
                                                       '(())))
                                                #f)))
                                       (cons '#(syntax-object
                                                ...
                                                ((top)
                                                 #(ribcage
                                                   #(pat exp)
                                                   #((top) (top))
                                                   #("i3909" "i3910"))
                                                 #(ribcage () () ())
                                                 #(ribcage
                                                   #(x keys clauses r mod)
                                                   #((top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top))
                                                   #("i3898"
                                                     "i3899"
                                                     "i3900"
                                                     "i3901"
                                                     "i3902"))
                                                 #(ribcage
                                                   (gen-syntax-case
                                                     gen-clause
                                                     build-dispatch-call
                                                     convert-pattern)
                                                   ((top) (top) (top) (top))
                                                   ("i3708"
                                                    "i3706"
                                                    "i3704"
                                                    "i3702"))
                                                 #(ribcage
                                                   (lambda-var-list
                                                     gen-var
                                                     strip
                                                     chi-lambda-case
                                                     lambda*-formals
                                                     chi-simple-lambda
                                                     lambda-formals
                                                     ellipsis?
                                                     chi-void
                                                     eval-local-transformer
                                                     chi-local-syntax
                                                     chi-body
                                                     chi-macro
                                                     chi-application
                                                     chi-expr
                                                     chi
                                                     syntax-type
                                                     chi-when-list
                                                     chi-install-global
                                                     chi-top-sequence
                                                     chi-sequence
                                                     source-wrap
                                                     wrap
                                                     bound-id-member?
                                                     distinct-bound-ids?
                                                     valid-bound-ids?
                                                     bound-id=?
                                                     free-id=?
                                                     id-var-name
                                                     same-marks?
                                                     join-marks
                                                     join-wraps
                                                     smart-append
                                                     make-binding-wrap
                                                     extend-ribcage!
                                                     make-empty-ribcage
                                                     new-mark
                                                     anti-mark
                                                     the-anti-mark
                                                     top-marked?
                                                     top-wrap
                                                     empty-wrap
                                                     set-ribcage-labels!
                                                     set-ribcage-marks!
                                                     set-ribcage-symnames!
                                                     ribcage-labels
                                                     ribcage-marks
                                                     ribcage-symnames
                                                     ribcage?
                                                     make-ribcage
                                                     gen-labels
                                                     gen-label
                                                     make-rename
                                                     rename-marks
                                                     rename-new
                                                     rename-old
                                                     subst-rename?
                                                     wrap-subst
                                                     wrap-marks
                                                     make-wrap
                                                     id-sym-name&marks
                                                     id-sym-name
                                                     id?
                                                     nonsymbol-id?
                                                     global-extend
                                                     lookup
                                                     macros-only-env
                                                     extend-var-env
                                                     extend-env
                                                     null-env
                                                     binding-value
                                                     binding-type
                                                     make-binding
                                                     arg-check
                                                     source-annotation
                                                     no-source
                                                     set-syntax-object-module!
                                                     set-syntax-object-wrap!
                                                     set-syntax-object-expression!
                                                     syntax-object-module
                                                     syntax-object-wrap
                                                     syntax-object-expression
                                                     syntax-object?
                                                     make-syntax-object
                                                     build-lexical-var
                                                     build-letrec
                                                     build-named-let
                                                     build-let
                                                     build-sequence
                                                     build-data
                                                     build-primref
                                                     build-lambda-case
                                                     build-case-lambda
                                                     build-simple-lambda
                                                     build-global-definition
                                                     build-global-assignment
                                                     build-global-reference
                                                     analyze-variable
                                                     build-lexical-assignment
                                                     build-lexical-reference
                                                     build-dynlet
                                                     build-conditional
                                                     build-application
                                                     build-void
                                                     maybe-name-value!
                                                     decorate-source
                                                     get-global-definition-hook
                                                     put-global-definition-hook
                                                     gensym-hook
                                                     local-eval-hook
                                                     top-level-eval-hook
                                                     fx<
                                                     fx=
                                                     fx-
                                                     fx+
                                                     set-lambda-meta!
                                                     lambda-meta
                                                     lambda?
                                                     make-dynlet
                                                     make-letrec
                                                     make-let
                                                     make-lambda-case
                                                     make-lambda
                                                     make-sequence
                                                     make-application
                                                     make-conditional
                                                     make-toplevel-define
                                                     make-toplevel-set
                                                     make-toplevel-ref
                                                     make-module-set
                                                     make-module-ref
                                                     make-lexical-set
                                                     make-lexical-ref
                                                     make-primitive-ref
                                                     make-const
                                                     make-void)
                                                   ((top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top))
                                                   ("i465"
                                                    "i463"
                                                    "i461"
                                                    "i459"
                                                    "i457"
                                                    "i455"
                                                    "i453"
                                                    "i451"
                                                    "i449"
                                                    "i447"
                                                    "i445"
                                                    "i443"
                                                    "i441"
                                                    "i439"
                                                    "i437"
                                                    "i435"
                                                    "i433"
                                                    "i431"
                                                    "i429"
                                                    "i427"
                                                    "i425"
                                                    "i423"
                                                    "i421"
                                                    "i419"
                                                    "i417"
                                                    "i415"
                                                    "i413"
                                                    "i411"
                                                    "i409"
                                                    "i407"
                                                    "i405"
                                                    "i403"
                                                    "i401"
                                                    "i399"
                                                    "i397"
                                                    "i396"
                                                    "i394"
                                                    "i391"
                                                    "i390"
                                                    "i389"
                                                    "i387"
                                                    "i386"
                                                    "i384"
                                                    "i382"
                                                    "i380"
                                                    "i378"
                                                    "i376"
                                                    "i374"
                                                    "i372"
                                                    "i370"
                                                    "i367"
                                                    "i365"
                                                    "i364"
                                                    "i362"
                                                    "i360"
                                                    "i358"
                                                    "i356"
                                                    "i355"
                                                    "i354"
                                                    "i353"
                                                    "i351"
                                                    "i350"
                                                    "i347"
                                                    "i345"
                                                    "i343"
                                                    "i341"
                                                    "i339"
                                                    "i337"
                                                    "i335"
                                                    "i334"
                                                    "i333"
                                                    "i331"
                                                    "i329"
                                                    "i328"
                                                    "i325"
                                                    "i324"
                                                    "i322"
                                                    "i320"
                                                    "i318"
                                                    "i316"
                                                    "i314"
                                                    "i312"
                                                    "i310"
                                                    "i308"
                                                    "i306"
                                                    "i303"
                                                    "i301"
                                                    "i299"
                                                    "i297"
                                                    "i295"
                                                    "i293"
                                                    "i291"
                                                    "i289"
                                                    "i287"
                                                    "i285"
                                                    "i283"
                                                    "i281"
                                                    "i279"
                                                    "i277"
                                                    "i275"
                                                    "i273"
                                                    "i271"
                                                    "i269"
                                                    "i267"
                                                    "i265"
                                                    "i263"
                                                    "i261"
                                                    "i259"
                                                    "i258"
                                                    "i255"
                                                    "i253"
                                                    "i252"
                                                    "i251"
                                                    "i250"
                                                    "i249"
                                                    "i247"
                                                    "i245"
                                                    "i243"
                                                    "i240"
                                                    "i238"
                                                    "i236"
                                                    "i234"
                                                    "i232"
                                                    "i230"
                                                    "i228"
                                                    "i226"
                                                    "i224"
                                                    "i222"
                                                    "i220"
                                                    "i218"
                                                    "i216"
                                                    "i214"
                                                    "i212"
                                                    "i210"
                                                    "i208"
                                                    "i206"))
                                                 #(ribcage
                                                   (define-structure
                                                     define-expansion-accessors
                                                     define-expansion-constructors)
                                                   ((top) (top) (top))
                                                   ("i44" "i43" "i42")))
                                                (hygiene guile))
                                             #{keys 3894}#))
                                     #f)
                                 (if (if (eq? (if (if (= (vector-length
                                                           '#(syntax-object
                                                              pad
                                                              ((top)
                                                               #(ribcage
                                                                 #(pat exp)
                                                                 #((top) (top))
                                                                 #("i3909"
                                                                   "i3910"))
                                                               #(ribcage
                                                                 ()
                                                                 ()
                                                                 ())
                                                               #(ribcage
                                                                 #(x
                                                                   keys
                                                                   clauses
                                                                   r
                                                                   mod)
                                                                 #((top)
                                                                   (top)
                                                                   (top)
                                                                   (top)
                                                                   (top))
                                                                 #("i3898"
                                                                   "i3899"
                                                                   "i3900"
                                                                   "i3901"
                                                                   "i3902"))
                                                               #(ribcage
                                                                 (gen-syntax-case
                                                                   gen-clause
                                                                   build-dispatch-call
                                                                   convert-pattern)
                                                                 ((top)
                                                                  (top)
                                                                  (top)
                                                                  (top))
                                                                 ("i3708"
                                                                  "i3706"
                                                                  "i3704"
                                                                  "i3702"))
                                                               #(ribcage
                                                                 (lambda-var-list
                                                                   gen-var
                                                                   strip
                                                                   chi-lambda-case
                                                                   lambda*-formals
                                                                   chi-simple-lambda
                                                                   lambda-formals
                                                                   ellipsis?
                                                                   chi-void
                                                                   eval-local-transformer
                                                                   chi-local-syntax
                                                                   chi-body
                                                                   chi-macro
                                                                   chi-application
                                                                   chi-expr
                                                                   chi
                                                                   syntax-type
                                                                   chi-when-list
                                                                   chi-install-global
                                                                   chi-top-sequence
                                                                   chi-sequence
                                                                   source-wrap
                                                                   wrap
                                                                   bound-id-member?
                                                                   distinct-bound-ids?
                                                                   valid-bound-ids?
                                                                   bound-id=?
                                                                   free-id=?
                                                                   id-var-name
                                                                   same-marks?
                                                                   join-marks
                                                                   join-wraps
                                                                   smart-append
                                                                   make-binding-wrap
                                                                   extend-ribcage!
                                                                   make-empty-ribcage
                                                                   new-mark
                                                                   anti-mark
                                                                   the-anti-mark
                                                                   top-marked?
                                                                   top-wrap
                                                                   empty-wrap
                                                                   set-ribcage-labels!
                                                                   set-ribcage-marks!
                                                                   set-ribcage-symnames!
                                                                   ribcage-labels
                                                                   ribcage-marks
                                                                   ribcage-symnames
                                                                   ribcage?
                                                                   make-ribcage
                                                                   gen-labels
                                                                   gen-label
                                                                   make-rename
                                                                   rename-marks
                                                                   rename-new
                                                                   rename-old
                                                                   subst-rename?
                                                                   wrap-subst
                                                                   wrap-marks
                                                                   make-wrap
                                                                   id-sym-name&marks
                                                                   id-sym-name
                                                                   id?
                                                                   nonsymbol-id?
                                                                   global-extend
                                                                   lookup
                                                                   macros-only-env
                                                                   extend-var-env
                                                                   extend-env
                                                                   null-env
                                                                   binding-value
                                                                   binding-type
                                                                   make-binding
                                                                   arg-check
                                                                   source-annotation
                                                                   no-source
                                                                   set-syntax-object-module!
                                                                   set-syntax-object-wrap!
                                                                   set-syntax-object-expression!
                                                                   syntax-object-module
                                                                   syntax-object-wrap
                                                                   syntax-object-expression
                                                                   syntax-object?
                                                                   make-syntax-object
                                                                   build-lexical-var
                                                                   build-letrec
                                                                   build-named-let
                                                                   build-let
                                                                   build-sequence
                                                                   build-data
                                                                   build-primref
                                                                   build-lambda-case
                                                                   build-case-lambda
                                                                   build-simple-lambda
                                                                   build-global-definition
                                                                   build-global-assignment
                                                                   build-global-reference
                                                                   analyze-variable
                                                                   build-lexical-assignment
                                                                   build-lexical-reference
                                                                   build-dynlet
                                                                   build-conditional
                                                                   build-application
                                                                   build-void
                                                                   maybe-name-value!
                                                                   decorate-source
                                                                   get-global-definition-hook
                                                                   put-global-definition-hook
                                                                   gensym-hook
                                                                   local-eval-hook
                                                                   top-level-eval-hook
                                                                   fx<
                                                                   fx=
                                                                   fx-
                                                                   fx+
                                                                   set-lambda-meta!
                                                                   lambda-meta
                                                                   lambda?
                                                                   make-dynlet
                                                                   make-letrec
                                                                   make-let
                                                                   make-lambda-case
                                                                   make-lambda
                                                                   make-sequence
                                                                   make-application
                                                                   make-conditional
                                                                   make-toplevel-define
                                                                   make-toplevel-set
                                                                   make-toplevel-ref
                                                                   make-module-set
                                                                   make-module-ref
                                                                   make-lexical-set
                                                                   make-lexical-ref
                                                                   make-primitive-ref
                                                                   make-const
                                                                   make-void)
                                                                 ((top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top))
                                                                 ("i465"
                                                                  "i463"
                                                                  "i461"
                                                                  "i459"
                                                                  "i457"
                                                                  "i455"
                                                                  "i453"
                                                                  "i451"
                                                                  "i449"
                                                                  "i447"
                                                                  "i445"
                                                                  "i443"
                                                                  "i441"
                                                                  "i439"
                                                                  "i437"
                                                                  "i435"
                                                                  "i433"
                                                                  "i431"
                                                                  "i429"
                                                                  "i427"
                                                                  "i425"
                                                                  "i423"
                                                                  "i421"
                                                                  "i419"
                                                                  "i417"
                                                                  "i415"
                                                                  "i413"
                                                                  "i411"
                                                                  "i409"
                                                                  "i407"
                                                                  "i405"
                                                                  "i403"
                                                                  "i401"
                                                                  "i399"
                                                                  "i397"
                                                                  "i396"
                                                                  "i394"
                                                                  "i391"
                                                                  "i390"
                                                                  "i389"
                                                                  "i387"
                                                                  "i386"
                                                                  "i384"
                                                                  "i382"
                                                                  "i380"
                                                                  "i378"
                                                                  "i376"
                                                                  "i374"
                                                                  "i372"
                                                                  "i370"
                                                                  "i367"
                                                                  "i365"
                                                                  "i364"
                                                                  "i362"
                                                                  "i360"
                                                                  "i358"
                                                                  "i356"
                                                                  "i355"
                                                                  "i354"
                                                                  "i353"
                                                                  "i351"
                                                                  "i350"
                                                                  "i347"
                                                                  "i345"
                                                                  "i343"
                                                                  "i341"
                                                                  "i339"
                                                                  "i337"
                                                                  "i335"
                                                                  "i334"
                                                                  "i333"
                                                                  "i331"
                                                                  "i329"
                                                                  "i328"
                                                                  "i325"
                                                                  "i324"
                                                                  "i322"
                                                                  "i320"
                                                                  "i318"
                                                                  "i316"
                                                                  "i314"
                                                                  "i312"
                                                                  "i310"
                                                                  "i308"
                                                                  "i306"
                                                                  "i303"
                                                                  "i301"
                                                                  "i299"
                                                                  "i297"
                                                                  "i295"
                                                                  "i293"
                                                                  "i291"
                                                                  "i289"
                                                                  "i287"
                                                                  "i285"
                                                                  "i283"
                                                                  "i281"
                                                                  "i279"
                                                                  "i277"
                                                                  "i275"
                                                                  "i273"
                                                                  "i271"
                                                                  "i269"
                                                                  "i267"
                                                                  "i265"
                                                                  "i263"
                                                                  "i261"
                                                                  "i259"
                                                                  "i258"
                                                                  "i255"
                                                                  "i253"
                                                                  "i252"
                                                                  "i251"
                                                                  "i250"
                                                                  "i249"
                                                                  "i247"
                                                                  "i245"
                                                                  "i243"
                                                                  "i240"
                                                                  "i238"
                                                                  "i236"
                                                                  "i234"
                                                                  "i232"
                                                                  "i230"
                                                                  "i228"
                                                                  "i226"
                                                                  "i224"
                                                                  "i222"
                                                                  "i220"
                                                                  "i218"
                                                                  "i216"
                                                                  "i214"
                                                                  "i212"
                                                                  "i210"
                                                                  "i208"
                                                                  "i206"))
                                                               #(ribcage
                                                                 (define-structure
                                                                   define-expansion-accessors
                                                                   define-expansion-constructors)
                                                                 ((top)
                                                                  (top)
                                                                  (top))
                                                                 ("i44"
                                                                  "i43"
                                                                  "i42")))
                                                              (hygiene guile)))
                                                         4)
                                                    (eq? (vector-ref
                                                           '#(syntax-object
                                                              pad
                                                              ((top)
                                                               #(ribcage
                                                                 #(pat exp)
                                                                 #((top) (top))
                                                                 #("i3909"
                                                                   "i3910"))
                                                               #(ribcage
                                                                 ()
                                                                 ()
                                                                 ())
                                                               #(ribcage
                                                                 #(x
                                                                   keys
                                                                   clauses
                                                                   r
                                                                   mod)
                                                                 #((top)
                                                                   (top)
                                                                   (top)
                                                                   (top)
                                                                   (top))
                                                                 #("i3898"
                                                                   "i3899"
                                                                   "i3900"
                                                                   "i3901"
                                                                   "i3902"))
                                                               #(ribcage
                                                                 (gen-syntax-case
                                                                   gen-clause
                                                                   build-dispatch-call
                                                                   convert-pattern)
                                                                 ((top)
                                                                  (top)
                                                                  (top)
                                                                  (top))
                                                                 ("i3708"
                                                                  "i3706"
                                                                  "i3704"
                                                                  "i3702"))
                                                               #(ribcage
                                                                 (lambda-var-list
                                                                   gen-var
                                                                   strip
                                                                   chi-lambda-case
                                                                   lambda*-formals
                                                                   chi-simple-lambda
                                                                   lambda-formals
                                                                   ellipsis?
                                                                   chi-void
                                                                   eval-local-transformer
                                                                   chi-local-syntax
                                                                   chi-body
                                                                   chi-macro
                                                                   chi-application
                                                                   chi-expr
                                                                   chi
                                                                   syntax-type
                                                                   chi-when-list
                                                                   chi-install-global
                                                                   chi-top-sequence
                                                                   chi-sequence
                                                                   source-wrap
                                                                   wrap
                                                                   bound-id-member?
                                                                   distinct-bound-ids?
                                                                   valid-bound-ids?
                                                                   bound-id=?
                                                                   free-id=?
                                                                   id-var-name
                                                                   same-marks?
                                                                   join-marks
                                                                   join-wraps
                                                                   smart-append
                                                                   make-binding-wrap
                                                                   extend-ribcage!
                                                                   make-empty-ribcage
                                                                   new-mark
                                                                   anti-mark
                                                                   the-anti-mark
                                                                   top-marked?
                                                                   top-wrap
                                                                   empty-wrap
                                                                   set-ribcage-labels!
                                                                   set-ribcage-marks!
                                                                   set-ribcage-symnames!
                                                                   ribcage-labels
                                                                   ribcage-marks
                                                                   ribcage-symnames
                                                                   ribcage?
                                                                   make-ribcage
                                                                   gen-labels
                                                                   gen-label
                                                                   make-rename
                                                                   rename-marks
                                                                   rename-new
                                                                   rename-old
                                                                   subst-rename?
                                                                   wrap-subst
                                                                   wrap-marks
                                                                   make-wrap
                                                                   id-sym-name&marks
                                                                   id-sym-name
                                                                   id?
                                                                   nonsymbol-id?
                                                                   global-extend
                                                                   lookup
                                                                   macros-only-env
                                                                   extend-var-env
                                                                   extend-env
                                                                   null-env
                                                                   binding-value
                                                                   binding-type
                                                                   make-binding
                                                                   arg-check
                                                                   source-annotation
                                                                   no-source
                                                                   set-syntax-object-module!
                                                                   set-syntax-object-wrap!
                                                                   set-syntax-object-expression!
                                                                   syntax-object-module
                                                                   syntax-object-wrap
                                                                   syntax-object-expression
                                                                   syntax-object?
                                                                   make-syntax-object
                                                                   build-lexical-var
                                                                   build-letrec
                                                                   build-named-let
                                                                   build-let
                                                                   build-sequence
                                                                   build-data
                                                                   build-primref
                                                                   build-lambda-case
                                                                   build-case-lambda
                                                                   build-simple-lambda
                                                                   build-global-definition
                                                                   build-global-assignment
                                                                   build-global-reference
                                                                   analyze-variable
                                                                   build-lexical-assignment
                                                                   build-lexical-reference
                                                                   build-dynlet
                                                                   build-conditional
                                                                   build-application
                                                                   build-void
                                                                   maybe-name-value!
                                                                   decorate-source
                                                                   get-global-definition-hook
                                                                   put-global-definition-hook
                                                                   gensym-hook
                                                                   local-eval-hook
                                                                   top-level-eval-hook
                                                                   fx<
                                                                   fx=
                                                                   fx-
                                                                   fx+
                                                                   set-lambda-meta!
                                                                   lambda-meta
                                                                   lambda?
                                                                   make-dynlet
                                                                   make-letrec
                                                                   make-let
                                                                   make-lambda-case
                                                                   make-lambda
                                                                   make-sequence
                                                                   make-application
                                                                   make-conditional
                                                                   make-toplevel-define
                                                                   make-toplevel-set
                                                                   make-toplevel-ref
                                                                   make-module-set
                                                                   make-module-ref
                                                                   make-lexical-set
                                                                   make-lexical-ref
                                                                   make-primitive-ref
                                                                   make-const
                                                                   make-void)
                                                                 ((top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top))
                                                                 ("i465"
                                                                  "i463"
                                                                  "i461"
                                                                  "i459"
                                                                  "i457"
                                                                  "i455"
                                                                  "i453"
                                                                  "i451"
                                                                  "i449"
                                                                  "i447"
                                                                  "i445"
                                                                  "i443"
                                                                  "i441"
                                                                  "i439"
                                                                  "i437"
                                                                  "i435"
                                                                  "i433"
                                                                  "i431"
                                                                  "i429"
                                                                  "i427"
                                                                  "i425"
                                                                  "i423"
                                                                  "i421"
                                                                  "i419"
                                                                  "i417"
                                                                  "i415"
                                                                  "i413"
                                                                  "i411"
                                                                  "i409"
                                                                  "i407"
                                                                  "i405"
                                                                  "i403"
                                                                  "i401"
                                                                  "i399"
                                                                  "i397"
                                                                  "i396"
                                                                  "i394"
                                                                  "i391"
                                                                  "i390"
                                                                  "i389"
                                                                  "i387"
                                                                  "i386"
                                                                  "i384"
                                                                  "i382"
                                                                  "i380"
                                                                  "i378"
                                                                  "i376"
                                                                  "i374"
                                                                  "i372"
                                                                  "i370"
                                                                  "i367"
                                                                  "i365"
                                                                  "i364"
                                                                  "i362"
                                                                  "i360"
                                                                  "i358"
                                                                  "i356"
                                                                  "i355"
                                                                  "i354"
                                                                  "i353"
                                                                  "i351"
                                                                  "i350"
                                                                  "i347"
                                                                  "i345"
                                                                  "i343"
                                                                  "i341"
                                                                  "i339"
                                                                  "i337"
                                                                  "i335"
                                                                  "i334"
                                                                  "i333"
                                                                  "i331"
                                                                  "i329"
                                                                  "i328"
                                                                  "i325"
                                                                  "i324"
                                                                  "i322"
                                                                  "i320"
                                                                  "i318"
                                                                  "i316"
                                                                  "i314"
                                                                  "i312"
                                                                  "i310"
                                                                  "i308"
                                                                  "i306"
                                                                  "i303"
                                                                  "i301"
                                                                  "i299"
                                                                  "i297"
                                                                  "i295"
                                                                  "i293"
                                                                  "i291"
                                                                  "i289"
                                                                  "i287"
                                                                  "i285"
                                                                  "i283"
                                                                  "i281"
                                                                  "i279"
                                                                  "i277"
                                                                  "i275"
                                                                  "i273"
                                                                  "i271"
                                                                  "i269"
                                                                  "i267"
                                                                  "i265"
                                                                  "i263"
                                                                  "i261"
                                                                  "i259"
                                                                  "i258"
                                                                  "i255"
                                                                  "i253"
                                                                  "i252"
                                                                  "i251"
                                                                  "i250"
                                                                  "i249"
                                                                  "i247"
                                                                  "i245"
                                                                  "i243"
                                                                  "i240"
                                                                  "i238"
                                                                  "i236"
                                                                  "i234"
                                                                  "i232"
                                                                  "i230"
                                                                  "i228"
                                                                  "i226"
                                                                  "i224"
                                                                  "i222"
                                                                  "i220"
                                                                  "i218"
                                                                  "i216"
                                                                  "i214"
                                                                  "i212"
                                                                  "i210"
                                                                  "i208"
                                                                  "i206"))
                                                               #(ribcage
                                                                 (define-structure
                                                                   define-expansion-accessors
                                                                   define-expansion-constructors)
                                                                 ((top)
                                                                  (top)
                                                                  (top))
                                                                 ("i44"
                                                                  "i43"
                                                                  "i42")))
                                                              (hygiene guile))
                                                           0)
                                                         'syntax-object)
                                                    #f)
                                                (vector-ref
                                                  '#(syntax-object
                                                     pad
                                                     ((top)
                                                      #(ribcage
                                                        #(pat exp)
                                                        #((top) (top))
                                                        #("i3909" "i3910"))
                                                      #(ribcage () () ())
                                                      #(ribcage
                                                        #(x keys clauses r mod)
                                                        #((top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top))
                                                        #("i3898"
                                                          "i3899"
                                                          "i3900"
                                                          "i3901"
                                                          "i3902"))
                                                      #(ribcage
                                                        (gen-syntax-case
                                                          gen-clause
                                                          build-dispatch-call
                                                          convert-pattern)
                                                        ((top)
                                                         (top)
                                                         (top)
                                                         (top))
                                                        ("i3708"
                                                         "i3706"
                                                         "i3704"
                                                         "i3702"))
                                                      #(ribcage
                                                        (lambda-var-list
                                                          gen-var
                                                          strip
                                                          chi-lambda-case
                                                          lambda*-formals
                                                          chi-simple-lambda
                                                          lambda-formals
                                                          ellipsis?
                                                          chi-void
                                                          eval-local-transformer
                                                          chi-local-syntax
                                                          chi-body
                                                          chi-macro
                                                          chi-application
                                                          chi-expr
                                                          chi
                                                          syntax-type
                                                          chi-when-list
                                                          chi-install-global
                                                          chi-top-sequence
                                                          chi-sequence
                                                          source-wrap
                                                          wrap
                                                          bound-id-member?
                                                          distinct-bound-ids?
                                                          valid-bound-ids?
                                                          bound-id=?
                                                          free-id=?
                                                          id-var-name
                                                          same-marks?
                                                          join-marks
                                                          join-wraps
                                                          smart-append
                                                          make-binding-wrap
                                                          extend-ribcage!
                                                          make-empty-ribcage
                                                          new-mark
                                                          anti-mark
                                                          the-anti-mark
                                                          top-marked?
                                                          top-wrap
                                                          empty-wrap
                                                          set-ribcage-labels!
                                                          set-ribcage-marks!
                                                          set-ribcage-symnames!
                                                          ribcage-labels
                                                          ribcage-marks
                                                          ribcage-symnames
                                                          ribcage?
                                                          make-ribcage
                                                          gen-labels
                                                          gen-label
                                                          make-rename
                                                          rename-marks
                                                          rename-new
                                                          rename-old
                                                          subst-rename?
                                                          wrap-subst
                                                          wrap-marks
                                                          make-wrap
                                                          id-sym-name&marks
                                                          id-sym-name
                                                          id?
                                                          nonsymbol-id?
                                                          global-extend
                                                          lookup
                                                          macros-only-env
                                                          extend-var-env
                                                          extend-env
                                                          null-env
                                                          binding-value
                                                          binding-type
                                                          make-binding
                                                          arg-check
                                                          source-annotation
                                                          no-source
                                                          set-syntax-object-module!
                                                          set-syntax-object-wrap!
                                                          set-syntax-object-expression!
                                                          syntax-object-module
                                                          syntax-object-wrap
                                                          syntax-object-expression
                                                          syntax-object?
                                                          make-syntax-object
                                                          build-lexical-var
                                                          build-letrec
                                                          build-named-let
                                                          build-let
                                                          build-sequence
                                                          build-data
                                                          build-primref
                                                          build-lambda-case
                                                          build-case-lambda
                                                          build-simple-lambda
                                                          build-global-definition
                                                          build-global-assignment
                                                          build-global-reference
                                                          analyze-variable
                                                          build-lexical-assignment
                                                          build-lexical-reference
                                                          build-dynlet
                                                          build-conditional
                                                          build-application
                                                          build-void
                                                          maybe-name-value!
                                                          decorate-source
                                                          get-global-definition-hook
                                                          put-global-definition-hook
                                                          gensym-hook
                                                          local-eval-hook
                                                          top-level-eval-hook
                                                          fx<
                                                          fx=
                                                          fx-
                                                          fx+
                                                          set-lambda-meta!
                                                          lambda-meta
                                                          lambda?
                                                          make-dynlet
                                                          make-letrec
                                                          make-let
                                                          make-lambda-case
                                                          make-lambda
                                                          make-sequence
                                                          make-application
                                                          make-conditional
                                                          make-toplevel-define
                                                          make-toplevel-set
                                                          make-toplevel-ref
                                                          make-module-set
                                                          make-module-ref
                                                          make-lexical-set
                                                          make-lexical-ref
                                                          make-primitive-ref
                                                          make-const
                                                          make-void)
                                                        ((top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top))
                                                        ("i465"
                                                         "i463"
                                                         "i461"
                                                         "i459"
                                                         "i457"
                                                         "i455"
                                                         "i453"
                                                         "i451"
                                                         "i449"
                                                         "i447"
                                                         "i445"
                                                         "i443"
                                                         "i441"
                                                         "i439"
                                                         "i437"
                                                         "i435"
                                                         "i433"
                                                         "i431"
                                                         "i429"
                                                         "i427"
                                                         "i425"
                                                         "i423"
                                                         "i421"
                                                         "i419"
                                                         "i417"
                                                         "i415"
                                                         "i413"
                                                         "i411"
                                                         "i409"
                                                         "i407"
                                                         "i405"
                                                         "i403"
                                                         "i401"
                                                         "i399"
                                                         "i397"
                                                         "i396"
                                                         "i394"
                                                         "i391"
                                                         "i390"
                                                         "i389"
                                                         "i387"
                                                         "i386"
                                                         "i384"
                                                         "i382"
                                                         "i380"
                                                         "i378"
                                                         "i376"
                                                         "i374"
                                                         "i372"
                                                         "i370"
                                                         "i367"
                                                         "i365"
                                                         "i364"
                                                         "i362"
                                                         "i360"
                                                         "i358"
                                                         "i356"
                                                         "i355"
                                                         "i354"
                                                         "i353"
                                                         "i351"
                                                         "i350"
                                                         "i347"
                                                         "i345"
                                                         "i343"
                                                         "i341"
                                                         "i339"
                                                         "i337"
                                                         "i335"
                                                         "i334"
                                                         "i333"
                                                         "i331"
                                                         "i329"
                                                         "i328"
                                                         "i325"
                                                         "i324"
                                                         "i322"
                                                         "i320"
                                                         "i318"
                                                         "i316"
                                                         "i314"
                                                         "i312"
                                                         "i310"
                                                         "i308"
                                                         "i306"
                                                         "i303"
                                                         "i301"
                                                         "i299"
                                                         "i297"
                                                         "i295"
                                                         "i293"
                                                         "i291"
                                                         "i289"
                                                         "i287"
                                                         "i285"
                                                         "i283"
                                                         "i281"
                                                         "i279"
                                                         "i277"
                                                         "i275"
                                                         "i273"
                                                         "i271"
                                                         "i269"
                                                         "i267"
                                                         "i265"
                                                         "i263"
                                                         "i261"
                                                         "i259"
                                                         "i258"
                                                         "i255"
                                                         "i253"
                                                         "i252"
                                                         "i251"
                                                         "i250"
                                                         "i249"
                                                         "i247"
                                                         "i245"
                                                         "i243"
                                                         "i240"
                                                         "i238"
                                                         "i236"
                                                         "i234"
                                                         "i232"
                                                         "i230"
                                                         "i228"
                                                         "i226"
                                                         "i224"
                                                         "i222"
                                                         "i220"
                                                         "i218"
                                                         "i216"
                                                         "i214"
                                                         "i212"
                                                         "i210"
                                                         "i208"
                                                         "i206"))
                                                      #(ribcage
                                                        (define-structure
                                                          define-expansion-accessors
                                                          define-expansion-constructors)
                                                        ((top) (top) (top))
                                                        ("i44" "i43" "i42")))
                                                     (hygiene guile))
                                                  1)
                                                '#(syntax-object
                                                   pad
                                                   ((top)
                                                    #(ribcage
                                                      #(pat exp)
                                                      #((top) (top))
                                                      #("i3909" "i3910"))
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(x keys clauses r mod)
                                                      #((top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top))
                                                      #("i3898"
                                                        "i3899"
                                                        "i3900"
                                                        "i3901"
                                                        "i3902"))
                                                    #(ribcage
                                                      (gen-syntax-case
                                                        gen-clause
                                                        build-dispatch-call
                                                        convert-pattern)
                                                      ((top) (top) (top) (top))
                                                      ("i3708"
                                                       "i3706"
                                                       "i3704"
                                                       "i3702"))
                                                    #(ribcage
                                                      (lambda-var-list
                                                        gen-var
                                                        strip
                                                        chi-lambda-case
                                                        lambda*-formals
                                                        chi-simple-lambda
                                                        lambda-formals
                                                        ellipsis?
                                                        chi-void
                                                        eval-local-transformer
                                                        chi-local-syntax
                                                        chi-body
                                                        chi-macro
                                                        chi-application
                                                        chi-expr
                                                        chi
                                                        syntax-type
                                                        chi-when-list
                                                        chi-install-global
                                                        chi-top-sequence
                                                        chi-sequence
                                                        source-wrap
                                                        wrap
                                                        bound-id-member?
                                                        distinct-bound-ids?
                                                        valid-bound-ids?
                                                        bound-id=?
                                                        free-id=?
                                                        id-var-name
                                                        same-marks?
                                                        join-marks
                                                        join-wraps
                                                        smart-append
                                                        make-binding-wrap
                                                        extend-ribcage!
                                                        make-empty-ribcage
                                                        new-mark
                                                        anti-mark
                                                        the-anti-mark
                                                        top-marked?
                                                        top-wrap
                                                        empty-wrap
                                                        set-ribcage-labels!
                                                        set-ribcage-marks!
                                                        set-ribcage-symnames!
                                                        ribcage-labels
                                                        ribcage-marks
                                                        ribcage-symnames
                                                        ribcage?
                                                        make-ribcage
                                                        gen-labels
                                                        gen-label
                                                        make-rename
                                                        rename-marks
                                                        rename-new
                                                        rename-old
                                                        subst-rename?
                                                        wrap-subst
                                                        wrap-marks
                                                        make-wrap
                                                        id-sym-name&marks
                                                        id-sym-name
                                                        id?
                                                        nonsymbol-id?
                                                        global-extend
                                                        lookup
                                                        macros-only-env
                                                        extend-var-env
                                                        extend-env
                                                        null-env
                                                        binding-value
                                                        binding-type
                                                        make-binding
                                                        arg-check
                                                        source-annotation
                                                        no-source
                                                        set-syntax-object-module!
                                                        set-syntax-object-wrap!
                                                        set-syntax-object-expression!
                                                        syntax-object-module
                                                        syntax-object-wrap
                                                        syntax-object-expression
                                                        syntax-object?
                                                        make-syntax-object
                                                        build-lexical-var
                                                        build-letrec
                                                        build-named-let
                                                        build-let
                                                        build-sequence
                                                        build-data
                                                        build-primref
                                                        build-lambda-case
                                                        build-case-lambda
                                                        build-simple-lambda
                                                        build-global-definition
                                                        build-global-assignment
                                                        build-global-reference
                                                        analyze-variable
                                                        build-lexical-assignment
                                                        build-lexical-reference
                                                        build-dynlet
                                                        build-conditional
                                                        build-application
                                                        build-void
                                                        maybe-name-value!
                                                        decorate-source
                                                        get-global-definition-hook
                                                        put-global-definition-hook
                                                        gensym-hook
                                                        local-eval-hook
                                                        top-level-eval-hook
                                                        fx<
                                                        fx=
                                                        fx-
                                                        fx+
                                                        set-lambda-meta!
                                                        lambda-meta
                                                        lambda?
                                                        make-dynlet
                                                        make-letrec
                                                        make-let
                                                        make-lambda-case
                                                        make-lambda
                                                        make-sequence
                                                        make-application
                                                        make-conditional
                                                        make-toplevel-define
                                                        make-toplevel-set
                                                        make-toplevel-ref
                                                        make-module-set
                                                        make-module-ref
                                                        make-lexical-set
                                                        make-lexical-ref
                                                        make-primitive-ref
                                                        make-const
                                                        make-void)
                                                      ((top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top))
                                                      ("i465"
                                                       "i463"
                                                       "i461"
                                                       "i459"
                                                       "i457"
                                                       "i455"
                                                       "i453"
                                                       "i451"
                                                       "i449"
                                                       "i447"
                                                       "i445"
                                                       "i443"
                                                       "i441"
                                                       "i439"
                                                       "i437"
                                                       "i435"
                                                       "i433"
                                                       "i431"
                                                       "i429"
                                                       "i427"
                                                       "i425"
                                                       "i423"
                                                       "i421"
                                                       "i419"
                                                       "i417"
                                                       "i415"
                                                       "i413"
                                                       "i411"
                                                       "i409"
                                                       "i407"
                                                       "i405"
                                                       "i403"
                                                       "i401"
                                                       "i399"
                                                       "i397"
                                                       "i396"
                                                       "i394"
                                                       "i391"
                                                       "i390"
                                                       "i389"
                                                       "i387"
                                                       "i386"
                                                       "i384"
                                                       "i382"
                                                       "i380"
                                                       "i378"
                                                       "i376"
                                                       "i374"
                                                       "i372"
                                                       "i370"
                                                       "i367"
                                                       "i365"
                                                       "i364"
                                                       "i362"
                                                       "i360"
                                                       "i358"
                                                       "i356"
                                                       "i355"
                                                       "i354"
                                                       "i353"
                                                       "i351"
                                                       "i350"
                                                       "i347"
                                                       "i345"
                                                       "i343"
                                                       "i341"
                                                       "i339"
                                                       "i337"
                                                       "i335"
                                                       "i334"
                                                       "i333"
                                                       "i331"
                                                       "i329"
                                                       "i328"
                                                       "i325"
                                                       "i324"
                                                       "i322"
                                                       "i320"
                                                       "i318"
                                                       "i316"
                                                       "i314"
                                                       "i312"
                                                       "i310"
                                                       "i308"
                                                       "i306"
                                                       "i303"
                                                       "i301"
                                                       "i299"
                                                       "i297"
                                                       "i295"
                                                       "i293"
                                                       "i291"
                                                       "i289"
                                                       "i287"
                                                       "i285"
                                                       "i283"
                                                       "i281"
                                                       "i279"
                                                       "i277"
                                                       "i275"
                                                       "i273"
                                                       "i271"
                                                       "i269"
                                                       "i267"
                                                       "i265"
                                                       "i263"
                                                       "i261"
                                                       "i259"
                                                       "i258"
                                                       "i255"
                                                       "i253"
                                                       "i252"
                                                       "i251"
                                                       "i250"
                                                       "i249"
                                                       "i247"
                                                       "i245"
                                                       "i243"
                                                       "i240"
                                                       "i238"
                                                       "i236"
                                                       "i234"
                                                       "i232"
                                                       "i230"
                                                       "i228"
                                                       "i226"
                                                       "i224"
                                                       "i222"
                                                       "i220"
                                                       "i218"
                                                       "i216"
                                                       "i214"
                                                       "i212"
                                                       "i210"
                                                       "i208"
                                                       "i206"))
                                                    #(ribcage
                                                      (define-structure
                                                        define-expansion-accessors
                                                        define-expansion-constructors)
                                                      ((top) (top) (top))
                                                      ("i44" "i43" "i42")))
                                                   (hygiene guile)))
                                              (if (if (= (vector-length
                                                           '#(syntax-object
                                                              _
                                                              ((top)
                                                               #(ribcage
                                                                 #(pat exp)
                                                                 #((top) (top))
                                                                 #("i3909"
                                                                   "i3910"))
                                                               #(ribcage
                                                                 ()
                                                                 ()
                                                                 ())
                                                               #(ribcage
                                                                 #(x
                                                                   keys
                                                                   clauses
                                                                   r
                                                                   mod)
                                                                 #((top)
                                                                   (top)
                                                                   (top)
                                                                   (top)
                                                                   (top))
                                                                 #("i3898"
                                                                   "i3899"
                                                                   "i3900"
                                                                   "i3901"
                                                                   "i3902"))
                                                               #(ribcage
                                                                 (gen-syntax-case
                                                                   gen-clause
                                                                   build-dispatch-call
                                                                   convert-pattern)
                                                                 ((top)
                                                                  (top)
                                                                  (top)
                                                                  (top))
                                                                 ("i3708"
                                                                  "i3706"
                                                                  "i3704"
                                                                  "i3702"))
                                                               #(ribcage
                                                                 (lambda-var-list
                                                                   gen-var
                                                                   strip
                                                                   chi-lambda-case
                                                                   lambda*-formals
                                                                   chi-simple-lambda
                                                                   lambda-formals
                                                                   ellipsis?
                                                                   chi-void
                                                                   eval-local-transformer
                                                                   chi-local-syntax
                                                                   chi-body
                                                                   chi-macro
                                                                   chi-application
                                                                   chi-expr
                                                                   chi
                                                                   syntax-type
                                                                   chi-when-list
                                                                   chi-install-global
                                                                   chi-top-sequence
                                                                   chi-sequence
                                                                   source-wrap
                                                                   wrap
                                                                   bound-id-member?
                                                                   distinct-bound-ids?
                                                                   valid-bound-ids?
                                                                   bound-id=?
                                                                   free-id=?
                                                                   id-var-name
                                                                   same-marks?
                                                                   join-marks
                                                                   join-wraps
                                                                   smart-append
                                                                   make-binding-wrap
                                                                   extend-ribcage!
                                                                   make-empty-ribcage
                                                                   new-mark
                                                                   anti-mark
                                                                   the-anti-mark
                                                                   top-marked?
                                                                   top-wrap
                                                                   empty-wrap
                                                                   set-ribcage-labels!
                                                                   set-ribcage-marks!
                                                                   set-ribcage-symnames!
                                                                   ribcage-labels
                                                                   ribcage-marks
                                                                   ribcage-symnames
                                                                   ribcage?
                                                                   make-ribcage
                                                                   gen-labels
                                                                   gen-label
                                                                   make-rename
                                                                   rename-marks
                                                                   rename-new
                                                                   rename-old
                                                                   subst-rename?
                                                                   wrap-subst
                                                                   wrap-marks
                                                                   make-wrap
                                                                   id-sym-name&marks
                                                                   id-sym-name
                                                                   id?
                                                                   nonsymbol-id?
                                                                   global-extend
                                                                   lookup
                                                                   macros-only-env
                                                                   extend-var-env
                                                                   extend-env
                                                                   null-env
                                                                   binding-value
                                                                   binding-type
                                                                   make-binding
                                                                   arg-check
                                                                   source-annotation
                                                                   no-source
                                                                   set-syntax-object-module!
                                                                   set-syntax-object-wrap!
                                                                   set-syntax-object-expression!
                                                                   syntax-object-module
                                                                   syntax-object-wrap
                                                                   syntax-object-expression
                                                                   syntax-object?
                                                                   make-syntax-object
                                                                   build-lexical-var
                                                                   build-letrec
                                                                   build-named-let
                                                                   build-let
                                                                   build-sequence
                                                                   build-data
                                                                   build-primref
                                                                   build-lambda-case
                                                                   build-case-lambda
                                                                   build-simple-lambda
                                                                   build-global-definition
                                                                   build-global-assignment
                                                                   build-global-reference
                                                                   analyze-variable
                                                                   build-lexical-assignment
                                                                   build-lexical-reference
                                                                   build-dynlet
                                                                   build-conditional
                                                                   build-application
                                                                   build-void
                                                                   maybe-name-value!
                                                                   decorate-source
                                                                   get-global-definition-hook
                                                                   put-global-definition-hook
                                                                   gensym-hook
                                                                   local-eval-hook
                                                                   top-level-eval-hook
                                                                   fx<
                                                                   fx=
                                                                   fx-
                                                                   fx+
                                                                   set-lambda-meta!
                                                                   lambda-meta
                                                                   lambda?
                                                                   make-dynlet
                                                                   make-letrec
                                                                   make-let
                                                                   make-lambda-case
                                                                   make-lambda
                                                                   make-sequence
                                                                   make-application
                                                                   make-conditional
                                                                   make-toplevel-define
                                                                   make-toplevel-set
                                                                   make-toplevel-ref
                                                                   make-module-set
                                                                   make-module-ref
                                                                   make-lexical-set
                                                                   make-lexical-ref
                                                                   make-primitive-ref
                                                                   make-const
                                                                   make-void)
                                                                 ((top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top))
                                                                 ("i465"
                                                                  "i463"
                                                                  "i461"
                                                                  "i459"
                                                                  "i457"
                                                                  "i455"
                                                                  "i453"
                                                                  "i451"
                                                                  "i449"
                                                                  "i447"
                                                                  "i445"
                                                                  "i443"
                                                                  "i441"
                                                                  "i439"
                                                                  "i437"
                                                                  "i435"
                                                                  "i433"
                                                                  "i431"
                                                                  "i429"
                                                                  "i427"
                                                                  "i425"
                                                                  "i423"
                                                                  "i421"
                                                                  "i419"
                                                                  "i417"
                                                                  "i415"
                                                                  "i413"
                                                                  "i411"
                                                                  "i409"
                                                                  "i407"
                                                                  "i405"
                                                                  "i403"
                                                                  "i401"
                                                                  "i399"
                                                                  "i397"
                                                                  "i396"
                                                                  "i394"
                                                                  "i391"
                                                                  "i390"
                                                                  "i389"
                                                                  "i387"
                                                                  "i386"
                                                                  "i384"
                                                                  "i382"
                                                                  "i380"
                                                                  "i378"
                                                                  "i376"
                                                                  "i374"
                                                                  "i372"
                                                                  "i370"
                                                                  "i367"
                                                                  "i365"
                                                                  "i364"
                                                                  "i362"
                                                                  "i360"
                                                                  "i358"
                                                                  "i356"
                                                                  "i355"
                                                                  "i354"
                                                                  "i353"
                                                                  "i351"
                                                                  "i350"
                                                                  "i347"
                                                                  "i345"
                                                                  "i343"
                                                                  "i341"
                                                                  "i339"
                                                                  "i337"
                                                                  "i335"
                                                                  "i334"
                                                                  "i333"
                                                                  "i331"
                                                                  "i329"
                                                                  "i328"
                                                                  "i325"
                                                                  "i324"
                                                                  "i322"
                                                                  "i320"
                                                                  "i318"
                                                                  "i316"
                                                                  "i314"
                                                                  "i312"
                                                                  "i310"
                                                                  "i308"
                                                                  "i306"
                                                                  "i303"
                                                                  "i301"
                                                                  "i299"
                                                                  "i297"
                                                                  "i295"
                                                                  "i293"
                                                                  "i291"
                                                                  "i289"
                                                                  "i287"
                                                                  "i285"
                                                                  "i283"
                                                                  "i281"
                                                                  "i279"
                                                                  "i277"
                                                                  "i275"
                                                                  "i273"
                                                                  "i271"
                                                                  "i269"
                                                                  "i267"
                                                                  "i265"
                                                                  "i263"
                                                                  "i261"
                                                                  "i259"
                                                                  "i258"
                                                                  "i255"
                                                                  "i253"
                                                                  "i252"
                                                                  "i251"
                                                                  "i250"
                                                                  "i249"
                                                                  "i247"
                                                                  "i245"
                                                                  "i243"
                                                                  "i240"
                                                                  "i238"
                                                                  "i236"
                                                                  "i234"
                                                                  "i232"
                                                                  "i230"
                                                                  "i228"
                                                                  "i226"
                                                                  "i224"
                                                                  "i222"
                                                                  "i220"
                                                                  "i218"
                                                                  "i216"
                                                                  "i214"
                                                                  "i212"
                                                                  "i210"
                                                                  "i208"
                                                                  "i206"))
                                                               #(ribcage
                                                                 (define-structure
                                                                   define-expansion-accessors
                                                                   define-expansion-constructors)
                                                                 ((top)
                                                                  (top)
                                                                  (top))
                                                                 ("i44"
                                                                  "i43"
                                                                  "i42")))
                                                              (hygiene guile)))
                                                         4)
                                                    (eq? (vector-ref
                                                           '#(syntax-object
                                                              _
                                                              ((top)
                                                               #(ribcage
                                                                 #(pat exp)
                                                                 #((top) (top))
                                                                 #("i3909"
                                                                   "i3910"))
                                                               #(ribcage
                                                                 ()
                                                                 ()
                                                                 ())
                                                               #(ribcage
                                                                 #(x
                                                                   keys
                                                                   clauses
                                                                   r
                                                                   mod)
                                                                 #((top)
                                                                   (top)
                                                                   (top)
                                                                   (top)
                                                                   (top))
                                                                 #("i3898"
                                                                   "i3899"
                                                                   "i3900"
                                                                   "i3901"
                                                                   "i3902"))
                                                               #(ribcage
                                                                 (gen-syntax-case
                                                                   gen-clause
                                                                   build-dispatch-call
                                                                   convert-pattern)
                                                                 ((top)
                                                                  (top)
                                                                  (top)
                                                                  (top))
                                                                 ("i3708"
                                                                  "i3706"
                                                                  "i3704"
                                                                  "i3702"))
                                                               #(ribcage
                                                                 (lambda-var-list
                                                                   gen-var
                                                                   strip
                                                                   chi-lambda-case
                                                                   lambda*-formals
                                                                   chi-simple-lambda
                                                                   lambda-formals
                                                                   ellipsis?
                                                                   chi-void
                                                                   eval-local-transformer
                                                                   chi-local-syntax
                                                                   chi-body
                                                                   chi-macro
                                                                   chi-application
                                                                   chi-expr
                                                                   chi
                                                                   syntax-type
                                                                   chi-when-list
                                                                   chi-install-global
                                                                   chi-top-sequence
                                                                   chi-sequence
                                                                   source-wrap
                                                                   wrap
                                                                   bound-id-member?
                                                                   distinct-bound-ids?
                                                                   valid-bound-ids?
                                                                   bound-id=?
                                                                   free-id=?
                                                                   id-var-name
                                                                   same-marks?
                                                                   join-marks
                                                                   join-wraps
                                                                   smart-append
                                                                   make-binding-wrap
                                                                   extend-ribcage!
                                                                   make-empty-ribcage
                                                                   new-mark
                                                                   anti-mark
                                                                   the-anti-mark
                                                                   top-marked?
                                                                   top-wrap
                                                                   empty-wrap
                                                                   set-ribcage-labels!
                                                                   set-ribcage-marks!
                                                                   set-ribcage-symnames!
                                                                   ribcage-labels
                                                                   ribcage-marks
                                                                   ribcage-symnames
                                                                   ribcage?
                                                                   make-ribcage
                                                                   gen-labels
                                                                   gen-label
                                                                   make-rename
                                                                   rename-marks
                                                                   rename-new
                                                                   rename-old
                                                                   subst-rename?
                                                                   wrap-subst
                                                                   wrap-marks
                                                                   make-wrap
                                                                   id-sym-name&marks
                                                                   id-sym-name
                                                                   id?
                                                                   nonsymbol-id?
                                                                   global-extend
                                                                   lookup
                                                                   macros-only-env
                                                                   extend-var-env
                                                                   extend-env
                                                                   null-env
                                                                   binding-value
                                                                   binding-type
                                                                   make-binding
                                                                   arg-check
                                                                   source-annotation
                                                                   no-source
                                                                   set-syntax-object-module!
                                                                   set-syntax-object-wrap!
                                                                   set-syntax-object-expression!
                                                                   syntax-object-module
                                                                   syntax-object-wrap
                                                                   syntax-object-expression
                                                                   syntax-object?
                                                                   make-syntax-object
                                                                   build-lexical-var
                                                                   build-letrec
                                                                   build-named-let
                                                                   build-let
                                                                   build-sequence
                                                                   build-data
                                                                   build-primref
                                                                   build-lambda-case
                                                                   build-case-lambda
                                                                   build-simple-lambda
                                                                   build-global-definition
                                                                   build-global-assignment
                                                                   build-global-reference
                                                                   analyze-variable
                                                                   build-lexical-assignment
                                                                   build-lexical-reference
                                                                   build-dynlet
                                                                   build-conditional
                                                                   build-application
                                                                   build-void
                                                                   maybe-name-value!
                                                                   decorate-source
                                                                   get-global-definition-hook
                                                                   put-global-definition-hook
                                                                   gensym-hook
                                                                   local-eval-hook
                                                                   top-level-eval-hook
                                                                   fx<
                                                                   fx=
                                                                   fx-
                                                                   fx+
                                                                   set-lambda-meta!
                                                                   lambda-meta
                                                                   lambda?
                                                                   make-dynlet
                                                                   make-letrec
                                                                   make-let
                                                                   make-lambda-case
                                                                   make-lambda
                                                                   make-sequence
                                                                   make-application
                                                                   make-conditional
                                                                   make-toplevel-define
                                                                   make-toplevel-set
                                                                   make-toplevel-ref
                                                                   make-module-set
                                                                   make-module-ref
                                                                   make-lexical-set
                                                                   make-lexical-ref
                                                                   make-primitive-ref
                                                                   make-const
                                                                   make-void)
                                                                 ((top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top))
                                                                 ("i465"
                                                                  "i463"
                                                                  "i461"
                                                                  "i459"
                                                                  "i457"
                                                                  "i455"
                                                                  "i453"
                                                                  "i451"
                                                                  "i449"
                                                                  "i447"
                                                                  "i445"
                                                                  "i443"
                                                                  "i441"
                                                                  "i439"
                                                                  "i437"
                                                                  "i435"
                                                                  "i433"
                                                                  "i431"
                                                                  "i429"
                                                                  "i427"
                                                                  "i425"
                                                                  "i423"
                                                                  "i421"
                                                                  "i419"
                                                                  "i417"
                                                                  "i415"
                                                                  "i413"
                                                                  "i411"
                                                                  "i409"
                                                                  "i407"
                                                                  "i405"
                                                                  "i403"
                                                                  "i401"
                                                                  "i399"
                                                                  "i397"
                                                                  "i396"
                                                                  "i394"
                                                                  "i391"
                                                                  "i390"
                                                                  "i389"
                                                                  "i387"
                                                                  "i386"
                                                                  "i384"
                                                                  "i382"
                                                                  "i380"
                                                                  "i378"
                                                                  "i376"
                                                                  "i374"
                                                                  "i372"
                                                                  "i370"
                                                                  "i367"
                                                                  "i365"
                                                                  "i364"
                                                                  "i362"
                                                                  "i360"
                                                                  "i358"
                                                                  "i356"
                                                                  "i355"
                                                                  "i354"
                                                                  "i353"
                                                                  "i351"
                                                                  "i350"
                                                                  "i347"
                                                                  "i345"
                                                                  "i343"
                                                                  "i341"
                                                                  "i339"
                                                                  "i337"
                                                                  "i335"
                                                                  "i334"
                                                                  "i333"
                                                                  "i331"
                                                                  "i329"
                                                                  "i328"
                                                                  "i325"
                                                                  "i324"
                                                                  "i322"
                                                                  "i320"
                                                                  "i318"
                                                                  "i316"
                                                                  "i314"
                                                                  "i312"
                                                                  "i310"
                                                                  "i308"
                                                                  "i306"
                                                                  "i303"
                                                                  "i301"
                                                                  "i299"
                                                                  "i297"
                                                                  "i295"
                                                                  "i293"
                                                                  "i291"
                                                                  "i289"
                                                                  "i287"
                                                                  "i285"
                                                                  "i283"
                                                                  "i281"
                                                                  "i279"
                                                                  "i277"
                                                                  "i275"
                                                                  "i273"
                                                                  "i271"
                                                                  "i269"
                                                                  "i267"
                                                                  "i265"
                                                                  "i263"
                                                                  "i261"
                                                                  "i259"
                                                                  "i258"
                                                                  "i255"
                                                                  "i253"
                                                                  "i252"
                                                                  "i251"
                                                                  "i250"
                                                                  "i249"
                                                                  "i247"
                                                                  "i245"
                                                                  "i243"
                                                                  "i240"
                                                                  "i238"
                                                                  "i236"
                                                                  "i234"
                                                                  "i232"
                                                                  "i230"
                                                                  "i228"
                                                                  "i226"
                                                                  "i224"
                                                                  "i222"
                                                                  "i220"
                                                                  "i218"
                                                                  "i216"
                                                                  "i214"
                                                                  "i212"
                                                                  "i210"
                                                                  "i208"
                                                                  "i206"))
                                                               #(ribcage
                                                                 (define-structure
                                                                   define-expansion-accessors
                                                                   define-expansion-constructors)
                                                                 ((top)
                                                                  (top)
                                                                  (top))
                                                                 ("i44"
                                                                  "i43"
                                                                  "i42")))
                                                              (hygiene guile))
                                                           0)
                                                         'syntax-object)
                                                    #f)
                                                (vector-ref
                                                  '#(syntax-object
                                                     _
                                                     ((top)
                                                      #(ribcage
                                                        #(pat exp)
                                                        #((top) (top))
                                                        #("i3909" "i3910"))
                                                      #(ribcage () () ())
                                                      #(ribcage
                                                        #(x keys clauses r mod)
                                                        #((top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top))
                                                        #("i3898"
                                                          "i3899"
                                                          "i3900"
                                                          "i3901"
                                                          "i3902"))
                                                      #(ribcage
                                                        (gen-syntax-case
                                                          gen-clause
                                                          build-dispatch-call
                                                          convert-pattern)
                                                        ((top)
                                                         (top)
                                                         (top)
                                                         (top))
                                                        ("i3708"
                                                         "i3706"
                                                         "i3704"
                                                         "i3702"))
                                                      #(ribcage
                                                        (lambda-var-list
                                                          gen-var
                                                          strip
                                                          chi-lambda-case
                                                          lambda*-formals
                                                          chi-simple-lambda
                                                          lambda-formals
                                                          ellipsis?
                                                          chi-void
                                                          eval-local-transformer
                                                          chi-local-syntax
                                                          chi-body
                                                          chi-macro
                                                          chi-application
                                                          chi-expr
                                                          chi
                                                          syntax-type
                                                          chi-when-list
                                                          chi-install-global
                                                          chi-top-sequence
                                                          chi-sequence
                                                          source-wrap
                                                          wrap
                                                          bound-id-member?
                                                          distinct-bound-ids?
                                                          valid-bound-ids?
                                                          bound-id=?
                                                          free-id=?
                                                          id-var-name
                                                          same-marks?
                                                          join-marks
                                                          join-wraps
                                                          smart-append
                                                          make-binding-wrap
                                                          extend-ribcage!
                                                          make-empty-ribcage
                                                          new-mark
                                                          anti-mark
                                                          the-anti-mark
                                                          top-marked?
                                                          top-wrap
                                                          empty-wrap
                                                          set-ribcage-labels!
                                                          set-ribcage-marks!
                                                          set-ribcage-symnames!
                                                          ribcage-labels
                                                          ribcage-marks
                                                          ribcage-symnames
                                                          ribcage?
                                                          make-ribcage
                                                          gen-labels
                                                          gen-label
                                                          make-rename
                                                          rename-marks
                                                          rename-new
                                                          rename-old
                                                          subst-rename?
                                                          wrap-subst
                                                          wrap-marks
                                                          make-wrap
                                                          id-sym-name&marks
                                                          id-sym-name
                                                          id?
                                                          nonsymbol-id?
                                                          global-extend
                                                          lookup
                                                          macros-only-env
                                                          extend-var-env
                                                          extend-env
                                                          null-env
                                                          binding-value
                                                          binding-type
                                                          make-binding
                                                          arg-check
                                                          source-annotation
                                                          no-source
                                                          set-syntax-object-module!
                                                          set-syntax-object-wrap!
                                                          set-syntax-object-expression!
                                                          syntax-object-module
                                                          syntax-object-wrap
                                                          syntax-object-expression
                                                          syntax-object?
                                                          make-syntax-object
                                                          build-lexical-var
                                                          build-letrec
                                                          build-named-let
                                                          build-let
                                                          build-sequence
                                                          build-data
                                                          build-primref
                                                          build-lambda-case
                                                          build-case-lambda
                                                          build-simple-lambda
                                                          build-global-definition
                                                          build-global-assignment
                                                          build-global-reference
                                                          analyze-variable
                                                          build-lexical-assignment
                                                          build-lexical-reference
                                                          build-dynlet
                                                          build-conditional
                                                          build-application
                                                          build-void
                                                          maybe-name-value!
                                                          decorate-source
                                                          get-global-definition-hook
                                                          put-global-definition-hook
                                                          gensym-hook
                                                          local-eval-hook
                                                          top-level-eval-hook
                                                          fx<
                                                          fx=
                                                          fx-
                                                          fx+
                                                          set-lambda-meta!
                                                          lambda-meta
                                                          lambda?
                                                          make-dynlet
                                                          make-letrec
                                                          make-let
                                                          make-lambda-case
                                                          make-lambda
                                                          make-sequence
                                                          make-application
                                                          make-conditional
                                                          make-toplevel-define
                                                          make-toplevel-set
                                                          make-toplevel-ref
                                                          make-module-set
                                                          make-module-ref
                                                          make-lexical-set
                                                          make-lexical-ref
                                                          make-primitive-ref
                                                          make-const
                                                          make-void)
                                                        ((top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top))
                                                        ("i465"
                                                         "i463"
                                                         "i461"
                                                         "i459"
                                                         "i457"
                                                         "i455"
                                                         "i453"
                                                         "i451"
                                                         "i449"
                                                         "i447"
                                                         "i445"
                                                         "i443"
                                                         "i441"
                                                         "i439"
                                                         "i437"
                                                         "i435"
                                                         "i433"
                                                         "i431"
                                                         "i429"
                                                         "i427"
                                                         "i425"
                                                         "i423"
                                                         "i421"
                                                         "i419"
                                                         "i417"
                                                         "i415"
                                                         "i413"
                                                         "i411"
                                                         "i409"
                                                         "i407"
                                                         "i405"
                                                         "i403"
                                                         "i401"
                                                         "i399"
                                                         "i397"
                                                         "i396"
                                                         "i394"
                                                         "i391"
                                                         "i390"
                                                         "i389"
                                                         "i387"
                                                         "i386"
                                                         "i384"
                                                         "i382"
                                                         "i380"
                                                         "i378"
                                                         "i376"
                                                         "i374"
                                                         "i372"
                                                         "i370"
                                                         "i367"
                                                         "i365"
                                                         "i364"
                                                         "i362"
                                                         "i360"
                                                         "i358"
                                                         "i356"
                                                         "i355"
                                                         "i354"
                                                         "i353"
                                                         "i351"
                                                         "i350"
                                                         "i347"
                                                         "i345"
                                                         "i343"
                                                         "i341"
                                                         "i339"
                                                         "i337"
                                                         "i335"
                                                         "i334"
                                                         "i333"
                                                         "i331"
                                                         "i329"
                                                         "i328"
                                                         "i325"
                                                         "i324"
                                                         "i322"
                                                         "i320"
                                                         "i318"
                                                         "i316"
                                                         "i314"
                                                         "i312"
                                                         "i310"
                                                         "i308"
                                                         "i306"
                                                         "i303"
                                                         "i301"
                                                         "i299"
                                                         "i297"
                                                         "i295"
                                                         "i293"
                                                         "i291"
                                                         "i289"
                                                         "i287"
                                                         "i285"
                                                         "i283"
                                                         "i281"
                                                         "i279"
                                                         "i277"
                                                         "i275"
                                                         "i273"
                                                         "i271"
                                                         "i269"
                                                         "i267"
                                                         "i265"
                                                         "i263"
                                                         "i261"
                                                         "i259"
                                                         "i258"
                                                         "i255"
                                                         "i253"
                                                         "i252"
                                                         "i251"
                                                         "i250"
                                                         "i249"
                                                         "i247"
                                                         "i245"
                                                         "i243"
                                                         "i240"
                                                         "i238"
                                                         "i236"
                                                         "i234"
                                                         "i232"
                                                         "i230"
                                                         "i228"
                                                         "i226"
                                                         "i224"
                                                         "i222"
                                                         "i220"
                                                         "i218"
                                                         "i216"
                                                         "i214"
                                                         "i212"
                                                         "i210"
                                                         "i208"
                                                         "i206"))
                                                      #(ribcage
                                                        (define-structure
                                                          define-expansion-accessors
                                                          define-expansion-constructors)
                                                        ((top) (top) (top))
                                                        ("i44" "i43" "i42")))
                                                     (hygiene guile))
                                                  1)
                                                '#(syntax-object
                                                   _
                                                   ((top)
                                                    #(ribcage
                                                      #(pat exp)
                                                      #((top) (top))
                                                      #("i3909" "i3910"))
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(x keys clauses r mod)
                                                      #((top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top))
                                                      #("i3898"
                                                        "i3899"
                                                        "i3900"
                                                        "i3901"
                                                        "i3902"))
                                                    #(ribcage
                                                      (gen-syntax-case
                                                        gen-clause
                                                        build-dispatch-call
                                                        convert-pattern)
                                                      ((top) (top) (top) (top))
                                                      ("i3708"
                                                       "i3706"
                                                       "i3704"
                                                       "i3702"))
                                                    #(ribcage
                                                      (lambda-var-list
                                                        gen-var
                                                        strip
                                                        chi-lambda-case
                                                        lambda*-formals
                                                        chi-simple-lambda
                                                        lambda-formals
                                                        ellipsis?
                                                        chi-void
                                                        eval-local-transformer
                                                        chi-local-syntax
                                                        chi-body
                                                        chi-macro
                                                        chi-application
                                                        chi-expr
                                                        chi
                                                        syntax-type
                                                        chi-when-list
                                                        chi-install-global
                                                        chi-top-sequence
                                                        chi-sequence
                                                        source-wrap
                                                        wrap
                                                        bound-id-member?
                                                        distinct-bound-ids?
                                                        valid-bound-ids?
                                                        bound-id=?
                                                        free-id=?
                                                        id-var-name
                                                        same-marks?
                                                        join-marks
                                                        join-wraps
                                                        smart-append
                                                        make-binding-wrap
                                                        extend-ribcage!
                                                        make-empty-ribcage
                                                        new-mark
                                                        anti-mark
                                                        the-anti-mark
                                                        top-marked?
                                                        top-wrap
                                                        empty-wrap
                                                        set-ribcage-labels!
                                                        set-ribcage-marks!
                                                        set-ribcage-symnames!
                                                        ribcage-labels
                                                        ribcage-marks
                                                        ribcage-symnames
                                                        ribcage?
                                                        make-ribcage
                                                        gen-labels
                                                        gen-label
                                                        make-rename
                                                        rename-marks
                                                        rename-new
                                                        rename-old
                                                        subst-rename?
                                                        wrap-subst
                                                        wrap-marks
                                                        make-wrap
                                                        id-sym-name&marks
                                                        id-sym-name
                                                        id?
                                                        nonsymbol-id?
                                                        global-extend
                                                        lookup
                                                        macros-only-env
                                                        extend-var-env
                                                        extend-env
                                                        null-env
                                                        binding-value
                                                        binding-type
                                                        make-binding
                                                        arg-check
                                                        source-annotation
                                                        no-source
                                                        set-syntax-object-module!
                                                        set-syntax-object-wrap!
                                                        set-syntax-object-expression!
                                                        syntax-object-module
                                                        syntax-object-wrap
                                                        syntax-object-expression
                                                        syntax-object?
                                                        make-syntax-object
                                                        build-lexical-var
                                                        build-letrec
                                                        build-named-let
                                                        build-let
                                                        build-sequence
                                                        build-data
                                                        build-primref
                                                        build-lambda-case
                                                        build-case-lambda
                                                        build-simple-lambda
                                                        build-global-definition
                                                        build-global-assignment
                                                        build-global-reference
                                                        analyze-variable
                                                        build-lexical-assignment
                                                        build-lexical-reference
                                                        build-dynlet
                                                        build-conditional
                                                        build-application
                                                        build-void
                                                        maybe-name-value!
                                                        decorate-source
                                                        get-global-definition-hook
                                                        put-global-definition-hook
                                                        gensym-hook
                                                        local-eval-hook
                                                        top-level-eval-hook
                                                        fx<
                                                        fx=
                                                        fx-
                                                        fx+
                                                        set-lambda-meta!
                                                        lambda-meta
                                                        lambda?
                                                        make-dynlet
                                                        make-letrec
                                                        make-let
                                                        make-lambda-case
                                                        make-lambda
                                                        make-sequence
                                                        make-application
                                                        make-conditional
                                                        make-toplevel-define
                                                        make-toplevel-set
                                                        make-toplevel-ref
                                                        make-module-set
                                                        make-module-ref
                                                        make-lexical-set
                                                        make-lexical-ref
                                                        make-primitive-ref
                                                        make-const
                                                        make-void)
                                                      ((top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top))
                                                      ("i465"
                                                       "i463"
                                                       "i461"
                                                       "i459"
                                                       "i457"
                                                       "i455"
                                                       "i453"
                                                       "i451"
                                                       "i449"
                                                       "i447"
                                                       "i445"
                                                       "i443"
                                                       "i441"
                                                       "i439"
                                                       "i437"
                                                       "i435"
                                                       "i433"
                                                       "i431"
                                                       "i429"
                                                       "i427"
                                                       "i425"
                                                       "i423"
                                                       "i421"
                                                       "i419"
                                                       "i417"
                                                       "i415"
                                                       "i413"
                                                       "i411"
                                                       "i409"
                                                       "i407"
                                                       "i405"
                                                       "i403"
                                                       "i401"
                                                       "i399"
                                                       "i397"
                                                       "i396"
                                                       "i394"
                                                       "i391"
                                                       "i390"
                                                       "i389"
                                                       "i387"
                                                       "i386"
                                                       "i384"
                                                       "i382"
                                                       "i380"
                                                       "i378"
                                                       "i376"
                                                       "i374"
                                                       "i372"
                                                       "i370"
                                                       "i367"
                                                       "i365"
                                                       "i364"
                                                       "i362"
                                                       "i360"
                                                       "i358"
                                                       "i356"
                                                       "i355"
                                                       "i354"
                                                       "i353"
                                                       "i351"
                                                       "i350"
                                                       "i347"
                                                       "i345"
                                                       "i343"
                                                       "i341"
                                                       "i339"
                                                       "i337"
                                                       "i335"
                                                       "i334"
                                                       "i333"
                                                       "i331"
                                                       "i329"
                                                       "i328"
                                                       "i325"
                                                       "i324"
                                                       "i322"
                                                       "i320"
                                                       "i318"
                                                       "i316"
                                                       "i314"
                                                       "i312"
                                                       "i310"
                                                       "i308"
                                                       "i306"
                                                       "i303"
                                                       "i301"
                                                       "i299"
                                                       "i297"
                                                       "i295"
                                                       "i293"
                                                       "i291"
                                                       "i289"
                                                       "i287"
                                                       "i285"
                                                       "i283"
                                                       "i281"
                                                       "i279"
                                                       "i277"
                                                       "i275"
                                                       "i273"
                                                       "i271"
                                                       "i269"
                                                       "i267"
                                                       "i265"
                                                       "i263"
                                                       "i261"
                                                       "i259"
                                                       "i258"
                                                       "i255"
                                                       "i253"
                                                       "i252"
                                                       "i251"
                                                       "i250"
                                                       "i249"
                                                       "i247"
                                                       "i245"
                                                       "i243"
                                                       "i240"
                                                       "i238"
                                                       "i236"
                                                       "i234"
                                                       "i232"
                                                       "i230"
                                                       "i228"
                                                       "i226"
                                                       "i224"
                                                       "i222"
                                                       "i220"
                                                       "i218"
                                                       "i216"
                                                       "i214"
                                                       "i212"
                                                       "i210"
                                                       "i208"
                                                       "i206"))
                                                    #(ribcage
                                                      (define-structure
                                                        define-expansion-accessors
                                                        define-expansion-constructors)
                                                      ((top) (top) (top))
                                                      ("i44" "i43" "i42")))
                                                   (hygiene guile))))
                                       (eq? (#{id-var-name 410}#
                                              '#(syntax-object
                                                 pad
                                                 ((top)
                                                  #(ribcage
                                                    #(pat exp)
                                                    #((top) (top))
                                                    #("i3909" "i3910"))
                                                  #(ribcage () () ())
                                                  #(ribcage
                                                    #(x keys clauses r mod)
                                                    #((top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top))
                                                    #("i3898"
                                                      "i3899"
                                                      "i3900"
                                                      "i3901"
                                                      "i3902"))
                                                  #(ribcage
                                                    (gen-syntax-case
                                                      gen-clause
                                                      build-dispatch-call
                                                      convert-pattern)
                                                    ((top) (top) (top) (top))
                                                    ("i3708"
                                                     "i3706"
                                                     "i3704"
                                                     "i3702"))
                                                  #(ribcage
                                                    (lambda-var-list
                                                      gen-var
                                                      strip
                                                      chi-lambda-case
                                                      lambda*-formals
                                                      chi-simple-lambda
                                                      lambda-formals
                                                      ellipsis?
                                                      chi-void
                                                      eval-local-transformer
                                                      chi-local-syntax
                                                      chi-body
                                                      chi-macro
                                                      chi-application
                                                      chi-expr
                                                      chi
                                                      syntax-type
                                                      chi-when-list
                                                      chi-install-global
                                                      chi-top-sequence
                                                      chi-sequence
                                                      source-wrap
                                                      wrap
                                                      bound-id-member?
                                                      distinct-bound-ids?
                                                      valid-bound-ids?
                                                      bound-id=?
                                                      free-id=?
                                                      id-var-name
                                                      same-marks?
                                                      join-marks
                                                      join-wraps
                                                      smart-append
                                                      make-binding-wrap
                                                      extend-ribcage!
                                                      make-empty-ribcage
                                                      new-mark
                                                      anti-mark
                                                      the-anti-mark
                                                      top-marked?
                                                      top-wrap
                                                      empty-wrap
                                                      set-ribcage-labels!
                                                      set-ribcage-marks!
                                                      set-ribcage-symnames!
                                                      ribcage-labels
                                                      ribcage-marks
                                                      ribcage-symnames
                                                      ribcage?
                                                      make-ribcage
                                                      gen-labels
                                                      gen-label
                                                      make-rename
                                                      rename-marks
                                                      rename-new
                                                      rename-old
                                                      subst-rename?
                                                      wrap-subst
                                                      wrap-marks
                                                      make-wrap
                                                      id-sym-name&marks
                                                      id-sym-name
                                                      id?
                                                      nonsymbol-id?
                                                      global-extend
                                                      lookup
                                                      macros-only-env
                                                      extend-var-env
                                                      extend-env
                                                      null-env
                                                      binding-value
                                                      binding-type
                                                      make-binding
                                                      arg-check
                                                      source-annotation
                                                      no-source
                                                      set-syntax-object-module!
                                                      set-syntax-object-wrap!
                                                      set-syntax-object-expression!
                                                      syntax-object-module
                                                      syntax-object-wrap
                                                      syntax-object-expression
                                                      syntax-object?
                                                      make-syntax-object
                                                      build-lexical-var
                                                      build-letrec
                                                      build-named-let
                                                      build-let
                                                      build-sequence
                                                      build-data
                                                      build-primref
                                                      build-lambda-case
                                                      build-case-lambda
                                                      build-simple-lambda
                                                      build-global-definition
                                                      build-global-assignment
                                                      build-global-reference
                                                      analyze-variable
                                                      build-lexical-assignment
                                                      build-lexical-reference
                                                      build-dynlet
                                                      build-conditional
                                                      build-application
                                                      build-void
                                                      maybe-name-value!
                                                      decorate-source
                                                      get-global-definition-hook
                                                      put-global-definition-hook
                                                      gensym-hook
                                                      local-eval-hook
                                                      top-level-eval-hook
                                                      fx<
                                                      fx=
                                                      fx-
                                                      fx+
                                                      set-lambda-meta!
                                                      lambda-meta
                                                      lambda?
                                                      make-dynlet
                                                      make-letrec
                                                      make-let
                                                      make-lambda-case
                                                      make-lambda
                                                      make-sequence
                                                      make-application
                                                      make-conditional
                                                      make-toplevel-define
                                                      make-toplevel-set
                                                      make-toplevel-ref
                                                      make-module-set
                                                      make-module-ref
                                                      make-lexical-set
                                                      make-lexical-ref
                                                      make-primitive-ref
                                                      make-const
                                                      make-void)
                                                    ((top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top))
                                                    ("i465"
                                                     "i463"
                                                     "i461"
                                                     "i459"
                                                     "i457"
                                                     "i455"
                                                     "i453"
                                                     "i451"
                                                     "i449"
                                                     "i447"
                                                     "i445"
                                                     "i443"
                                                     "i441"
                                                     "i439"
                                                     "i437"
                                                     "i435"
                                                     "i433"
                                                     "i431"
                                                     "i429"
                                                     "i427"
                                                     "i425"
                                                     "i423"
                                                     "i421"
                                                     "i419"
                                                     "i417"
                                                     "i415"
                                                     "i413"
                                                     "i411"
                                                     "i409"
                                                     "i407"
                                                     "i405"
                                                     "i403"
                                                     "i401"
                                                     "i399"
                                                     "i397"
                                                     "i396"
                                                     "i394"
                                                     "i391"
                                                     "i390"
                                                     "i389"
                                                     "i387"
                                                     "i386"
                                                     "i384"
                                                     "i382"
                                                     "i380"
                                                     "i378"
                                                     "i376"
                                                     "i374"
                                                     "i372"
                                                     "i370"
                                                     "i367"
                                                     "i365"
                                                     "i364"
                                                     "i362"
                                                     "i360"
                                                     "i358"
                                                     "i356"
                                                     "i355"
                                                     "i354"
                                                     "i353"
                                                     "i351"
                                                     "i350"
                                                     "i347"
                                                     "i345"
                                                     "i343"
                                                     "i341"
                                                     "i339"
                                                     "i337"
                                                     "i335"
                                                     "i334"
                                                     "i333"
                                                     "i331"
                                                     "i329"
                                                     "i328"
                                                     "i325"
                                                     "i324"
                                                     "i322"
                                                     "i320"
                                                     "i318"
                                                     "i316"
                                                     "i314"
                                                     "i312"
                                                     "i310"
                                                     "i308"
                                                     "i306"
                                                     "i303"
                                                     "i301"
                                                     "i299"
                                                     "i297"
                                                     "i295"
                                                     "i293"
                                                     "i291"
                                                     "i289"
                                                     "i287"
                                                     "i285"
                                                     "i283"
                                                     "i281"
                                                     "i279"
                                                     "i277"
                                                     "i275"
                                                     "i273"
                                                     "i271"
                                                     "i269"
                                                     "i267"
                                                     "i265"
                                                     "i263"
                                                     "i261"
                                                     "i259"
                                                     "i258"
                                                     "i255"
                                                     "i253"
                                                     "i252"
                                                     "i251"
                                                     "i250"
                                                     "i249"
                                                     "i247"
                                                     "i245"
                                                     "i243"
                                                     "i240"
                                                     "i238"
                                                     "i236"
                                                     "i234"
                                                     "i232"
                                                     "i230"
                                                     "i228"
                                                     "i226"
                                                     "i224"
                                                     "i222"
                                                     "i220"
                                                     "i218"
                                                     "i216"
                                                     "i214"
                                                     "i212"
                                                     "i210"
                                                     "i208"
                                                     "i206"))
                                                  #(ribcage
                                                    (define-structure
                                                      define-expansion-accessors
                                                      define-expansion-constructors)
                                                    ((top) (top) (top))
                                                    ("i44" "i43" "i42")))
                                                 (hygiene guile))
                                              '(()))
                                            (#{id-var-name 410}#
                                              '#(syntax-object
                                                 _
                                                 ((top)
                                                  #(ribcage
                                                    #(pat exp)
                                                    #((top) (top))
                                                    #("i3909" "i3910"))
                                                  #(ribcage () () ())
                                                  #(ribcage
                                                    #(x keys clauses r mod)
                                                    #((top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top))
                                                    #("i3898"
                                                      "i3899"
                                                      "i3900"
                                                      "i3901"
                                                      "i3902"))
                                                  #(ribcage
                                                    (gen-syntax-case
                                                      gen-clause
                                                      build-dispatch-call
                                                      convert-pattern)
                                                    ((top) (top) (top) (top))
                                                    ("i3708"
                                                     "i3706"
                                                     "i3704"
                                                     "i3702"))
                                                  #(ribcage
                                                    (lambda-var-list
                                                      gen-var
                                                      strip
                                                      chi-lambda-case
                                                      lambda*-formals
                                                      chi-simple-lambda
                                                      lambda-formals
                                                      ellipsis?
                                                      chi-void
                                                      eval-local-transformer
                                                      chi-local-syntax
                                                      chi-body
                                                      chi-macro
                                                      chi-application
                                                      chi-expr
                                                      chi
                                                      syntax-type
                                                      chi-when-list
                                                      chi-install-global
                                                      chi-top-sequence
                                                      chi-sequence
                                                      source-wrap
                                                      wrap
                                                      bound-id-member?
                                                      distinct-bound-ids?
                                                      valid-bound-ids?
                                                      bound-id=?
                                                      free-id=?
                                                      id-var-name
                                                      same-marks?
                                                      join-marks
                                                      join-wraps
                                                      smart-append
                                                      make-binding-wrap
                                                      extend-ribcage!
                                                      make-empty-ribcage
                                                      new-mark
                                                      anti-mark
                                                      the-anti-mark
                                                      top-marked?
                                                      top-wrap
                                                      empty-wrap
                                                      set-ribcage-labels!
                                                      set-ribcage-marks!
                                                      set-ribcage-symnames!
                                                      ribcage-labels
                                                      ribcage-marks
                                                      ribcage-symnames
                                                      ribcage?
                                                      make-ribcage
                                                      gen-labels
                                                      gen-label
                                                      make-rename
                                                      rename-marks
                                                      rename-new
                                                      rename-old
                                                      subst-rename?
                                                      wrap-subst
                                                      wrap-marks
                                                      make-wrap
                                                      id-sym-name&marks
                                                      id-sym-name
                                                      id?
                                                      nonsymbol-id?
                                                      global-extend
                                                      lookup
                                                      macros-only-env
                                                      extend-var-env
                                                      extend-env
                                                      null-env
                                                      binding-value
                                                      binding-type
                                                      make-binding
                                                      arg-check
                                                      source-annotation
                                                      no-source
                                                      set-syntax-object-module!
                                                      set-syntax-object-wrap!
                                                      set-syntax-object-expression!
                                                      syntax-object-module
                                                      syntax-object-wrap
                                                      syntax-object-expression
                                                      syntax-object?
                                                      make-syntax-object
                                                      build-lexical-var
                                                      build-letrec
                                                      build-named-let
                                                      build-let
                                                      build-sequence
                                                      build-data
                                                      build-primref
                                                      build-lambda-case
                                                      build-case-lambda
                                                      build-simple-lambda
                                                      build-global-definition
                                                      build-global-assignment
                                                      build-global-reference
                                                      analyze-variable
                                                      build-lexical-assignment
                                                      build-lexical-reference
                                                      build-dynlet
                                                      build-conditional
                                                      build-application
                                                      build-void
                                                      maybe-name-value!
                                                      decorate-source
                                                      get-global-definition-hook
                                                      put-global-definition-hook
                                                      gensym-hook
                                                      local-eval-hook
                                                      top-level-eval-hook
                                                      fx<
                                                      fx=
                                                      fx-
                                                      fx+
                                                      set-lambda-meta!
                                                      lambda-meta
                                                      lambda?
                                                      make-dynlet
                                                      make-letrec
                                                      make-let
                                                      make-lambda-case
                                                      make-lambda
                                                      make-sequence
                                                      make-application
                                                      make-conditional
                                                      make-toplevel-define
                                                      make-toplevel-set
                                                      make-toplevel-ref
                                                      make-module-set
                                                      make-module-ref
                                                      make-lexical-set
                                                      make-lexical-ref
                                                      make-primitive-ref
                                                      make-const
                                                      make-void)
                                                    ((top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top))
                                                    ("i465"
                                                     "i463"
                                                     "i461"
                                                     "i459"
                                                     "i457"
                                                     "i455"
                                                     "i453"
                                                     "i451"
                                                     "i449"
                                                     "i447"
                                                     "i445"
                                                     "i443"
                                                     "i441"
                                                     "i439"
                                                     "i437"
                                                     "i435"
                                                     "i433"
                                                     "i431"
                                                     "i429"
                                                     "i427"
                                                     "i425"
                                                     "i423"
                                                     "i421"
                                                     "i419"
                                                     "i417"
                                                     "i415"
                                                     "i413"
                                                     "i411"
                                                     "i409"
                                                     "i407"
                                                     "i405"
                                                     "i403"
                                                     "i401"
                                                     "i399"
                                                     "i397"
                                                     "i396"
                                                     "i394"
                                                     "i391"
                                                     "i390"
                                                     "i389"
                                                     "i387"
                                                     "i386"
                                                     "i384"
                                                     "i382"
                                                     "i380"
                                                     "i378"
                                                     "i376"
                                                     "i374"
                                                     "i372"
                                                     "i370"
                                                     "i367"
                                                     "i365"
                                                     "i364"
                                                     "i362"
                                                     "i360"
                                                     "i358"
                                                     "i356"
                                                     "i355"
                                                     "i354"
                                                     "i353"
                                                     "i351"
                                                     "i350"
                                                     "i347"
                                                     "i345"
                                                     "i343"
                                                     "i341"
                                                     "i339"
                                                     "i337"
                                                     "i335"
                                                     "i334"
                                                     "i333"
                                                     "i331"
                                                     "i329"
                                                     "i328"
                                                     "i325"
                                                     "i324"
                                                     "i322"
                                                     "i320"
                                                     "i318"
                                                     "i316"
                                                     "i314"
                                                     "i312"
                                                     "i310"
                                                     "i308"
                                                     "i306"
                                                     "i303"
                                                     "i301"
                                                     "i299"
                                                     "i297"
                                                     "i295"
                                                     "i293"
                                                     "i291"
                                                     "i289"
                                                     "i287"
                                                     "i285"
                                                     "i283"
                                                     "i281"
                                                     "i279"
                                                     "i277"
                                                     "i275"
                                                     "i273"
                                                     "i271"
                                                     "i269"
                                                     "i267"
                                                     "i265"
                                                     "i263"
                                                     "i261"
                                                     "i259"
                                                     "i258"
                                                     "i255"
                                                     "i253"
                                                     "i252"
                                                     "i251"
                                                     "i250"
                                                     "i249"
                                                     "i247"
                                                     "i245"
                                                     "i243"
                                                     "i240"
                                                     "i238"
                                                     "i236"
                                                     "i234"
                                                     "i232"
                                                     "i230"
                                                     "i228"
                                                     "i226"
                                                     "i224"
                                                     "i222"
                                                     "i220"
                                                     "i218"
                                                     "i216"
                                                     "i214"
                                                     "i212"
                                                     "i210"
                                                     "i208"
                                                     "i206"))
                                                  #(ribcage
                                                    (define-structure
                                                      define-expansion-accessors
                                                      define-expansion-constructors)
                                                    ((top) (top) (top))
                                                    ("i44" "i43" "i42")))
                                                 (hygiene guile))
                                              '(())))
                                       #f)
                                   (#{chi 436}#
                                     #{exp 3912}#
                                     #{r 3896}#
                                     '(())
                                     #{mod 3897}#)
                                   (begin
                                     (let ((#{labels 3920}#
                                             (list (symbol->string
                                                     (gensym "i"))))
                                           (#{var 3921}#
                                             (begin
                                               (let ((#{id 9472}#
                                                       (if (if (vector?
                                                                 #{pat 3911}#)
                                                             (if (= (vector-length
                                                                      #{pat 3911}#)
                                                                    4)
                                                               (eq? (vector-ref
                                                                      #{pat 3911}#
                                                                      0)
                                                                    'syntax-object)
                                                               #f)
                                                             #f)
                                                         (vector-ref
                                                           #{pat 3911}#
                                                           1)
                                                         #{pat 3911}#)))
                                                 (gensym
                                                   (string-append
                                                     (symbol->string
                                                       #{id 9472}#)
                                                     " "))))))
                                       (#{build-application 270}#
                                         #f
                                         (#{build-simple-lambda 288}#
                                           #f
                                           (list (syntax->datum #{pat 3911}#))
                                           #f
                                           (list #{var 3921}#)
                                           '()
                                           (#{chi 436}#
                                             #{exp 3912}#
                                             (#{extend-env 336}#
                                               #{labels 3920}#
                                               (list (cons 'syntax
                                                           (cons #{var 3921}#
                                                                 0)))
                                               #{r 3896}#)
                                             (#{make-binding-wrap 400}#
                                               (list #{pat 3911}#)
                                               #{labels 3920}#
                                               '(()))
                                             #{mod 3897}#))
                                         (list #{x 3893}#)))))
                                 (#{gen-clause 3707}#
                                   #{x 3893}#
                                   #{keys 3894}#
                                   (cdr #{clauses 3895}#)
                                   #{r 3896}#
                                   #{pat 3911}#
                                   #t
                                   #{exp 3912}#
                                   #{mod 3897}#)))
                             #{tmp 3908}#)
                           (begin
                             (let ((#{tmp 3927}#
                                     ($sc-dispatch
                                       #{tmp 3907}#
                                       '(any any any))))
                               (if #{tmp 3927}#
                                 (@apply
                                   (lambda (#{pat 3931}#
                                            #{fender 3932}#
                                            #{exp 3933}#)
                                     (#{gen-clause 3707}#
                                       #{x 3893}#
                                       #{keys 3894}#
                                       (cdr #{clauses 3895}#)
                                       #{r 3896}#
                                       #{pat 3931}#
                                       #{fender 3932}#
                                       #{exp 3933}#
                                       #{mod 3897}#))
                                   #{tmp 3927}#)
                                 (syntax-violation
                                   'syntax-case
                                   "invalid clause"
                                   (car #{clauses 3895}#))))))))))))))
          (begin
            (lambda (#{e 3936}#
                     #{r 3937}#
                     #{w 3938}#
                     #{s 3939}#
                     #{mod 3940}#)
              (begin
                (let ((#{e 3947}#
                        (#{wrap 422}#
                          (begin
                            (if (if (pair? #{e 3936}#) #{s 3939}# #f)
                              (set-source-properties! #{e 3936}# #{s 3939}#))
                            #{e 3936}#)
                          #{w 3938}#
                          #{mod 3940}#)))
                  (begin
                    (let ((#{tmp 3949}#
                            ($sc-dispatch
                              #{e 3947}#
                              '(_ any each-any . each-any))))
                      (if #{tmp 3949}#
                        (@apply
                          (lambda (#{val 3953}# #{key 3954}# #{m 3955}#)
                            (if (and-map
                                  (lambda (#{x 3956}#)
                                    (if (if (symbol? #{x 3956}#)
                                          #t
                                          (if (if (vector? #{x 3956}#)
                                                (if (= (vector-length
                                                         #{x 3956}#)
                                                       4)
                                                  (eq? (vector-ref
                                                         #{x 3956}#
                                                         0)
                                                       'syntax-object)
                                                  #f)
                                                #f)
                                            (symbol? (vector-ref #{x 3956}# 1))
                                            #f))
                                      (not (if (if (if (vector? #{x 3956}#)
                                                     (if (= (vector-length
                                                              #{x 3956}#)
                                                            4)
                                                       (eq? (vector-ref
                                                              #{x 3956}#
                                                              0)
                                                            'syntax-object)
                                                       #f)
                                                     #f)
                                                 (symbol?
                                                   (vector-ref #{x 3956}# 1))
                                                 #f)
                                             (if (eq? (if (if (vector?
                                                                #{x 3956}#)
                                                            (if (= (vector-length
                                                                     #{x 3956}#)
                                                                   4)
                                                              (eq? (vector-ref
                                                                     #{x 3956}#
                                                                     0)
                                                                   'syntax-object)
                                                              #f)
                                                            #f)
                                                        (vector-ref
                                                          #{x 3956}#
                                                          1)
                                                        #{x 3956}#)
                                                      (if (if (= (vector-length
                                                                   '#(syntax-object
                                                                      ...
                                                                      ((top)
                                                                       #(ribcage
                                                                         ()
                                                                         ()
                                                                         ())
                                                                       #(ribcage
                                                                         ()
                                                                         ()
                                                                         ())
                                                                       #(ribcage
                                                                         #(x)
                                                                         #((top))
                                                                         #("i2228"))
                                                                       #(ribcage
                                                                         (lambda-var-list
                                                                           gen-var
                                                                           strip
                                                                           chi-lambda-case
                                                                           lambda*-formals
                                                                           chi-simple-lambda
                                                                           lambda-formals
                                                                           ellipsis?
                                                                           chi-void
                                                                           eval-local-transformer
                                                                           chi-local-syntax
                                                                           chi-body
                                                                           chi-macro
                                                                           chi-application
                                                                           chi-expr
                                                                           chi
                                                                           syntax-type
                                                                           chi-when-list
                                                                           chi-install-global
                                                                           chi-top-sequence
                                                                           chi-sequence
                                                                           source-wrap
                                                                           wrap
                                                                           bound-id-member?
                                                                           distinct-bound-ids?
                                                                           valid-bound-ids?
                                                                           bound-id=?
                                                                           free-id=?
                                                                           id-var-name
                                                                           same-marks?
                                                                           join-marks
                                                                           join-wraps
                                                                           smart-append
                                                                           make-binding-wrap
                                                                           extend-ribcage!
                                                                           make-empty-ribcage
                                                                           new-mark
                                                                           anti-mark
                                                                           the-anti-mark
                                                                           top-marked?
                                                                           top-wrap
                                                                           empty-wrap
                                                                           set-ribcage-labels!
                                                                           set-ribcage-marks!
                                                                           set-ribcage-symnames!
                                                                           ribcage-labels
                                                                           ribcage-marks
                                                                           ribcage-symnames
                                                                           ribcage?
                                                                           make-ribcage
                                                                           gen-labels
                                                                           gen-label
                                                                           make-rename
                                                                           rename-marks
                                                                           rename-new
                                                                           rename-old
                                                                           subst-rename?
                                                                           wrap-subst
                                                                           wrap-marks
                                                                           make-wrap
                                                                           id-sym-name&marks
                                                                           id-sym-name
                                                                           id?
                                                                           nonsymbol-id?
                                                                           global-extend
                                                                           lookup
                                                                           macros-only-env
                                                                           extend-var-env
                                                                           extend-env
                                                                           null-env
                                                                           binding-value
                                                                           binding-type
                                                                           make-binding
                                                                           arg-check
                                                                           source-annotation
                                                                           no-source
                                                                           set-syntax-object-module!
                                                                           set-syntax-object-wrap!
                                                                           set-syntax-object-expression!
                                                                           syntax-object-module
                                                                           syntax-object-wrap
                                                                           syntax-object-expression
                                                                           syntax-object?
                                                                           make-syntax-object
                                                                           build-lexical-var
                                                                           build-letrec
                                                                           build-named-let
                                                                           build-let
                                                                           build-sequence
                                                                           build-data
                                                                           build-primref
                                                                           build-lambda-case
                                                                           build-case-lambda
                                                                           build-simple-lambda
                                                                           build-global-definition
                                                                           build-global-assignment
                                                                           build-global-reference
                                                                           analyze-variable
                                                                           build-lexical-assignment
                                                                           build-lexical-reference
                                                                           build-dynlet
                                                                           build-conditional
                                                                           build-application
                                                                           build-void
                                                                           maybe-name-value!
                                                                           decorate-source
                                                                           get-global-definition-hook
                                                                           put-global-definition-hook
                                                                           gensym-hook
                                                                           local-eval-hook
                                                                           top-level-eval-hook
                                                                           fx<
                                                                           fx=
                                                                           fx-
                                                                           fx+
                                                                           set-lambda-meta!
                                                                           lambda-meta
                                                                           lambda?
                                                                           make-dynlet
                                                                           make-letrec
                                                                           make-let
                                                                           make-lambda-case
                                                                           make-lambda
                                                                           make-sequence
                                                                           make-application
                                                                           make-conditional
                                                                           make-toplevel-define
                                                                           make-toplevel-set
                                                                           make-toplevel-ref
                                                                           make-module-set
                                                                           make-module-ref
                                                                           make-lexical-set
                                                                           make-lexical-ref
                                                                           make-primitive-ref
                                                                           make-const
                                                                           make-void)
                                                                         ((top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top))
                                                                         ("i465"
                                                                          "i463"
                                                                          "i461"
                                                                          "i459"
                                                                          "i457"
                                                                          "i455"
                                                                          "i453"
                                                                          "i451"
                                                                          "i449"
                                                                          "i447"
                                                                          "i445"
                                                                          "i443"
                                                                          "i441"
                                                                          "i439"
                                                                          "i437"
                                                                          "i435"
                                                                          "i433"
                                                                          "i431"
                                                                          "i429"
                                                                          "i427"
                                                                          "i425"
                                                                          "i423"
                                                                          "i421"
                                                                          "i419"
                                                                          "i417"
                                                                          "i415"
                                                                          "i413"
                                                                          "i411"
                                                                          "i409"
                                                                          "i407"
                                                                          "i405"
                                                                          "i403"
                                                                          "i401"
                                                                          "i399"
                                                                          "i397"
                                                                          "i396"
                                                                          "i394"
                                                                          "i391"
                                                                          "i390"
                                                                          "i389"
                                                                          "i387"
                                                                          "i386"
                                                                          "i384"
                                                                          "i382"
                                                                          "i380"
                                                                          "i378"
                                                                          "i376"
                                                                          "i374"
                                                                          "i372"
                                                                          "i370"
                                                                          "i367"
                                                                          "i365"
                                                                          "i364"
                                                                          "i362"
                                                                          "i360"
                                                                          "i358"
                                                                          "i356"
                                                                          "i355"
                                                                          "i354"
                                                                          "i353"
                                                                          "i351"
                                                                          "i350"
                                                                          "i347"
                                                                          "i345"
                                                                          "i343"
                                                                          "i341"
                                                                          "i339"
                                                                          "i337"
                                                                          "i335"
                                                                          "i334"
                                                                          "i333"
                                                                          "i331"
                                                                          "i329"
                                                                          "i328"
                                                                          "i325"
                                                                          "i324"
                                                                          "i322"
                                                                          "i320"
                                                                          "i318"
                                                                          "i316"
                                                                          "i314"
                                                                          "i312"
                                                                          "i310"
                                                                          "i308"
                                                                          "i306"
                                                                          "i303"
                                                                          "i301"
                                                                          "i299"
                                                                          "i297"
                                                                          "i295"
                                                                          "i293"
                                                                          "i291"
                                                                          "i289"
                                                                          "i287"
                                                                          "i285"
                                                                          "i283"
                                                                          "i281"
                                                                          "i279"
                                                                          "i277"
                                                                          "i275"
                                                                          "i273"
                                                                          "i271"
                                                                          "i269"
                                                                          "i267"
                                                                          "i265"
                                                                          "i263"
                                                                          "i261"
                                                                          "i259"
                                                                          "i258"
                                                                          "i255"
                                                                          "i253"
                                                                          "i252"
                                                                          "i251"
                                                                          "i250"
                                                                          "i249"
                                                                          "i247"
                                                                          "i245"
                                                                          "i243"
                                                                          "i240"
                                                                          "i238"
                                                                          "i236"
                                                                          "i234"
                                                                          "i232"
                                                                          "i230"
                                                                          "i228"
                                                                          "i226"
                                                                          "i224"
                                                                          "i222"
                                                                          "i220"
                                                                          "i218"
                                                                          "i216"
                                                                          "i214"
                                                                          "i212"
                                                                          "i210"
                                                                          "i208"
                                                                          "i206"))
                                                                       #(ribcage
                                                                         (define-structure
                                                                           define-expansion-accessors
                                                                           define-expansion-constructors)
                                                                         ((top)
                                                                          (top)
                                                                          (top))
                                                                         ("i44"
                                                                          "i43"
                                                                          "i42")))
                                                                      (hygiene
                                                                        guile)))
                                                                 4)
                                                            (eq? (vector-ref
                                                                   '#(syntax-object
                                                                      ...
                                                                      ((top)
                                                                       #(ribcage
                                                                         ()
                                                                         ()
                                                                         ())
                                                                       #(ribcage
                                                                         ()
                                                                         ()
                                                                         ())
                                                                       #(ribcage
                                                                         #(x)
                                                                         #((top))
                                                                         #("i2228"))
                                                                       #(ribcage
                                                                         (lambda-var-list
                                                                           gen-var
                                                                           strip
                                                                           chi-lambda-case
                                                                           lambda*-formals
                                                                           chi-simple-lambda
                                                                           lambda-formals
                                                                           ellipsis?
                                                                           chi-void
                                                                           eval-local-transformer
                                                                           chi-local-syntax
                                                                           chi-body
                                                                           chi-macro
                                                                           chi-application
                                                                           chi-expr
                                                                           chi
                                                                           syntax-type
                                                                           chi-when-list
                                                                           chi-install-global
                                                                           chi-top-sequence
                                                                           chi-sequence
                                                                           source-wrap
                                                                           wrap
                                                                           bound-id-member?
                                                                           distinct-bound-ids?
                                                                           valid-bound-ids?
                                                                           bound-id=?
                                                                           free-id=?
                                                                           id-var-name
                                                                           same-marks?
                                                                           join-marks
                                                                           join-wraps
                                                                           smart-append
                                                                           make-binding-wrap
                                                                           extend-ribcage!
                                                                           make-empty-ribcage
                                                                           new-mark
                                                                           anti-mark
                                                                           the-anti-mark
                                                                           top-marked?
                                                                           top-wrap
                                                                           empty-wrap
                                                                           set-ribcage-labels!
                                                                           set-ribcage-marks!
                                                                           set-ribcage-symnames!
                                                                           ribcage-labels
                                                                           ribcage-marks
                                                                           ribcage-symnames
                                                                           ribcage?
                                                                           make-ribcage
                                                                           gen-labels
                                                                           gen-label
                                                                           make-rename
                                                                           rename-marks
                                                                           rename-new
                                                                           rename-old
                                                                           subst-rename?
                                                                           wrap-subst
                                                                           wrap-marks
                                                                           make-wrap
                                                                           id-sym-name&marks
                                                                           id-sym-name
                                                                           id?
                                                                           nonsymbol-id?
                                                                           global-extend
                                                                           lookup
                                                                           macros-only-env
                                                                           extend-var-env
                                                                           extend-env
                                                                           null-env
                                                                           binding-value
                                                                           binding-type
                                                                           make-binding
                                                                           arg-check
                                                                           source-annotation
                                                                           no-source
                                                                           set-syntax-object-module!
                                                                           set-syntax-object-wrap!
                                                                           set-syntax-object-expression!
                                                                           syntax-object-module
                                                                           syntax-object-wrap
                                                                           syntax-object-expression
                                                                           syntax-object?
                                                                           make-syntax-object
                                                                           build-lexical-var
                                                                           build-letrec
                                                                           build-named-let
                                                                           build-let
                                                                           build-sequence
                                                                           build-data
                                                                           build-primref
                                                                           build-lambda-case
                                                                           build-case-lambda
                                                                           build-simple-lambda
                                                                           build-global-definition
                                                                           build-global-assignment
                                                                           build-global-reference
                                                                           analyze-variable
                                                                           build-lexical-assignment
                                                                           build-lexical-reference
                                                                           build-dynlet
                                                                           build-conditional
                                                                           build-application
                                                                           build-void
                                                                           maybe-name-value!
                                                                           decorate-source
                                                                           get-global-definition-hook
                                                                           put-global-definition-hook
                                                                           gensym-hook
                                                                           local-eval-hook
                                                                           top-level-eval-hook
                                                                           fx<
                                                                           fx=
                                                                           fx-
                                                                           fx+
                                                                           set-lambda-meta!
                                                                           lambda-meta
                                                                           lambda?
                                                                           make-dynlet
                                                                           make-letrec
                                                                           make-let
                                                                           make-lambda-case
                                                                           make-lambda
                                                                           make-sequence
                                                                           make-application
                                                                           make-conditional
                                                                           make-toplevel-define
                                                                           make-toplevel-set
                                                                           make-toplevel-ref
                                                                           make-module-set
                                                                           make-module-ref
                                                                           make-lexical-set
                                                                           make-lexical-ref
                                                                           make-primitive-ref
                                                                           make-const
                                                                           make-void)
                                                                         ((top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top))
                                                                         ("i465"
                                                                          "i463"
                                                                          "i461"
                                                                          "i459"
                                                                          "i457"
                                                                          "i455"
                                                                          "i453"
                                                                          "i451"
                                                                          "i449"
                                                                          "i447"
                                                                          "i445"
                                                                          "i443"
                                                                          "i441"
                                                                          "i439"
                                                                          "i437"
                                                                          "i435"
                                                                          "i433"
                                                                          "i431"
                                                                          "i429"
                                                                          "i427"
                                                                          "i425"
                                                                          "i423"
                                                                          "i421"
                                                                          "i419"
                                                                          "i417"
                                                                          "i415"
                                                                          "i413"
                                                                          "i411"
                                                                          "i409"
                                                                          "i407"
                                                                          "i405"
                                                                          "i403"
                                                                          "i401"
                                                                          "i399"
                                                                          "i397"
                                                                          "i396"
                                                                          "i394"
                                                                          "i391"
                                                                          "i390"
                                                                          "i389"
                                                                          "i387"
                                                                          "i386"
                                                                          "i384"
                                                                          "i382"
                                                                          "i380"
                                                                          "i378"
                                                                          "i376"
                                                                          "i374"
                                                                          "i372"
                                                                          "i370"
                                                                          "i367"
                                                                          "i365"
                                                                          "i364"
                                                                          "i362"
                                                                          "i360"
                                                                          "i358"
                                                                          "i356"
                                                                          "i355"
                                                                          "i354"
                                                                          "i353"
                                                                          "i351"
                                                                          "i350"
                                                                          "i347"
                                                                          "i345"
                                                                          "i343"
                                                                          "i341"
                                                                          "i339"
                                                                          "i337"
                                                                          "i335"
                                                                          "i334"
                                                                          "i333"
                                                                          "i331"
                                                                          "i329"
                                                                          "i328"
                                                                          "i325"
                                                                          "i324"
                                                                          "i322"
                                                                          "i320"
                                                                          "i318"
                                                                          "i316"
                                                                          "i314"
                                                                          "i312"
                                                                          "i310"
                                                                          "i308"
                                                                          "i306"
                                                                          "i303"
                                                                          "i301"
                                                                          "i299"
                                                                          "i297"
                                                                          "i295"
                                                                          "i293"
                                                                          "i291"
                                                                          "i289"
                                                                          "i287"
                                                                          "i285"
                                                                          "i283"
                                                                          "i281"
                                                                          "i279"
                                                                          "i277"
                                                                          "i275"
                                                                          "i273"
                                                                          "i271"
                                                                          "i269"
                                                                          "i267"
                                                                          "i265"
                                                                          "i263"
                                                                          "i261"
                                                                          "i259"
                                                                          "i258"
                                                                          "i255"
                                                                          "i253"
                                                                          "i252"
                                                                          "i251"
                                                                          "i250"
                                                                          "i249"
                                                                          "i247"
                                                                          "i245"
                                                                          "i243"
                                                                          "i240"
                                                                          "i238"
                                                                          "i236"
                                                                          "i234"
                                                                          "i232"
                                                                          "i230"
                                                                          "i228"
                                                                          "i226"
                                                                          "i224"
                                                                          "i222"
                                                                          "i220"
                                                                          "i218"
                                                                          "i216"
                                                                          "i214"
                                                                          "i212"
                                                                          "i210"
                                                                          "i208"
                                                                          "i206"))
                                                                       #(ribcage
                                                                         (define-structure
                                                                           define-expansion-accessors
                                                                           define-expansion-constructors)
                                                                         ((top)
                                                                          (top)
                                                                          (top))
                                                                         ("i44"
                                                                          "i43"
                                                                          "i42")))
                                                                      (hygiene
                                                                        guile))
                                                                   0)
                                                                 'syntax-object)
                                                            #f)
                                                        (vector-ref
                                                          '#(syntax-object
                                                             ...
                                                             ((top)
                                                              #(ribcage
                                                                ()
                                                                ()
                                                                ())
                                                              #(ribcage
                                                                ()
                                                                ()
                                                                ())
                                                              #(ribcage
                                                                #(x)
                                                                #((top))
                                                                #("i2228"))
                                                              #(ribcage
                                                                (lambda-var-list
                                                                  gen-var
                                                                  strip
                                                                  chi-lambda-case
                                                                  lambda*-formals
                                                                  chi-simple-lambda
                                                                  lambda-formals
                                                                  ellipsis?
                                                                  chi-void
                                                                  eval-local-transformer
                                                                  chi-local-syntax
                                                                  chi-body
                                                                  chi-macro
                                                                  chi-application
                                                                  chi-expr
                                                                  chi
                                                                  syntax-type
                                                                  chi-when-list
                                                                  chi-install-global
                                                                  chi-top-sequence
                                                                  chi-sequence
                                                                  source-wrap
                                                                  wrap
                                                                  bound-id-member?
                                                                  distinct-bound-ids?
                                                                  valid-bound-ids?
                                                                  bound-id=?
                                                                  free-id=?
                                                                  id-var-name
                                                                  same-marks?
                                                                  join-marks
                                                                  join-wraps
                                                                  smart-append
                                                                  make-binding-wrap
                                                                  extend-ribcage!
                                                                  make-empty-ribcage
                                                                  new-mark
                                                                  anti-mark
                                                                  the-anti-mark
                                                                  top-marked?
                                                                  top-wrap
                                                                  empty-wrap
                                                                  set-ribcage-labels!
                                                                  set-ribcage-marks!
                                                                  set-ribcage-symnames!
                                                                  ribcage-labels
                                                                  ribcage-marks
                                                                  ribcage-symnames
                                                                  ribcage?
                                                                  make-ribcage
                                                                  gen-labels
                                                                  gen-label
                                                                  make-rename
                                                                  rename-marks
                                                                  rename-new
                                                                  rename-old
                                                                  subst-rename?
                                                                  wrap-subst
                                                                  wrap-marks
                                                                  make-wrap
                                                                  id-sym-name&marks
                                                                  id-sym-name
                                                                  id?
                                                                  nonsymbol-id?
                                                                  global-extend
                                                                  lookup
                                                                  macros-only-env
                                                                  extend-var-env
                                                                  extend-env
                                                                  null-env
                                                                  binding-value
                                                                  binding-type
                                                                  make-binding
                                                                  arg-check
                                                                  source-annotation
                                                                  no-source
                                                                  set-syntax-object-module!
                                                                  set-syntax-object-wrap!
                                                                  set-syntax-object-expression!
                                                                  syntax-object-module
                                                                  syntax-object-wrap
                                                                  syntax-object-expression
                                                                  syntax-object?
                                                                  make-syntax-object
                                                                  build-lexical-var
                                                                  build-letrec
                                                                  build-named-let
                                                                  build-let
                                                                  build-sequence
                                                                  build-data
                                                                  build-primref
                                                                  build-lambda-case
                                                                  build-case-lambda
                                                                  build-simple-lambda
                                                                  build-global-definition
                                                                  build-global-assignment
                                                                  build-global-reference
                                                                  analyze-variable
                                                                  build-lexical-assignment
                                                                  build-lexical-reference
                                                                  build-dynlet
                                                                  build-conditional
                                                                  build-application
                                                                  build-void
                                                                  maybe-name-value!
                                                                  decorate-source
                                                                  get-global-definition-hook
                                                                  put-global-definition-hook
                                                                  gensym-hook
                                                                  local-eval-hook
                                                                  top-level-eval-hook
                                                                  fx<
                                                                  fx=
                                                                  fx-
                                                                  fx+
                                                                  set-lambda-meta!
                                                                  lambda-meta
                                                                  lambda?
                                                                  make-dynlet
                                                                  make-letrec
                                                                  make-let
                                                                  make-lambda-case
                                                                  make-lambda
                                                                  make-sequence
                                                                  make-application
                                                                  make-conditional
                                                                  make-toplevel-define
                                                                  make-toplevel-set
                                                                  make-toplevel-ref
                                                                  make-module-set
                                                                  make-module-ref
                                                                  make-lexical-set
                                                                  make-lexical-ref
                                                                  make-primitive-ref
                                                                  make-const
                                                                  make-void)
                                                                ((top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top))
                                                                ("i465"
                                                                 "i463"
                                                                 "i461"
                                                                 "i459"
                                                                 "i457"
                                                                 "i455"
                                                                 "i453"
                                                                 "i451"
                                                                 "i449"
                                                                 "i447"
                                                                 "i445"
                                                                 "i443"
                                                                 "i441"
                                                                 "i439"
                                                                 "i437"
                                                                 "i435"
                                                                 "i433"
                                                                 "i431"
                                                                 "i429"
                                                                 "i427"
                                                                 "i425"
                                                                 "i423"
                                                                 "i421"
                                                                 "i419"
                                                                 "i417"
                                                                 "i415"
                                                                 "i413"
                                                                 "i411"
                                                                 "i409"
                                                                 "i407"
                                                                 "i405"
                                                                 "i403"
                                                                 "i401"
                                                                 "i399"
                                                                 "i397"
                                                                 "i396"
                                                                 "i394"
                                                                 "i391"
                                                                 "i390"
                                                                 "i389"
                                                                 "i387"
                                                                 "i386"
                                                                 "i384"
                                                                 "i382"
                                                                 "i380"
                                                                 "i378"
                                                                 "i376"
                                                                 "i374"
                                                                 "i372"
                                                                 "i370"
                                                                 "i367"
                                                                 "i365"
                                                                 "i364"
                                                                 "i362"
                                                                 "i360"
                                                                 "i358"
                                                                 "i356"
                                                                 "i355"
                                                                 "i354"
                                                                 "i353"
                                                                 "i351"
                                                                 "i350"
                                                                 "i347"
                                                                 "i345"
                                                                 "i343"
                                                                 "i341"
                                                                 "i339"
                                                                 "i337"
                                                                 "i335"
                                                                 "i334"
                                                                 "i333"
                                                                 "i331"
                                                                 "i329"
                                                                 "i328"
                                                                 "i325"
                                                                 "i324"
                                                                 "i322"
                                                                 "i320"
                                                                 "i318"
                                                                 "i316"
                                                                 "i314"
                                                                 "i312"
                                                                 "i310"
                                                                 "i308"
                                                                 "i306"
                                                                 "i303"
                                                                 "i301"
                                                                 "i299"
                                                                 "i297"
                                                                 "i295"
                                                                 "i293"
                                                                 "i291"
                                                                 "i289"
                                                                 "i287"
                                                                 "i285"
                                                                 "i283"
                                                                 "i281"
                                                                 "i279"
                                                                 "i277"
                                                                 "i275"
                                                                 "i273"
                                                                 "i271"
                                                                 "i269"
                                                                 "i267"
                                                                 "i265"
                                                                 "i263"
                                                                 "i261"
                                                                 "i259"
                                                                 "i258"
                                                                 "i255"
                                                                 "i253"
                                                                 "i252"
                                                                 "i251"
                                                                 "i250"
                                                                 "i249"
                                                                 "i247"
                                                                 "i245"
                                                                 "i243"
                                                                 "i240"
                                                                 "i238"
                                                                 "i236"
                                                                 "i234"
                                                                 "i232"
                                                                 "i230"
                                                                 "i228"
                                                                 "i226"
                                                                 "i224"
                                                                 "i222"
                                                                 "i220"
                                                                 "i218"
                                                                 "i216"
                                                                 "i214"
                                                                 "i212"
                                                                 "i210"
                                                                 "i208"
                                                                 "i206"))
                                                              #(ribcage
                                                                (define-structure
                                                                  define-expansion-accessors
                                                                  define-expansion-constructors)
                                                                ((top)
                                                                 (top)
                                                                 (top))
                                                                ("i44"
                                                                 "i43"
                                                                 "i42")))
                                                             (hygiene guile))
                                                          1)
                                                        '#(syntax-object
                                                           ...
                                                           ((top)
                                                            #(ribcage () () ())
                                                            #(ribcage () () ())
                                                            #(ribcage
                                                              #(x)
                                                              #((top))
                                                              #("i2228"))
                                                            #(ribcage
                                                              (lambda-var-list
                                                                gen-var
                                                                strip
                                                                chi-lambda-case
                                                                lambda*-formals
                                                                chi-simple-lambda
                                                                lambda-formals
                                                                ellipsis?
                                                                chi-void
                                                                eval-local-transformer
                                                                chi-local-syntax
                                                                chi-body
                                                                chi-macro
                                                                chi-application
                                                                chi-expr
                                                                chi
                                                                syntax-type
                                                                chi-when-list
                                                                chi-install-global
                                                                chi-top-sequence
                                                                chi-sequence
                                                                source-wrap
                                                                wrap
                                                                bound-id-member?
                                                                distinct-bound-ids?
                                                                valid-bound-ids?
                                                                bound-id=?
                                                                free-id=?
                                                                id-var-name
                                                                same-marks?
                                                                join-marks
                                                                join-wraps
                                                                smart-append
                                                                make-binding-wrap
                                                                extend-ribcage!
                                                                make-empty-ribcage
                                                                new-mark
                                                                anti-mark
                                                                the-anti-mark
                                                                top-marked?
                                                                top-wrap
                                                                empty-wrap
                                                                set-ribcage-labels!
                                                                set-ribcage-marks!
                                                                set-ribcage-symnames!
                                                                ribcage-labels
                                                                ribcage-marks
                                                                ribcage-symnames
                                                                ribcage?
                                                                make-ribcage
                                                                gen-labels
                                                                gen-label
                                                                make-rename
                                                                rename-marks
                                                                rename-new
                                                                rename-old
                                                                subst-rename?
                                                                wrap-subst
                                                                wrap-marks
                                                                make-wrap
                                                                id-sym-name&marks
                                                                id-sym-name
                                                                id?
                                                                nonsymbol-id?
                                                                global-extend
                                                                lookup
                                                                macros-only-env
                                                                extend-var-env
                                                                extend-env
                                                                null-env
                                                                binding-value
                                                                binding-type
                                                                make-binding
                                                                arg-check
                                                                source-annotation
                                                                no-source
                                                                set-syntax-object-module!
                                                                set-syntax-object-wrap!
                                                                set-syntax-object-expression!
                                                                syntax-object-module
                                                                syntax-object-wrap
                                                                syntax-object-expression
                                                                syntax-object?
                                                                make-syntax-object
                                                                build-lexical-var
                                                                build-letrec
                                                                build-named-let
                                                                build-let
                                                                build-sequence
                                                                build-data
                                                                build-primref
                                                                build-lambda-case
                                                                build-case-lambda
                                                                build-simple-lambda
                                                                build-global-definition
                                                                build-global-assignment
                                                                build-global-reference
                                                                analyze-variable
                                                                build-lexical-assignment
                                                                build-lexical-reference
                                                                build-dynlet
                                                                build-conditional
                                                                build-application
                                                                build-void
                                                                maybe-name-value!
                                                                decorate-source
                                                                get-global-definition-hook
                                                                put-global-definition-hook
                                                                gensym-hook
                                                                local-eval-hook
                                                                top-level-eval-hook
                                                                fx<
                                                                fx=
                                                                fx-
                                                                fx+
                                                                set-lambda-meta!
                                                                lambda-meta
                                                                lambda?
                                                                make-dynlet
                                                                make-letrec
                                                                make-let
                                                                make-lambda-case
                                                                make-lambda
                                                                make-sequence
                                                                make-application
                                                                make-conditional
                                                                make-toplevel-define
                                                                make-toplevel-set
                                                                make-toplevel-ref
                                                                make-module-set
                                                                make-module-ref
                                                                make-lexical-set
                                                                make-lexical-ref
                                                                make-primitive-ref
                                                                make-const
                                                                make-void)
                                                              ((top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top))
                                                              ("i465"
                                                               "i463"
                                                               "i461"
                                                               "i459"
                                                               "i457"
                                                               "i455"
                                                               "i453"
                                                               "i451"
                                                               "i449"
                                                               "i447"
                                                               "i445"
                                                               "i443"
                                                               "i441"
                                                               "i439"
                                                               "i437"
                                                               "i435"
                                                               "i433"
                                                               "i431"
                                                               "i429"
                                                               "i427"
                                                               "i425"
                                                               "i423"
                                                               "i421"
                                                               "i419"
                                                               "i417"
                                                               "i415"
                                                               "i413"
                                                               "i411"
                                                               "i409"
                                                               "i407"
                                                               "i405"
                                                               "i403"
                                                               "i401"
                                                               "i399"
                                                               "i397"
                                                               "i396"
                                                               "i394"
                                                               "i391"
                                                               "i390"
                                                               "i389"
                                                               "i387"
                                                               "i386"
                                                               "i384"
                                                               "i382"
                                                               "i380"
                                                               "i378"
                                                               "i376"
                                                               "i374"
                                                               "i372"
                                                               "i370"
                                                               "i367"
                                                               "i365"
                                                               "i364"
                                                               "i362"
                                                               "i360"
                                                               "i358"
                                                               "i356"
                                                               "i355"
                                                               "i354"
                                                               "i353"
                                                               "i351"
                                                               "i350"
                                                               "i347"
                                                               "i345"
                                                               "i343"
                                                               "i341"
                                                               "i339"
                                                               "i337"
                                                               "i335"
                                                               "i334"
                                                               "i333"
                                                               "i331"
                                                               "i329"
                                                               "i328"
                                                               "i325"
                                                               "i324"
                                                               "i322"
                                                               "i320"
                                                               "i318"
                                                               "i316"
                                                               "i314"
                                                               "i312"
                                                               "i310"
                                                               "i308"
                                                               "i306"
                                                               "i303"
                                                               "i301"
                                                               "i299"
                                                               "i297"
                                                               "i295"
                                                               "i293"
                                                               "i291"
                                                               "i289"
                                                               "i287"
                                                               "i285"
                                                               "i283"
                                                               "i281"
                                                               "i279"
                                                               "i277"
                                                               "i275"
                                                               "i273"
                                                               "i271"
                                                               "i269"
                                                               "i267"
                                                               "i265"
                                                               "i263"
                                                               "i261"
                                                               "i259"
                                                               "i258"
                                                               "i255"
                                                               "i253"
                                                               "i252"
                                                               "i251"
                                                               "i250"
                                                               "i249"
                                                               "i247"
                                                               "i245"
                                                               "i243"
                                                               "i240"
                                                               "i238"
                                                               "i236"
                                                               "i234"
                                                               "i232"
                                                               "i230"
                                                               "i228"
                                                               "i226"
                                                               "i224"
                                                               "i222"
                                                               "i220"
                                                               "i218"
                                                               "i216"
                                                               "i214"
                                                               "i212"
                                                               "i210"
                                                               "i208"
                                                               "i206"))
                                                            #(ribcage
                                                              (define-structure
                                                                define-expansion-accessors
                                                                define-expansion-constructors)
                                                              ((top)
                                                               (top)
                                                               (top))
                                                              ("i44"
                                                               "i43"
                                                               "i42")))
                                                           (hygiene guile))))
                                               (eq? (#{id-var-name 410}#
                                                      #{x 3956}#
                                                      '(()))
                                                    (#{id-var-name 410}#
                                                      '#(syntax-object
                                                         ...
                                                         ((top)
                                                          #(ribcage () () ())
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(x)
                                                            #((top))
                                                            #("i2228"))
                                                          #(ribcage
                                                            (lambda-var-list
                                                              gen-var
                                                              strip
                                                              chi-lambda-case
                                                              lambda*-formals
                                                              chi-simple-lambda
                                                              lambda-formals
                                                              ellipsis?
                                                              chi-void
                                                              eval-local-transformer
                                                              chi-local-syntax
                                                              chi-body
                                                              chi-macro
                                                              chi-application
                                                              chi-expr
                                                              chi
                                                              syntax-type
                                                              chi-when-list
                                                              chi-install-global
                                                              chi-top-sequence
                                                              chi-sequence
                                                              source-wrap
                                                              wrap
                                                              bound-id-member?
                                                              distinct-bound-ids?
                                                              valid-bound-ids?
                                                              bound-id=?
                                                              free-id=?
                                                              id-var-name
                                                              same-marks?
                                                              join-marks
                                                              join-wraps
                                                              smart-append
                                                              make-binding-wrap
                                                              extend-ribcage!
                                                              make-empty-ribcage
                                                              new-mark
                                                              anti-mark
                                                              the-anti-mark
                                                              top-marked?
                                                              top-wrap
                                                              empty-wrap
                                                              set-ribcage-labels!
                                                              set-ribcage-marks!
                                                              set-ribcage-symnames!
                                                              ribcage-labels
                                                              ribcage-marks
                                                              ribcage-symnames
                                                              ribcage?
                                                              make-ribcage
                                                              gen-labels
                                                              gen-label
                                                              make-rename
                                                              rename-marks
                                                              rename-new
                                                              rename-old
                                                              subst-rename?
                                                              wrap-subst
                                                              wrap-marks
                                                              make-wrap
                                                              id-sym-name&marks
                                                              id-sym-name
                                                              id?
                                                              nonsymbol-id?
                                                              global-extend
                                                              lookup
                                                              macros-only-env
                                                              extend-var-env
                                                              extend-env
                                                              null-env
                                                              binding-value
                                                              binding-type
                                                              make-binding
                                                              arg-check
                                                              source-annotation
                                                              no-source
                                                              set-syntax-object-module!
                                                              set-syntax-object-wrap!
                                                              set-syntax-object-expression!
                                                              syntax-object-module
                                                              syntax-object-wrap
                                                              syntax-object-expression
                                                              syntax-object?
                                                              make-syntax-object
                                                              build-lexical-var
                                                              build-letrec
                                                              build-named-let
                                                              build-let
                                                              build-sequence
                                                              build-data
                                                              build-primref
                                                              build-lambda-case
                                                              build-case-lambda
                                                              build-simple-lambda
                                                              build-global-definition
                                                              build-global-assignment
                                                              build-global-reference
                                                              analyze-variable
                                                              build-lexical-assignment
                                                              build-lexical-reference
                                                              build-dynlet
                                                              build-conditional
                                                              build-application
                                                              build-void
                                                              maybe-name-value!
                                                              decorate-source
                                                              get-global-definition-hook
                                                              put-global-definition-hook
                                                              gensym-hook
                                                              local-eval-hook
                                                              top-level-eval-hook
                                                              fx<
                                                              fx=
                                                              fx-
                                                              fx+
                                                              set-lambda-meta!
                                                              lambda-meta
                                                              lambda?
                                                              make-dynlet
                                                              make-letrec
                                                              make-let
                                                              make-lambda-case
                                                              make-lambda
                                                              make-sequence
                                                              make-application
                                                              make-conditional
                                                              make-toplevel-define
                                                              make-toplevel-set
                                                              make-toplevel-ref
                                                              make-module-set
                                                              make-module-ref
                                                              make-lexical-set
                                                              make-lexical-ref
                                                              make-primitive-ref
                                                              make-const
                                                              make-void)
                                                            ((top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top))
                                                            ("i465"
                                                             "i463"
                                                             "i461"
                                                             "i459"
                                                             "i457"
                                                             "i455"
                                                             "i453"
                                                             "i451"
                                                             "i449"
                                                             "i447"
                                                             "i445"
                                                             "i443"
                                                             "i441"
                                                             "i439"
                                                             "i437"
                                                             "i435"
                                                             "i433"
                                                             "i431"
                                                             "i429"
                                                             "i427"
                                                             "i425"
                                                             "i423"
                                                             "i421"
                                                             "i419"
                                                             "i417"
                                                             "i415"
                                                             "i413"
                                                             "i411"
                                                             "i409"
                                                             "i407"
                                                             "i405"
                                                             "i403"
                                                             "i401"
                                                             "i399"
                                                             "i397"
                                                             "i396"
                                                             "i394"
                                                             "i391"
                                                             "i390"
                                                             "i389"
                                                             "i387"
                                                             "i386"
                                                             "i384"
                                                             "i382"
                                                             "i380"
                                                             "i378"
                                                             "i376"
                                                             "i374"
                                                             "i372"
                                                             "i370"
                                                             "i367"
                                                             "i365"
                                                             "i364"
                                                             "i362"
                                                             "i360"
                                                             "i358"
                                                             "i356"
                                                             "i355"
                                                             "i354"
                                                             "i353"
                                                             "i351"
                                                             "i350"
                                                             "i347"
                                                             "i345"
                                                             "i343"
                                                             "i341"
                                                             "i339"
                                                             "i337"
                                                             "i335"
                                                             "i334"
                                                             "i333"
                                                             "i331"
                                                             "i329"
                                                             "i328"
                                                             "i325"
                                                             "i324"
                                                             "i322"
                                                             "i320"
                                                             "i318"
                                                             "i316"
                                                             "i314"
                                                             "i312"
                                                             "i310"
                                                             "i308"
                                                             "i306"
                                                             "i303"
                                                             "i301"
                                                             "i299"
                                                             "i297"
                                                             "i295"
                                                             "i293"
                                                             "i291"
                                                             "i289"
                                                             "i287"
                                                             "i285"
                                                             "i283"
                                                             "i281"
                                                             "i279"
                                                             "i277"
                                                             "i275"
                                                             "i273"
                                                             "i271"
                                                             "i269"
                                                             "i267"
                                                             "i265"
                                                             "i263"
                                                             "i261"
                                                             "i259"
                                                             "i258"
                                                             "i255"
                                                             "i253"
                                                             "i252"
                                                             "i251"
                                                             "i250"
                                                             "i249"
                                                             "i247"
                                                             "i245"
                                                             "i243"
                                                             "i240"
                                                             "i238"
                                                             "i236"
                                                             "i234"
                                                             "i232"
                                                             "i230"
                                                             "i228"
                                                             "i226"
                                                             "i224"
                                                             "i222"
                                                             "i220"
                                                             "i218"
                                                             "i216"
                                                             "i214"
                                                             "i212"
                                                             "i210"
                                                             "i208"
                                                             "i206"))
                                                          #(ribcage
                                                            (define-structure
                                                              define-expansion-accessors
                                                              define-expansion-constructors)
                                                            ((top) (top) (top))
                                                            ("i44"
                                                             "i43"
                                                             "i42")))
                                                         (hygiene guile))
                                                      '(())))
                                               #f)
                                             #f))
                                      #f))
                                  #{key 3954}#)
                              (begin
                                (let ((#{x 3962}#
                                        (gensym
                                          (string-append
                                            (symbol->string 'tmp)
                                            " "))))
                                  (#{build-application 270}#
                                    #{s 3939}#
                                    (begin
                                      (let ((#{req 9846}# (list 'tmp))
                                            (#{vars 9848}# (list #{x 3962}#))
                                            (#{exp 9850}#
                                              (#{gen-syntax-case 3709}#
                                                (make-struct/no-tail
                                                  (vector-ref
                                                    %expanded-vtables
                                                    3)
                                                  #f
                                                  'tmp
                                                  #{x 3962}#)
                                                #{key 3954}#
                                                #{m 3955}#
                                                #{r 3937}#
                                                #{mod 3940}#)))
                                        (begin
                                          (let ((#{body 9867}#
                                                  (make-struct/no-tail
                                                    (vector-ref
                                                      %expanded-vtables
                                                      14)
                                                    #f
                                                    #{req 9846}#
                                                    #f
                                                    #f
                                                    #f
                                                    '()
                                                    #{vars 9848}#
                                                    #{exp 9850}#
                                                    #f)))
                                            (make-struct/no-tail
                                              (vector-ref %expanded-vtables 13)
                                              #f
                                              '()
                                              #{body 9867}#)))))
                                    (list (#{chi 436}#
                                            #{val 3953}#
                                            #{r 3937}#
                                            '(())
                                            #{mod 3940}#)))))
                              (syntax-violation
                                'syntax-case
                                "invalid literals list"
                                #{e 3947}#)))
                          #{tmp 3949}#)
                        (syntax-violation
                          #f
                          "source expression failed to match any pattern"
                          #{e 3947}#))))))))))
      (set! macroexpand
        (lambda*
          (#{x 3968}#
            #:optional
            (#{m 3970}# 'e)
            (#{esew 3972}# '(eval)))
          (#{chi-top-sequence 428}#
            (list #{x 3968}#)
            '()
            '((top))
            #f
            #{m 3970}#
            #{esew 3972}#
            (cons 'hygiene (module-name (current-module))))))
      (set! identifier?
        (lambda (#{x 3976}#)
          (if (if (vector? #{x 3976}#)
                (if (= (vector-length #{x 3976}#) 4)
                  (eq? (vector-ref #{x 3976}# 0) 'syntax-object)
                  #f)
                #f)
            (symbol? (vector-ref #{x 3976}# 1))
            #f)))
      (set! datum->syntax
        (lambda (#{id 3978}# #{datum 3979}#)
          (begin
            (let ((#{wrap 9941}# (vector-ref #{id 3978}# 2))
                  (#{module 9942}# (vector-ref #{id 3978}# 3)))
              (vector
                'syntax-object
                #{datum 3979}#
                #{wrap 9941}#
                #{module 9942}#)))))
      (set! syntax->datum
        (lambda (#{x 3982}#)
          (#{strip 462}# #{x 3982}# '(()))))
      (set! syntax-source
        (lambda (#{x 3985}#)
          (#{source-annotation 326}# #{x 3985}#)))
      (set! generate-temporaries
        (lambda (#{ls 3987}#)
          (begin
            (if (not (list? #{ls 3987}#))
              (syntax-violation
                'generate-temporaries
                "invalid argument"
                #{ls 3987}#))
            (begin
              (let ((#{mod 3993}#
                      (cons 'hygiene (module-name (current-module)))))
                (map (lambda (#{x 3994}#)
                       (#{wrap 422}# (gensym) '((top)) #{mod 3993}#))
                     #{ls 3987}#))))))
      (set! free-identifier=?
        (lambda (#{x 3998}# #{y 3999}#)
          (begin
            (if (not (if (if (vector? #{x 3998}#)
                           (if (= (vector-length #{x 3998}#) 4)
                             (eq? (vector-ref #{x 3998}# 0) 'syntax-object)
                             #f)
                           #f)
                       (symbol? (vector-ref #{x 3998}# 1))
                       #f))
              (syntax-violation
                'free-identifier=?
                "invalid argument"
                #{x 3998}#))
            (if (not (if (if (vector? #{y 3999}#)
                           (if (= (vector-length #{y 3999}#) 4)
                             (eq? (vector-ref #{y 3999}# 0) 'syntax-object)
                             #f)
                           #f)
                       (symbol? (vector-ref #{y 3999}# 1))
                       #f))
              (syntax-violation
                'free-identifier=?
                "invalid argument"
                #{y 3999}#))
            (if (eq? (if (if (vector? #{x 3998}#)
                           (if (= (vector-length #{x 3998}#) 4)
                             (eq? (vector-ref #{x 3998}# 0) 'syntax-object)
                             #f)
                           #f)
                       (vector-ref #{x 3998}# 1)
                       #{x 3998}#)
                     (if (if (vector? #{y 3999}#)
                           (if (= (vector-length #{y 3999}#) 4)
                             (eq? (vector-ref #{y 3999}# 0) 'syntax-object)
                             #f)
                           #f)
                       (vector-ref #{y 3999}# 1)
                       #{y 3999}#))
              (eq? (#{id-var-name 410}# #{x 3998}# '(()))
                   (#{id-var-name 410}# #{y 3999}# '(())))
              #f))))
      (set! bound-identifier=?
        (lambda (#{x 4008}# #{y 4009}#)
          (begin
            (if (not (if (if (vector? #{x 4008}#)
                           (if (= (vector-length #{x 4008}#) 4)
                             (eq? (vector-ref #{x 4008}# 0) 'syntax-object)
                             #f)
                           #f)
                       (symbol? (vector-ref #{x 4008}# 1))
                       #f))
              (syntax-violation
                'bound-identifier=?
                "invalid argument"
                #{x 4008}#))
            (if (not (if (if (vector? #{y 4009}#)
                           (if (= (vector-length #{y 4009}#) 4)
                             (eq? (vector-ref #{y 4009}# 0) 'syntax-object)
                             #f)
                           #f)
                       (symbol? (vector-ref #{y 4009}# 1))
                       #f))
              (syntax-violation
                'bound-identifier=?
                "invalid argument"
                #{y 4009}#))
            (if (if (if (vector? #{x 4008}#)
                      (if (= (vector-length #{x 4008}#) 4)
                        (eq? (vector-ref #{x 4008}# 0) 'syntax-object)
                        #f)
                      #f)
                  (if (vector? #{y 4009}#)
                    (if (= (vector-length #{y 4009}#) 4)
                      (eq? (vector-ref #{y 4009}# 0) 'syntax-object)
                      #f)
                    #f)
                  #f)
              (if (eq? (vector-ref #{x 4008}# 1)
                       (vector-ref #{y 4009}# 1))
                (#{same-marks? 408}#
                  (car (vector-ref #{x 4008}# 2))
                  (car (vector-ref #{y 4009}# 2)))
                #f)
              (eq? #{x 4008}# #{y 4009}#)))))
      (set! syntax-violation
        (lambda*
          (#{who 4018}#
            #{message 4019}#
            #{form 4020}#
            #:optional
            (#{subform 4024}# #f))
          (begin
            (if (not (if (not #{who 4018}#)
                       (not #{who 4018}#)
                       (begin
                         (let ((#{t 4036}# (string? #{who 4018}#)))
                           (if #{t 4036}#
                             #{t 4036}#
                             (symbol? #{who 4018}#))))))
              (syntax-violation
                'syntax-violation
                "invalid argument"
                #{who 4018}#))
            (if (not (string? #{message 4019}#))
              (syntax-violation
                'syntax-violation
                "invalid argument"
                #{message 4019}#))
            (throw 'syntax-error
                   #{who 4018}#
                   #{message 4019}#
                   (#{source-annotation 326}#
                     (if #{form 4020}# #{form 4020}# #{subform 4024}#))
                   (#{strip 462}# #{form 4020}# '(()))
                   (if #{subform 4024}#
                     (#{strip 462}# #{subform 4024}# '(()))
                     #f)))))
      (letrec*
        ((#{match-each 4050}#
           (lambda (#{e 4063}# #{p 4064}# #{w 4065}# #{mod 4066}#)
             (if (pair? #{e 4063}#)
               (begin
                 (let ((#{first 4074}#
                         (#{match 4062}#
                           (car #{e 4063}#)
                           #{p 4064}#
                           #{w 4065}#
                           '()
                           #{mod 4066}#)))
                   (if #{first 4074}#
                     (begin
                       (let ((#{rest 4078}#
                               (#{match-each 4050}#
                                 (cdr #{e 4063}#)
                                 #{p 4064}#
                                 #{w 4065}#
                                 #{mod 4066}#)))
                         (if #{rest 4078}#
                           (cons #{first 4074}# #{rest 4078}#)
                           #f)))
                     #f)))
               (if (null? #{e 4063}#)
                 '()
                 (if (if (vector? #{e 4063}#)
                       (if (= (vector-length #{e 4063}#) 4)
                         (eq? (vector-ref #{e 4063}# 0) 'syntax-object)
                         #f)
                       #f)
                   (#{match-each 4050}#
                     (vector-ref #{e 4063}# 1)
                     #{p 4064}#
                     (#{join-wraps 404}#
                       #{w 4065}#
                       (vector-ref #{e 4063}# 2))
                     (vector-ref #{e 4063}# 3))
                   #f)))))
         (#{match-each+ 4052}#
           (lambda (#{e 4086}#
                    #{x-pat 4087}#
                    #{y-pat 4088}#
                    #{z-pat 4089}#
                    #{w 4090}#
                    #{r 4091}#
                    #{mod 4092}#)
             (letrec*
               ((#{f 4103}#
                  (lambda (#{e 4104}# #{w 4105}#)
                    (if (pair? #{e 4104}#)
                      (call-with-values
                        (lambda ()
                          (#{f 4103}# (cdr #{e 4104}#) #{w 4105}#))
                        (lambda (#{xr* 4108}# #{y-pat 4109}# #{r 4110}#)
                          (if #{r 4110}#
                            (if (null? #{y-pat 4109}#)
                              (begin
                                (let ((#{xr 4115}#
                                        (#{match 4062}#
                                          (car #{e 4104}#)
                                          #{x-pat 4087}#
                                          #{w 4105}#
                                          '()
                                          #{mod 4092}#)))
                                  (if #{xr 4115}#
                                    (values
                                      (cons #{xr 4115}# #{xr* 4108}#)
                                      #{y-pat 4109}#
                                      #{r 4110}#)
                                    (values #f #f #f))))
                              (values
                                '()
                                (cdr #{y-pat 4109}#)
                                (#{match 4062}#
                                  (car #{e 4104}#)
                                  (car #{y-pat 4109}#)
                                  #{w 4105}#
                                  #{r 4110}#
                                  #{mod 4092}#)))
                            (values #f #f #f))))
                      (if (if (vector? #{e 4104}#)
                            (if (= (vector-length #{e 4104}#) 4)
                              (eq? (vector-ref #{e 4104}# 0) 'syntax-object)
                              #f)
                            #f)
                        (#{f 4103}#
                          (vector-ref #{e 4104}# 1)
                          (#{join-wraps 404}# #{w 4105}# #{e 4104}#))
                        (values
                          '()
                          #{y-pat 4088}#
                          (#{match 4062}#
                            #{e 4104}#
                            #{z-pat 4089}#
                            #{w 4105}#
                            #{r 4091}#
                            #{mod 4092}#)))))))
               (begin (#{f 4103}# #{e 4086}# #{w 4090}#)))))
         (#{match-each-any 4054}#
           (lambda (#{e 4119}# #{w 4120}# #{mod 4121}#)
             (if (pair? #{e 4119}#)
               (begin
                 (let ((#{l 4128}#
                         (#{match-each-any 4054}#
                           (cdr #{e 4119}#)
                           #{w 4120}#
                           #{mod 4121}#)))
                   (if #{l 4128}#
                     (cons (#{wrap 422}#
                             (car #{e 4119}#)
                             #{w 4120}#
                             #{mod 4121}#)
                           #{l 4128}#)
                     #f)))
               (if (null? #{e 4119}#)
                 '()
                 (if (if (vector? #{e 4119}#)
                       (if (= (vector-length #{e 4119}#) 4)
                         (eq? (vector-ref #{e 4119}# 0) 'syntax-object)
                         #f)
                       #f)
                   (#{match-each-any 4054}#
                     (vector-ref #{e 4119}# 1)
                     (#{join-wraps 404}#
                       #{w 4120}#
                       (vector-ref #{e 4119}# 2))
                     #{mod 4121}#)
                   #f)))))
         (#{match-empty 4056}#
           (lambda (#{p 4136}# #{r 4137}#)
             (if (null? #{p 4136}#)
               #{r 4137}#
               (if (eq? #{p 4136}# '_)
                 #{r 4137}#
                 (if (eq? #{p 4136}# 'any)
                   (cons '() #{r 4137}#)
                   (if (pair? #{p 4136}#)
                     (#{match-empty 4056}#
                       (car #{p 4136}#)
                       (#{match-empty 4056}#
                         (cdr #{p 4136}#)
                         #{r 4137}#))
                     (if (eq? #{p 4136}# 'each-any)
                       (cons '() #{r 4137}#)
                       (begin
                         (let ((#{atom-key 4153}# (vector-ref #{p 4136}# 0)))
                           (if (eqv? #{atom-key 4153}# 'each)
                             (#{match-empty 4056}#
                               (vector-ref #{p 4136}# 1)
                               #{r 4137}#)
                             (if (eqv? #{atom-key 4153}# 'each+)
                               (#{match-empty 4056}#
                                 (vector-ref #{p 4136}# 1)
                                 (#{match-empty 4056}#
                                   (reverse (vector-ref #{p 4136}# 2))
                                   (#{match-empty 4056}#
                                     (vector-ref #{p 4136}# 3)
                                     #{r 4137}#)))
                               (if (if (eqv? #{atom-key 4153}# 'free-id)
                                     #t
                                     (eqv? #{atom-key 4153}# 'atom))
                                 #{r 4137}#
                                 (if (eqv? #{atom-key 4153}# 'vector)
                                   (#{match-empty 4056}#
                                     (vector-ref #{p 4136}# 1)
                                     #{r 4137}#))))))))))))))
         (#{combine 4058}#
           (lambda (#{r* 4158}# #{r 4159}#)
             (if (null? (car #{r* 4158}#))
               #{r 4159}#
               (cons (map car #{r* 4158}#)
                     (#{combine 4058}#
                       (map cdr #{r* 4158}#)
                       #{r 4159}#)))))
         (#{match* 4060}#
           (lambda (#{e 4162}#
                    #{p 4163}#
                    #{w 4164}#
                    #{r 4165}#
                    #{mod 4166}#)
             (if (null? #{p 4163}#)
               (if (null? #{e 4162}#) #{r 4165}# #f)
               (if (pair? #{p 4163}#)
                 (if (pair? #{e 4162}#)
                   (#{match 4062}#
                     (car #{e 4162}#)
                     (car #{p 4163}#)
                     #{w 4164}#
                     (#{match 4062}#
                       (cdr #{e 4162}#)
                       (cdr #{p 4163}#)
                       #{w 4164}#
                       #{r 4165}#
                       #{mod 4166}#)
                     #{mod 4166}#)
                   #f)
                 (if (eq? #{p 4163}# 'each-any)
                   (begin
                     (let ((#{l 4183}#
                             (#{match-each-any 4054}#
                               #{e 4162}#
                               #{w 4164}#
                               #{mod 4166}#)))
                       (if #{l 4183}# (cons #{l 4183}# #{r 4165}#) #f)))
                   (begin
                     (let ((#{atom-key 4189}# (vector-ref #{p 4163}# 0)))
                       (if (eqv? #{atom-key 4189}# 'each)
                         (if (null? #{e 4162}#)
                           (#{match-empty 4056}#
                             (vector-ref #{p 4163}# 1)
                             #{r 4165}#)
                           (begin
                             (let ((#{l 4192}#
                                     (#{match-each 4050}#
                                       #{e 4162}#
                                       (vector-ref #{p 4163}# 1)
                                       #{w 4164}#
                                       #{mod 4166}#)))
                               (if #{l 4192}#
                                 (letrec*
                                   ((#{collect 4197}#
                                      (lambda (#{l 4198}#)
                                        (if (null? (car #{l 4198}#))
                                          #{r 4165}#
                                          (cons (map car #{l 4198}#)
                                                (#{collect 4197}#
                                                  (map cdr #{l 4198}#)))))))
                                   (begin (#{collect 4197}# #{l 4192}#)))
                                 #f))))
                         (if (eqv? #{atom-key 4189}# 'each+)
                           (call-with-values
                             (lambda ()
                               (#{match-each+ 4052}#
                                 #{e 4162}#
                                 (vector-ref #{p 4163}# 1)
                                 (vector-ref #{p 4163}# 2)
                                 (vector-ref #{p 4163}# 3)
                                 #{w 4164}#
                                 #{r 4165}#
                                 #{mod 4166}#))
                             (lambda (#{xr* 4200}# #{y-pat 4201}# #{r 4202}#)
                               (if #{r 4202}#
                                 (if (null? #{y-pat 4201}#)
                                   (if (null? #{xr* 4200}#)
                                     (#{match-empty 4056}#
                                       (vector-ref #{p 4163}# 1)
                                       #{r 4202}#)
                                     (#{combine 4058}#
                                       #{xr* 4200}#
                                       #{r 4202}#))
                                   #f)
                                 #f)))
                           (if (eqv? #{atom-key 4189}# 'free-id)
                             (if (if (symbol? #{e 4162}#)
                                   #t
                                   (if (if (vector? #{e 4162}#)
                                         (if (= (vector-length #{e 4162}#) 4)
                                           (eq? (vector-ref #{e 4162}# 0)
                                                'syntax-object)
                                           #f)
                                         #f)
                                     (symbol? (vector-ref #{e 4162}# 1))
                                     #f))
                               (if (begin
                                     (let ((#{i 10361}#
                                             (#{wrap 422}#
                                               #{e 4162}#
                                               #{w 4164}#
                                               #{mod 4166}#))
                                           (#{j 10362}#
                                             (vector-ref #{p 4163}# 1)))
                                       (if (eq? (if (if (vector? #{i 10361}#)
                                                      (if (= (vector-length
                                                               #{i 10361}#)
                                                             4)
                                                        (eq? (vector-ref
                                                               #{i 10361}#
                                                               0)
                                                             'syntax-object)
                                                        #f)
                                                      #f)
                                                  (vector-ref #{i 10361}# 1)
                                                  #{i 10361}#)
                                                (if (if (vector? #{j 10362}#)
                                                      (if (= (vector-length
                                                               #{j 10362}#)
                                                             4)
                                                        (eq? (vector-ref
                                                               #{j 10362}#
                                                               0)
                                                             'syntax-object)
                                                        #f)
                                                      #f)
                                                  (vector-ref #{j 10362}# 1)
                                                  #{j 10362}#))
                                         (eq? (#{id-var-name 410}#
                                                #{i 10361}#
                                                '(()))
                                              (#{id-var-name 410}#
                                                #{j 10362}#
                                                '(())))
                                         #f)))
                                 #{r 4165}#
                                 #f)
                               #f)
                             (if (eqv? #{atom-key 4189}# 'atom)
                               (if (equal?
                                     (vector-ref #{p 4163}# 1)
                                     (#{strip 462}# #{e 4162}# #{w 4164}#))
                                 #{r 4165}#
                                 #f)
                               (if (eqv? #{atom-key 4189}# 'vector)
                                 (if (vector? #{e 4162}#)
                                   (#{match 4062}#
                                     (vector->list #{e 4162}#)
                                     (vector-ref #{p 4163}# 1)
                                     #{w 4164}#
                                     #{r 4165}#
                                     #{mod 4166}#)
                                   #f)))))))))))))
         (#{match 4062}#
           (lambda (#{e 4219}#
                    #{p 4220}#
                    #{w 4221}#
                    #{r 4222}#
                    #{mod 4223}#)
             (if (not #{r 4222}#)
               #f
               (if (eq? #{p 4220}# '_)
                 #{r 4222}#
                 (if (eq? #{p 4220}# 'any)
                   (cons (#{wrap 422}# #{e 4219}# #{w 4221}# #{mod 4223}#)
                         #{r 4222}#)
                   (if (if (vector? #{e 4219}#)
                         (if (= (vector-length #{e 4219}#) 4)
                           (eq? (vector-ref #{e 4219}# 0) 'syntax-object)
                           #f)
                         #f)
                     (#{match* 4060}#
                       (vector-ref #{e 4219}# 1)
                       #{p 4220}#
                       (#{join-wraps 404}#
                         #{w 4221}#
                         (vector-ref #{e 4219}# 2))
                       #{r 4222}#
                       (vector-ref #{e 4219}# 3))
                     (#{match* 4060}#
                       #{e 4219}#
                       #{p 4220}#
                       #{w 4221}#
                       #{r 4222}#
                       #{mod 4223}#))))))))
        (begin
          (set! $sc-dispatch
            (lambda (#{e 4238}# #{p 4239}#)
              (if (eq? #{p 4239}# 'any)
                (list #{e 4238}#)
                (if (eq? #{p 4239}# '_)
                  '()
                  (if (if (vector? #{e 4238}#)
                        (if (= (vector-length #{e 4238}#) 4)
                          (eq? (vector-ref #{e 4238}# 0) 'syntax-object)
                          #f)
                        #f)
                    (#{match* 4060}#
                      (vector-ref #{e 4238}# 1)
                      #{p 4239}#
                      (vector-ref #{e 4238}# 2)
                      '()
                      (vector-ref #{e 4238}# 3))
                    (#{match* 4060}#
                      #{e 4238}#
                      #{p 4239}#
                      '(())
                      '()
                      #f)))))))))))

(define with-syntax
  (make-syntax-transformer
    'with-syntax
    'macro
    (lambda (#{x 10408}#)
      (begin
        (let ((#{tmp 10411}#
                ($sc-dispatch #{x 10408}# '(_ () any . each-any))))
          (if #{tmp 10411}#
            (@apply
              (lambda (#{e1 10414}# #{e2 10415}#)
                (cons '#(syntax-object
                         let
                         ((top)
                          #(ribcage
                            #(e1 e2)
                            #((top) (top))
                            #("i10412" "i10413"))
                          #(ribcage () () ())
                          #(ribcage #(x) #((top)) #("i10409")))
                         (hygiene guile))
                      (cons '() (cons #{e1 10414}# #{e2 10415}#))))
              #{tmp 10411}#)
            (begin
              (let ((#{tmp 10417}#
                      ($sc-dispatch
                        #{x 10408}#
                        '(_ ((any any)) any . each-any))))
                (if #{tmp 10417}#
                  (@apply
                    (lambda (#{out 10422}#
                             #{in 10423}#
                             #{e1 10424}#
                             #{e2 10425}#)
                      (list '#(syntax-object
                               syntax-case
                               ((top)
                                #(ribcage
                                  #(out in e1 e2)
                                  #((top) (top) (top) (top))
                                  #("i10418" "i10419" "i10420" "i10421"))
                                #(ribcage () () ())
                                #(ribcage #(x) #((top)) #("i10409")))
                               (hygiene guile))
                            #{in 10423}#
                            '()
                            (list #{out 10422}#
                                  (cons '#(syntax-object
                                           let
                                           ((top)
                                            #(ribcage
                                              #(out in e1 e2)
                                              #((top) (top) (top) (top))
                                              #("i10418"
                                                "i10419"
                                                "i10420"
                                                "i10421"))
                                            #(ribcage () () ())
                                            #(ribcage
                                              #(x)
                                              #((top))
                                              #("i10409")))
                                           (hygiene guile))
                                        (cons '()
                                              (cons #{e1 10424}#
                                                    #{e2 10425}#))))))
                    #{tmp 10417}#)
                  (begin
                    (let ((#{tmp 10427}#
                            ($sc-dispatch
                              #{x 10408}#
                              '(_ #(each (any any)) any . each-any))))
                      (if #{tmp 10427}#
                        (@apply
                          (lambda (#{out 10432}#
                                   #{in 10433}#
                                   #{e1 10434}#
                                   #{e2 10435}#)
                            (list '#(syntax-object
                                     syntax-case
                                     ((top)
                                      #(ribcage
                                        #(out in e1 e2)
                                        #((top) (top) (top) (top))
                                        #("i10428" "i10429" "i10430" "i10431"))
                                      #(ribcage () () ())
                                      #(ribcage #(x) #((top)) #("i10409")))
                                     (hygiene guile))
                                  (cons '#(syntax-object
                                           list
                                           ((top)
                                            #(ribcage
                                              #(out in e1 e2)
                                              #((top) (top) (top) (top))
                                              #("i10428"
                                                "i10429"
                                                "i10430"
                                                "i10431"))
                                            #(ribcage () () ())
                                            #(ribcage
                                              #(x)
                                              #((top))
                                              #("i10409")))
                                           (hygiene guile))
                                        #{in 10433}#)
                                  '()
                                  (list #{out 10432}#
                                        (cons '#(syntax-object
                                                 let
                                                 ((top)
                                                  #(ribcage
                                                    #(out in e1 e2)
                                                    #((top) (top) (top) (top))
                                                    #("i10428"
                                                      "i10429"
                                                      "i10430"
                                                      "i10431"))
                                                  #(ribcage () () ())
                                                  #(ribcage
                                                    #(x)
                                                    #((top))
                                                    #("i10409")))
                                                 (hygiene guile))
                                              (cons '()
                                                    (cons #{e1 10434}#
                                                          #{e2 10435}#))))))
                          #{tmp 10427}#)
                        (syntax-violation
                          #f
                          "source expression failed to match any pattern"
                          #{x 10408}#)))))))))))))

(define syntax-rules
  (make-syntax-transformer
    'syntax-rules
    'macro
    (lambda (#{x 10439}#)
      (begin
        (let ((#{tmp 10442}#
                ($sc-dispatch
                  #{x 10439}#
                  '(_ each-any . #(each ((any . any) any))))))
          (if #{tmp 10442}#
            (@apply
              (lambda (#{k 10447}#
                       #{keyword 10448}#
                       #{pattern 10449}#
                       #{template 10450}#)
                (list '#(syntax-object
                         lambda
                         ((top)
                          #(ribcage
                            #(k keyword pattern template)
                            #((top) (top) (top) (top))
                            #("i10443" "i10444" "i10445" "i10446"))
                          #(ribcage () () ())
                          #(ribcage #(x) #((top)) #("i10440")))
                         (hygiene guile))
                      '(#(syntax-object
                          x
                          ((top)
                           #(ribcage
                             #(k keyword pattern template)
                             #((top) (top) (top) (top))
                             #("i10443" "i10444" "i10445" "i10446"))
                           #(ribcage () () ())
                           #(ribcage #(x) #((top)) #("i10440")))
                          (hygiene guile)))
                      (vector
                        '(#(syntax-object
                            macro-type
                            ((top)
                             #(ribcage
                               #(k keyword pattern template)
                               #((top) (top) (top) (top))
                               #("i10443" "i10444" "i10445" "i10446"))
                             #(ribcage () () ())
                             #(ribcage #(x) #((top)) #("i10440")))
                            (hygiene guile))
                          .
                          #(syntax-object
                            syntax-rules
                            ((top)
                             #(ribcage
                               #(k keyword pattern template)
                               #((top) (top) (top) (top))
                               #("i10443" "i10444" "i10445" "i10446"))
                             #(ribcage () () ())
                             #(ribcage #(x) #((top)) #("i10440")))
                            (hygiene guile)))
                        (cons '#(syntax-object
                                 patterns
                                 ((top)
                                  #(ribcage
                                    #(k keyword pattern template)
                                    #((top) (top) (top) (top))
                                    #("i10443" "i10444" "i10445" "i10446"))
                                  #(ribcage () () ())
                                  #(ribcage #(x) #((top)) #("i10440")))
                                 (hygiene guile))
                              #{pattern 10449}#))
                      (cons '#(syntax-object
                               syntax-case
                               ((top)
                                #(ribcage
                                  #(k keyword pattern template)
                                  #((top) (top) (top) (top))
                                  #("i10443" "i10444" "i10445" "i10446"))
                                #(ribcage () () ())
                                #(ribcage #(x) #((top)) #("i10440")))
                               (hygiene guile))
                            (cons '#(syntax-object
                                     x
                                     ((top)
                                      #(ribcage
                                        #(k keyword pattern template)
                                        #((top) (top) (top) (top))
                                        #("i10443" "i10444" "i10445" "i10446"))
                                      #(ribcage () () ())
                                      #(ribcage #(x) #((top)) #("i10440")))
                                     (hygiene guile))
                                  (cons #{k 10447}#
                                        (map (lambda (#{tmp 10454}#
                                                      #{tmp 10453}#)
                                               (list (cons '#(syntax-object
                                                              dummy
                                                              ((top)
                                                               #(ribcage
                                                                 #(k
                                                                   keyword
                                                                   pattern
                                                                   template)
                                                                 #((top)
                                                                   (top)
                                                                   (top)
                                                                   (top))
                                                                 #("i10443"
                                                                   "i10444"
                                                                   "i10445"
                                                                   "i10446"))
                                                               #(ribcage
                                                                 ()
                                                                 ()
                                                                 ())
                                                               #(ribcage
                                                                 #(x)
                                                                 #((top))
                                                                 #("i10440")))
                                                              (hygiene guile))
                                                           #{tmp 10453}#)
                                                     (list '#(syntax-object
                                                              syntax
                                                              ((top)
                                                               #(ribcage
                                                                 #(k
                                                                   keyword
                                                                   pattern
                                                                   template)
                                                                 #((top)
                                                                   (top)
                                                                   (top)
                                                                   (top))
                                                                 #("i10443"
                                                                   "i10444"
                                                                   "i10445"
                                                                   "i10446"))
                                                               #(ribcage
                                                                 ()
                                                                 ()
                                                                 ())
                                                               #(ribcage
                                                                 #(x)
                                                                 #((top))
                                                                 #("i10440")))
                                                              (hygiene guile))
                                                           #{tmp 10454}#)))
                                             #{template 10450}#
                                             #{pattern 10449}#))))))
              #{tmp 10442}#)
            (begin
              (let ((#{tmp 10455}#
                      ($sc-dispatch
                        #{x 10439}#
                        '(_ each-any any . #(each ((any . any) any))))))
                (if (if #{tmp 10455}#
                      (@apply
                        (lambda (#{k 10461}#
                                 #{docstring 10462}#
                                 #{keyword 10463}#
                                 #{pattern 10464}#
                                 #{template 10465}#)
                          (string? (syntax->datum #{docstring 10462}#)))
                        #{tmp 10455}#)
                      #f)
                  (@apply
                    (lambda (#{k 10471}#
                             #{docstring 10472}#
                             #{keyword 10473}#
                             #{pattern 10474}#
                             #{template 10475}#)
                      (list '#(syntax-object
                               lambda
                               ((top)
                                #(ribcage
                                  #(k docstring keyword pattern template)
                                  #((top) (top) (top) (top) (top))
                                  #("i10466"
                                    "i10467"
                                    "i10468"
                                    "i10469"
                                    "i10470"))
                                #(ribcage () () ())
                                #(ribcage #(x) #((top)) #("i10440")))
                               (hygiene guile))
                            '(#(syntax-object
                                x
                                ((top)
                                 #(ribcage
                                   #(k docstring keyword pattern template)
                                   #((top) (top) (top) (top) (top))
                                   #("i10466"
                                     "i10467"
                                     "i10468"
                                     "i10469"
                                     "i10470"))
                                 #(ribcage () () ())
                                 #(ribcage #(x) #((top)) #("i10440")))
                                (hygiene guile)))
                            #{docstring 10472}#
                            (vector
                              '(#(syntax-object
                                  macro-type
                                  ((top)
                                   #(ribcage
                                     #(k docstring keyword pattern template)
                                     #((top) (top) (top) (top) (top))
                                     #("i10466"
                                       "i10467"
                                       "i10468"
                                       "i10469"
                                       "i10470"))
                                   #(ribcage () () ())
                                   #(ribcage #(x) #((top)) #("i10440")))
                                  (hygiene guile))
                                .
                                #(syntax-object
                                  syntax-rules
                                  ((top)
                                   #(ribcage
                                     #(k docstring keyword pattern template)
                                     #((top) (top) (top) (top) (top))
                                     #("i10466"
                                       "i10467"
                                       "i10468"
                                       "i10469"
                                       "i10470"))
                                   #(ribcage () () ())
                                   #(ribcage #(x) #((top)) #("i10440")))
                                  (hygiene guile)))
                              (cons '#(syntax-object
                                       patterns
                                       ((top)
                                        #(ribcage
                                          #(k
                                            docstring
                                            keyword
                                            pattern
                                            template)
                                          #((top) (top) (top) (top) (top))
                                          #("i10466"
                                            "i10467"
                                            "i10468"
                                            "i10469"
                                            "i10470"))
                                        #(ribcage () () ())
                                        #(ribcage #(x) #((top)) #("i10440")))
                                       (hygiene guile))
                                    #{pattern 10474}#))
                            (cons '#(syntax-object
                                     syntax-case
                                     ((top)
                                      #(ribcage
                                        #(k docstring keyword pattern template)
                                        #((top) (top) (top) (top) (top))
                                        #("i10466"
                                          "i10467"
                                          "i10468"
                                          "i10469"
                                          "i10470"))
                                      #(ribcage () () ())
                                      #(ribcage #(x) #((top)) #("i10440")))
                                     (hygiene guile))
                                  (cons '#(syntax-object
                                           x
                                           ((top)
                                            #(ribcage
                                              #(k
                                                docstring
                                                keyword
                                                pattern
                                                template)
                                              #((top) (top) (top) (top) (top))
                                              #("i10466"
                                                "i10467"
                                                "i10468"
                                                "i10469"
                                                "i10470"))
                                            #(ribcage () () ())
                                            #(ribcage
                                              #(x)
                                              #((top))
                                              #("i10440")))
                                           (hygiene guile))
                                        (cons #{k 10471}#
                                              (map (lambda (#{tmp 10479}#
                                                            #{tmp 10478}#)
                                                     (list (cons '#(syntax-object
                                                                    dummy
                                                                    ((top)
                                                                     #(ribcage
                                                                       #(k
                                                                         docstring
                                                                         keyword
                                                                         pattern
                                                                         template)
                                                                       #((top)
                                                                         (top)
                                                                         (top)
                                                                         (top)
                                                                         (top))
                                                                       #("i10466"
                                                                         "i10467"
                                                                         "i10468"
                                                                         "i10469"
                                                                         "i10470"))
                                                                     #(ribcage
                                                                       ()
                                                                       ()
                                                                       ())
                                                                     #(ribcage
                                                                       #(x)
                                                                       #((top))
                                                                       #("i10440")))
                                                                    (hygiene
                                                                      guile))
                                                                 #{tmp 10478}#)
                                                           (list '#(syntax-object
                                                                    syntax
                                                                    ((top)
                                                                     #(ribcage
                                                                       #(k
                                                                         docstring
                                                                         keyword
                                                                         pattern
                                                                         template)
                                                                       #((top)
                                                                         (top)
                                                                         (top)
                                                                         (top)
                                                                         (top))
                                                                       #("i10466"
                                                                         "i10467"
                                                                         "i10468"
                                                                         "i10469"
                                                                         "i10470"))
                                                                     #(ribcage
                                                                       ()
                                                                       ()
                                                                       ())
                                                                     #(ribcage
                                                                       #(x)
                                                                       #((top))
                                                                       #("i10440")))
                                                                    (hygiene
                                                                      guile))
                                                                 #{tmp 10479}#)))
                                                   #{template 10475}#
                                                   #{pattern 10474}#))))))
                    #{tmp 10455}#)
                  (syntax-violation
                    #f
                    "source expression failed to match any pattern"
                    #{x 10439}#))))))))))

(define define-syntax-rule
  (make-syntax-transformer
    'define-syntax-rule
    'macro
    (lambda (#{x 10480}#)
      (begin
        (let ((#{tmp 10483}#
                ($sc-dispatch #{x 10480}# '(_ (any . any) any))))
          (if #{tmp 10483}#
            (@apply
              (lambda (#{name 10487}#
                       #{pattern 10488}#
                       #{template 10489}#)
                (list '#(syntax-object
                         define-syntax
                         ((top)
                          #(ribcage
                            #(name pattern template)
                            #((top) (top) (top))
                            #("i10484" "i10485" "i10486"))
                          #(ribcage () () ())
                          #(ribcage #(x) #((top)) #("i10481")))
                         (hygiene guile))
                      #{name 10487}#
                      (list '#(syntax-object
                               syntax-rules
                               ((top)
                                #(ribcage
                                  #(name pattern template)
                                  #((top) (top) (top))
                                  #("i10484" "i10485" "i10486"))
                                #(ribcage () () ())
                                #(ribcage #(x) #((top)) #("i10481")))
                               (hygiene guile))
                            '()
                            (list (cons '#(syntax-object
                                           _
                                           ((top)
                                            #(ribcage
                                              #(name pattern template)
                                              #((top) (top) (top))
                                              #("i10484" "i10485" "i10486"))
                                            #(ribcage () () ())
                                            #(ribcage
                                              #(x)
                                              #((top))
                                              #("i10481")))
                                           (hygiene guile))
                                        #{pattern 10488}#)
                                  #{template 10489}#))))
              #{tmp 10483}#)
            (begin
              (let ((#{tmp 10490}#
                      ($sc-dispatch
                        #{x 10480}#
                        '(_ (any . any) any any))))
                (if (if #{tmp 10490}#
                      (@apply
                        (lambda (#{name 10495}#
                                 #{pattern 10496}#
                                 #{docstring 10497}#
                                 #{template 10498}#)
                          (string? (syntax->datum #{docstring 10497}#)))
                        #{tmp 10490}#)
                      #f)
                  (@apply
                    (lambda (#{name 10503}#
                             #{pattern 10504}#
                             #{docstring 10505}#
                             #{template 10506}#)
                      (list '#(syntax-object
                               define-syntax
                               ((top)
                                #(ribcage
                                  #(name pattern docstring template)
                                  #((top) (top) (top) (top))
                                  #("i10499" "i10500" "i10501" "i10502"))
                                #(ribcage () () ())
                                #(ribcage #(x) #((top)) #("i10481")))
                               (hygiene guile))
                            #{name 10503}#
                            (list '#(syntax-object
                                     syntax-rules
                                     ((top)
                                      #(ribcage
                                        #(name pattern docstring template)
                                        #((top) (top) (top) (top))
                                        #("i10499" "i10500" "i10501" "i10502"))
                                      #(ribcage () () ())
                                      #(ribcage #(x) #((top)) #("i10481")))
                                     (hygiene guile))
                                  '()
                                  #{docstring 10505}#
                                  (list (cons '#(syntax-object
                                                 _
                                                 ((top)
                                                  #(ribcage
                                                    #(name
                                                      pattern
                                                      docstring
                                                      template)
                                                    #((top) (top) (top) (top))
                                                    #("i10499"
                                                      "i10500"
                                                      "i10501"
                                                      "i10502"))
                                                  #(ribcage () () ())
                                                  #(ribcage
                                                    #(x)
                                                    #((top))
                                                    #("i10481")))
                                                 (hygiene guile))
                                              #{pattern 10504}#)
                                        #{template 10506}#))))
                    #{tmp 10490}#)
                  (syntax-violation
                    #f
                    "source expression failed to match any pattern"
                    #{x 10480}#))))))))))

(define let*
  (make-syntax-transformer
    'let*
    'macro
    (lambda (#{x 10507}#)
      (begin
        (let ((#{tmp 10510}#
                ($sc-dispatch
                  #{x 10507}#
                  '(any #(each (any any)) any . each-any))))
          (if (if #{tmp 10510}#
                (@apply
                  (lambda (#{let* 10516}#
                           #{x 10517}#
                           #{v 10518}#
                           #{e1 10519}#
                           #{e2 10520}#)
                    (and-map identifier? #{x 10517}#))
                  #{tmp 10510}#)
                #f)
            (@apply
              (lambda (#{let* 10527}#
                       #{x 10528}#
                       #{v 10529}#
                       #{e1 10530}#
                       #{e2 10531}#)
                (letrec*
                  ((#{f 10534}#
                     (lambda (#{bindings 10535}#)
                       (if (null? #{bindings 10535}#)
                         (cons '#(syntax-object
                                  let
                                  ((top)
                                   #(ribcage () () ())
                                   #(ribcage
                                     #(f bindings)
                                     #((top) (top))
                                     #("i10532" "i10533"))
                                   #(ribcage
                                     #(let* x v e1 e2)
                                     #((top) (top) (top) (top) (top))
                                     #("i10522"
                                       "i10523"
                                       "i10524"
                                       "i10525"
                                       "i10526"))
                                   #(ribcage () () ())
                                   #(ribcage #(x) #((top)) #("i10508")))
                                  (hygiene guile))
                               (cons '() (cons #{e1 10530}# #{e2 10531}#)))
                         (begin
                           (let ((#{tmp 10540}#
                                   (list (#{f 10534}# (cdr #{bindings 10535}#))
                                         (car #{bindings 10535}#))))
                             (begin
                               (let ((#{tmp 10541}#
                                       ($sc-dispatch
                                         #{tmp 10540}#
                                         '(any any))))
                                 (if #{tmp 10541}#
                                   (@apply
                                     (lambda (#{body 10544}# #{binding 10545}#)
                                       (list '#(syntax-object
                                                let
                                                ((top)
                                                 #(ribcage () () ())
                                                 #(ribcage
                                                   #(body binding)
                                                   #((top) (top))
                                                   #("i10542" "i10543"))
                                                 #(ribcage () () ())
                                                 #(ribcage
                                                   #(f bindings)
                                                   #((top) (top))
                                                   #("i10532" "i10533"))
                                                 #(ribcage
                                                   #(let* x v e1 e2)
                                                   #((top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top))
                                                   #("i10522"
                                                     "i10523"
                                                     "i10524"
                                                     "i10525"
                                                     "i10526"))
                                                 #(ribcage () () ())
                                                 #(ribcage
                                                   #(x)
                                                   #((top))
                                                   #("i10508")))
                                                (hygiene guile))
                                             (list #{binding 10545}#)
                                             #{body 10544}#))
                                     #{tmp 10541}#)
                                   (syntax-violation
                                     #f
                                     "source expression failed to match any pattern"
                                     #{tmp 10540}#))))))))))
                  (begin
                    (#{f 10534}# (map list #{x 10528}# #{v 10529}#)))))
              #{tmp 10510}#)
            (syntax-violation
              #f
              "source expression failed to match any pattern"
              #{x 10507}#)))))))

(define do
  (make-syntax-transformer
    'do
    'macro
    (lambda (#{orig-x 10547}#)
      (begin
        (let ((#{tmp 10550}#
                ($sc-dispatch
                  #{orig-x 10547}#
                  '(_ #(each (any any . any))
                      (any . each-any)
                      .
                      each-any))))
          (if #{tmp 10550}#
            (@apply
              (lambda (#{var 10557}#
                       #{init 10558}#
                       #{step 10559}#
                       #{e0 10560}#
                       #{e1 10561}#
                       #{c 10562}#)
                (begin
                  (let ((#{tmp 10564}#
                          (map (lambda (#{v 10585}# #{s 10586}#)
                                 (begin
                                   (let ((#{tmp 10590}#
                                           ($sc-dispatch #{s 10586}# '())))
                                     (if #{tmp 10590}#
                                       (@apply
                                         (lambda () #{v 10585}#)
                                         #{tmp 10590}#)
                                       (begin
                                         (let ((#{tmp 10591}#
                                                 ($sc-dispatch
                                                   #{s 10586}#
                                                   '(any))))
                                           (if #{tmp 10591}#
                                             (@apply
                                               (lambda (#{e 10593}#)
                                                 #{e 10593}#)
                                               #{tmp 10591}#)
                                             (syntax-violation
                                               'do
                                               "bad step expression"
                                               #{orig-x 10547}#
                                               #{s 10586}#))))))))
                               #{var 10557}#
                               #{step 10559}#)))
                    (begin
                      (let ((#{tmp 10565}#
                              ($sc-dispatch #{tmp 10564}# 'each-any)))
                        (if #{tmp 10565}#
                          (@apply
                            (lambda (#{step 10567}#)
                              (begin
                                (let ((#{tmp 10569}#
                                        ($sc-dispatch #{e1 10561}# '())))
                                  (if #{tmp 10569}#
                                    (@apply
                                      (lambda ()
                                        (list '#(syntax-object
                                                 let
                                                 ((top)
                                                  #(ribcage () () ())
                                                  #(ribcage
                                                    #(step)
                                                    #((top))
                                                    #("i10566"))
                                                  #(ribcage
                                                    #(var init step e0 e1 c)
                                                    #((top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top))
                                                    #("i10551"
                                                      "i10552"
                                                      "i10553"
                                                      "i10554"
                                                      "i10555"
                                                      "i10556"))
                                                  #(ribcage () () ())
                                                  #(ribcage
                                                    #(orig-x)
                                                    #((top))
                                                    #("i10548")))
                                                 (hygiene guile))
                                              '#(syntax-object
                                                 doloop
                                                 ((top)
                                                  #(ribcage () () ())
                                                  #(ribcage
                                                    #(step)
                                                    #((top))
                                                    #("i10566"))
                                                  #(ribcage
                                                    #(var init step e0 e1 c)
                                                    #((top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top))
                                                    #("i10551"
                                                      "i10552"
                                                      "i10553"
                                                      "i10554"
                                                      "i10555"
                                                      "i10556"))
                                                  #(ribcage () () ())
                                                  #(ribcage
                                                    #(orig-x)
                                                    #((top))
                                                    #("i10548")))
                                                 (hygiene guile))
                                              (map list
                                                   #{var 10557}#
                                                   #{init 10558}#)
                                              (list '#(syntax-object
                                                       if
                                                       ((top)
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(step)
                                                          #((top))
                                                          #("i10566"))
                                                        #(ribcage
                                                          #(var
                                                            init
                                                            step
                                                            e0
                                                            e1
                                                            c)
                                                          #((top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top))
                                                          #("i10551"
                                                            "i10552"
                                                            "i10553"
                                                            "i10554"
                                                            "i10555"
                                                            "i10556"))
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(orig-x)
                                                          #((top))
                                                          #("i10548")))
                                                       (hygiene guile))
                                                    (list '#(syntax-object
                                                             not
                                                             ((top)
                                                              #(ribcage
                                                                ()
                                                                ()
                                                                ())
                                                              #(ribcage
                                                                #(step)
                                                                #((top))
                                                                #("i10566"))
                                                              #(ribcage
                                                                #(var
                                                                  init
                                                                  step
                                                                  e0
                                                                  e1
                                                                  c)
                                                                #((top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top))
                                                                #("i10551"
                                                                  "i10552"
                                                                  "i10553"
                                                                  "i10554"
                                                                  "i10555"
                                                                  "i10556"))
                                                              #(ribcage
                                                                ()
                                                                ()
                                                                ())
                                                              #(ribcage
                                                                #(orig-x)
                                                                #((top))
                                                                #("i10548")))
                                                             (hygiene guile))
                                                          #{e0 10560}#)
                                                    (cons '#(syntax-object
                                                             begin
                                                             ((top)
                                                              #(ribcage
                                                                ()
                                                                ()
                                                                ())
                                                              #(ribcage
                                                                #(step)
                                                                #((top))
                                                                #("i10566"))
                                                              #(ribcage
                                                                #(var
                                                                  init
                                                                  step
                                                                  e0
                                                                  e1
                                                                  c)
                                                                #((top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top))
                                                                #("i10551"
                                                                  "i10552"
                                                                  "i10553"
                                                                  "i10554"
                                                                  "i10555"
                                                                  "i10556"))
                                                              #(ribcage
                                                                ()
                                                                ()
                                                                ())
                                                              #(ribcage
                                                                #(orig-x)
                                                                #((top))
                                                                #("i10548")))
                                                             (hygiene guile))
                                                          (append
                                                            #{c 10562}#
                                                            (list (cons '#(syntax-object
                                                                           doloop
                                                                           ((top)
                                                                            #(ribcage
                                                                              ()
                                                                              ()
                                                                              ())
                                                                            #(ribcage
                                                                              #(step)
                                                                              #((top))
                                                                              #("i10566"))
                                                                            #(ribcage
                                                                              #(var
                                                                                init
                                                                                step
                                                                                e0
                                                                                e1
                                                                                c)
                                                                              #((top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top))
                                                                              #("i10551"
                                                                                "i10552"
                                                                                "i10553"
                                                                                "i10554"
                                                                                "i10555"
                                                                                "i10556"))
                                                                            #(ribcage
                                                                              ()
                                                                              ()
                                                                              ())
                                                                            #(ribcage
                                                                              #(orig-x)
                                                                              #((top))
                                                                              #("i10548")))
                                                                           (hygiene
                                                                             guile))
                                                                        #{step 10567}#)))))))
                                      #{tmp 10569}#)
                                    (begin
                                      (let ((#{tmp 10574}#
                                              ($sc-dispatch
                                                #{e1 10561}#
                                                '(any . each-any))))
                                        (if #{tmp 10574}#
                                          (@apply
                                            (lambda (#{e1 10577}# #{e2 10578}#)
                                              (list '#(syntax-object
                                                       let
                                                       ((top)
                                                        #(ribcage
                                                          #(e1 e2)
                                                          #((top) (top))
                                                          #("i10575" "i10576"))
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(step)
                                                          #((top))
                                                          #("i10566"))
                                                        #(ribcage
                                                          #(var
                                                            init
                                                            step
                                                            e0
                                                            e1
                                                            c)
                                                          #((top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top))
                                                          #("i10551"
                                                            "i10552"
                                                            "i10553"
                                                            "i10554"
                                                            "i10555"
                                                            "i10556"))
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(orig-x)
                                                          #((top))
                                                          #("i10548")))
                                                       (hygiene guile))
                                                    '#(syntax-object
                                                       doloop
                                                       ((top)
                                                        #(ribcage
                                                          #(e1 e2)
                                                          #((top) (top))
                                                          #("i10575" "i10576"))
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(step)
                                                          #((top))
                                                          #("i10566"))
                                                        #(ribcage
                                                          #(var
                                                            init
                                                            step
                                                            e0
                                                            e1
                                                            c)
                                                          #((top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top))
                                                          #("i10551"
                                                            "i10552"
                                                            "i10553"
                                                            "i10554"
                                                            "i10555"
                                                            "i10556"))
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(orig-x)
                                                          #((top))
                                                          #("i10548")))
                                                       (hygiene guile))
                                                    (map list
                                                         #{var 10557}#
                                                         #{init 10558}#)
                                                    (list '#(syntax-object
                                                             if
                                                             ((top)
                                                              #(ribcage
                                                                #(e1 e2)
                                                                #((top) (top))
                                                                #("i10575"
                                                                  "i10576"))
                                                              #(ribcage
                                                                ()
                                                                ()
                                                                ())
                                                              #(ribcage
                                                                #(step)
                                                                #((top))
                                                                #("i10566"))
                                                              #(ribcage
                                                                #(var
                                                                  init
                                                                  step
                                                                  e0
                                                                  e1
                                                                  c)
                                                                #((top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top))
                                                                #("i10551"
                                                                  "i10552"
                                                                  "i10553"
                                                                  "i10554"
                                                                  "i10555"
                                                                  "i10556"))
                                                              #(ribcage
                                                                ()
                                                                ()
                                                                ())
                                                              #(ribcage
                                                                #(orig-x)
                                                                #((top))
                                                                #("i10548")))
                                                             (hygiene guile))
                                                          #{e0 10560}#
                                                          (cons '#(syntax-object
                                                                   begin
                                                                   ((top)
                                                                    #(ribcage
                                                                      #(e1 e2)
                                                                      #((top)
                                                                        (top))
                                                                      #("i10575"
                                                                        "i10576"))
                                                                    #(ribcage
                                                                      ()
                                                                      ()
                                                                      ())
                                                                    #(ribcage
                                                                      #(step)
                                                                      #((top))
                                                                      #("i10566"))
                                                                    #(ribcage
                                                                      #(var
                                                                        init
                                                                        step
                                                                        e0
                                                                        e1
                                                                        c)
                                                                      #((top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top))
                                                                      #("i10551"
                                                                        "i10552"
                                                                        "i10553"
                                                                        "i10554"
                                                                        "i10555"
                                                                        "i10556"))
                                                                    #(ribcage
                                                                      ()
                                                                      ()
                                                                      ())
                                                                    #(ribcage
                                                                      #(orig-x)
                                                                      #((top))
                                                                      #("i10548")))
                                                                   (hygiene
                                                                     guile))
                                                                (cons #{e1 10577}#
                                                                      #{e2 10578}#))
                                                          (cons '#(syntax-object
                                                                   begin
                                                                   ((top)
                                                                    #(ribcage
                                                                      #(e1 e2)
                                                                      #((top)
                                                                        (top))
                                                                      #("i10575"
                                                                        "i10576"))
                                                                    #(ribcage
                                                                      ()
                                                                      ()
                                                                      ())
                                                                    #(ribcage
                                                                      #(step)
                                                                      #((top))
                                                                      #("i10566"))
                                                                    #(ribcage
                                                                      #(var
                                                                        init
                                                                        step
                                                                        e0
                                                                        e1
                                                                        c)
                                                                      #((top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top))
                                                                      #("i10551"
                                                                        "i10552"
                                                                        "i10553"
                                                                        "i10554"
                                                                        "i10555"
                                                                        "i10556"))
                                                                    #(ribcage
                                                                      ()
                                                                      ()
                                                                      ())
                                                                    #(ribcage
                                                                      #(orig-x)
                                                                      #((top))
                                                                      #("i10548")))
                                                                   (hygiene
                                                                     guile))
                                                                (append
                                                                  #{c 10562}#
                                                                  (list (cons '#(syntax-object
                                                                                 doloop
                                                                                 ((top)
                                                                                  #(ribcage
                                                                                    #(e1
                                                                                      e2)
                                                                                    #((top)
                                                                                      (top))
                                                                                    #("i10575"
                                                                                      "i10576"))
                                                                                  #(ribcage
                                                                                    ()
                                                                                    ()
                                                                                    ())
                                                                                  #(ribcage
                                                                                    #(step)
                                                                                    #((top))
                                                                                    #("i10566"))
                                                                                  #(ribcage
                                                                                    #(var
                                                                                      init
                                                                                      step
                                                                                      e0
                                                                                      e1
                                                                                      c)
                                                                                    #((top)
                                                                                      (top)
                                                                                      (top)
                                                                                      (top)
                                                                                      (top)
                                                                                      (top))
                                                                                    #("i10551"
                                                                                      "i10552"
                                                                                      "i10553"
                                                                                      "i10554"
                                                                                      "i10555"
                                                                                      "i10556"))
                                                                                  #(ribcage
                                                                                    ()
                                                                                    ()
                                                                                    ())
                                                                                  #(ribcage
                                                                                    #(orig-x)
                                                                                    #((top))
                                                                                    #("i10548")))
                                                                                 (hygiene
                                                                                   guile))
                                                                              #{step 10567}#)))))))
                                            #{tmp 10574}#)
                                          (syntax-violation
                                            #f
                                            "source expression failed to match any pattern"
                                            #{e1 10561}#))))))))
                            #{tmp 10565}#)
                          (syntax-violation
                            #f
                            "source expression failed to match any pattern"
                            #{tmp 10564}#)))))))
              #{tmp 10550}#)
            (syntax-violation
              #f
              "source expression failed to match any pattern"
              #{orig-x 10547}#)))))))

(define quasiquote
  (make-syntax-transformer
    'quasiquote
    'macro
    (letrec*
      ((#{quasi 10599}#
         (lambda (#{p 10612}# #{lev 10613}#)
           (begin
             (let ((#{tmp 10617}#
                     ($sc-dispatch
                       #{p 10612}#
                       '(#(free-id
                           #(syntax-object
                             unquote
                             ((top)
                              #(ribcage () () ())
                              #(ribcage
                                #(p lev)
                                #((top) (top))
                                #("i10614" "i10615"))
                              #(ribcage
                                (emit quasivector
                                      quasilist*
                                      quasiappend
                                      quasicons
                                      vquasi
                                      quasi)
                                ((top) (top) (top) (top) (top) (top) (top))
                                ("i10610"
                                 "i10608"
                                 "i10606"
                                 "i10604"
                                 "i10602"
                                 "i10600"
                                 "i10598")))
                             (hygiene guile)))
                         any))))
               (if #{tmp 10617}#
                 (@apply
                   (lambda (#{p 10619}#)
                     (if (= #{lev 10613}# 0)
                       (list '#(syntax-object
                                "value"
                                ((top)
                                 #(ribcage #(p) #((top)) #("i10618"))
                                 #(ribcage () () ())
                                 #(ribcage
                                   #(p lev)
                                   #((top) (top))
                                   #("i10614" "i10615"))
                                 #(ribcage
                                   (emit quasivector
                                         quasilist*
                                         quasiappend
                                         quasicons
                                         vquasi
                                         quasi)
                                   ((top) (top) (top) (top) (top) (top) (top))
                                   ("i10610"
                                    "i10608"
                                    "i10606"
                                    "i10604"
                                    "i10602"
                                    "i10600"
                                    "i10598")))
                                (hygiene guile))
                             #{p 10619}#)
                       (#{quasicons 10603}#
                         '(#(syntax-object
                             "quote"
                             ((top)
                              #(ribcage #(p) #((top)) #("i10618"))
                              #(ribcage () () ())
                              #(ribcage
                                #(p lev)
                                #((top) (top))
                                #("i10614" "i10615"))
                              #(ribcage
                                (emit quasivector
                                      quasilist*
                                      quasiappend
                                      quasicons
                                      vquasi
                                      quasi)
                                ((top) (top) (top) (top) (top) (top) (top))
                                ("i10610"
                                 "i10608"
                                 "i10606"
                                 "i10604"
                                 "i10602"
                                 "i10600"
                                 "i10598")))
                             (hygiene guile))
                           #(syntax-object
                             unquote
                             ((top)
                              #(ribcage #(p) #((top)) #("i10618"))
                              #(ribcage () () ())
                              #(ribcage
                                #(p lev)
                                #((top) (top))
                                #("i10614" "i10615"))
                              #(ribcage
                                (emit quasivector
                                      quasilist*
                                      quasiappend
                                      quasicons
                                      vquasi
                                      quasi)
                                ((top) (top) (top) (top) (top) (top) (top))
                                ("i10610"
                                 "i10608"
                                 "i10606"
                                 "i10604"
                                 "i10602"
                                 "i10600"
                                 "i10598")))
                             (hygiene guile)))
                         (#{quasi 10599}#
                           (list #{p 10619}#)
                           (#{1-}# #{lev 10613}#)))))
                   #{tmp 10617}#)
                 (begin
                   (let ((#{tmp 10620}#
                           ($sc-dispatch
                             #{p 10612}#
                             '(#(free-id
                                 #(syntax-object
                                   quasiquote
                                   ((top)
                                    #(ribcage () () ())
                                    #(ribcage
                                      #(p lev)
                                      #((top) (top))
                                      #("i10614" "i10615"))
                                    #(ribcage
                                      (emit quasivector
                                            quasilist*
                                            quasiappend
                                            quasicons
                                            vquasi
                                            quasi)
                                      ((top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top))
                                      ("i10610"
                                       "i10608"
                                       "i10606"
                                       "i10604"
                                       "i10602"
                                       "i10600"
                                       "i10598")))
                                   (hygiene guile)))
                               any))))
                     (if #{tmp 10620}#
                       (@apply
                         (lambda (#{p 10622}#)
                           (#{quasicons 10603}#
                             '(#(syntax-object
                                 "quote"
                                 ((top)
                                  #(ribcage #(p) #((top)) #("i10621"))
                                  #(ribcage () () ())
                                  #(ribcage
                                    #(p lev)
                                    #((top) (top))
                                    #("i10614" "i10615"))
                                  #(ribcage
                                    (emit quasivector
                                          quasilist*
                                          quasiappend
                                          quasicons
                                          vquasi
                                          quasi)
                                    ((top) (top) (top) (top) (top) (top) (top))
                                    ("i10610"
                                     "i10608"
                                     "i10606"
                                     "i10604"
                                     "i10602"
                                     "i10600"
                                     "i10598")))
                                 (hygiene guile))
                               #(syntax-object
                                 quasiquote
                                 ((top)
                                  #(ribcage #(p) #((top)) #("i10621"))
                                  #(ribcage () () ())
                                  #(ribcage
                                    #(p lev)
                                    #((top) (top))
                                    #("i10614" "i10615"))
                                  #(ribcage
                                    (emit quasivector
                                          quasilist*
                                          quasiappend
                                          quasicons
                                          vquasi
                                          quasi)
                                    ((top) (top) (top) (top) (top) (top) (top))
                                    ("i10610"
                                     "i10608"
                                     "i10606"
                                     "i10604"
                                     "i10602"
                                     "i10600"
                                     "i10598")))
                                 (hygiene guile)))
                             (#{quasi 10599}#
                               (list #{p 10622}#)
                               (#{1+}# #{lev 10613}#))))
                         #{tmp 10620}#)
                       (begin
                         (let ((#{tmp 10623}#
                                 ($sc-dispatch #{p 10612}# '(any . any))))
                           (if #{tmp 10623}#
                             (@apply
                               (lambda (#{p 10626}# #{q 10627}#)
                                 (begin
                                   (let ((#{tmp 10629}#
                                           ($sc-dispatch
                                             #{p 10626}#
                                             '(#(free-id
                                                 #(syntax-object
                                                   unquote
                                                   ((top)
                                                    #(ribcage
                                                      #(p q)
                                                      #((top) (top))
                                                      #("i10624" "i10625"))
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(p lev)
                                                      #((top) (top))
                                                      #("i10614" "i10615"))
                                                    #(ribcage
                                                      (emit quasivector
                                                            quasilist*
                                                            quasiappend
                                                            quasicons
                                                            vquasi
                                                            quasi)
                                                      ((top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top))
                                                      ("i10610"
                                                       "i10608"
                                                       "i10606"
                                                       "i10604"
                                                       "i10602"
                                                       "i10600"
                                                       "i10598")))
                                                   (hygiene guile)))
                                               .
                                               each-any))))
                                     (if #{tmp 10629}#
                                       (@apply
                                         (lambda (#{p 10631}#)
                                           (if (= #{lev 10613}# 0)
                                             (#{quasilist* 10607}#
                                               (map (lambda (#{tmp 10632}#)
                                                      (list '#(syntax-object
                                                               "value"
                                                               ((top)
                                                                #(ribcage
                                                                  #(p)
                                                                  #((top))
                                                                  #("i10630"))
                                                                #(ribcage
                                                                  #(p q)
                                                                  #((top)
                                                                    (top))
                                                                  #("i10624"
                                                                    "i10625"))
                                                                #(ribcage
                                                                  ()
                                                                  ()
                                                                  ())
                                                                #(ribcage
                                                                  #(p lev)
                                                                  #((top)
                                                                    (top))
                                                                  #("i10614"
                                                                    "i10615"))
                                                                #(ribcage
                                                                  (emit quasivector
                                                                        quasilist*
                                                                        quasiappend
                                                                        quasicons
                                                                        vquasi
                                                                        quasi)
                                                                  ((top)
                                                                   (top)
                                                                   (top)
                                                                   (top)
                                                                   (top)
                                                                   (top)
                                                                   (top))
                                                                  ("i10610"
                                                                   "i10608"
                                                                   "i10606"
                                                                   "i10604"
                                                                   "i10602"
                                                                   "i10600"
                                                                   "i10598")))
                                                               (hygiene guile))
                                                            #{tmp 10632}#))
                                                    #{p 10631}#)
                                               (#{quasi 10599}#
                                                 #{q 10627}#
                                                 #{lev 10613}#))
                                             (#{quasicons 10603}#
                                               (#{quasicons 10603}#
                                                 '(#(syntax-object
                                                     "quote"
                                                     ((top)
                                                      #(ribcage
                                                        #(p)
                                                        #((top))
                                                        #("i10630"))
                                                      #(ribcage
                                                        #(p q)
                                                        #((top) (top))
                                                        #("i10624" "i10625"))
                                                      #(ribcage () () ())
                                                      #(ribcage
                                                        #(p lev)
                                                        #((top) (top))
                                                        #("i10614" "i10615"))
                                                      #(ribcage
                                                        (emit quasivector
                                                              quasilist*
                                                              quasiappend
                                                              quasicons
                                                              vquasi
                                                              quasi)
                                                        ((top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top))
                                                        ("i10610"
                                                         "i10608"
                                                         "i10606"
                                                         "i10604"
                                                         "i10602"
                                                         "i10600"
                                                         "i10598")))
                                                     (hygiene guile))
                                                   #(syntax-object
                                                     unquote
                                                     ((top)
                                                      #(ribcage
                                                        #(p)
                                                        #((top))
                                                        #("i10630"))
                                                      #(ribcage
                                                        #(p q)
                                                        #((top) (top))
                                                        #("i10624" "i10625"))
                                                      #(ribcage () () ())
                                                      #(ribcage
                                                        #(p lev)
                                                        #((top) (top))
                                                        #("i10614" "i10615"))
                                                      #(ribcage
                                                        (emit quasivector
                                                              quasilist*
                                                              quasiappend
                                                              quasicons
                                                              vquasi
                                                              quasi)
                                                        ((top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top))
                                                        ("i10610"
                                                         "i10608"
                                                         "i10606"
                                                         "i10604"
                                                         "i10602"
                                                         "i10600"
                                                         "i10598")))
                                                     (hygiene guile)))
                                                 (#{quasi 10599}#
                                                   #{p 10631}#
                                                   (#{1-}# #{lev 10613}#)))
                                               (#{quasi 10599}#
                                                 #{q 10627}#
                                                 #{lev 10613}#))))
                                         #{tmp 10629}#)
                                       (begin
                                         (let ((#{tmp 10634}#
                                                 ($sc-dispatch
                                                   #{p 10626}#
                                                   '(#(free-id
                                                       #(syntax-object
                                                         unquote-splicing
                                                         ((top)
                                                          #(ribcage
                                                            #(p q)
                                                            #((top) (top))
                                                            #("i10624"
                                                              "i10625"))
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(p lev)
                                                            #((top) (top))
                                                            #("i10614"
                                                              "i10615"))
                                                          #(ribcage
                                                            (emit quasivector
                                                                  quasilist*
                                                                  quasiappend
                                                                  quasicons
                                                                  vquasi
                                                                  quasi)
                                                            ((top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top))
                                                            ("i10610"
                                                             "i10608"
                                                             "i10606"
                                                             "i10604"
                                                             "i10602"
                                                             "i10600"
                                                             "i10598")))
                                                         (hygiene guile)))
                                                     .
                                                     each-any))))
                                           (if #{tmp 10634}#
                                             (@apply
                                               (lambda (#{p 10636}#)
                                                 (if (= #{lev 10613}# 0)
                                                   (#{quasiappend 10605}#
                                                     (map (lambda (#{tmp 10637}#)
                                                            (list '#(syntax-object
                                                                     "value"
                                                                     ((top)
                                                                      #(ribcage
                                                                        #(p)
                                                                        #((top))
                                                                        #("i10635"))
                                                                      #(ribcage
                                                                        #(p q)
                                                                        #((top)
                                                                          (top))
                                                                        #("i10624"
                                                                          "i10625"))
                                                                      #(ribcage
                                                                        ()
                                                                        ()
                                                                        ())
                                                                      #(ribcage
                                                                        #(p
                                                                          lev)
                                                                        #((top)
                                                                          (top))
                                                                        #("i10614"
                                                                          "i10615"))
                                                                      #(ribcage
                                                                        (emit quasivector
                                                                              quasilist*
                                                                              quasiappend
                                                                              quasicons
                                                                              vquasi
                                                                              quasi)
                                                                        ((top)
                                                                         (top)
                                                                         (top)
                                                                         (top)
                                                                         (top)
                                                                         (top)
                                                                         (top))
                                                                        ("i10610"
                                                                         "i10608"
                                                                         "i10606"
                                                                         "i10604"
                                                                         "i10602"
                                                                         "i10600"
                                                                         "i10598")))
                                                                     (hygiene
                                                                       guile))
                                                                  #{tmp 10637}#))
                                                          #{p 10636}#)
                                                     (#{quasi 10599}#
                                                       #{q 10627}#
                                                       #{lev 10613}#))
                                                   (#{quasicons 10603}#
                                                     (#{quasicons 10603}#
                                                       '(#(syntax-object
                                                           "quote"
                                                           ((top)
                                                            #(ribcage
                                                              #(p)
                                                              #((top))
                                                              #("i10635"))
                                                            #(ribcage
                                                              #(p q)
                                                              #((top) (top))
                                                              #("i10624"
                                                                "i10625"))
                                                            #(ribcage () () ())
                                                            #(ribcage
                                                              #(p lev)
                                                              #((top) (top))
                                                              #("i10614"
                                                                "i10615"))
                                                            #(ribcage
                                                              (emit quasivector
                                                                    quasilist*
                                                                    quasiappend
                                                                    quasicons
                                                                    vquasi
                                                                    quasi)
                                                              ((top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top))
                                                              ("i10610"
                                                               "i10608"
                                                               "i10606"
                                                               "i10604"
                                                               "i10602"
                                                               "i10600"
                                                               "i10598")))
                                                           (hygiene guile))
                                                         #(syntax-object
                                                           unquote-splicing
                                                           ((top)
                                                            #(ribcage
                                                              #(p)
                                                              #((top))
                                                              #("i10635"))
                                                            #(ribcage
                                                              #(p q)
                                                              #((top) (top))
                                                              #("i10624"
                                                                "i10625"))
                                                            #(ribcage () () ())
                                                            #(ribcage
                                                              #(p lev)
                                                              #((top) (top))
                                                              #("i10614"
                                                                "i10615"))
                                                            #(ribcage
                                                              (emit quasivector
                                                                    quasilist*
                                                                    quasiappend
                                                                    quasicons
                                                                    vquasi
                                                                    quasi)
                                                              ((top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top))
                                                              ("i10610"
                                                               "i10608"
                                                               "i10606"
                                                               "i10604"
                                                               "i10602"
                                                               "i10600"
                                                               "i10598")))
                                                           (hygiene guile)))
                                                       (#{quasi 10599}#
                                                         #{p 10636}#
                                                         (#{1-}# #{lev 10613}#)))
                                                     (#{quasi 10599}#
                                                       #{q 10627}#
                                                       #{lev 10613}#))))
                                               #{tmp 10634}#)
                                             (#{quasicons 10603}#
                                               (#{quasi 10599}#
                                                 #{p 10626}#
                                                 #{lev 10613}#)
                                               (#{quasi 10599}#
                                                 #{q 10627}#
                                                 #{lev 10613}#)))))))))
                               #{tmp 10623}#)
                             (begin
                               (let ((#{tmp 10641}#
                                       ($sc-dispatch
                                         #{p 10612}#
                                         '#(vector each-any))))
                                 (if #{tmp 10641}#
                                   (@apply
                                     (lambda (#{x 10643}#)
                                       (#{quasivector 10609}#
                                         (#{vquasi 10601}#
                                           #{x 10643}#
                                           #{lev 10613}#)))
                                     #{tmp 10641}#)
                                   (list '#(syntax-object
                                            "quote"
                                            ((top)
                                             #(ribcage
                                               #(p)
                                               #((top))
                                               #("i10645"))
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(p lev)
                                               #((top) (top))
                                               #("i10614" "i10615"))
                                             #(ribcage
                                               (emit quasivector
                                                     quasilist*
                                                     quasiappend
                                                     quasicons
                                                     vquasi
                                                     quasi)
                                               ((top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top))
                                               ("i10610"
                                                "i10608"
                                                "i10606"
                                                "i10604"
                                                "i10602"
                                                "i10600"
                                                "i10598")))
                                            (hygiene guile))
                                         #{p 10612}#)))))))))))))))
       (#{vquasi 10601}#
         (lambda (#{p 10647}# #{lev 10648}#)
           (begin
             (let ((#{tmp 10652}#
                     ($sc-dispatch #{p 10647}# '(any . any))))
               (if #{tmp 10652}#
                 (@apply
                   (lambda (#{p 10655}# #{q 10656}#)
                     (begin
                       (let ((#{tmp 10658}#
                               ($sc-dispatch
                                 #{p 10655}#
                                 '(#(free-id
                                     #(syntax-object
                                       unquote
                                       ((top)
                                        #(ribcage
                                          #(p q)
                                          #((top) (top))
                                          #("i10653" "i10654"))
                                        #(ribcage () () ())
                                        #(ribcage
                                          #(p lev)
                                          #((top) (top))
                                          #("i10649" "i10650"))
                                        #(ribcage
                                          (emit quasivector
                                                quasilist*
                                                quasiappend
                                                quasicons
                                                vquasi
                                                quasi)
                                          ((top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top))
                                          ("i10610"
                                           "i10608"
                                           "i10606"
                                           "i10604"
                                           "i10602"
                                           "i10600"
                                           "i10598")))
                                       (hygiene guile)))
                                   .
                                   each-any))))
                         (if #{tmp 10658}#
                           (@apply
                             (lambda (#{p 10660}#)
                               (if (= #{lev 10648}# 0)
                                 (#{quasilist* 10607}#
                                   (map (lambda (#{tmp 10661}#)
                                          (list '#(syntax-object
                                                   "value"
                                                   ((top)
                                                    #(ribcage
                                                      #(p)
                                                      #((top))
                                                      #("i10659"))
                                                    #(ribcage
                                                      #(p q)
                                                      #((top) (top))
                                                      #("i10653" "i10654"))
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(p lev)
                                                      #((top) (top))
                                                      #("i10649" "i10650"))
                                                    #(ribcage
                                                      (emit quasivector
                                                            quasilist*
                                                            quasiappend
                                                            quasicons
                                                            vquasi
                                                            quasi)
                                                      ((top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top))
                                                      ("i10610"
                                                       "i10608"
                                                       "i10606"
                                                       "i10604"
                                                       "i10602"
                                                       "i10600"
                                                       "i10598")))
                                                   (hygiene guile))
                                                #{tmp 10661}#))
                                        #{p 10660}#)
                                   (#{vquasi 10601}#
                                     #{q 10656}#
                                     #{lev 10648}#))
                                 (#{quasicons 10603}#
                                   (#{quasicons 10603}#
                                     '(#(syntax-object
                                         "quote"
                                         ((top)
                                          #(ribcage #(p) #((top)) #("i10659"))
                                          #(ribcage
                                            #(p q)
                                            #((top) (top))
                                            #("i10653" "i10654"))
                                          #(ribcage () () ())
                                          #(ribcage
                                            #(p lev)
                                            #((top) (top))
                                            #("i10649" "i10650"))
                                          #(ribcage
                                            (emit quasivector
                                                  quasilist*
                                                  quasiappend
                                                  quasicons
                                                  vquasi
                                                  quasi)
                                            ((top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top))
                                            ("i10610"
                                             "i10608"
                                             "i10606"
                                             "i10604"
                                             "i10602"
                                             "i10600"
                                             "i10598")))
                                         (hygiene guile))
                                       #(syntax-object
                                         unquote
                                         ((top)
                                          #(ribcage #(p) #((top)) #("i10659"))
                                          #(ribcage
                                            #(p q)
                                            #((top) (top))
                                            #("i10653" "i10654"))
                                          #(ribcage () () ())
                                          #(ribcage
                                            #(p lev)
                                            #((top) (top))
                                            #("i10649" "i10650"))
                                          #(ribcage
                                            (emit quasivector
                                                  quasilist*
                                                  quasiappend
                                                  quasicons
                                                  vquasi
                                                  quasi)
                                            ((top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top))
                                            ("i10610"
                                             "i10608"
                                             "i10606"
                                             "i10604"
                                             "i10602"
                                             "i10600"
                                             "i10598")))
                                         (hygiene guile)))
                                     (#{quasi 10599}#
                                       #{p 10660}#
                                       (#{1-}# #{lev 10648}#)))
                                   (#{vquasi 10601}#
                                     #{q 10656}#
                                     #{lev 10648}#))))
                             #{tmp 10658}#)
                           (begin
                             (let ((#{tmp 10663}#
                                     ($sc-dispatch
                                       #{p 10655}#
                                       '(#(free-id
                                           #(syntax-object
                                             unquote-splicing
                                             ((top)
                                              #(ribcage
                                                #(p q)
                                                #((top) (top))
                                                #("i10653" "i10654"))
                                              #(ribcage () () ())
                                              #(ribcage
                                                #(p lev)
                                                #((top) (top))
                                                #("i10649" "i10650"))
                                              #(ribcage
                                                (emit quasivector
                                                      quasilist*
                                                      quasiappend
                                                      quasicons
                                                      vquasi
                                                      quasi)
                                                ((top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top))
                                                ("i10610"
                                                 "i10608"
                                                 "i10606"
                                                 "i10604"
                                                 "i10602"
                                                 "i10600"
                                                 "i10598")))
                                             (hygiene guile)))
                                         .
                                         each-any))))
                               (if #{tmp 10663}#
                                 (@apply
                                   (lambda (#{p 10665}#)
                                     (if (= #{lev 10648}# 0)
                                       (#{quasiappend 10605}#
                                         (map (lambda (#{tmp 10666}#)
                                                (list '#(syntax-object
                                                         "value"
                                                         ((top)
                                                          #(ribcage
                                                            #(p)
                                                            #((top))
                                                            #("i10664"))
                                                          #(ribcage
                                                            #(p q)
                                                            #((top) (top))
                                                            #("i10653"
                                                              "i10654"))
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(p lev)
                                                            #((top) (top))
                                                            #("i10649"
                                                              "i10650"))
                                                          #(ribcage
                                                            (emit quasivector
                                                                  quasilist*
                                                                  quasiappend
                                                                  quasicons
                                                                  vquasi
                                                                  quasi)
                                                            ((top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top))
                                                            ("i10610"
                                                             "i10608"
                                                             "i10606"
                                                             "i10604"
                                                             "i10602"
                                                             "i10600"
                                                             "i10598")))
                                                         (hygiene guile))
                                                      #{tmp 10666}#))
                                              #{p 10665}#)
                                         (#{vquasi 10601}#
                                           #{q 10656}#
                                           #{lev 10648}#))
                                       (#{quasicons 10603}#
                                         (#{quasicons 10603}#
                                           '(#(syntax-object
                                               "quote"
                                               ((top)
                                                #(ribcage
                                                  #(p)
                                                  #((top))
                                                  #("i10664"))
                                                #(ribcage
                                                  #(p q)
                                                  #((top) (top))
                                                  #("i10653" "i10654"))
                                                #(ribcage () () ())
                                                #(ribcage
                                                  #(p lev)
                                                  #((top) (top))
                                                  #("i10649" "i10650"))
                                                #(ribcage
                                                  (emit quasivector
                                                        quasilist*
                                                        quasiappend
                                                        quasicons
                                                        vquasi
                                                        quasi)
                                                  ((top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top))
                                                  ("i10610"
                                                   "i10608"
                                                   "i10606"
                                                   "i10604"
                                                   "i10602"
                                                   "i10600"
                                                   "i10598")))
                                               (hygiene guile))
                                             #(syntax-object
                                               unquote-splicing
                                               ((top)
                                                #(ribcage
                                                  #(p)
                                                  #((top))
                                                  #("i10664"))
                                                #(ribcage
                                                  #(p q)
                                                  #((top) (top))
                                                  #("i10653" "i10654"))
                                                #(ribcage () () ())
                                                #(ribcage
                                                  #(p lev)
                                                  #((top) (top))
                                                  #("i10649" "i10650"))
                                                #(ribcage
                                                  (emit quasivector
                                                        quasilist*
                                                        quasiappend
                                                        quasicons
                                                        vquasi
                                                        quasi)
                                                  ((top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top))
                                                  ("i10610"
                                                   "i10608"
                                                   "i10606"
                                                   "i10604"
                                                   "i10602"
                                                   "i10600"
                                                   "i10598")))
                                               (hygiene guile)))
                                           (#{quasi 10599}#
                                             #{p 10665}#
                                             (#{1-}# #{lev 10648}#)))
                                         (#{vquasi 10601}#
                                           #{q 10656}#
                                           #{lev 10648}#))))
                                   #{tmp 10663}#)
                                 (#{quasicons 10603}#
                                   (#{quasi 10599}# #{p 10655}# #{lev 10648}#)
                                   (#{vquasi 10601}#
                                     #{q 10656}#
                                     #{lev 10648}#)))))))))
                   #{tmp 10652}#)
                 (begin
                   (let ((#{tmp 10670}# ($sc-dispatch #{p 10647}# '())))
                     (if #{tmp 10670}#
                       (@apply
                         (lambda ()
                           '(#(syntax-object
                               "quote"
                               ((top)
                                #(ribcage () () ())
                                #(ribcage
                                  #(p lev)
                                  #((top) (top))
                                  #("i10649" "i10650"))
                                #(ribcage
                                  (emit quasivector
                                        quasilist*
                                        quasiappend
                                        quasicons
                                        vquasi
                                        quasi)
                                  ((top) (top) (top) (top) (top) (top) (top))
                                  ("i10610"
                                   "i10608"
                                   "i10606"
                                   "i10604"
                                   "i10602"
                                   "i10600"
                                   "i10598")))
                               (hygiene guile))
                             ()))
                         #{tmp 10670}#)
                       (syntax-violation
                         #f
                         "source expression failed to match any pattern"
                         #{p 10647}#)))))))))
       (#{quasicons 10603}#
         (lambda (#{x 10671}# #{y 10672}#)
           (begin
             (let ((#{tmp 10676}# (list #{x 10671}# #{y 10672}#)))
               (begin
                 (let ((#{tmp 10677}#
                         ($sc-dispatch #{tmp 10676}# '(any any))))
                   (if #{tmp 10677}#
                     (@apply
                       (lambda (#{x 10680}# #{y 10681}#)
                         (begin
                           (let ((#{tmp 10683}#
                                   ($sc-dispatch
                                     #{y 10681}#
                                     '(#(atom "quote") any))))
                             (if #{tmp 10683}#
                               (@apply
                                 (lambda (#{dy 10685}#)
                                   (begin
                                     (let ((#{tmp 10687}#
                                             ($sc-dispatch
                                               #{x 10680}#
                                               '(#(atom "quote") any))))
                                       (if #{tmp 10687}#
                                         (@apply
                                           (lambda (#{dx 10689}#)
                                             (list '#(syntax-object
                                                      "quote"
                                                      ((top)
                                                       #(ribcage
                                                         #(dx)
                                                         #((top))
                                                         #("i10688"))
                                                       #(ribcage
                                                         #(dy)
                                                         #((top))
                                                         #("i10684"))
                                                       #(ribcage () () ())
                                                       #(ribcage
                                                         #(x y)
                                                         #((top) (top))
                                                         #("i10678" "i10679"))
                                                       #(ribcage () () ())
                                                       #(ribcage () () ())
                                                       #(ribcage
                                                         #(x y)
                                                         #((top) (top))
                                                         #("i10673" "i10674"))
                                                       #(ribcage
                                                         (emit quasivector
                                                               quasilist*
                                                               quasiappend
                                                               quasicons
                                                               vquasi
                                                               quasi)
                                                         ((top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top))
                                                         ("i10610"
                                                          "i10608"
                                                          "i10606"
                                                          "i10604"
                                                          "i10602"
                                                          "i10600"
                                                          "i10598")))
                                                      (hygiene guile))
                                                   (cons #{dx 10689}#
                                                         #{dy 10685}#)))
                                           #{tmp 10687}#)
                                         (if (null? #{dy 10685}#)
                                           (list '#(syntax-object
                                                    "list"
                                                    ((top)
                                                     #(ribcage
                                                       #(_)
                                                       #((top))
                                                       #("i10690"))
                                                     #(ribcage
                                                       #(dy)
                                                       #((top))
                                                       #("i10684"))
                                                     #(ribcage () () ())
                                                     #(ribcage
                                                       #(x y)
                                                       #((top) (top))
                                                       #("i10678" "i10679"))
                                                     #(ribcage () () ())
                                                     #(ribcage () () ())
                                                     #(ribcage
                                                       #(x y)
                                                       #((top) (top))
                                                       #("i10673" "i10674"))
                                                     #(ribcage
                                                       (emit quasivector
                                                             quasilist*
                                                             quasiappend
                                                             quasicons
                                                             vquasi
                                                             quasi)
                                                       ((top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top))
                                                       ("i10610"
                                                        "i10608"
                                                        "i10606"
                                                        "i10604"
                                                        "i10602"
                                                        "i10600"
                                                        "i10598")))
                                                    (hygiene guile))
                                                 #{x 10680}#)
                                           (list '#(syntax-object
                                                    "list*"
                                                    ((top)
                                                     #(ribcage
                                                       #(_)
                                                       #((top))
                                                       #("i10690"))
                                                     #(ribcage
                                                       #(dy)
                                                       #((top))
                                                       #("i10684"))
                                                     #(ribcage () () ())
                                                     #(ribcage
                                                       #(x y)
                                                       #((top) (top))
                                                       #("i10678" "i10679"))
                                                     #(ribcage () () ())
                                                     #(ribcage () () ())
                                                     #(ribcage
                                                       #(x y)
                                                       #((top) (top))
                                                       #("i10673" "i10674"))
                                                     #(ribcage
                                                       (emit quasivector
                                                             quasilist*
                                                             quasiappend
                                                             quasicons
                                                             vquasi
                                                             quasi)
                                                       ((top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top))
                                                       ("i10610"
                                                        "i10608"
                                                        "i10606"
                                                        "i10604"
                                                        "i10602"
                                                        "i10600"
                                                        "i10598")))
                                                    (hygiene guile))
                                                 #{x 10680}#
                                                 #{y 10681}#))))))
                                 #{tmp 10683}#)
                               (begin
                                 (let ((#{tmp 10692}#
                                         ($sc-dispatch
                                           #{y 10681}#
                                           '(#(atom "list") . any))))
                                   (if #{tmp 10692}#
                                     (@apply
                                       (lambda (#{stuff 10694}#)
                                         (cons '#(syntax-object
                                                  "list"
                                                  ((top)
                                                   #(ribcage
                                                     #(stuff)
                                                     #((top))
                                                     #("i10693"))
                                                   #(ribcage () () ())
                                                   #(ribcage
                                                     #(x y)
                                                     #((top) (top))
                                                     #("i10678" "i10679"))
                                                   #(ribcage () () ())
                                                   #(ribcage () () ())
                                                   #(ribcage
                                                     #(x y)
                                                     #((top) (top))
                                                     #("i10673" "i10674"))
                                                   #(ribcage
                                                     (emit quasivector
                                                           quasilist*
                                                           quasiappend
                                                           quasicons
                                                           vquasi
                                                           quasi)
                                                     ((top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top))
                                                     ("i10610"
                                                      "i10608"
                                                      "i10606"
                                                      "i10604"
                                                      "i10602"
                                                      "i10600"
                                                      "i10598")))
                                                  (hygiene guile))
                                               (cons #{x 10680}#
                                                     #{stuff 10694}#)))
                                       #{tmp 10692}#)
                                     (begin
                                       (let ((#{tmp 10695}#
                                               ($sc-dispatch
                                                 #{y 10681}#
                                                 '(#(atom "list*") . any))))
                                         (if #{tmp 10695}#
                                           (@apply
                                             (lambda (#{stuff 10697}#)
                                               (cons '#(syntax-object
                                                        "list*"
                                                        ((top)
                                                         #(ribcage
                                                           #(stuff)
                                                           #((top))
                                                           #("i10696"))
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(x y)
                                                           #((top) (top))
                                                           #("i10678"
                                                             "i10679"))
                                                         #(ribcage () () ())
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(x y)
                                                           #((top) (top))
                                                           #("i10673"
                                                             "i10674"))
                                                         #(ribcage
                                                           (emit quasivector
                                                                 quasilist*
                                                                 quasiappend
                                                                 quasicons
                                                                 vquasi
                                                                 quasi)
                                                           ((top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top))
                                                           ("i10610"
                                                            "i10608"
                                                            "i10606"
                                                            "i10604"
                                                            "i10602"
                                                            "i10600"
                                                            "i10598")))
                                                        (hygiene guile))
                                                     (cons #{x 10680}#
                                                           #{stuff 10697}#)))
                                             #{tmp 10695}#)
                                           (list '#(syntax-object
                                                    "list*"
                                                    ((top)
                                                     #(ribcage
                                                       #(_)
                                                       #((top))
                                                       #("i10698"))
                                                     #(ribcage () () ())
                                                     #(ribcage
                                                       #(x y)
                                                       #((top) (top))
                                                       #("i10678" "i10679"))
                                                     #(ribcage () () ())
                                                     #(ribcage () () ())
                                                     #(ribcage
                                                       #(x y)
                                                       #((top) (top))
                                                       #("i10673" "i10674"))
                                                     #(ribcage
                                                       (emit quasivector
                                                             quasilist*
                                                             quasiappend
                                                             quasicons
                                                             vquasi
                                                             quasi)
                                                       ((top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top))
                                                       ("i10610"
                                                        "i10608"
                                                        "i10606"
                                                        "i10604"
                                                        "i10602"
                                                        "i10600"
                                                        "i10598")))
                                                    (hygiene guile))
                                                 #{x 10680}#
                                                 #{y 10681}#)))))))))))
                       #{tmp 10677}#)
                     (syntax-violation
                       #f
                       "source expression failed to match any pattern"
                       #{tmp 10676}#))))))))
       (#{quasiappend 10605}#
         (lambda (#{x 10700}# #{y 10701}#)
           (begin
             (let ((#{tmp 10705}#
                     ($sc-dispatch #{y 10701}# '(#(atom "quote") ()))))
               (if #{tmp 10705}#
                 (@apply
                   (lambda ()
                     (if (null? #{x 10700}#)
                       '(#(syntax-object
                           "quote"
                           ((top)
                            #(ribcage () () ())
                            #(ribcage
                              #(x y)
                              #((top) (top))
                              #("i10702" "i10703"))
                            #(ribcage
                              (emit quasivector
                                    quasilist*
                                    quasiappend
                                    quasicons
                                    vquasi
                                    quasi)
                              ((top) (top) (top) (top) (top) (top) (top))
                              ("i10610"
                               "i10608"
                               "i10606"
                               "i10604"
                               "i10602"
                               "i10600"
                               "i10598")))
                           (hygiene guile))
                         ())
                       (if (null? (cdr #{x 10700}#))
                         (car #{x 10700}#)
                         (begin
                           (let ((#{tmp 10713}#
                                   ($sc-dispatch #{x 10700}# 'each-any)))
                             (if #{tmp 10713}#
                               (@apply
                                 (lambda (#{p 10715}#)
                                   (cons '#(syntax-object
                                            "append"
                                            ((top)
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(p)
                                               #((top))
                                               #("i10714"))
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(x y)
                                               #((top) (top))
                                               #("i10702" "i10703"))
                                             #(ribcage
                                               (emit quasivector
                                                     quasilist*
                                                     quasiappend
                                                     quasicons
                                                     vquasi
                                                     quasi)
                                               ((top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top))
                                               ("i10610"
                                                "i10608"
                                                "i10606"
                                                "i10604"
                                                "i10602"
                                                "i10600"
                                                "i10598")))
                                            (hygiene guile))
                                         #{p 10715}#))
                                 #{tmp 10713}#)
                               (syntax-violation
                                 #f
                                 "source expression failed to match any pattern"
                                 #{x 10700}#)))))))
                   #{tmp 10705}#)
                 (if (null? #{x 10700}#)
                   #{y 10701}#
                   (begin
                     (let ((#{tmp 10723}# (list #{x 10700}# #{y 10701}#)))
                       (begin
                         (let ((#{tmp 10724}#
                                 ($sc-dispatch #{tmp 10723}# '(each-any any))))
                           (if #{tmp 10724}#
                             (@apply
                               (lambda (#{p 10727}# #{y 10728}#)
                                 (cons '#(syntax-object
                                          "append"
                                          ((top)
                                           #(ribcage () () ())
                                           #(ribcage
                                             #(p y)
                                             #((top) (top))
                                             #("i10725" "i10726"))
                                           #(ribcage #(_) #((top)) #("i10717"))
                                           #(ribcage () () ())
                                           #(ribcage
                                             #(x y)
                                             #((top) (top))
                                             #("i10702" "i10703"))
                                           #(ribcage
                                             (emit quasivector
                                                   quasilist*
                                                   quasiappend
                                                   quasicons
                                                   vquasi
                                                   quasi)
                                             ((top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top))
                                             ("i10610"
                                              "i10608"
                                              "i10606"
                                              "i10604"
                                              "i10602"
                                              "i10600"
                                              "i10598")))
                                          (hygiene guile))
                                       (append
                                         #{p 10727}#
                                         (list #{y 10728}#))))
                               #{tmp 10724}#)
                             (syntax-violation
                               #f
                               "source expression failed to match any pattern"
                               #{tmp 10723}#))))))))))))
       (#{quasilist* 10607}#
         (lambda (#{x 10730}# #{y 10731}#)
           (letrec*
             ((#{f 10736}#
                (lambda (#{x 10737}#)
                  (if (null? #{x 10737}#)
                    #{y 10731}#
                    (#{quasicons 10603}#
                      (car #{x 10737}#)
                      (#{f 10736}# (cdr #{x 10737}#)))))))
             (begin (#{f 10736}# #{x 10730}#)))))
       (#{quasivector 10609}#
         (lambda (#{x 10738}#)
           (begin
             (let ((#{tmp 10741}#
                     ($sc-dispatch
                       #{x 10738}#
                       '(#(atom "quote") each-any))))
               (if #{tmp 10741}#
                 (@apply
                   (lambda (#{x 10743}#)
                     (list '#(syntax-object
                              "quote"
                              ((top)
                               #(ribcage #(x) #((top)) #("i10742"))
                               #(ribcage () () ())
                               #(ribcage #(x) #((top)) #("i10739"))
                               #(ribcage
                                 (emit quasivector
                                       quasilist*
                                       quasiappend
                                       quasicons
                                       vquasi
                                       quasi)
                                 ((top) (top) (top) (top) (top) (top) (top))
                                 ("i10610"
                                  "i10608"
                                  "i10606"
                                  "i10604"
                                  "i10602"
                                  "i10600"
                                  "i10598")))
                              (hygiene guile))
                           (list->vector #{x 10743}#)))
                   #{tmp 10741}#)
                 (letrec*
                   ((#{f 10750}#
                      (lambda (#{y 10751}# #{k 10752}#)
                        (begin
                          (let ((#{tmp 10764}#
                                  ($sc-dispatch
                                    #{y 10751}#
                                    '(#(atom "quote") each-any))))
                            (if #{tmp 10764}#
                              (@apply
                                (lambda (#{y 10766}#)
                                  (#{k 10752}#
                                    (map (lambda (#{tmp 10767}#)
                                           (list '#(syntax-object
                                                    "quote"
                                                    ((top)
                                                     #(ribcage
                                                       #(y)
                                                       #((top))
                                                       #("i10765"))
                                                     #(ribcage () () ())
                                                     #(ribcage
                                                       #(f y k)
                                                       #((top) (top) (top))
                                                       #("i10747"
                                                         "i10748"
                                                         "i10749"))
                                                     #(ribcage
                                                       #(_)
                                                       #((top))
                                                       #("i10745"))
                                                     #(ribcage () () ())
                                                     #(ribcage
                                                       #(x)
                                                       #((top))
                                                       #("i10739"))
                                                     #(ribcage
                                                       (emit quasivector
                                                             quasilist*
                                                             quasiappend
                                                             quasicons
                                                             vquasi
                                                             quasi)
                                                       ((top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top))
                                                       ("i10610"
                                                        "i10608"
                                                        "i10606"
                                                        "i10604"
                                                        "i10602"
                                                        "i10600"
                                                        "i10598")))
                                                    (hygiene guile))
                                                 #{tmp 10767}#))
                                         #{y 10766}#)))
                                #{tmp 10764}#)
                              (begin
                                (let ((#{tmp 10768}#
                                        ($sc-dispatch
                                          #{y 10751}#
                                          '(#(atom "list") . each-any))))
                                  (if #{tmp 10768}#
                                    (@apply
                                      (lambda (#{y 10770}#)
                                        (#{k 10752}# #{y 10770}#))
                                      #{tmp 10768}#)
                                    (begin
                                      (let ((#{tmp 10772}#
                                              ($sc-dispatch
                                                #{y 10751}#
                                                '(#(atom "list*")
                                                  .
                                                  #(each+ any (any) ())))))
                                        (if #{tmp 10772}#
                                          (@apply
                                            (lambda (#{y 10775}# #{z 10776}#)
                                              (#{f 10750}#
                                                #{z 10776}#
                                                (lambda (#{ls 10777}#)
                                                  (#{k 10752}#
                                                    (append
                                                      #{y 10775}#
                                                      #{ls 10777}#)))))
                                            #{tmp 10772}#)
                                          (list '#(syntax-object
                                                   "list->vector"
                                                   ((top)
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(#{ g10782}#)
                                                      #((m10783 top))
                                                      #("i10786"))
                                                    #(ribcage
                                                      #(else)
                                                      #((top))
                                                      #("i10780"))
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(f y k)
                                                      #((top) (top) (top))
                                                      #("i10747"
                                                        "i10748"
                                                        "i10749"))
                                                    #(ribcage
                                                      #(_)
                                                      #((top))
                                                      #("i10745"))
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(x)
                                                      #((top))
                                                      #("i10739"))
                                                    #(ribcage
                                                      (emit quasivector
                                                            quasilist*
                                                            quasiappend
                                                            quasicons
                                                            vquasi
                                                            quasi)
                                                      ((top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top))
                                                      ("i10610"
                                                       "i10608"
                                                       "i10606"
                                                       "i10604"
                                                       "i10602"
                                                       "i10600"
                                                       "i10598")))
                                                   (hygiene guile))
                                                #{x 10738}#)))))))))))))
                   (begin
                     (#{f 10750}#
                       #{x 10738}#
                       (lambda (#{ls 10753}#)
                         (begin
                           (let ((#{tmp 10759}#
                                   ($sc-dispatch #{ls 10753}# 'each-any)))
                             (if #{tmp 10759}#
                               (@apply
                                 (lambda (#{ g10755 10761}#)
                                   (cons '#(syntax-object
                                            "vector"
                                            ((top)
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(#{ g10755}#)
                                               #((m10756 top))
                                               #("i10760"))
                                             #(ribcage () () ())
                                             #(ribcage () () ())
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(ls)
                                               #((top))
                                               #("i10754"))
                                             #(ribcage
                                               #(_)
                                               #((top))
                                               #("i10745"))
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(x)
                                               #((top))
                                               #("i10739"))
                                             #(ribcage
                                               (emit quasivector
                                                     quasilist*
                                                     quasiappend
                                                     quasicons
                                                     vquasi
                                                     quasi)
                                               ((top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top))
                                               ("i10610"
                                                "i10608"
                                                "i10606"
                                                "i10604"
                                                "i10602"
                                                "i10600"
                                                "i10598")))
                                            (hygiene guile))
                                         #{ g10755 10761}#))
                                 #{tmp 10759}#)
                               (syntax-violation
                                 #f
                                 "source expression failed to match any pattern"
                                 #{ls 10753}#)))))))))))))
       (#{emit 10611}#
         (lambda (#{x 10788}#)
           (begin
             (let ((#{tmp 10791}#
                     ($sc-dispatch #{x 10788}# '(#(atom "quote") any))))
               (if #{tmp 10791}#
                 (@apply
                   (lambda (#{x 10793}#)
                     (list '#(syntax-object
                              quote
                              ((top)
                               #(ribcage #(x) #((top)) #("i10792"))
                               #(ribcage () () ())
                               #(ribcage #(x) #((top)) #("i10789"))
                               #(ribcage
                                 (emit quasivector
                                       quasilist*
                                       quasiappend
                                       quasicons
                                       vquasi
                                       quasi)
                                 ((top) (top) (top) (top) (top) (top) (top))
                                 ("i10610"
                                  "i10608"
                                  "i10606"
                                  "i10604"
                                  "i10602"
                                  "i10600"
                                  "i10598")))
                              (hygiene guile))
                           #{x 10793}#))
                   #{tmp 10791}#)
                 (begin
                   (let ((#{tmp 10794}#
                           ($sc-dispatch
                             #{x 10788}#
                             '(#(atom "list") . each-any))))
                     (if #{tmp 10794}#
                       (@apply
                         (lambda (#{x 10796}#)
                           (begin
                             (let ((#{tmp 10800}#
                                     (map #{emit 10611}# #{x 10796}#)))
                               (begin
                                 (let ((#{tmp 10801}#
                                         ($sc-dispatch
                                           #{tmp 10800}#
                                           'each-any)))
                                   (if #{tmp 10801}#
                                     (@apply
                                       (lambda (#{ g10797 10803}#)
                                         (cons '#(syntax-object
                                                  list
                                                  ((top)
                                                   #(ribcage () () ())
                                                   #(ribcage
                                                     #(#{ g10797}#)
                                                     #((m10798 top))
                                                     #("i10802"))
                                                   #(ribcage
                                                     #(x)
                                                     #((top))
                                                     #("i10795"))
                                                   #(ribcage () () ())
                                                   #(ribcage
                                                     #(x)
                                                     #((top))
                                                     #("i10789"))
                                                   #(ribcage
                                                     (emit quasivector
                                                           quasilist*
                                                           quasiappend
                                                           quasicons
                                                           vquasi
                                                           quasi)
                                                     ((top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top))
                                                     ("i10610"
                                                      "i10608"
                                                      "i10606"
                                                      "i10604"
                                                      "i10602"
                                                      "i10600"
                                                      "i10598")))
                                                  (hygiene guile))
                                               #{ g10797 10803}#))
                                       #{tmp 10801}#)
                                     (syntax-violation
                                       #f
                                       "source expression failed to match any pattern"
                                       #{tmp 10800}#)))))))
                         #{tmp 10794}#)
                       (begin
                         (let ((#{tmp 10806}#
                                 ($sc-dispatch
                                   #{x 10788}#
                                   '(#(atom "list*")
                                     .
                                     #(each+ any (any) ())))))
                           (if #{tmp 10806}#
                             (@apply
                               (lambda (#{x 10809}# #{y 10810}#)
                                 (letrec*
                                   ((#{f 10813}#
                                      (lambda (#{x* 10814}#)
                                        (if (null? #{x* 10814}#)
                                          (#{emit 10611}# #{y 10810}#)
                                          (begin
                                            (let ((#{tmp 10820}#
                                                    (list (#{emit 10611}#
                                                            (car #{x* 10814}#))
                                                          (#{f 10813}#
                                                            (cdr #{x* 10814}#)))))
                                              (begin
                                                (let ((#{tmp 10821}#
                                                        ($sc-dispatch
                                                          #{tmp 10820}#
                                                          '(any any))))
                                                  (if #{tmp 10821}#
                                                    (@apply
                                                      (lambda (#{ g10817 10824}#
                                                               #{ g10816 10825}#)
                                                        (list '#(syntax-object
                                                                 cons
                                                                 ((top)
                                                                  #(ribcage
                                                                    ()
                                                                    ()
                                                                    ())
                                                                  #(ribcage
                                                                    #(#{ g10817}#
                                                                      #{ g10816}#)
                                                                    #((m10818
                                                                        top)
                                                                      (m10818
                                                                        top))
                                                                    #("i10822"
                                                                      "i10823"))
                                                                  #(ribcage
                                                                    ()
                                                                    ()
                                                                    ())
                                                                  #(ribcage
                                                                    #(f x*)
                                                                    #((top)
                                                                      (top))
                                                                    #("i10811"
                                                                      "i10812"))
                                                                  #(ribcage
                                                                    #(x y)
                                                                    #((top)
                                                                      (top))
                                                                    #("i10807"
                                                                      "i10808"))
                                                                  #(ribcage
                                                                    ()
                                                                    ()
                                                                    ())
                                                                  #(ribcage
                                                                    #(x)
                                                                    #((top))
                                                                    #("i10789"))
                                                                  #(ribcage
                                                                    (emit quasivector
                                                                          quasilist*
                                                                          quasiappend
                                                                          quasicons
                                                                          vquasi
                                                                          quasi)
                                                                    ((top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top))
                                                                    ("i10610"
                                                                     "i10608"
                                                                     "i10606"
                                                                     "i10604"
                                                                     "i10602"
                                                                     "i10600"
                                                                     "i10598")))
                                                                 (hygiene
                                                                   guile))
                                                              #{ g10817 10824}#
                                                              #{ g10816 10825}#))
                                                      #{tmp 10821}#)
                                                    (syntax-violation
                                                      #f
                                                      "source expression failed to match any pattern"
                                                      #{tmp 10820}#))))))))))
                                   (begin (#{f 10813}# #{x 10809}#))))
                               #{tmp 10806}#)
                             (begin
                               (let ((#{tmp 10826}#
                                       ($sc-dispatch
                                         #{x 10788}#
                                         '(#(atom "append") . each-any))))
                                 (if #{tmp 10826}#
                                   (@apply
                                     (lambda (#{x 10828}#)
                                       (begin
                                         (let ((#{tmp 10832}#
                                                 (map #{emit 10611}#
                                                      #{x 10828}#)))
                                           (begin
                                             (let ((#{tmp 10833}#
                                                     ($sc-dispatch
                                                       #{tmp 10832}#
                                                       'each-any)))
                                               (if #{tmp 10833}#
                                                 (@apply
                                                   (lambda (#{ g10829 10835}#)
                                                     (cons '#(syntax-object
                                                              append
                                                              ((top)
                                                               #(ribcage
                                                                 ()
                                                                 ()
                                                                 ())
                                                               #(ribcage
                                                                 #(#{ g10829}#)
                                                                 #((m10830
                                                                     top))
                                                                 #("i10834"))
                                                               #(ribcage
                                                                 #(x)
                                                                 #((top))
                                                                 #("i10827"))
                                                               #(ribcage
                                                                 ()
                                                                 ()
                                                                 ())
                                                               #(ribcage
                                                                 #(x)
                                                                 #((top))
                                                                 #("i10789"))
                                                               #(ribcage
                                                                 (emit quasivector
                                                                       quasilist*
                                                                       quasiappend
                                                                       quasicons
                                                                       vquasi
                                                                       quasi)
                                                                 ((top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top))
                                                                 ("i10610"
                                                                  "i10608"
                                                                  "i10606"
                                                                  "i10604"
                                                                  "i10602"
                                                                  "i10600"
                                                                  "i10598")))
                                                              (hygiene guile))
                                                           #{ g10829 10835}#))
                                                   #{tmp 10833}#)
                                                 (syntax-violation
                                                   #f
                                                   "source expression failed to match any pattern"
                                                   #{tmp 10832}#)))))))
                                     #{tmp 10826}#)
                                   (begin
                                     (let ((#{tmp 10838}#
                                             ($sc-dispatch
                                               #{x 10788}#
                                               '(#(atom "vector")
                                                 .
                                                 each-any))))
                                       (if #{tmp 10838}#
                                         (@apply
                                           (lambda (#{x 10840}#)
                                             (begin
                                               (let ((#{tmp 10844}#
                                                       (map #{emit 10611}#
                                                            #{x 10840}#)))
                                                 (begin
                                                   (let ((#{tmp 10845}#
                                                           ($sc-dispatch
                                                             #{tmp 10844}#
                                                             'each-any)))
                                                     (if #{tmp 10845}#
                                                       (@apply
                                                         (lambda (#{ g10841 10847}#)
                                                           (cons '#(syntax-object
                                                                    vector
                                                                    ((top)
                                                                     #(ribcage
                                                                       ()
                                                                       ()
                                                                       ())
                                                                     #(ribcage
                                                                       #(#{ g10841}#)
                                                                       #((m10842
                                                                           top))
                                                                       #("i10846"))
                                                                     #(ribcage
                                                                       #(x)
                                                                       #((top))
                                                                       #("i10839"))
                                                                     #(ribcage
                                                                       ()
                                                                       ()
                                                                       ())
                                                                     #(ribcage
                                                                       #(x)
                                                                       #((top))
                                                                       #("i10789"))
                                                                     #(ribcage
                                                                       (emit quasivector
                                                                             quasilist*
                                                                             quasiappend
                                                                             quasicons
                                                                             vquasi
                                                                             quasi)
                                                                       ((top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top))
                                                                       ("i10610"
                                                                        "i10608"
                                                                        "i10606"
                                                                        "i10604"
                                                                        "i10602"
                                                                        "i10600"
                                                                        "i10598")))
                                                                    (hygiene
                                                                      guile))
                                                                 #{ g10841 10847}#))
                                                         #{tmp 10845}#)
                                                       (syntax-violation
                                                         #f
                                                         "source expression failed to match any pattern"
                                                         #{tmp 10844}#)))))))
                                           #{tmp 10838}#)
                                         (begin
                                           (let ((#{tmp 10850}#
                                                   ($sc-dispatch
                                                     #{x 10788}#
                                                     '(#(atom "list->vector")
                                                       any))))
                                             (if #{tmp 10850}#
                                               (@apply
                                                 (lambda (#{x 10852}#)
                                                   (begin
                                                     (let ((#{tmp 10856}#
                                                             (#{emit 10611}#
                                                               #{x 10852}#)))
                                                       (list '#(syntax-object
                                                                list->vector
                                                                ((top)
                                                                 #(ribcage
                                                                   ()
                                                                   ()
                                                                   ())
                                                                 #(ribcage
                                                                   #(#{ g10853}#)
                                                                   #((m10854
                                                                       top))
                                                                   #("i10857"))
                                                                 #(ribcage
                                                                   #(x)
                                                                   #((top))
                                                                   #("i10851"))
                                                                 #(ribcage
                                                                   ()
                                                                   ()
                                                                   ())
                                                                 #(ribcage
                                                                   #(x)
                                                                   #((top))
                                                                   #("i10789"))
                                                                 #(ribcage
                                                                   (emit quasivector
                                                                         quasilist*
                                                                         quasiappend
                                                                         quasicons
                                                                         vquasi
                                                                         quasi)
                                                                   ((top)
                                                                    (top)
                                                                    (top)
                                                                    (top)
                                                                    (top)
                                                                    (top)
                                                                    (top))
                                                                   ("i10610"
                                                                    "i10608"
                                                                    "i10606"
                                                                    "i10604"
                                                                    "i10602"
                                                                    "i10600"
                                                                    "i10598")))
                                                                (hygiene
                                                                  guile))
                                                             #{tmp 10856}#))))
                                                 #{tmp 10850}#)
                                               (begin
                                                 (let ((#{tmp 10859}#
                                                         ($sc-dispatch
                                                           #{x 10788}#
                                                           '(#(atom "value")
                                                             any))))
                                                   (if #{tmp 10859}#
                                                     (@apply
                                                       (lambda (#{x 10861}#)
                                                         #{x 10861}#)
                                                       #{tmp 10859}#)
                                                     (syntax-violation
                                                       #f
                                                       "source expression failed to match any pattern"
                                                       #{x 10788}#)))))))))))))))))))))))))
      (begin
        (lambda (#{x 10862}#)
          (begin
            (let ((#{tmp 10865}#
                    ($sc-dispatch #{x 10862}# '(_ any))))
              (if #{tmp 10865}#
                (@apply
                  (lambda (#{e 10867}#)
                    (#{emit 10611}# (#{quasi 10599}# #{e 10867}# 0)))
                  #{tmp 10865}#)
                (syntax-violation
                  #f
                  "source expression failed to match any pattern"
                  #{x 10862}#)))))))))

(define include
  (make-syntax-transformer
    'include
    'macro
    (lambda (#{x 10938}#)
      (begin
        (let ((#{tmp 10955}#
                ($sc-dispatch #{x 10938}# '(any any))))
          (if #{tmp 10955}#
            (@apply
              (lambda (#{k 10958}# #{filename 10959}#)
                (begin
                  (let ((#{fn 10961}# (syntax->datum #{filename 10959}#)))
                    (begin
                      (let ((#{tmp 10963}#
                              (let ((#{fn 10942}# #{fn 10961}#)
                                    (#{k 10943}# #{filename 10959}#))
                                (begin
                                  (let ((#{p 10947}#
                                          (open-input-file #{fn 10942}#)))
                                    (letrec*
                                      ((#{f 10951}#
                                         (lambda (#{x 10952}# #{result 10953}#)
                                           (if (eof-object? #{x 10952}#)
                                             (begin
                                               (close-input-port #{p 10947}#)
                                               (reverse #{result 10953}#))
                                             (#{f 10951}#
                                               (read #{p 10947}#)
                                               (cons (datum->syntax
                                                       #{k 10943}#
                                                       #{x 10952}#)
                                                     #{result 10953}#))))))
                                      (begin
                                        (#{f 10951}#
                                          (read #{p 10947}#)
                                          '()))))))))
                        (begin
                          (let ((#{tmp 10964}#
                                  ($sc-dispatch #{tmp 10963}# 'each-any)))
                            (if #{tmp 10964}#
                              (@apply
                                (lambda (#{exp 10966}#)
                                  (cons '#(syntax-object
                                           begin
                                           ((top)
                                            #(ribcage () () ())
                                            #(ribcage
                                              #(exp)
                                              #((top))
                                              #("i10965"))
                                            #(ribcage () () ())
                                            #(ribcage () () ())
                                            #(ribcage
                                              #(fn)
                                              #((top))
                                              #("i10960"))
                                            #(ribcage
                                              #(k filename)
                                              #((top) (top))
                                              #("i10956" "i10957"))
                                            #(ribcage
                                              (read-file)
                                              ((top))
                                              ("i10940"))
                                            #(ribcage
                                              #(x)
                                              #((top))
                                              #("i10939")))
                                           (hygiene guile))
                                        #{exp 10966}#))
                                #{tmp 10964}#)
                              (syntax-violation
                                #f
                                "source expression failed to match any pattern"
                                #{tmp 10963}#)))))))))
              #{tmp 10955}#)
            (syntax-violation
              #f
              "source expression failed to match any pattern"
              #{x 10938}#)))))))

(define include-from-path
  (make-syntax-transformer
    'include-from-path
    'macro
    (lambda (#{x 11063}#)
      (begin
        (let ((#{tmp 11066}#
                ($sc-dispatch #{x 11063}# '(any any))))
          (if #{tmp 11066}#
            (@apply
              (lambda (#{k 11069}# #{filename 11070}#)
                (begin
                  (let ((#{fn 11072}# (syntax->datum #{filename 11070}#)))
                    (begin
                      (let ((#{tmp 11074}#
                              (datum->syntax
                                #{filename 11070}#
                                (begin
                                  (let ((#{t 11079}#
                                          (%search-load-path #{fn 11072}#)))
                                    (if #{t 11079}#
                                      #{t 11079}#
                                      (syntax-violation
                                        'include-from-path
                                        "file not found in path"
                                        #{x 11063}#
                                        #{filename 11070}#)))))))
                        (list '#(syntax-object
                                 include
                                 ((top)
                                  #(ribcage () () ())
                                  #(ribcage #(fn) #((top)) #("i11075"))
                                  #(ribcage () () ())
                                  #(ribcage () () ())
                                  #(ribcage #(fn) #((top)) #("i11071"))
                                  #(ribcage
                                    #(k filename)
                                    #((top) (top))
                                    #("i11067" "i11068"))
                                  #(ribcage () () ())
                                  #(ribcage #(x) #((top)) #("i11064")))
                                 (hygiene guile))
                              #{tmp 11074}#))))))
              #{tmp 11066}#)
            (syntax-violation
              #f
              "source expression failed to match any pattern"
              #{x 11063}#)))))))

(define unquote
  (make-syntax-transformer
    'unquote
    'macro
    (lambda (#{x 11081}#)
      (syntax-violation
        'unquote
        "expression not valid outside of quasiquote"
        #{x 11081}#))))

(define unquote-splicing
  (make-syntax-transformer
    'unquote-splicing
    'macro
    (lambda (#{x 11083}#)
      (syntax-violation
        'unquote-splicing
        "expression not valid outside of quasiquote"
        #{x 11083}#))))

(define case
  (make-syntax-transformer
    'case
    'macro
    (lambda (#{x 11085}#)
      (begin
        (let ((#{tmp 11088}#
                ($sc-dispatch
                  #{x 11085}#
                  '(_ any any . each-any))))
          (if #{tmp 11088}#
            (@apply
              (lambda (#{e 11092}# #{m1 11093}# #{m2 11094}#)
                (begin
                  (let ((#{tmp 11096}#
                          (letrec*
                            ((#{f 11102}#
                               (lambda (#{clause 11103}# #{clauses 11104}#)
                                 (if (null? #{clauses 11104}#)
                                   (begin
                                     (let ((#{tmp 11107}#
                                             ($sc-dispatch
                                               #{clause 11103}#
                                               '(#(free-id
                                                   #(syntax-object
                                                     else
                                                     ((top)
                                                      #(ribcage () () ())
                                                      #(ribcage
                                                        #(f clause clauses)
                                                        #((top) (top) (top))
                                                        #("i11099"
                                                          "i11100"
                                                          "i11101"))
                                                      #(ribcage
                                                        #(e m1 m2)
                                                        #((top) (top) (top))
                                                        #("i11089"
                                                          "i11090"
                                                          "i11091"))
                                                      #(ribcage () () ())
                                                      #(ribcage
                                                        #(x)
                                                        #((top))
                                                        #("i11086")))
                                                     (hygiene guile)))
                                                 any
                                                 .
                                                 each-any))))
                                       (if #{tmp 11107}#
                                         (@apply
                                           (lambda (#{e1 11110}# #{e2 11111}#)
                                             (cons '#(syntax-object
                                                      begin
                                                      ((top)
                                                       #(ribcage
                                                         #(e1 e2)
                                                         #((top) (top))
                                                         #("i11108" "i11109"))
                                                       #(ribcage () () ())
                                                       #(ribcage
                                                         #(f clause clauses)
                                                         #((top) (top) (top))
                                                         #("i11099"
                                                           "i11100"
                                                           "i11101"))
                                                       #(ribcage
                                                         #(e m1 m2)
                                                         #((top) (top) (top))
                                                         #("i11089"
                                                           "i11090"
                                                           "i11091"))
                                                       #(ribcage () () ())
                                                       #(ribcage
                                                         #(x)
                                                         #((top))
                                                         #("i11086")))
                                                      (hygiene guile))
                                                   (cons #{e1 11110}#
                                                         #{e2 11111}#)))
                                           #{tmp 11107}#)
                                         (begin
                                           (let ((#{tmp 11113}#
                                                   ($sc-dispatch
                                                     #{clause 11103}#
                                                     '(each-any
                                                        any
                                                        .
                                                        each-any))))
                                             (if #{tmp 11113}#
                                               (@apply
                                                 (lambda (#{k 11117}#
                                                          #{e1 11118}#
                                                          #{e2 11119}#)
                                                   (list '#(syntax-object
                                                            if
                                                            ((top)
                                                             #(ribcage
                                                               #(k e1 e2)
                                                               #((top)
                                                                 (top)
                                                                 (top))
                                                               #("i11114"
                                                                 "i11115"
                                                                 "i11116"))
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               #(f
                                                                 clause
                                                                 clauses)
                                                               #((top)
                                                                 (top)
                                                                 (top))
                                                               #("i11099"
                                                                 "i11100"
                                                                 "i11101"))
                                                             #(ribcage
                                                               #(e m1 m2)
                                                               #((top)
                                                                 (top)
                                                                 (top))
                                                               #("i11089"
                                                                 "i11090"
                                                                 "i11091"))
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               #(x)
                                                               #((top))
                                                               #("i11086")))
                                                            (hygiene guile))
                                                         (list '#(syntax-object
                                                                  memv
                                                                  ((top)
                                                                   #(ribcage
                                                                     #(k e1 e2)
                                                                     #((top)
                                                                       (top)
                                                                       (top))
                                                                     #("i11114"
                                                                       "i11115"
                                                                       "i11116"))
                                                                   #(ribcage
                                                                     ()
                                                                     ()
                                                                     ())
                                                                   #(ribcage
                                                                     #(f
                                                                       clause
                                                                       clauses)
                                                                     #((top)
                                                                       (top)
                                                                       (top))
                                                                     #("i11099"
                                                                       "i11100"
                                                                       "i11101"))
                                                                   #(ribcage
                                                                     #(e m1 m2)
                                                                     #((top)
                                                                       (top)
                                                                       (top))
                                                                     #("i11089"
                                                                       "i11090"
                                                                       "i11091"))
                                                                   #(ribcage
                                                                     ()
                                                                     ()
                                                                     ())
                                                                   #(ribcage
                                                                     #(x)
                                                                     #((top))
                                                                     #("i11086")))
                                                                  (hygiene
                                                                    guile))
                                                               '#(syntax-object
                                                                  t
                                                                  ((top)
                                                                   #(ribcage
                                                                     #(k e1 e2)
                                                                     #((top)
                                                                       (top)
                                                                       (top))
                                                                     #("i11114"
                                                                       "i11115"
                                                                       "i11116"))
                                                                   #(ribcage
                                                                     ()
                                                                     ()
                                                                     ())
                                                                   #(ribcage
                                                                     #(f
                                                                       clause
                                                                       clauses)
                                                                     #((top)
                                                                       (top)
                                                                       (top))
                                                                     #("i11099"
                                                                       "i11100"
                                                                       "i11101"))
                                                                   #(ribcage
                                                                     #(e m1 m2)
                                                                     #((top)
                                                                       (top)
                                                                       (top))
                                                                     #("i11089"
                                                                       "i11090"
                                                                       "i11091"))
                                                                   #(ribcage
                                                                     ()
                                                                     ()
                                                                     ())
                                                                   #(ribcage
                                                                     #(x)
                                                                     #((top))
                                                                     #("i11086")))
                                                                  (hygiene
                                                                    guile))
                                                               (list '#(syntax-object
                                                                        quote
                                                                        ((top)
                                                                         #(ribcage
                                                                           #(k
                                                                             e1
                                                                             e2)
                                                                           #((top)
                                                                             (top)
                                                                             (top))
                                                                           #("i11114"
                                                                             "i11115"
                                                                             "i11116"))
                                                                         #(ribcage
                                                                           ()
                                                                           ()
                                                                           ())
                                                                         #(ribcage
                                                                           #(f
                                                                             clause
                                                                             clauses)
                                                                           #((top)
                                                                             (top)
                                                                             (top))
                                                                           #("i11099"
                                                                             "i11100"
                                                                             "i11101"))
                                                                         #(ribcage
                                                                           #(e
                                                                             m1
                                                                             m2)
                                                                           #((top)
                                                                             (top)
                                                                             (top))
                                                                           #("i11089"
                                                                             "i11090"
                                                                             "i11091"))
                                                                         #(ribcage
                                                                           ()
                                                                           ()
                                                                           ())
                                                                         #(ribcage
                                                                           #(x)
                                                                           #((top))
                                                                           #("i11086")))
                                                                        (hygiene
                                                                          guile))
                                                                     #{k 11117}#))
                                                         (cons '#(syntax-object
                                                                  begin
                                                                  ((top)
                                                                   #(ribcage
                                                                     #(k e1 e2)
                                                                     #((top)
                                                                       (top)
                                                                       (top))
                                                                     #("i11114"
                                                                       "i11115"
                                                                       "i11116"))
                                                                   #(ribcage
                                                                     ()
                                                                     ()
                                                                     ())
                                                                   #(ribcage
                                                                     #(f
                                                                       clause
                                                                       clauses)
                                                                     #((top)
                                                                       (top)
                                                                       (top))
                                                                     #("i11099"
                                                                       "i11100"
                                                                       "i11101"))
                                                                   #(ribcage
                                                                     #(e m1 m2)
                                                                     #((top)
                                                                       (top)
                                                                       (top))
                                                                     #("i11089"
                                                                       "i11090"
                                                                       "i11091"))
                                                                   #(ribcage
                                                                     ()
                                                                     ()
                                                                     ())
                                                                   #(ribcage
                                                                     #(x)
                                                                     #((top))
                                                                     #("i11086")))
                                                                  (hygiene
                                                                    guile))
                                                               (cons #{e1 11118}#
                                                                     #{e2 11119}#))))
                                                 #{tmp 11113}#)
                                               (syntax-violation
                                                 'case
                                                 "bad clause"
                                                 #{x 11085}#
                                                 #{clause 11103}#)))))))
                                   (begin
                                     (let ((#{tmp 11125}#
                                             (#{f 11102}#
                                               (car #{clauses 11104}#)
                                               (cdr #{clauses 11104}#))))
                                       (begin
                                         (let ((#{tmp 11129}#
                                                 ($sc-dispatch
                                                   #{clause 11103}#
                                                   '(each-any
                                                      any
                                                      .
                                                      each-any))))
                                           (if #{tmp 11129}#
                                             (@apply
                                               (lambda (#{k 11133}#
                                                        #{e1 11134}#
                                                        #{e2 11135}#)
                                                 (list '#(syntax-object
                                                          if
                                                          ((top)
                                                           #(ribcage
                                                             #(k e1 e2)
                                                             #((top)
                                                               (top)
                                                               (top))
                                                             #("i11130"
                                                               "i11131"
                                                               "i11132"))
                                                           #(ribcage () () ())
                                                           #(ribcage
                                                             #(rest)
                                                             #((top))
                                                             #("i11126"))
                                                           #(ribcage () () ())
                                                           #(ribcage
                                                             #(f
                                                               clause
                                                               clauses)
                                                             #((top)
                                                               (top)
                                                               (top))
                                                             #("i11099"
                                                               "i11100"
                                                               "i11101"))
                                                           #(ribcage
                                                             #(e m1 m2)
                                                             #((top)
                                                               (top)
                                                               (top))
                                                             #("i11089"
                                                               "i11090"
                                                               "i11091"))
                                                           #(ribcage () () ())
                                                           #(ribcage
                                                             #(x)
                                                             #((top))
                                                             #("i11086")))
                                                          (hygiene guile))
                                                       (list '#(syntax-object
                                                                memv
                                                                ((top)
                                                                 #(ribcage
                                                                   #(k e1 e2)
                                                                   #((top)
                                                                     (top)
                                                                     (top))
                                                                   #("i11130"
                                                                     "i11131"
                                                                     "i11132"))
                                                                 #(ribcage
                                                                   ()
                                                                   ()
                                                                   ())
                                                                 #(ribcage
                                                                   #(rest)
                                                                   #((top))
                                                                   #("i11126"))
                                                                 #(ribcage
                                                                   ()
                                                                   ()
                                                                   ())
                                                                 #(ribcage
                                                                   #(f
                                                                     clause
                                                                     clauses)
                                                                   #((top)
                                                                     (top)
                                                                     (top))
                                                                   #("i11099"
                                                                     "i11100"
                                                                     "i11101"))
                                                                 #(ribcage
                                                                   #(e m1 m2)
                                                                   #((top)
                                                                     (top)
                                                                     (top))
                                                                   #("i11089"
                                                                     "i11090"
                                                                     "i11091"))
                                                                 #(ribcage
                                                                   ()
                                                                   ()
                                                                   ())
                                                                 #(ribcage
                                                                   #(x)
                                                                   #((top))
                                                                   #("i11086")))
                                                                (hygiene
                                                                  guile))
                                                             '#(syntax-object
                                                                t
                                                                ((top)
                                                                 #(ribcage
                                                                   #(k e1 e2)
                                                                   #((top)
                                                                     (top)
                                                                     (top))
                                                                   #("i11130"
                                                                     "i11131"
                                                                     "i11132"))
                                                                 #(ribcage
                                                                   ()
                                                                   ()
                                                                   ())
                                                                 #(ribcage
                                                                   #(rest)
                                                                   #((top))
                                                                   #("i11126"))
                                                                 #(ribcage
                                                                   ()
                                                                   ()
                                                                   ())
                                                                 #(ribcage
                                                                   #(f
                                                                     clause
                                                                     clauses)
                                                                   #((top)
                                                                     (top)
                                                                     (top))
                                                                   #("i11099"
                                                                     "i11100"
                                                                     "i11101"))
                                                                 #(ribcage
                                                                   #(e m1 m2)
                                                                   #((top)
                                                                     (top)
                                                                     (top))
                                                                   #("i11089"
                                                                     "i11090"
                                                                     "i11091"))
                                                                 #(ribcage
                                                                   ()
                                                                   ()
                                                                   ())
                                                                 #(ribcage
                                                                   #(x)
                                                                   #((top))
                                                                   #("i11086")))
                                                                (hygiene
                                                                  guile))
                                                             (list '#(syntax-object
                                                                      quote
                                                                      ((top)
                                                                       #(ribcage
                                                                         #(k
                                                                           e1
                                                                           e2)
                                                                         #((top)
                                                                           (top)
                                                                           (top))
                                                                         #("i11130"
                                                                           "i11131"
                                                                           "i11132"))
                                                                       #(ribcage
                                                                         ()
                                                                         ()
                                                                         ())
                                                                       #(ribcage
                                                                         #(rest)
                                                                         #((top))
                                                                         #("i11126"))
                                                                       #(ribcage
                                                                         ()
                                                                         ()
                                                                         ())
                                                                       #(ribcage
                                                                         #(f
                                                                           clause
                                                                           clauses)
                                                                         #((top)
                                                                           (top)
                                                                           (top))
                                                                         #("i11099"
                                                                           "i11100"
                                                                           "i11101"))
                                                                       #(ribcage
                                                                         #(e
                                                                           m1
                                                                           m2)
                                                                         #((top)
                                                                           (top)
                                                                           (top))
                                                                         #("i11089"
                                                                           "i11090"
                                                                           "i11091"))
                                                                       #(ribcage
                                                                         ()
                                                                         ()
                                                                         ())
                                                                       #(ribcage
                                                                         #(x)
                                                                         #((top))
                                                                         #("i11086")))
                                                                      (hygiene
                                                                        guile))
                                                                   #{k 11133}#))
                                                       (cons '#(syntax-object
                                                                begin
                                                                ((top)
                                                                 #(ribcage
                                                                   #(k e1 e2)
                                                                   #((top)
                                                                     (top)
                                                                     (top))
                                                                   #("i11130"
                                                                     "i11131"
                                                                     "i11132"))
                                                                 #(ribcage
                                                                   ()
                                                                   ()
                                                                   ())
                                                                 #(ribcage
                                                                   #(rest)
                                                                   #((top))
                                                                   #("i11126"))
                                                                 #(ribcage
                                                                   ()
                                                                   ()
                                                                   ())
                                                                 #(ribcage
                                                                   #(f
                                                                     clause
                                                                     clauses)
                                                                   #((top)
                                                                     (top)
                                                                     (top))
                                                                   #("i11099"
                                                                     "i11100"
                                                                     "i11101"))
                                                                 #(ribcage
                                                                   #(e m1 m2)
                                                                   #((top)
                                                                     (top)
                                                                     (top))
                                                                   #("i11089"
                                                                     "i11090"
                                                                     "i11091"))
                                                                 #(ribcage
                                                                   ()
                                                                   ()
                                                                   ())
                                                                 #(ribcage
                                                                   #(x)
                                                                   #((top))
                                                                   #("i11086")))
                                                                (hygiene
                                                                  guile))
                                                             (cons #{e1 11134}#
                                                                   #{e2 11135}#))
                                                       #{tmp 11125}#))
                                               #{tmp 11129}#)
                                             (syntax-violation
                                               'case
                                               "bad clause"
                                               #{x 11085}#
                                               #{clause 11103}#))))))))))
                            (begin (#{f 11102}# #{m1 11093}# #{m2 11094}#)))))
                    (list '#(syntax-object
                             let
                             ((top)
                              #(ribcage () () ())
                              #(ribcage #(body) #((top)) #("i11097"))
                              #(ribcage
                                #(e m1 m2)
                                #((top) (top) (top))
                                #("i11089" "i11090" "i11091"))
                              #(ribcage () () ())
                              #(ribcage #(x) #((top)) #("i11086")))
                             (hygiene guile))
                          (list (list '#(syntax-object
                                         t
                                         ((top)
                                          #(ribcage () () ())
                                          #(ribcage
                                            #(body)
                                            #((top))
                                            #("i11097"))
                                          #(ribcage
                                            #(e m1 m2)
                                            #((top) (top) (top))
                                            #("i11089" "i11090" "i11091"))
                                          #(ribcage () () ())
                                          #(ribcage #(x) #((top)) #("i11086")))
                                         (hygiene guile))
                                      #{e 11092}#))
                          #{tmp 11096}#))))
              #{tmp 11088}#)
            (syntax-violation
              #f
              "source expression failed to match any pattern"
              #{x 11085}#)))))))

(define make-variable-transformer
  (lambda (#{proc 11141}#)
    (if (procedure? #{proc 11141}#)
      (begin
        (letrec*
          ((#{trans 11144}#
             (lambda (#{x 11145}#)
               (#{proc 11141}# #{x 11145}#))))
          (begin
            (set-procedure-property!
              #{trans 11144}#
              'variable-transformer
              #t)
            #{trans 11144}#)))
      (error "variable transformer not a procedure"
             #{proc 11141}#))))

(define identifier-syntax
  (make-syntax-transformer
    'identifier-syntax
    'macro
    (lambda (#{x 11151}#)
      (begin
        (let ((#{tmp 11154}#
                ($sc-dispatch #{x 11151}# '(_ any))))
          (if #{tmp 11154}#
            (@apply
              (lambda (#{e 11156}#)
                (list '#(syntax-object
                         lambda
                         ((top)
                          #(ribcage #(e) #((top)) #("i11155"))
                          #(ribcage () () ())
                          #(ribcage #(x) #((top)) #("i11152")))
                         (hygiene guile))
                      '(#(syntax-object
                          x
                          ((top)
                           #(ribcage #(e) #((top)) #("i11155"))
                           #(ribcage () () ())
                           #(ribcage #(x) #((top)) #("i11152")))
                          (hygiene guile)))
                      '#((#(syntax-object
                            macro-type
                            ((top)
                             #(ribcage #(e) #((top)) #("i11155"))
                             #(ribcage () () ())
                             #(ribcage #(x) #((top)) #("i11152")))
                            (hygiene guile))
                          .
                          #(syntax-object
                            identifier-syntax
                            ((top)
                             #(ribcage #(e) #((top)) #("i11155"))
                             #(ribcage () () ())
                             #(ribcage #(x) #((top)) #("i11152")))
                            (hygiene guile))))
                      (list '#(syntax-object
                               syntax-case
                               ((top)
                                #(ribcage #(e) #((top)) #("i11155"))
                                #(ribcage () () ())
                                #(ribcage #(x) #((top)) #("i11152")))
                               (hygiene guile))
                            '#(syntax-object
                               x
                               ((top)
                                #(ribcage #(e) #((top)) #("i11155"))
                                #(ribcage () () ())
                                #(ribcage #(x) #((top)) #("i11152")))
                               (hygiene guile))
                            '()
                            (list '#(syntax-object
                                     id
                                     ((top)
                                      #(ribcage #(e) #((top)) #("i11155"))
                                      #(ribcage () () ())
                                      #(ribcage #(x) #((top)) #("i11152")))
                                     (hygiene guile))
                                  '(#(syntax-object
                                      identifier?
                                      ((top)
                                       #(ribcage #(e) #((top)) #("i11155"))
                                       #(ribcage () () ())
                                       #(ribcage #(x) #((top)) #("i11152")))
                                      (hygiene guile))
                                    (#(syntax-object
                                       syntax
                                       ((top)
                                        #(ribcage #(e) #((top)) #("i11155"))
                                        #(ribcage () () ())
                                        #(ribcage #(x) #((top)) #("i11152")))
                                       (hygiene guile))
                                     #(syntax-object
                                       id
                                       ((top)
                                        #(ribcage #(e) #((top)) #("i11155"))
                                        #(ribcage () () ())
                                        #(ribcage #(x) #((top)) #("i11152")))
                                       (hygiene guile))))
                                  (list '#(syntax-object
                                           syntax
                                           ((top)
                                            #(ribcage
                                              #(e)
                                              #((top))
                                              #("i11155"))
                                            #(ribcage () () ())
                                            #(ribcage
                                              #(x)
                                              #((top))
                                              #("i11152")))
                                           (hygiene guile))
                                        #{e 11156}#))
                            (list '(#(syntax-object
                                      _
                                      ((top)
                                       #(ribcage #(e) #((top)) #("i11155"))
                                       #(ribcage () () ())
                                       #(ribcage #(x) #((top)) #("i11152")))
                                      (hygiene guile))
                                    #(syntax-object
                                      x
                                      ((top)
                                       #(ribcage #(e) #((top)) #("i11155"))
                                       #(ribcage () () ())
                                       #(ribcage #(x) #((top)) #("i11152")))
                                      (hygiene guile))
                                    #(syntax-object
                                      ...
                                      ((top)
                                       #(ribcage #(e) #((top)) #("i11155"))
                                       #(ribcage () () ())
                                       #(ribcage #(x) #((top)) #("i11152")))
                                      (hygiene guile)))
                                  (list '#(syntax-object
                                           syntax
                                           ((top)
                                            #(ribcage
                                              #(e)
                                              #((top))
                                              #("i11155"))
                                            #(ribcage () () ())
                                            #(ribcage
                                              #(x)
                                              #((top))
                                              #("i11152")))
                                           (hygiene guile))
                                        (cons #{e 11156}#
                                              '(#(syntax-object
                                                  x
                                                  ((top)
                                                   #(ribcage
                                                     #(e)
                                                     #((top))
                                                     #("i11155"))
                                                   #(ribcage () () ())
                                                   #(ribcage
                                                     #(x)
                                                     #((top))
                                                     #("i11152")))
                                                  (hygiene guile))
                                                #(syntax-object
                                                  ...
                                                  ((top)
                                                   #(ribcage
                                                     #(e)
                                                     #((top))
                                                     #("i11155"))
                                                   #(ribcage () () ())
                                                   #(ribcage
                                                     #(x)
                                                     #((top))
                                                     #("i11152")))
                                                  (hygiene guile)))))))))
              #{tmp 11154}#)
            (begin
              (let ((#{tmp 11157}#
                      ($sc-dispatch
                        #{x 11151}#
                        '(_ (any any)
                            ((#(free-id
                                #(syntax-object
                                  set!
                                  ((top)
                                   #(ribcage () () ())
                                   #(ribcage #(x) #((top)) #("i11152")))
                                  (hygiene guile)))
                              any
                              any)
                             any)))))
                (if (if #{tmp 11157}#
                      (@apply
                        (lambda (#{id 11163}#
                                 #{exp1 11164}#
                                 #{var 11165}#
                                 #{val 11166}#
                                 #{exp2 11167}#)
                          (if (identifier? #{id 11163}#)
                            (identifier? #{var 11165}#)
                            #f))
                        #{tmp 11157}#)
                      #f)
                  (@apply
                    (lambda (#{id 11175}#
                             #{exp1 11176}#
                             #{var 11177}#
                             #{val 11178}#
                             #{exp2 11179}#)
                      (list '#(syntax-object
                               make-variable-transformer
                               ((top)
                                #(ribcage
                                  #(id exp1 var val exp2)
                                  #((top) (top) (top) (top) (top))
                                  #("i11170"
                                    "i11171"
                                    "i11172"
                                    "i11173"
                                    "i11174"))
                                #(ribcage () () ())
                                #(ribcage #(x) #((top)) #("i11152")))
                               (hygiene guile))
                            (list '#(syntax-object
                                     lambda
                                     ((top)
                                      #(ribcage
                                        #(id exp1 var val exp2)
                                        #((top) (top) (top) (top) (top))
                                        #("i11170"
                                          "i11171"
                                          "i11172"
                                          "i11173"
                                          "i11174"))
                                      #(ribcage () () ())
                                      #(ribcage #(x) #((top)) #("i11152")))
                                     (hygiene guile))
                                  '(#(syntax-object
                                      x
                                      ((top)
                                       #(ribcage
                                         #(id exp1 var val exp2)
                                         #((top) (top) (top) (top) (top))
                                         #("i11170"
                                           "i11171"
                                           "i11172"
                                           "i11173"
                                           "i11174"))
                                       #(ribcage () () ())
                                       #(ribcage #(x) #((top)) #("i11152")))
                                      (hygiene guile)))
                                  '#((#(syntax-object
                                        macro-type
                                        ((top)
                                         #(ribcage
                                           #(id exp1 var val exp2)
                                           #((top) (top) (top) (top) (top))
                                           #("i11170"
                                             "i11171"
                                             "i11172"
                                             "i11173"
                                             "i11174"))
                                         #(ribcage () () ())
                                         #(ribcage #(x) #((top)) #("i11152")))
                                        (hygiene guile))
                                      .
                                      #(syntax-object
                                        variable-transformer
                                        ((top)
                                         #(ribcage
                                           #(id exp1 var val exp2)
                                           #((top) (top) (top) (top) (top))
                                           #("i11170"
                                             "i11171"
                                             "i11172"
                                             "i11173"
                                             "i11174"))
                                         #(ribcage () () ())
                                         #(ribcage #(x) #((top)) #("i11152")))
                                        (hygiene guile))))
                                  (list '#(syntax-object
                                           syntax-case
                                           ((top)
                                            #(ribcage
                                              #(id exp1 var val exp2)
                                              #((top) (top) (top) (top) (top))
                                              #("i11170"
                                                "i11171"
                                                "i11172"
                                                "i11173"
                                                "i11174"))
                                            #(ribcage () () ())
                                            #(ribcage
                                              #(x)
                                              #((top))
                                              #("i11152")))
                                           (hygiene guile))
                                        '#(syntax-object
                                           x
                                           ((top)
                                            #(ribcage
                                              #(id exp1 var val exp2)
                                              #((top) (top) (top) (top) (top))
                                              #("i11170"
                                                "i11171"
                                                "i11172"
                                                "i11173"
                                                "i11174"))
                                            #(ribcage () () ())
                                            #(ribcage
                                              #(x)
                                              #((top))
                                              #("i11152")))
                                           (hygiene guile))
                                        '(#(syntax-object
                                            set!
                                            ((top)
                                             #(ribcage
                                               #(id exp1 var val exp2)
                                               #((top) (top) (top) (top) (top))
                                               #("i11170"
                                                 "i11171"
                                                 "i11172"
                                                 "i11173"
                                                 "i11174"))
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(x)
                                               #((top))
                                               #("i11152")))
                                            (hygiene guile)))
                                        (list (list '#(syntax-object
                                                       set!
                                                       ((top)
                                                        #(ribcage
                                                          #(id
                                                            exp1
                                                            var
                                                            val
                                                            exp2)
                                                          #((top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top))
                                                          #("i11170"
                                                            "i11171"
                                                            "i11172"
                                                            "i11173"
                                                            "i11174"))
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(x)
                                                          #((top))
                                                          #("i11152")))
                                                       (hygiene guile))
                                                    #{var 11177}#
                                                    #{val 11178}#)
                                              (list '#(syntax-object
                                                       syntax
                                                       ((top)
                                                        #(ribcage
                                                          #(id
                                                            exp1
                                                            var
                                                            val
                                                            exp2)
                                                          #((top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top))
                                                          #("i11170"
                                                            "i11171"
                                                            "i11172"
                                                            "i11173"
                                                            "i11174"))
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(x)
                                                          #((top))
                                                          #("i11152")))
                                                       (hygiene guile))
                                                    #{exp2 11179}#))
                                        (list (cons #{id 11175}#
                                                    '(#(syntax-object
                                                        x
                                                        ((top)
                                                         #(ribcage
                                                           #(id
                                                             exp1
                                                             var
                                                             val
                                                             exp2)
                                                           #((top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top))
                                                           #("i11170"
                                                             "i11171"
                                                             "i11172"
                                                             "i11173"
                                                             "i11174"))
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(x)
                                                           #((top))
                                                           #("i11152")))
                                                        (hygiene guile))
                                                      #(syntax-object
                                                        ...
                                                        ((top)
                                                         #(ribcage
                                                           #(id
                                                             exp1
                                                             var
                                                             val
                                                             exp2)
                                                           #((top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top))
                                                           #("i11170"
                                                             "i11171"
                                                             "i11172"
                                                             "i11173"
                                                             "i11174"))
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(x)
                                                           #((top))
                                                           #("i11152")))
                                                        (hygiene guile))))
                                              (list '#(syntax-object
                                                       syntax
                                                       ((top)
                                                        #(ribcage
                                                          #(id
                                                            exp1
                                                            var
                                                            val
                                                            exp2)
                                                          #((top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top))
                                                          #("i11170"
                                                            "i11171"
                                                            "i11172"
                                                            "i11173"
                                                            "i11174"))
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(x)
                                                          #((top))
                                                          #("i11152")))
                                                       (hygiene guile))
                                                    (cons #{exp1 11176}#
                                                          '(#(syntax-object
                                                              x
                                                              ((top)
                                                               #(ribcage
                                                                 #(id
                                                                   exp1
                                                                   var
                                                                   val
                                                                   exp2)
                                                                 #((top)
                                                                   (top)
                                                                   (top)
                                                                   (top)
                                                                   (top))
                                                                 #("i11170"
                                                                   "i11171"
                                                                   "i11172"
                                                                   "i11173"
                                                                   "i11174"))
                                                               #(ribcage
                                                                 ()
                                                                 ()
                                                                 ())
                                                               #(ribcage
                                                                 #(x)
                                                                 #((top))
                                                                 #("i11152")))
                                                              (hygiene guile))
                                                            #(syntax-object
                                                              ...
                                                              ((top)
                                                               #(ribcage
                                                                 #(id
                                                                   exp1
                                                                   var
                                                                   val
                                                                   exp2)
                                                                 #((top)
                                                                   (top)
                                                                   (top)
                                                                   (top)
                                                                   (top))
                                                                 #("i11170"
                                                                   "i11171"
                                                                   "i11172"
                                                                   "i11173"
                                                                   "i11174"))
                                                               #(ribcage
                                                                 ()
                                                                 ()
                                                                 ())
                                                               #(ribcage
                                                                 #(x)
                                                                 #((top))
                                                                 #("i11152")))
                                                              (hygiene
                                                                guile))))))
                                        (list #{id 11175}#
                                              (list '#(syntax-object
                                                       identifier?
                                                       ((top)
                                                        #(ribcage
                                                          #(id
                                                            exp1
                                                            var
                                                            val
                                                            exp2)
                                                          #((top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top))
                                                          #("i11170"
                                                            "i11171"
                                                            "i11172"
                                                            "i11173"
                                                            "i11174"))
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(x)
                                                          #((top))
                                                          #("i11152")))
                                                       (hygiene guile))
                                                    (list '#(syntax-object
                                                             syntax
                                                             ((top)
                                                              #(ribcage
                                                                #(id
                                                                  exp1
                                                                  var
                                                                  val
                                                                  exp2)
                                                                #((top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top))
                                                                #("i11170"
                                                                  "i11171"
                                                                  "i11172"
                                                                  "i11173"
                                                                  "i11174"))
                                                              #(ribcage
                                                                ()
                                                                ()
                                                                ())
                                                              #(ribcage
                                                                #(x)
                                                                #((top))
                                                                #("i11152")))
                                                             (hygiene guile))
                                                          #{id 11175}#))
                                              (list '#(syntax-object
                                                       syntax
                                                       ((top)
                                                        #(ribcage
                                                          #(id
                                                            exp1
                                                            var
                                                            val
                                                            exp2)
                                                          #((top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top))
                                                          #("i11170"
                                                            "i11171"
                                                            "i11172"
                                                            "i11173"
                                                            "i11174"))
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(x)
                                                          #((top))
                                                          #("i11152")))
                                                       (hygiene guile))
                                                    #{exp1 11176}#))))))
                    #{tmp 11157}#)
                  (syntax-violation
                    #f
                    "source expression failed to match any pattern"
                    #{x 11151}#))))))))))

(define define*
  (make-syntax-transformer
    'define*
    'macro
    (lambda (#{x 11180}#)
      (begin
        (let ((#{tmp 11183}#
                ($sc-dispatch
                  #{x 11180}#
                  '(_ (any . any) any . each-any))))
          (if #{tmp 11183}#
            (@apply
              (lambda (#{id 11188}#
                       #{args 11189}#
                       #{b0 11190}#
                       #{b1 11191}#)
                (list '#(syntax-object
                         define
                         ((top)
                          #(ribcage
                            #(id args b0 b1)
                            #((top) (top) (top) (top))
                            #("i11184" "i11185" "i11186" "i11187"))
                          #(ribcage () () ())
                          #(ribcage #(x) #((top)) #("i11181")))
                         (hygiene guile))
                      #{id 11188}#
                      (cons '#(syntax-object
                               lambda*
                               ((top)
                                #(ribcage
                                  #(id args b0 b1)
                                  #((top) (top) (top) (top))
                                  #("i11184" "i11185" "i11186" "i11187"))
                                #(ribcage () () ())
                                #(ribcage #(x) #((top)) #("i11181")))
                               (hygiene guile))
                            (cons #{args 11189}#
                                  (cons #{b0 11190}# #{b1 11191}#)))))
              #{tmp 11183}#)
            (begin
              (let ((#{tmp 11193}#
                      ($sc-dispatch #{x 11180}# '(_ any any))))
                (if (if #{tmp 11193}#
                      (@apply
                        (lambda (#{id 11196}# #{val 11197}#)
                          (identifier?
                            '#(syntax-object
                               x
                               ((top)
                                #(ribcage
                                  #(id val)
                                  #((top) (top))
                                  #("i11194" "i11195"))
                                #(ribcage () () ())
                                #(ribcage #(x) #((top)) #("i11181")))
                               (hygiene guile))))
                        #{tmp 11193}#)
                      #f)
                  (@apply
                    (lambda (#{id 11200}# #{val 11201}#)
                      (list '#(syntax-object
                               define
                               ((top)
                                #(ribcage
                                  #(id val)
                                  #((top) (top))
                                  #("i11198" "i11199"))
                                #(ribcage () () ())
                                #(ribcage #(x) #((top)) #("i11181")))
                               (hygiene guile))
                            #{id 11200}#
                            #{val 11201}#))
                    #{tmp 11193}#)
                  (syntax-violation
                    #f
                    "source expression failed to match any pattern"
                    #{x 11180}#))))))))))

