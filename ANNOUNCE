We are pleased to announce the release of Guile 1.8.0.  It can be
found here:

    ftp://ftp.gnu.org/gnu/guile/guile-1.8.0.tar.gz

Its SHA1 checksum is

    22462680feeda1e5400195c01dee666162503d66  guile-1.8.0.tar.gz

We already know about some issues with 1.8.0, please check the mailing
lists:

    http://www.gnu.org/software/guile/mail/mail.html

The NEWS file is quite long.  Here are the most interesting entries:

  Changes since 1.6:

  * Guile is now licensed with the GNU Lesser General Public License.

  * The manual is now licensed with the GNU Free Documentation License.

  * We now use GNU MP for bignums.

  * We now have exact rationals, such as 1/3.

  * We now use native POSIX threads for real concurrent threads.

  * There is a new way to initalize Guile that allows one to use Guile
    from threads that have not been created by Guile.

  * Mutexes and condition variables are now always fair.  A recursive
    mutex must be requested explicitely.

  * The low-level thread API has been removed.

  * There is now support for copy-on-write substrings and
    mutation-sharing substrings.

  * A new family of functions for converting between C values and
    Scheme values has been added that is future-proof and thread-safe.

  * The INUM macros like SCM_MAKINUM have been deprecated.

  * The macros SCM_STRINGP, SCM_STRING_CHARS, SCM_STRING_LENGTH,
    SCM_SYMBOL_CHARS, and SCM_SYMBOL_LENGTH have been deprecated.

  * There is a new way to deal with non-local exits and re-entries in
    C code, which is nicer than scm_internal_dynamic_wind.

  * There are new malloc-like functions that work better than
    scm_must_malloc, etc.

  * There is a new way to access all kinds of vectors and arrays from
    C that is efficient and thread-safe.

  * The concept of dynamic roots has been factored into continuation
    barriers and dynamic states.

See NEWS and the manual for more details.
