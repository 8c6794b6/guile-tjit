This patch is being discussed
at <http://lists.gnu.org/archive/html/bug-gnulib/2012-07/msg00079.html>.
Remove when integrated in Gnulib.

--- a/build-aux/git-version-gen
+++ b/build-aux/git-version-gen
@@ -86,6 +86,7 @@ Print a version string.
 Options:
 
    --prefix           prefix of git tags (default 'v')
+   --match            pattern for git tags to match (default: '\$prefix*')
    --fallback         fallback version to use if \"git --version\" fails
 
    --help             display this help and exit
@@ -96,11 +97,15 @@ Running without arguments will suffice in most cases."
 prefix=v
 fallback=
 
+unset match
+unset tag_sed_script
+
 while test $# -gt 0; do
   case $1 in
     --help) echo "$usage"; exit 0;;
     --version) echo "$version"; exit 0;;
     --prefix) shift; prefix="$1";;
+    --match) shift; match="$1";;
     --fallback) shift; fallback="$1";;
     -*)
       echo "$0: Unknown option '$1'." >&2
@@ -124,6 +129,7 @@ if test "x$tarball_version_file" = x; then
     exit 1
 fi
 
+match="${match:-$prefix*}"
 tag_sed_script="${tag_sed_script:-s/x/x/}"
 
 nl='
@@ -154,7 +160,7 @@ then
 # directory, and "git describe" output looks sensible, use that to
 # derive a version string.
 elif test "`git log -1 --pretty=format:x . 2>&1`" = x \
-    && v=`git describe --abbrev=4 --match="$prefix*" HEAD 2>/dev/null \
+    && v=`git describe --abbrev=4 --match="$match" HEAD 2>/dev/null \
           || git describe --abbrev=4 HEAD 2>/dev/null` \
     && v=`printf '%s\n' "$v" | sed "$tag_sed_script"` \
     && case $v in
