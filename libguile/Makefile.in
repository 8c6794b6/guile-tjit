# Makefile.in generated automatically by automake 1.1l from Makefile.am

# Copyright (C) 1994, 1995, 1996 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy, distribute and modify it.


SHELL = /bin/sh

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = .

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
transform = @program_transform_name@
host_triplet = @host@
host_alias = @host_alias@
ERRNO_EXTRACT = @ERRNO_EXTRACT@
FD_SETTER = @FD_SETTER@
LIBLOBJS = @LIBLOBJS@
AWK = @AWK@
LIBTOOL = @LIBTOOL@
VERSION = @VERSION@
module = @module@
CC = @CC@
RANLIB = @RANLIB@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
xtra_PLUGIN_guile_libs = @xtra_PLUGIN_guile_libs@
PACKAGE = @PACKAGE@

AUTOMAKE_OPTIONS = foreign

INCLUDES = -I.. -I$(srcdir)/..

lib_PROGRAMS = libguile.la
libguile_la_SOURCES = alist.c append.c appinit.c arbiters.c async.c \
boolean.c chars.c continuations.c dynl.c dynwind.c eq.c \
error.c eval.c extchrs.c feature.c filesys.c fports.c gc.c \
gdbint.c genio.c gsubr.c hash.c hashtab.c init.c ioext.c \
kw.c list.c load.c mallocs.c markers.c mbstrings.c net_db.c \
numbers.c objprop.c \
options.c pairs.c ports.c posix.c print.c procprop.c procs.c ramap.c \
read.c root.c scmsigs.c sequences.c simpos.c smob.c socket.c \
stackchk.c stime.c strings.c strop.c strorder.c \
strports.c struct.c symbols.c tag.c throw.c unif.c variable.c \
vectors.c version.c vports.c weaks.c _scm.h
libguile_la_DEPENDENCIES = @LIBOBJS@
libguile_la_LDADD = @LIBLOBJS@
libguile_la_LDFLAGS = -version-info 0:0 -rpath $(libdir)

include_HEADERS = libguile.h

# These are headers visible as <libguile/mumble.h>.
modincludedir = $(includedir)/@module@
modinclude_HEADERS = __scm.h alist.h append.h arbiters.h async.h \
backtrace.h boolean.h chars.h continuations.h debug.h dynl.h dynwind.h eq.h \
error.h eval.h extchrs.h feature.h filesys.h fports.h gc.h \
gdb_interface.h gdbint.h genio.h gsubr.h hash.h hashtab.h init.h ioext.h \
kw.h list.h load.h mallocs.h markers.h mbstrings.h net_db.h \
numbers.h objprop.h \
options.h pairs.h ports.h posix.h print.h procprop.h procs.h ramap.h read.h \
root.h scmhob.h scmsigs.h sequences.h simpos.h smob.h socket.h srcprop.h \
stackchk.h stacks.h stime.h strings.h strop.h strorder.h strports.h struct.h \
symbols.h tag.h tags.h throw.h unif.h variable.h vectors.h version.h \
vports.h weaks.h snarf.h

modinclude_DATA = scmconfig.h

bin_SCRIPTS = guile-snarf

EXTRA_DIST = gscm.c gscm.h ChangeLog-scm dynl-dl.c dynl-dld.c dynl-shl.c \
dynl-vms.c DYNAMIC-LINKING PLUGIN/REQ PLUGIN/guile.config \
PLUGIN/guile.libs.in errnos_cnvt.awk errnos.default errnos_get.c

SUFFIXES = .x

MKDEP = gcc -M -MG $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS)

CLEANFILES=errnos.c errnos.list
ACLOCAL = $(top_srcdir)/aclocal.m4
CONFIG_HEADER_IN = scmconfig.h.in
mkinstalldirs = $(SHELL) $(top_srcdir)/../mkinstalldirs
CONFIG_HEADER = scmconfig.h
CONFIG_CLEAN_FILES =  fd.h guile-snarf
PROGRAMS =  $(lib_PROGRAMS)


DEFS = @DEFS@ -I. -I$(srcdir) -I.
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
libguile_la_OBJECTS =  alist.lo append.lo appinit.lo arbiters.lo \
async.lo boolean.lo chars.lo continuations.lo dynl.lo dynwind.lo eq.lo \
error.lo eval.lo extchrs.lo feature.lo filesys.lo fports.lo gc.lo \
gdbint.lo genio.lo gsubr.lo hash.lo hashtab.lo init.lo ioext.lo kw.lo \
list.lo load.lo mallocs.lo markers.lo mbstrings.lo net_db.lo numbers.lo \
objprop.lo options.lo pairs.lo ports.lo posix.lo print.lo procprop.lo \
procs.lo ramap.lo read.lo root.lo scmsigs.lo sequences.lo simpos.lo \
smob.lo socket.lo stackchk.lo stime.lo strings.lo strop.lo strorder.lo \
strports.lo struct.lo symbols.lo tag.lo throw.lo unif.lo variable.lo \
vectors.lo version.lo vports.lo weaks.lo
SCRIPTS =  $(bin_SCRIPTS)

CFLAGS = @CFLAGS@
COMPILE = $(CC) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS)
LINK = $(LIBTOOL) --mode=link $(CC) $(LDFLAGS) -o $@
DATA =  $(modinclude_DATA)

HEADERS =  $(include_HEADERS) $(modinclude_HEADERS)

DIST_COMMON =  COPYING ChangeLog Makefile.am Makefile.in acconfig.h \
acinclude.m4 aclocal.m4 configure configure.in fd.h.in guile-snarf.in \
scmconfig.h.in stamp-h.in


DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) \
	$(TEXINFOS) $(MANS) $(EXTRA_DIST)

TAR = tar
DEP_FILES =  .deps/alist.P .deps/append.P .deps/appinit.P \
.deps/arbiters.P .deps/async.P .deps/boolean.P .deps/chars.P \
.deps/continuations.P .deps/dynl.P .deps/dynwind.P .deps/eq.P \
.deps/error.P .deps/eval.P .deps/extchrs.P .deps/feature.P \
.deps/filesys.P .deps/fports.P .deps/gc.P .deps/gdbint.P .deps/genio.P \
.deps/gsubr.P .deps/hash.P .deps/hashtab.P .deps/init.P .deps/ioext.P \
.deps/kw.P .deps/list.P .deps/load.P .deps/mallocs.P .deps/markers.P \
.deps/mbstrings.P .deps/net_db.P .deps/numbers.P .deps/objprop.P \
.deps/options.P .deps/pairs.P .deps/ports.P .deps/posix.P .deps/print.P \
.deps/procprop.P .deps/procs.P .deps/ramap.P .deps/read.P .deps/root.P \
.deps/scmsigs.P .deps/sequences.P .deps/simpos.P .deps/smob.P \
.deps/socket.P .deps/stackchk.P .deps/stime.P .deps/strings.P \
.deps/strop.P .deps/strorder.P .deps/strports.P .deps/struct.P \
.deps/symbols.P .deps/tag.P .deps/throw.P .deps/unif.P .deps/variable.P \
.deps/vectors.P .deps/version.P .deps/vports.P .deps/weaks.P
SOURCES = $(libguile_la_SOURCES)
OBJECTS = $(libguile_la_OBJECTS)

default: all

.SUFFIXES:
.SUFFIXES: .c .o .lo .x
$(srcdir)/Makefile.in: Makefile.am $(top_srcdir)/configure.in $(ACLOCAL) 
	cd $(top_srcdir) && automake --foreign Makefile

Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status $(BUILT_SOURCES)
	cd $(top_builddir) \
	  && CONFIG_FILES=$@ CONFIG_HEADERS= $(SHELL) ./config.status

$(srcdir)/aclocal.m4: configure.in acinclude.m4
	cd $(srcdir) && aclocal

config.status: configure
	$(SHELL) ./config.status --recheck
$(srcdir)/configure: configure.in $(ACLOCAL) $(CONFIGURE_DEPENDENCIES)
	cd $(srcdir) && autoconf

$(CONFIG_HEADER): stamp-h
stamp-h: $(CONFIG_HEADER_IN) $(top_builddir)/config.status
	cd $(top_builddir) \
	  && CONFIG_FILES= CONFIG_HEADERS=$(CONFIG_HEADER) \
	     $(SHELL) ./config.status
	@echo timestamp > stamp-h
$(srcdir)/$(CONFIG_HEADER_IN): stamp-h.in
$(srcdir)/stamp-h.in: $(top_srcdir)/configure.in $(ACLOCAL) acconfig.h
	cd $(top_srcdir) && autoheader
	echo timestamp > $(srcdir)/stamp-h.in

mostlyclean-hdr:

clean-hdr:

distclean-hdr:
	rm -f $(CONFIG_HEADER)

maintainer-clean-hdr:
fd.h: $(top_builddir)/config.status fd.h.in
	cd $(top_builddir) && CONFIG_FILES=$@ CONFIG_HEADERS= ./config.status
guile-snarf: $(top_builddir)/config.status guile-snarf.in
	cd $(top_builddir) && CONFIG_FILES=$@ CONFIG_HEADERS= ./config.status

mostlyclean-libPROGRAMS:

clean-libPROGRAMS:
	test -z "$(lib_PROGRAMS)" || rm -f $(lib_PROGRAMS)

distclean-libPROGRAMS:

maintainer-clean-libPROGRAMS:

install-libPROGRAMS: $(lib_PROGRAMS)
	$(NORMAL_INSTALL)
	$(mkinstalldirs) $(libdir)
	@list="$(lib_PROGRAMS)"; for p in $$list; do \
	  if test -f $$p; then \
	    echo "$(LIBTOOL) --mode=install $(INSTALL_PROGRAM) $$p $(libdir)/$$p"; \
	    $(LIBTOOL) --mode=install $(INSTALL_PROGRAM) $$p $(libdir)/$$p; \
	  else :; fi; \
	done

uninstall-libPROGRAMS:
	list="$(lib_PROGRAMS)"; for p in $$list; do \
	  $(LIBTOOL) --mode=uninstall rm -f $(libdir)/$$p; \
	done

.c.o:
	$(COMPILE) -c $<

mostlyclean-compile:
	rm -f *.o core

clean-compile:

distclean-compile:
	rm -f *.tab.c

maintainer-clean-compile:

.c.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

mostlyclean-libtool:
	rm -f *.lo

clean-libtool:
	rm -rf .libs

distclean-libtool:

maintainer-clean-libtool:
$(libguile_la_OBJECTS): scmconfig.h

libguile.la: $(libguile_la_OBJECTS) $(libguile_la_DEPENDENCIES)
	$(LINK) $(libguile_la_LDFLAGS) $(libguile_la_OBJECTS) $(libguile_la_LDADD) $(LIBS)

install-binSCRIPTS: $(bin_SCRIPTS)
	$(NORMAL_INSTALL)
	$(mkinstalldirs) $(bindir)
	@list="$(bin_SCRIPTS)"; for p in $$list; do \
	  if test -f $$p; then \
	    echo "$(INSTALL_SCRIPT) $$p $(bindir)/`echo $$p|sed '$(transform)'`"; \
	    $(INSTALL_SCRIPT) $$p $(bindir)/`echo $$p|sed '$(transform)'`; \
	  else if test -f $(srcdir)/$$p; then \
	    echo "$(INSTALL_SCRIPT) $(srcdir)/$$p $(bindir)/`echo $$p|sed '$(transform)'`"; \
	    $(INSTALL_SCRIPT) $(srcdir)/$$p $(bindir)/`echo $$p|sed '$(transform)'`; \
	  else :; fi; fi; \
	done

uninstall-binSCRIPTS:
	list="$(bin_SCRIPTS)"; for p in $$list; do \
	  rm -f $(bindir)/`echo $$p|sed '$(transform)'`; \
	done

install-modincludeDATA: $(modinclude_DATA)
	$(NORMAL_INSTALL)
	$(mkinstalldirs) $(modincludedir)
	@list="$(modinclude_DATA)"; for p in $$list; do \
	  if test -f $(srcdir)/$$p; then \
	    echo "$(INSTALL_DATA) $(srcdir)/$$p $(modincludedir)/$$p"; \
	    $(INSTALL_DATA) $(srcdir)/$$p $(modincludedir)/$$p; \
	  else if test -f $$p; then \
	    echo "$(INSTALL_DATA) $$p $(modincludedir)/$$p"; \
	    $(INSTALL_DATA) $$p $(modincludedir)/$$p; \
	  fi; fi; \
	done

uninstall-modincludeDATA:
	list="$(modinclude_DATA)"; for p in $$list; do \
	  rm -f $(modincludedir)/$$p; \
	done

install-includeHEADERS: $(include_HEADERS)
	$(NORMAL_INSTALL)
	$(mkinstalldirs) $(includedir)
	@list="$(include_HEADERS)"; for p in $$list; do \
	  echo "$(INSTALL_DATA) $(srcdir)/$$p $(includedir)/$$p"; \
	  $(INSTALL_DATA) $(srcdir)/$$p $(includedir)/$$p; \
	done

uninstall-includeHEADERS:
	list="$(include_HEADERS)"; for p in $$list; do \
	  rm -f $(includedir)/$$p; \
	done

install-modincludeHEADERS: $(modinclude_HEADERS)
	$(NORMAL_INSTALL)
	$(mkinstalldirs) $(modincludedir)
	@list="$(modinclude_HEADERS)"; for p in $$list; do \
	  echo "$(INSTALL_DATA) $(srcdir)/$$p $(modincludedir)/$$p"; \
	  $(INSTALL_DATA) $(srcdir)/$$p $(modincludedir)/$$p; \
	done

uninstall-modincludeHEADERS:
	list="$(modinclude_HEADERS)"; for p in $$list; do \
	  rm -f $(modincludedir)/$$p; \
	done

tags: TAGS

ID: $(HEADERS) $(SOURCES)
	here=`pwd` && cd $(srcdir) && mkid -f$$here/ID $(SOURCES) $(HEADERS)

TAGS:  $(HEADERS) $(SOURCES) scmconfig.h.in $(TAGS_DEPENDENCIES)
	tags=; \
	here=`pwd`; \
	list="$(SUBDIRS)"; for subdir in $$list; do \
	  test -f $$subdir/TAGS && tags="$$tags -i $$here/$$subdir/TAGS"; \
	done; \
	test -z "$(ETAGS_ARGS)scmconfig.h.in$(SOURCES)$(HEADERS)$$tags" \
	  || cd $(srcdir) && etags $(ETAGS_ARGS) $$tags scmconfig.h.in $(SOURCES) $(HEADERS) -o $$here/TAGS

mostlyclean-tags:

clean-tags:

distclean-tags:
	rm -f TAGS ID

maintainer-clean-tags:

distdir = $(PACKAGE)-$(VERSION)
# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	rm -rf $(distdir)
	$(TAR) zxf $(distdir).tar.gz
	mkdir $(distdir)/=build
	mkdir $(distdir)/=inst
	dc_install_base=`cd $(distdir)/=inst && pwd`; \
	cd $(distdir)/=build \
	  && ../configure --srcdir=.. --prefix=$$dc_install_base \
	  && $(MAKE) \
	  && $(MAKE) dvi \
	  && $(MAKE) check \
	  && $(MAKE) install \
	  && $(MAKE) installcheck \
	  && $(MAKE) dist
	rm -rf $(distdir)
	@echo "========================"; \
	echo "$(distdir).tar.gz is ready for distribution"; \
	echo "========================"
dist: distdir
	-chmod -R a+r $(distdir)
	$(TAR) chozf $(distdir).tar.gz $(distdir)
	rm -rf $(distdir)
dist-all: distdir
	-chmod -R a+r $(distdir)
	$(TAR) chozf $(distdir).tar.gz $(distdir)
	rm -rf $(distdir)
distdir: $(DISTFILES)
	rm -rf $(distdir)
	mkdir $(distdir)
	-chmod 755 $(distdir)
	here=`pwd`; distdir=`cd $(distdir) && pwd` \
	  && cd $(srcdir) \
	  && automake --include-deps --build-dir=$$here --srcdir-name=$(srcdir) --output-dir=$$distdir --foreign
	$(mkinstalldirs) $(distdir)/PLUGIN
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  test -f $(distdir)/$$file \
	  || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	  || cp -p $$d/$$file $(distdir)/$$file; \
	done
.deps/.P:
	test -d .deps || mkdir .deps
	echo > $@

-include $(DEP_FILES)
$(DEP_FILES): .deps/.P

mostlyclean-depend:

clean-depend:

distclean-depend:

maintainer-clean-depend:
	rm -rf .deps

.deps/%.P: $(srcdir)/%.c
	@echo "Computing dependencies for $<..."
	@o='o';				\
	test -n "$o" && o='$$o';	\
	$(MKDEP) $< | sed "s/^\(.*\)\.o:/\1.$$o \1.l$$o:/" > $@
info:
dvi:
check: all
	$(MAKE)
installcheck:
install-exec: install-libPROGRAMS install-binSCRIPTS
	$(NORMAL_INSTALL)

install-data: install-modincludeDATA install-includeHEADERS install-modincludeHEADERS
	$(NORMAL_INSTALL)

install: install-exec install-data all
	@:

uninstall: uninstall-libPROGRAMS uninstall-binSCRIPTS uninstall-modincludeDATA uninstall-includeHEADERS uninstall-modincludeHEADERS

all: $(PROGRAMS) $(SCRIPTS) $(DATA) $(HEADERS) Makefile scmconfig.h

install-strip:
	$(MAKE) INSTALL_PROGRAM='$(INSTALL_PROGRAM) -s' install
installdirs:
	$(mkinstalldirs)  $(libdir) $(bindir) $(modincludedir) $(includedir) \
		$(modincludedir)


mostlyclean-generic:
	test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)

clean-generic:
	test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	rm -f Makefile $(DISTCLEANFILES)
	rm -f config.cache config.log stamp-h
	test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
	test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
mostlyclean:  mostlyclean-hdr mostlyclean-libPROGRAMS \
		mostlyclean-compile mostlyclean-libtool \
		mostlyclean-tags mostlyclean-depend mostlyclean-generic

clean:  clean-hdr clean-libPROGRAMS clean-compile clean-libtool \
		clean-tags clean-depend clean-generic mostlyclean

distclean:  distclean-hdr distclean-libPROGRAMS distclean-compile \
		distclean-libtool distclean-tags distclean-depend \
		distclean-generic clean
	rm -f config.status
	rm -f libtool

maintainer-clean:  maintainer-clean-hdr maintainer-clean-libPROGRAMS \
		maintainer-clean-compile maintainer-clean-libtool \
		maintainer-clean-tags maintainer-clean-depend \
		maintainer-clean-generic distclean
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."
	rm -f config.status

.PHONY: default mostlyclean-hdr distclean-hdr clean-hdr \
maintainer-clean-hdr mostlyclean-libPROGRAMS distclean-libPROGRAMS \
clean-libPROGRAMS maintainer-clean-libPROGRAMS uninstall-libPROGRAMS \
install-libPROGRAMS mostlyclean-compile distclean-compile clean-compile \
maintainer-clean-compile mostlyclean-libtool distclean-libtool \
clean-libtool maintainer-clean-libtool uninstall-binSCRIPTS \
install-binSCRIPTS uninstall-modincludeDATA install-modincludeDATA \
uninstall-includeHEADERS install-includeHEADERS \
uninstall-modincludeHEADERS install-modincludeHEADERS tags \
mostlyclean-tags distclean-tags clean-tags maintainer-clean-tags \
distdir mostlyclean-depend distclean-depend clean-depend \
maintainer-clean-depend info dvi installcheck install-exec install-data \
install uninstall all installdirs mostlyclean-generic distclean-generic \
clean-generic maintainer-clean-generic clean mostlyclean distclean \
maintainer-clean


libpath.h: Makefile
	echo '/* generated by Makefile */' > libpath.h
	echo '#define SCM_PKGDATA_DIR "$(pkgdatadir)"' >> libpath.h
	echo '#define SCM_LIBRARY_DIR "$(pkgdatadir)/$(VERSION)"' >> libpath.h
	echo '#define SCM_SITE_DIR "$(pkgdatadir)/site"' >> libpath.h
.c.x:
	./guile-snarf $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS) $< > $@

dynl.o dynl.lo: dynl.x

errnos.list: $(srcdir)/errnos.default
	$(ERRNO_EXTRACT)

errnos.c: errnos.list
	$(AWK) -f $(srcdir)/errnos_cnvt.awk < errnos.list > errnos.c

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
