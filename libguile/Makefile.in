# Makefile.in generated automatically by automake 1.1n from Makefile.am

# Copyright (C) 1994, 1995, 1996 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy, distribute and modify it.


SHELL = /bin/sh

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
transform = @program_transform_name@

NORMAL_INSTALL = true
PRE_INSTALL = true
POST_INSTALL = true
NORMAL_UNINSTALL = true
PRE_UNINSTALL = true
POST_UNINSTALL = true
host_alias = @host_alias@
host_triplet = @host@
AWK = @AWK@
CC = @CC@
LIBLOBJS = @LIBLOBJS@
LIBTOOL = @LIBTOOL@
MAINT = @MAINT@
PACKAGE = @PACKAGE@
RANLIB = @RANLIB@
VERSION = @VERSION@
qtmd_h = @qtmd_h@
qtmdb_s = @qtmdb_s@
qtmdc_c = @qtmdc_c@
qtmdc_o = @qtmdc_o@
qtmds_o = @qtmds_o@
qtmds_s = @qtmds_s@
target_libs = @target_libs@
xtra_PLUGIN_guile_libs = @xtra_PLUGIN_guile_libs@

AUTOMAKE_OPTIONS = foreign

INCLUDES = -I.. -I$(srcdir)/..

lib_LTLIBRARIES = libguile.la
bin_PROGRAMS = guile

guile_SOURCES = guile.c
guile_LDADD = libguile.la ${THREAD_LIBS}

libguile_la_SOURCES = \
    alist.c append.c appinit.c arbiters.c async.c boolean.c chars.c \
    continuations.c dynl.c dynwind.c eq.c error.c eval.c extchrs.c \
    feature.c filesys.c fports.c gc.c gdbint.c genio.c gh_data.c gh_eval.c \
    gh_funcs.c gh_init.c gh_io.c gh_list.c gh_predicates.c gsubr.c hash.c \
    hashtab.c init.c ioext.c kw.c list.c load.c mallocs.c markers.c \
    mbstrings.c net_db.c numbers.c objprop.c options.c pairs.c ports.c \
    posix.c print.c procprop.c procs.c ramap.c read.c root.c scmsigs.c \
    script.c sequences.c simpos.c smob.c socket.c stackchk.c stime.c \
    strings.c strop.c strorder.c strports.c struct.c symbols.c tag.c \
    throw.c unif.c variable.c vectors.c version.c vports.c weaks.c

EXTRA_libguile_la_SOURCES = _scm.h \
    backtrace.c stacks.c debug.c srcprop.c \
    strerror.c inet_aton.c putenv.c \
    threads.c alloca.c

noinst_HEADERS = coop-threads.c coop-threads.h coop.c

libguile_la_DEPENDENCIES = @LIBLOBJS@
libguile_la_LIBADD = @LIBLOBJS@
libguile_la_LDFLAGS = -version-info 0:0 -rpath $(libdir)

include_HEADERS = libguile.h

# These are headers visible as <guile/mumble.h> 
pkginclude_HEADERS = gh.h

# These are headers visible as <libguile/mumble.h>.
modincludedir = $(includedir)/libguile
modinclude_HEADERS = __scm.h alist.h append.h arbiters.h async.h \
    backtrace.h boolean.h chars.h continuations.h debug.h dynl.h dynwind.h \
    eq.h error.h eval.h extchrs.h feature.h filesys.h fports.h gc.h \
    gdb_interface.h gdbint.h genio.h gsubr.h hash.h hashtab.h init.h \
    ioext.h kw.h list.h load.h mallocs.h markers.h mbstrings.h net_db.h \
    numbers.h objprop.h options.h pairs.h ports.h posix.h print.h \
    procprop.h procs.h ramap.h read.h root.h scmhob.h scmsigs.h script.h \
    sequences.h simpos.h smob.h socket.h srcprop.h stackchk.h stacks.h \
    stime.h strings.h strop.h strorder.h strports.h struct.h symbols.h \
    tag.h tags.h throw.h unif.h variable.h vectors.h version.h vports.h \
    weaks.h snarf.h threads.h coop-defs.h

modinclude_DATA = scmconfig.h

bin_SCRIPTS = guile-snarf

THREAD_LIBS = @THREAD_LIBS@
check_ldadd = libguile.la ${THREAD_LIBS}
check_PROGRAMS = gh_test_c gh_test_repl
gh_test_c_SOURCES = gh_test_c.c
gh_test_c_LDADD = ${check_ldadd}
gh_test_repl_SOURCES = gh_test_repl.c
gh_test_repl_LDADD = ${check_ldadd}

EXTRA_DIST = ChangeLog-scm dynl-dl.c dynl-dld.c dynl-shl.c \
    dynl-vms.c DYNAMIC-LINKING cpp_signal.c cpp_errno.c cpp_err_symbols.in \
    cpp_sig_symbols.in cpp_cnvt.awk \
    coop-threads.h.cygnus coop-threads.c.cygnus mit-pthreads.h mit-pthreads.c \
    fsu-pthreads.h

SUFFIXES = .x

MKDEP = gcc -M -MG $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS)

CLEANFILES=cpp_err_symbols_here cpp_err_symbols_diff cpp_err_symbols_new \
	cpp_sig_symbols_here cpp_sig_symbols_diff cpp_sig_symbols_new
CONFIG_HEADER_IN = scmconfig.h.in
CONFIG_HEADER_FULL = libguile/scmconfig.h
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = scmconfig.h
CONFIG_CLEAN_FILES =  guile-snarf
LTLIBRARIES =  $(lib_LTLIBRARIES)


DEFS = @DEFS@ -I. -I$(srcdir) -I.
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
libguile_la_OBJECTS =  alist.lo append.lo appinit.lo arbiters.lo \
async.lo boolean.lo chars.lo continuations.lo dynl.lo dynwind.lo eq.lo \
error.lo eval.lo extchrs.lo feature.lo filesys.lo fports.lo gc.lo \
gdbint.lo genio.lo gh_data.lo gh_eval.lo gh_funcs.lo gh_init.lo \
gh_io.lo gh_list.lo gh_predicates.lo gsubr.lo hash.lo hashtab.lo \
init.lo ioext.lo kw.lo list.lo load.lo mallocs.lo markers.lo \
mbstrings.lo net_db.lo numbers.lo objprop.lo options.lo pairs.lo \
ports.lo posix.lo print.lo procprop.lo procs.lo ramap.lo read.lo \
root.lo scmsigs.lo script.lo sequences.lo simpos.lo smob.lo socket.lo \
stackchk.lo stime.lo strings.lo strop.lo strorder.lo strports.lo \
struct.lo symbols.lo tag.lo throw.lo unif.lo variable.lo vectors.lo \
version.lo vports.lo weaks.lo
PROGRAMS =  $(bin_PROGRAMS)

guile_OBJECTS =  guile.o
guile_DEPENDENCIES =  libguile.la
guile_LDFLAGS = 
gh_test_c_OBJECTS =  gh_test_c.o
gh_test_c_DEPENDENCIES =  libguile.la
gh_test_c_LDFLAGS = 
gh_test_repl_OBJECTS =  gh_test_repl.o
gh_test_repl_DEPENDENCIES =  libguile.la
gh_test_repl_LDFLAGS = 
SCRIPTS =  $(bin_SCRIPTS)

CFLAGS = @CFLAGS@
COMPILE = $(CC) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS)
LINK = $(LIBTOOL) --mode=link $(CC) $(LDFLAGS) -o $@
DATA =  $(modinclude_DATA)

HEADERS =  $(include_HEADERS) $(modinclude_HEADERS) $(noinst_HEADERS) \
$(pkginclude_HEADERS)

DIST_COMMON =  COPYING ChangeLog Makefile.am Makefile.in guile-snarf.in \
scmconfig.h.in stamp-h.in


DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)

TAR = tar
GZIP = --best
DEP_FILES =  .deps/alist.P .deps/alloca.P .deps/append.P .deps/appinit.P \
.deps/arbiters.P .deps/async.P .deps/backtrace.P .deps/boolean.P \
.deps/chars.P .deps/continuations.P .deps/debug.P .deps/dynl.P \
.deps/dynwind.P .deps/eq.P .deps/error.P .deps/eval.P .deps/extchrs.P \
.deps/feature.P .deps/filesys.P .deps/fports.P .deps/gc.P \
.deps/gdbint.P .deps/genio.P .deps/gh_data.P .deps/gh_eval.P \
.deps/gh_funcs.P .deps/gh_init.P .deps/gh_io.P .deps/gh_list.P \
.deps/gh_predicates.P .deps/gh_test_c.P .deps/gh_test_repl.P \
.deps/gsubr.P .deps/guile.P .deps/hash.P .deps/hashtab.P \
.deps/inet_aton.P .deps/init.P .deps/ioext.P .deps/kw.P .deps/list.P \
.deps/load.P .deps/mallocs.P .deps/markers.P .deps/mbstrings.P \
.deps/net_db.P .deps/numbers.P .deps/objprop.P .deps/options.P \
.deps/pairs.P .deps/ports.P .deps/posix.P .deps/print.P \
.deps/procprop.P .deps/procs.P .deps/putenv.P .deps/ramap.P \
.deps/read.P .deps/root.P .deps/scmsigs.P .deps/script.P \
.deps/sequences.P .deps/simpos.P .deps/smob.P .deps/socket.P \
.deps/srcprop.P .deps/stackchk.P .deps/stacks.P .deps/stime.P \
.deps/strerror.P .deps/strings.P .deps/strop.P .deps/strorder.P \
.deps/strports.P .deps/struct.P .deps/symbols.P .deps/tag.P \
.deps/threads.P .deps/throw.P .deps/unif.P .deps/variable.P \
.deps/vectors.P .deps/version.P .deps/vports.P .deps/weaks.P
SOURCES = $(libguile_la_SOURCES) $(EXTRA_libguile_la_SOURCES) $(guile_SOURCES) $(gh_test_c_SOURCES) $(gh_test_repl_SOURCES)
OBJECTS = $(libguile_la_OBJECTS) $(guile_OBJECTS) $(gh_test_c_OBJECTS) $(gh_test_repl_OBJECTS)

default: all

.SUFFIXES:
.SUFFIXES: .c .o .lo .x
$(srcdir)/Makefile.in: @MAINT@ Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) 
	cd $(top_srcdir) && $(AUTOMAKE) --foreign libguile/Makefile

Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status $(BUILT_SOURCES)
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status


$(CONFIG_HEADER): stamp-h
stamp-h: $(CONFIG_HEADER_IN) $(top_builddir)/config.status
	cd $(top_builddir) \
	  && CONFIG_FILES= CONFIG_HEADERS=$(CONFIG_HEADER_FULL) \
	     $(SHELL) ./config.status
	@echo timestamp > stamp-h
$(srcdir)/$(CONFIG_HEADER_IN): @MAINT@stamp-h.in
$(srcdir)/stamp-h.in: $(top_srcdir)/configure.in $(ACLOCAL_M4) 
	cd $(top_srcdir) && $(AUTOHEADER)
	echo timestamp > $(srcdir)/stamp-h.in

mostlyclean-hdr:

clean-hdr:

distclean-hdr:
	rm -f $(CONFIG_HEADER)

maintainer-clean-hdr:
guile-snarf: $(top_builddir)/config.status guile-snarf.in
	cd $(top_builddir) && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= ./config.status

mostlyclean-libLTLIBRARIES:

clean-libLTLIBRARIES:
	test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)

distclean-libLTLIBRARIES:

maintainer-clean-libLTLIBRARIES:

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(libdir)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo "$(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $$p $(libdir)/$$p"; \
	    $(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $$p $(libdir)/$$p; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	$(NORMAL_UNINSTALL)
	list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  $(LIBTOOL)  --mode=uninstall rm -f $(libdir)/$$p; \
	done

.c.o:
	$(COMPILE) -c $<

mostlyclean-compile:
	rm -f *.o core

clean-compile:

distclean-compile:
	rm -f *.tab.c

maintainer-clean-compile:

.c.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

mostlyclean-libtool:
	rm -f *.lo

clean-libtool:
	rm -rf .libs

distclean-libtool:

maintainer-clean-libtool:

libguile.la: $(libguile_la_OBJECTS) $(libguile_la_DEPENDENCIES)
	$(LINK) -rpath $(libdir) $(libguile_la_LDFLAGS) $(libguile_la_OBJECTS) $(libguile_la_LIBADD) $(LIBS)

mostlyclean-binPROGRAMS:

clean-binPROGRAMS:
	test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

distclean-binPROGRAMS:

maintainer-clean-binPROGRAMS:

install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo " $(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $$p $(bindir)/`echo $$p|sed '$(transform)'`"; \
	    $(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $$p $(bindir)/`echo $$p|sed '$(transform)'`; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	$(NORMAL_UNINSTALL)
	list='$(bin_PROGRAMS)'; for p in $$list; do \
	  rm -f $(bindir)/`echo $$p|sed '$(transform)'`; \
	done

mostlyclean-checkPROGRAMS:

clean-checkPROGRAMS:
	test -z "$(check_PROGRAMS)" || rm -f $(check_PROGRAMS)

distclean-checkPROGRAMS:

maintainer-clean-checkPROGRAMS:

guile: $(guile_OBJECTS) $(guile_DEPENDENCIES)
	@rm -f guile
	$(LINK) $(guile_LDFLAGS) $(guile_OBJECTS) $(guile_LDADD) $(LIBS)

gh_test_c: $(gh_test_c_OBJECTS) $(gh_test_c_DEPENDENCIES)
	@rm -f gh_test_c
	$(LINK) $(gh_test_c_LDFLAGS) $(gh_test_c_OBJECTS) $(gh_test_c_LDADD) $(LIBS)

gh_test_repl: $(gh_test_repl_OBJECTS) $(gh_test_repl_DEPENDENCIES)
	@rm -f gh_test_repl
	$(LINK) $(gh_test_repl_LDFLAGS) $(gh_test_repl_OBJECTS) $(gh_test_repl_LDADD) $(LIBS)

install-binSCRIPTS: $(bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(bindir)
	@list='$(bin_SCRIPTS)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo " $(INSTALL_SCRIPT) $$p $(bindir)/`echo $$p|sed '$(transform)'`"; \
	    $(INSTALL_SCRIPT) $$p $(bindir)/`echo $$p|sed '$(transform)'`; \
	  else if test -f $(srcdir)/$$p; then \
	    echo " $(INSTALL_SCRIPT) $(srcdir)/$$p $(bindir)/`echo $$p|sed '$(transform)'`"; \
	    $(INSTALL_SCRIPT) $(srcdir)/$$p $(bindir)/`echo $$p|sed '$(transform)'`; \
	  else :; fi; fi; \
	done

uninstall-binSCRIPTS:
	$(NORMAL_UNINSTALL)
	list='$(bin_SCRIPTS)'; for p in $$list; do \
	  rm -f $(bindir)/`echo $$p|sed '$(transform)'`; \
	done

install-modincludeDATA: $(modinclude_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(modincludedir)
	@list='$(modinclude_DATA)'; for p in $$list; do \
	  if test -f $(srcdir)/$$p; then \
	    echo " $(INSTALL_DATA) $(srcdir)/$$p $(modincludedir)/$$p"; \
	    $(INSTALL_DATA) $(srcdir)/$$p $(modincludedir)/$$p; \
	  else if test -f $$p; then \
	    echo " $(INSTALL_DATA) $$p $(modincludedir)/$$p"; \
	    $(INSTALL_DATA) $$p $(modincludedir)/$$p; \
	  fi; fi; \
	done

uninstall-modincludeDATA:
	$(NORMAL_UNINSTALL)
	list='$(modinclude_DATA)'; for p in $$list; do \
	  rm -f $(modincludedir)/$$p; \
	done

install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(includedir)
	@list='$(include_HEADERS)'; for p in $$list; do \
	  echo " $(INSTALL_DATA) $(srcdir)/$$p $(includedir)/$$p"; \
	  $(INSTALL_DATA) $(srcdir)/$$p $(includedir)/$$p; \
	done

uninstall-includeHEADERS:
	$(NORMAL_UNINSTALL)
	list='$(include_HEADERS)'; for p in $$list; do \
	  rm -f $(includedir)/$$p; \
	done

install-modincludeHEADERS: $(modinclude_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(modincludedir)
	@list='$(modinclude_HEADERS)'; for p in $$list; do \
	  echo " $(INSTALL_DATA) $(srcdir)/$$p $(modincludedir)/$$p"; \
	  $(INSTALL_DATA) $(srcdir)/$$p $(modincludedir)/$$p; \
	done

uninstall-modincludeHEADERS:
	$(NORMAL_UNINSTALL)
	list='$(modinclude_HEADERS)'; for p in $$list; do \
	  rm -f $(modincludedir)/$$p; \
	done

install-pkgincludeHEADERS: $(pkginclude_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(pkgincludedir)
	@list='$(pkginclude_HEADERS)'; for p in $$list; do \
	  echo " $(INSTALL_DATA) $(srcdir)/$$p $(pkgincludedir)/$$p"; \
	  $(INSTALL_DATA) $(srcdir)/$$p $(pkgincludedir)/$$p; \
	done

uninstall-pkgincludeHEADERS:
	$(NORMAL_UNINSTALL)
	list='$(pkginclude_HEADERS)'; for p in $$list; do \
	  rm -f $(pkgincludedir)/$$p; \
	done

tags: TAGS

ID: $(HEADERS) $(SOURCES)
	here=`pwd` && cd $(srcdir) && mkid -f$$here/ID $(SOURCES) $(HEADERS)

TAGS:  $(HEADERS) $(SOURCES) scmconfig.h.in $(TAGS_DEPENDENCIES)
	tags=; \
	here=`pwd`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test -f $$subdir/TAGS && tags="$$tags -i $$here/$$subdir/TAGS"; \
	done; \
	test -z "$(ETAGS_ARGS)scmconfig.h.in$(SOURCES)$(HEADERS)$$tags" \
	  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags scmconfig.h.in $(SOURCES) $(HEADERS) -o $$here/TAGS)

mostlyclean-tags:

clean-tags:

distclean-tags:
	rm -f TAGS ID

maintainer-clean-tags:

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

subdir = libguile
distdir: $(DISTFILES)
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  test -f $(distdir)/$$file \
	  || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	  || cp -p $$d/$$file $(distdir)/$$file; \
	done
.deps/.P:
	test -d .deps || mkdir .deps
	echo > $@

-include $(DEP_FILES)
$(DEP_FILES): .deps/.P

mostlyclean-depend:

clean-depend:

distclean-depend:

maintainer-clean-depend:
	rm -rf .deps

.deps/%.P: $(srcdir)/%.c
	@echo "Computing dependencies for $<..."
	@o='o';				\
	test -n "$o" && o='$$o';	\
	$(MKDEP) $< | sed "s,^\(.*\)\.o:,\1.$$o \1.l$$o $@:," > $@
info:
dvi:
check: all $(check_PROGRAMS)
	$(MAKE)
installcheck:
install-exec: install-libLTLIBRARIES install-binPROGRAMS install-binSCRIPTS
	@$(NORMAL_INSTALL)

install-data: install-modincludeDATA install-includeHEADERS install-modincludeHEADERS install-pkgincludeHEADERS
	@$(NORMAL_INSTALL)

install: install-exec install-data all
	@:

uninstall: uninstall-libLTLIBRARIES uninstall-binPROGRAMS uninstall-binSCRIPTS uninstall-modincludeDATA uninstall-includeHEADERS uninstall-modincludeHEADERS uninstall-pkgincludeHEADERS

all: $(LTLIBRARIES) $(PROGRAMS) $(SCRIPTS) $(DATA) $(HEADERS) Makefile scmconfig.h

install-strip:
	$(MAKE) INSTALL_PROGRAM='$(INSTALL_PROGRAM) -s' install
installdirs:
	$(mkinstalldirs)  $(libdir) $(bindir) $(bindir) $(modincludedir) \
		$(includedir) $(modincludedir) $(pkgincludedir)


mostlyclean-generic:
	test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)

clean-generic:
	test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	rm -f Makefile $(DISTCLEANFILES)
	rm -f config.cache config.log stamp-h
	test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
	test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
mostlyclean:  mostlyclean-hdr mostlyclean-libLTLIBRARIES \
		mostlyclean-compile mostlyclean-libtool \
		mostlyclean-binPROGRAMS mostlyclean-checkPROGRAMS \
		mostlyclean-tags mostlyclean-depend mostlyclean-generic

clean:  clean-hdr clean-libLTLIBRARIES clean-compile clean-libtool \
		clean-binPROGRAMS clean-checkPROGRAMS clean-tags \
		clean-depend clean-generic mostlyclean

distclean:  distclean-hdr distclean-libLTLIBRARIES distclean-compile \
		distclean-libtool distclean-binPROGRAMS \
		distclean-checkPROGRAMS distclean-tags distclean-depend \
		distclean-generic clean
	rm -f config.status
	rm -f libtool

maintainer-clean:  maintainer-clean-hdr maintainer-clean-libLTLIBRARIES \
		maintainer-clean-compile maintainer-clean-libtool \
		maintainer-clean-binPROGRAMS \
		maintainer-clean-checkPROGRAMS maintainer-clean-tags \
		maintainer-clean-depend maintainer-clean-generic \
		distclean
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

.PHONY: default mostlyclean-hdr distclean-hdr clean-hdr \
maintainer-clean-hdr mostlyclean-libLTLIBRARIES \
distclean-libLTLIBRARIES clean-libLTLIBRARIES \
maintainer-clean-libLTLIBRARIES uninstall-libLTLIBRARIES \
install-libLTLIBRARIES mostlyclean-compile distclean-compile \
clean-compile maintainer-clean-compile mostlyclean-libtool \
distclean-libtool clean-libtool maintainer-clean-libtool \
mostlyclean-binPROGRAMS distclean-binPROGRAMS clean-binPROGRAMS \
maintainer-clean-binPROGRAMS uninstall-binPROGRAMS install-binPROGRAMS \
mostlyclean-checkPROGRAMS distclean-checkPROGRAMS clean-checkPROGRAMS \
maintainer-clean-checkPROGRAMS uninstall-binSCRIPTS install-binSCRIPTS \
uninstall-modincludeDATA install-modincludeDATA \
uninstall-includeHEADERS install-includeHEADERS \
uninstall-modincludeHEADERS install-modincludeHEADERS \
uninstall-pkgincludeHEADERS install-pkgincludeHEADERS tags \
mostlyclean-tags distclean-tags clean-tags maintainer-clean-tags \
distdir mostlyclean-depend distclean-depend clean-depend \
maintainer-clean-depend info dvi installcheck install-exec install-data \
install uninstall all installdirs mostlyclean-generic distclean-generic \
clean-generic maintainer-clean-generic clean mostlyclean distclean \
maintainer-clean


libpath.h: Makefile
	echo '/* generated by Makefile */' > libpath.h
	echo '#define SCM_PKGDATA_DIR "$(pkgdatadir)"' >> libpath.h
	echo '#define SCM_LIBRARY_DIR "$(pkgdatadir)/$(VERSION)"' >> libpath.h
	echo '#define SCM_SITE_DIR "$(pkgdatadir)/site"' >> libpath.h
.c.x:
	./guile-snarf $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS) $< > $@

cpp_err_symbols.c: cpp_err_symbols.in
	$(AWK) -f $(srcdir)/cpp_cnvt.awk < $(srcdir)/cpp_err_symbols.in > \
		cpp_err_symbols.c

cpp_sig_symbols.c: cpp_sig_symbols.in
	$(AWK) -f $(srcdir)/cpp_cnvt.awk < $(srcdir)/cpp_sig_symbols.in > \
		cpp_sig_symbols.c

check_signals:
	gcc -undef -dM -E $(srcdir)/cpp_signal.c | egrep ' SIG[A-Z]+' \
	  | cut -f2 -d' ' | sort > cpp_sig_symbols_here
	diff -u $(srcdir)/cpp_sig_symbols.in cpp_sig_symbols_here \
          | egrep '^\+S' \
	  | cut -c2- > cpp_sig_symbols_diff
	if test -s cpp_sig_symbols_diff ; then \
	  cat $(srcdir)/cpp_sig_symbols.in cpp_sig_symbols_diff \
	    | sort > cpp_sig_symbols_new ;\
	  echo "cpp_sig_symbols_new has the following additions:" ;\
	  cat cpp_sig_symbols_diff ;\
	else echo "No new symbols found."; \
	fi

check_errnos:
	gcc -undef -dM -E $(srcdir)/cpp_errno.c | egrep ' E.+' \
	  | cut -f2 -d' ' | sort > cpp_err_symbols_here
	diff -u $(srcdir)/cpp_err_symbols.in cpp_err_symbols_here \
          | egrep '^\+E' \
	  | cut -c2- > cpp_err_symbols_diff
	if test -s cpp_err_symbols_diff ; then \
	  cat $(srcdir)/cpp_err_symbols.in cpp_err_symbols_diff \
	    | sort > cpp_err_symbols_new ;\
	  echo "cpp_err_symbols_new has the following additions:" ;\
	  cat cpp_err_symbols_diff ;\
	else echo "No new symbols found."; \
	fi

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
