;;;;                                                          -*- scheme -*-
;;;; continuations.test --- test suite for continutations
;;;;
;;;; Copyright (C) 2003 Free Software Foundation, Inc.
;;;; 
;;;; This program is free software; you can redistribute it and/or modify
;;;; it under the terms of the GNU General Public License as published by
;;;; the Free Software Foundation; either version 2, or (at your option)
;;;; any later version.
;;;; 
;;;; This program is distributed in the hope that it will be useful,
;;;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;;;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;;; GNU General Public License for more details.
;;;; 
;;;; You should have received a copy of the GNU General Public License
;;;; along with this software; see the file COPYING.  If not, write to
;;;; the Free Software Foundation, Inc., 59 Temple Place, Suite 330,
;;;; Boston, MA 02111-1307 USA

(define-module (test-suite test-continuations)
  :use-module (test-suite lib))

(define (block-reentry body)
  (let ((active #f))
    (dynamic-wind
	(lambda () 
	  (if active
	      (throw 'no-reentry)))
	(lambda ()
	  (set! active #t)
	  (body))
	(lambda () #f))))

(define (catch-tag body)
  (catch #t
	 body
	 (lambda (tag . args) tag)))

(define (check-cont)
  (catch-tag 
   (lambda ()
     (block-reentry (lambda () (call/cc identity))))))

(define (dont-crash-please)
  (let ((k (check-cont)))
    (if (procedure? k)
	(k 12)
	k)))

(with-test-prefix "continuations"

  (pass-if "throwing to a rewound catch context"
    (eq? (dont-crash-please) 'no-reentry)))
