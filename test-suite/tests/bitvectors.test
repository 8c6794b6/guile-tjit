;;;; bitvectors.test --- tests guile's bitvectors     -*- scheme -*-
;;;;
;;;; Copyright 2010, 2011, 2013, 2014 Free Software Foundation, Inc.
;;;;
;;;; This library is free software; you can redistribute it and/or
;;;; modify it under the terms of the GNU Lesser General Public
;;;; License as published by the Free Software Foundation; either
;;;; version 3 of the License, or (at your option) any later version.
;;;; 
;;;; This library is distributed in the hope that it will be useful,
;;;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;;;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
;;;; Lesser General Public License for more details.
;;;; 
;;;; You should have received a copy of the GNU Lesser General Public
;;;; License along with this library; if not, write to the Free Software
;;;; Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA

(define-module (test-suite test-bitvectors)
  #:use-module (test-suite lib))


(with-test-prefix "predicates"
  (pass-if (bitvector? #*1010101010))
  (pass-if (array? #*1010101010))
  (pass-if (eq? (array-type #*1010101010) 'b)))


(with-test-prefix "equality"
  (pass-if (equal? #*1010101 #*1010101))
  (pass-if (array-equal? #*1010101 #*1010101))

  (pass-if (not (equal? #*10101010 #*1010101)))
  (pass-if (not (array-equal? #*10101010 #*1010101))))

(with-test-prefix "lists"
  (pass-if (equal? (bitvector->list #*10010) '(#t #f #f #t #f)))
  (pass-if (equal? (array->list #*10010) '(#t #f #f #t #f)))
  (pass-if (equal? #*10010 (list->bitvector '(#t #f #f #t #f)))))

(with-test-prefix "ref and set"
  (with-test-prefix "as bitvector"
    (let ((bv (list->bitvector '(#f #f #t #f #t))))
      (pass-if (eqv? (bitvector-ref bv 0) #f))
      (pass-if (eqv? (bitvector-ref bv 2) #t))
      (bitvector-set! bv 0 #t)
      (pass-if (eqv? (bitvector-ref bv 0) #t))))

  (with-test-prefix "as array"
    (let ((bv (list->bitvector '(#f #f #t #f #t))))
      (pass-if (eqv? (array-ref bv 0) #f))
      (pass-if (eqv? (array-ref bv 2) #t))
      (array-set! bv #t 0)
      (pass-if (eqv? (array-ref bv 0) #t)))))

(with-test-prefix "bit-set*!"
  (pass-if "#t"
    (let ((v (bitvector #t #t #f #f)))
      (bit-set*! v #*1010 #t)
      (equal? v #*1110)))
  (pass-if "#f"
    (let ((v (bitvector #t #t #f #f)))
      (bit-set*! v #*1010 #f)
      (equal? v #*0100)))
  (pass-if "#t, shorter"
    (let ((v (bitvector #t #t #f #f)))
      (bit-set*! v #*101 #t)
      (equal? v #*1110)))
  (pass-if "#f, shorter"
    (let ((v (bitvector #t #t #f #f)))
      (bit-set*! v #*101 #f)
      (equal? v #*0100))))
