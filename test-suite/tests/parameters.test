;;;; srfi-39.test --- -*- scheme -*-
;;;;
;;;; Copyright (C) 2004, 2005, 2006, 2008, 2011 Free Software Foundation, Inc.
;;;; 
;;;; This library is free software; you can redistribute it and/or
;;;; modify it under the terms of the GNU Lesser General Public
;;;; License as published by the Free Software Foundation; either
;;;; version 3 of the License, or (at your option) any later version.
;;;; 
;;;; This library is distributed in the hope that it will be useful,
;;;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;;;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
;;;; Lesser General Public License for more details.
;;;; 
;;;; You should have received a copy of the GNU Lesser General Public
;;;; License along with this library; if not, write to the Free Software
;;;; Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA

;; Testing the parameters implementation in boot-9.
;;
(define-module (test-parameters)
  #:use-module (srfi srfi-34)
  #:use-module (test-suite lib))

(define a (make-parameter 3))
(define b (make-parameter 4))

(define (check a b a-val b-val)
  (and (eqv? (a) a-val)) (eqv? (b) b-val))

(define c (make-parameter 2 (lambda (x) (if (< x 10) x 10))))
(define d (make-parameter 15 (lambda (x) (if (< x 10) x 10))))

(with-test-prefix "parameters"

  (pass-if "test 1"
    (check a b 3 4))

  (pass-if "test 2"
    (parameterize ((a 2) (b 1))
      (and (check a b 2 1)
	   (parameterize ((b 8))
	     (check a b 2 8)))))

  (pass-if "test 3"
    (check a b 3 4))

  (pass-if "test 4"
    (check c d 2 10))

  (pass-if "test 5"
    (parameterize ((a 0) (b 1) (c 98) (d 9))
      (and (check a b 0 1)
           (check c d 10 9)
           (parameterize ((c (a)) (d (b)))
	     (and (check a b 0 1)
		  (check c d 0 1))))))

  (pass-if "SRFI-34"
    (let ((inside? (make-parameter #f)))
      (call/cc (lambda (return)
                 (with-exception-handler
                  (lambda (c)
                    ;; This handler should be called in the dynamic
                    ;; environment installed by `parameterize'.
                    (return (inside?)))
                  (lambda ()
                    (parameterize ((inside? #t))
                      (raise 'some-exception)))))))))
